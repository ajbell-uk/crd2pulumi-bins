{
  "author": {
    "name": "Amazon Web Services",
    "organization": true,
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "dependencies": {
    "aws-cdk-lib": "^2.163.1",
    "constructs": "^10.0.0"
  },
  "dependencyClosure": {
    "@aws-cdk/asset-awscli-v1": {
      "targets": {
        "dotnet": {
          "namespace": "Amazon.CDK.Asset.AwsCliV1",
          "packageId": "Amazon.CDK.Asset.AwsCliV1"
        },
        "go": {
          "moduleName": "github.com/cdklabs/awscdk-asset-awscli-go",
          "packageName": "awscliv1"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-asset-awscli-v1",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cdk.asset.awscli.v1"
        },
        "js": {
          "npm": "@aws-cdk/asset-awscli-v1"
        },
        "python": {
          "distName": "aws-cdk.asset-awscli-v1",
          "module": "aws_cdk.asset_awscli_v1"
        }
      }
    },
    "@aws-cdk/asset-kubectl-v20": {
      "targets": {
        "dotnet": {
          "namespace": "Amazon.CDK.Asset.KubectlV20",
          "packageId": "Amazon.CDK.Asset.KubectlV20"
        },
        "go": {
          "moduleName": "github.com/cdklabs/awscdk-asset-kubectl-go",
          "packageName": "kubectlv20"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-asset-kubectl-v20",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cdk.asset.kubectl.v20"
        },
        "js": {
          "npm": "@aws-cdk/asset-kubectl-v20"
        },
        "python": {
          "distName": "aws-cdk.asset-kubectl-v20",
          "module": "aws_cdk.asset_kubectl_v20"
        }
      }
    },
    "@aws-cdk/asset-node-proxy-agent-v6": {
      "targets": {
        "dotnet": {
          "namespace": "Amazon.CDK.Asset.NodeProxyAgentV6",
          "packageId": "Amazon.CDK.Asset.NodeProxyAgentV6"
        },
        "go": {
          "moduleName": "github.com/cdklabs/awscdk-asset-node-proxy-agent-go",
          "packageName": "nodeproxyagentv6"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-asset-node-proxy-agent-v6",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cdk.asset.node.proxy.agent.v6"
        },
        "js": {
          "npm": "@aws-cdk/asset-node-proxy-agent-v6"
        },
        "python": {
          "distName": "aws-cdk.asset-node-proxy-agent-v6",
          "module": "aws_cdk.asset_node_proxy_agent_v6"
        }
      }
    },
    "@aws-cdk/cloud-assembly-schema": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CloudAssembly.Schema",
          "packageId": "Amazon.CDK.CloudAssembly.Schema"
        },
        "go": {
          "moduleName": "github.com/cdklabs/cloud-assembly-schema-go"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cloud-assembly-schema",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cloudassembly.schema"
        },
        "js": {
          "npm": "@aws-cdk/cloud-assembly-schema"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 2"
          ],
          "distName": "aws-cdk.cloud-assembly-schema",
          "module": "aws_cdk.cloud_assembly_schema"
        }
      }
    },
    "aws-cdk-lib": {
      "submodules": {
        "aws-cdk-lib.alexa_ask": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.Alexa.Ask"
            },
            "java": {
              "package": "software.amazon.awscdk.alexa.ask"
            },
            "python": {
              "module": "aws_cdk.alexa_ask"
            }
          }
        },
        "aws-cdk-lib.assertions": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.Assertions"
            },
            "java": {
              "package": "software.amazon.awscdk.assertions"
            },
            "python": {
              "module": "aws_cdk.assertions"
            }
          }
        },
        "aws-cdk-lib.assets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.Assets"
            },
            "java": {
              "package": "software.amazon.awscdk.assets"
            },
            "python": {
              "module": "aws_cdk.assets"
            }
          }
        },
        "aws-cdk-lib.aws_accessanalyzer": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AccessAnalyzer"
            },
            "java": {
              "package": "software.amazon.awscdk.services.accessanalyzer"
            },
            "python": {
              "module": "aws_cdk.aws_accessanalyzer"
            }
          }
        },
        "aws-cdk-lib.aws_acmpca": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ACMPCA"
            },
            "java": {
              "package": "software.amazon.awscdk.services.acmpca"
            },
            "python": {
              "module": "aws_cdk.aws_acmpca"
            }
          }
        },
        "aws-cdk-lib.aws_amazonmq": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AmazonMQ"
            },
            "java": {
              "package": "software.amazon.awscdk.services.amazonmq"
            },
            "python": {
              "module": "aws_cdk.aws_amazonmq"
            }
          }
        },
        "aws-cdk-lib.aws_amplify": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Amplify"
            },
            "java": {
              "package": "software.amazon.awscdk.services.amplify"
            },
            "python": {
              "module": "aws_cdk.aws_amplify"
            }
          }
        },
        "aws-cdk-lib.aws_amplifyuibuilder": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AmplifyUIBuilder"
            },
            "java": {
              "package": "software.amazon.awscdk.services.amplifyuibuilder"
            },
            "python": {
              "module": "aws_cdk.aws_amplifyuibuilder"
            }
          }
        },
        "aws-cdk-lib.aws_apigateway": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.APIGateway"
            },
            "java": {
              "package": "software.amazon.awscdk.services.apigateway"
            },
            "python": {
              "module": "aws_cdk.aws_apigateway"
            }
          }
        },
        "aws-cdk-lib.aws_apigatewayv2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Apigatewayv2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.apigatewayv2"
            },
            "python": {
              "module": "aws_cdk.aws_apigatewayv2"
            }
          }
        },
        "aws-cdk-lib.aws_apigatewayv2_authorizers": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AwsApigatewayv2Authorizers"
            },
            "java": {
              "package": "software.amazon.awscdk.aws_apigatewayv2_authorizers"
            },
            "python": {
              "module": "aws_cdk.aws_apigatewayv2_authorizers"
            }
          }
        },
        "aws-cdk-lib.aws_apigatewayv2_integrations": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AwsApigatewayv2Integrations"
            },
            "java": {
              "package": "software.amazon.awscdk.aws_apigatewayv2_integrations"
            },
            "python": {
              "module": "aws_cdk.aws_apigatewayv2_integrations"
            }
          }
        },
        "aws-cdk-lib.aws_appconfig": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AppConfig"
            },
            "java": {
              "package": "software.amazon.awscdk.services.appconfig"
            },
            "python": {
              "module": "aws_cdk.aws_appconfig"
            }
          }
        },
        "aws-cdk-lib.aws_appflow": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AppFlow"
            },
            "java": {
              "package": "software.amazon.awscdk.services.appflow"
            },
            "python": {
              "module": "aws_cdk.aws_appflow"
            }
          }
        },
        "aws-cdk-lib.aws_appintegrations": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AppIntegrations"
            },
            "java": {
              "package": "software.amazon.awscdk.services.appintegrations"
            },
            "python": {
              "module": "aws_cdk.aws_appintegrations"
            }
          }
        },
        "aws-cdk-lib.aws_applicationautoscaling": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ApplicationAutoScaling"
            },
            "java": {
              "package": "software.amazon.awscdk.services.applicationautoscaling"
            },
            "python": {
              "module": "aws_cdk.aws_applicationautoscaling"
            }
          }
        },
        "aws-cdk-lib.aws_applicationinsights": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ApplicationInsights"
            },
            "java": {
              "package": "software.amazon.awscdk.services.applicationinsights"
            },
            "python": {
              "module": "aws_cdk.aws_applicationinsights"
            }
          }
        },
        "aws-cdk-lib.aws_applicationsignals": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.ApplicationSignals"
            },
            "java": {
              "package": "software.amazon.awscdk.services.applicationsignals"
            },
            "python": {
              "module": "aws_cdk.aws_applicationsignals"
            }
          }
        },
        "aws-cdk-lib.aws_appmesh": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AppMesh"
            },
            "java": {
              "package": "software.amazon.awscdk.services.appmesh"
            },
            "python": {
              "module": "aws_cdk.aws_appmesh"
            }
          }
        },
        "aws-cdk-lib.aws_apprunner": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AppRunner"
            },
            "java": {
              "package": "software.amazon.awscdk.services.apprunner"
            },
            "python": {
              "module": "aws_cdk.aws_apprunner"
            }
          }
        },
        "aws-cdk-lib.aws_appstream": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AppStream"
            },
            "java": {
              "package": "software.amazon.awscdk.services.appstream"
            },
            "python": {
              "module": "aws_cdk.aws_appstream"
            }
          }
        },
        "aws-cdk-lib.aws_appsync": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AppSync"
            },
            "java": {
              "package": "software.amazon.awscdk.services.appsync"
            },
            "python": {
              "module": "aws_cdk.aws_appsync"
            }
          }
        },
        "aws-cdk-lib.aws_apptest": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.AppTest"
            },
            "java": {
              "package": "software.amazon.awscdk.services.apptest"
            },
            "python": {
              "module": "aws_cdk.aws_apptest"
            }
          }
        },
        "aws-cdk-lib.aws_aps": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.APS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.aps"
            },
            "python": {
              "module": "aws_cdk.aws_aps"
            }
          }
        },
        "aws-cdk-lib.aws_arczonalshift": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.ARCZonalShift"
            },
            "java": {
              "package": "software.amazon.awscdk.services.arczonalshift"
            },
            "python": {
              "module": "aws_cdk.aws_arczonalshift"
            }
          }
        },
        "aws-cdk-lib.aws_athena": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Athena"
            },
            "java": {
              "package": "software.amazon.awscdk.services.athena"
            },
            "python": {
              "module": "aws_cdk.aws_athena"
            }
          }
        },
        "aws-cdk-lib.aws_auditmanager": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AuditManager"
            },
            "java": {
              "package": "software.amazon.awscdk.services.auditmanager"
            },
            "python": {
              "module": "aws_cdk.aws_auditmanager"
            }
          }
        },
        "aws-cdk-lib.aws_autoscaling": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AutoScaling"
            },
            "java": {
              "package": "software.amazon.awscdk.services.autoscaling"
            },
            "python": {
              "module": "aws_cdk.aws_autoscaling"
            }
          }
        },
        "aws-cdk-lib.aws_autoscaling_common": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AutoScaling.Common"
            },
            "java": {
              "package": "software.amazon.awscdk.services.autoscaling.common"
            },
            "python": {
              "module": "aws_cdk.aws_autoscaling_common"
            }
          }
        },
        "aws-cdk-lib.aws_autoscaling_hooktargets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AutoScaling.HookTargets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.autoscaling.hooktargets"
            },
            "python": {
              "module": "aws_cdk.aws_autoscaling_hooktargets"
            }
          }
        },
        "aws-cdk-lib.aws_autoscalingplans": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AutoScalingPlans"
            },
            "java": {
              "package": "software.amazon.awscdk.services.autoscalingplans"
            },
            "python": {
              "module": "aws_cdk.aws_autoscalingplans"
            }
          }
        },
        "aws-cdk-lib.aws_b2bi": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.B2BI"
            },
            "java": {
              "package": "software.amazon.awscdk.services.b2bi"
            },
            "python": {
              "module": "aws_cdk.aws_b2bi"
            }
          }
        },
        "aws-cdk-lib.aws_backup": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Backup"
            },
            "java": {
              "package": "software.amazon.awscdk.services.backup"
            },
            "python": {
              "module": "aws_cdk.aws_backup"
            }
          }
        },
        "aws-cdk-lib.aws_backupgateway": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.BackupGateway"
            },
            "java": {
              "package": "software.amazon.awscdk.services.backupgateway"
            },
            "python": {
              "module": "aws_cdk.aws_backupgateway"
            }
          }
        },
        "aws-cdk-lib.aws_batch": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Batch"
            },
            "java": {
              "package": "software.amazon.awscdk.services.batch"
            },
            "python": {
              "module": "aws_cdk.aws_batch"
            }
          }
        },
        "aws-cdk-lib.aws_bcmdataexports": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.BCMDataExports"
            },
            "java": {
              "package": "software.amazon.awscdk.services.bcmdataexports"
            },
            "python": {
              "module": "aws_cdk.aws_bcmdataexports"
            }
          }
        },
        "aws-cdk-lib.aws_bedrock": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.Bedrock"
            },
            "java": {
              "package": "software.amazon.awscdk.services.bedrock"
            },
            "python": {
              "module": "aws_cdk.aws_bedrock"
            }
          }
        },
        "aws-cdk-lib.aws_billingconductor": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.BillingConductor"
            },
            "java": {
              "package": "software.amazon.awscdk.services.billingconductor"
            },
            "python": {
              "module": "aws_cdk.aws_billingconductor"
            }
          }
        },
        "aws-cdk-lib.aws_budgets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Budgets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.budgets"
            },
            "python": {
              "module": "aws_cdk.aws_budgets"
            }
          }
        },
        "aws-cdk-lib.aws_cassandra": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Cassandra"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cassandra"
            },
            "python": {
              "module": "aws_cdk.aws_cassandra"
            }
          }
        },
        "aws-cdk-lib.aws_ce": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CE"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ce"
            },
            "python": {
              "module": "aws_cdk.aws_ce"
            }
          }
        },
        "aws-cdk-lib.aws_certificatemanager": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CertificateManager"
            },
            "java": {
              "package": "software.amazon.awscdk.services.certificatemanager"
            },
            "python": {
              "module": "aws_cdk.aws_certificatemanager"
            }
          }
        },
        "aws-cdk-lib.aws_chatbot": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Chatbot"
            },
            "java": {
              "package": "software.amazon.awscdk.services.chatbot"
            },
            "python": {
              "module": "aws_cdk.aws_chatbot"
            }
          }
        },
        "aws-cdk-lib.aws_cleanrooms": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.CleanRooms"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cleanrooms"
            },
            "python": {
              "module": "aws_cdk.aws_cleanrooms"
            }
          }
        },
        "aws-cdk-lib.aws_cleanroomsml": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.CleanRoomsML"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cleanroomsml"
            },
            "python": {
              "module": "aws_cdk.aws_cleanroomsml"
            }
          }
        },
        "aws-cdk-lib.aws_cloud9": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Cloud9"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cloud9"
            },
            "python": {
              "module": "aws_cdk.aws_cloud9"
            }
          }
        },
        "aws-cdk-lib.aws_cloudformation": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CloudFormation"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cloudformation"
            },
            "python": {
              "module": "aws_cdk.aws_cloudformation"
            }
          }
        },
        "aws-cdk-lib.aws_cloudfront": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CloudFront"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cloudfront"
            },
            "python": {
              "module": "aws_cdk.aws_cloudfront"
            }
          }
        },
        "aws-cdk-lib.aws_cloudfront.experimental": {},
        "aws-cdk-lib.aws_cloudfront_origins": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CloudFront.Origins"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cloudfront.origins"
            },
            "python": {
              "module": "aws_cdk.aws_cloudfront_origins"
            }
          }
        },
        "aws-cdk-lib.aws_cloudtrail": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CloudTrail"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cloudtrail"
            },
            "python": {
              "module": "aws_cdk.aws_cloudtrail"
            }
          }
        },
        "aws-cdk-lib.aws_cloudwatch": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CloudWatch"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cloudwatch"
            },
            "python": {
              "module": "aws_cdk.aws_cloudwatch"
            }
          }
        },
        "aws-cdk-lib.aws_cloudwatch_actions": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CloudWatch.Actions"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cloudwatch.actions"
            },
            "python": {
              "module": "aws_cdk.aws_cloudwatch_actions"
            }
          }
        },
        "aws-cdk-lib.aws_codeartifact": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeArtifact"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codeartifact"
            },
            "python": {
              "module": "aws_cdk.aws_codeartifact"
            }
          }
        },
        "aws-cdk-lib.aws_codebuild": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeBuild"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codebuild"
            },
            "python": {
              "module": "aws_cdk.aws_codebuild"
            }
          }
        },
        "aws-cdk-lib.aws_codecommit": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeCommit"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codecommit"
            },
            "python": {
              "module": "aws_cdk.aws_codecommit"
            }
          }
        },
        "aws-cdk-lib.aws_codeconnections": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.CodeConnections"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codeconnections"
            },
            "python": {
              "module": "aws_cdk.aws_codeconnections"
            }
          }
        },
        "aws-cdk-lib.aws_codedeploy": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeDeploy"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codedeploy"
            },
            "python": {
              "module": "aws_cdk.aws_codedeploy"
            }
          }
        },
        "aws-cdk-lib.aws_codeguruprofiler": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeGuruProfiler"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codeguruprofiler"
            },
            "python": {
              "module": "aws_cdk.aws_codeguruprofiler"
            }
          }
        },
        "aws-cdk-lib.aws_codegurureviewer": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeGuruReviewer"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codegurureviewer"
            },
            "python": {
              "module": "aws_cdk.aws_codegurureviewer"
            }
          }
        },
        "aws-cdk-lib.aws_codepipeline": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodePipeline"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codepipeline"
            },
            "python": {
              "module": "aws_cdk.aws_codepipeline"
            }
          }
        },
        "aws-cdk-lib.aws_codepipeline_actions": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodePipeline.Actions"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codepipeline.actions"
            },
            "python": {
              "module": "aws_cdk.aws_codepipeline_actions"
            }
          }
        },
        "aws-cdk-lib.aws_codestar": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Codestar"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codestar"
            },
            "python": {
              "module": "aws_cdk.aws_codestar"
            }
          }
        },
        "aws-cdk-lib.aws_codestarconnections": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeStarConnections"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codestarconnections"
            },
            "python": {
              "module": "aws_cdk.aws_codestarconnections"
            }
          }
        },
        "aws-cdk-lib.aws_codestarnotifications": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeStarNotifications"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codestarnotifications"
            },
            "python": {
              "module": "aws_cdk.aws_codestarnotifications"
            }
          }
        },
        "aws-cdk-lib.aws_cognito": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Cognito"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cognito"
            },
            "python": {
              "module": "aws_cdk.aws_cognito"
            }
          }
        },
        "aws-cdk-lib.aws_comprehend": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Comprehend"
            },
            "java": {
              "package": "software.amazon.awscdk.services.comprehend"
            },
            "python": {
              "module": "aws_cdk.aws_comprehend"
            }
          }
        },
        "aws-cdk-lib.aws_config": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Config"
            },
            "java": {
              "package": "software.amazon.awscdk.services.config"
            },
            "python": {
              "module": "aws_cdk.aws_config"
            }
          }
        },
        "aws-cdk-lib.aws_connect": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Connect"
            },
            "java": {
              "package": "software.amazon.awscdk.services.connect"
            },
            "python": {
              "module": "aws_cdk.aws_connect"
            }
          }
        },
        "aws-cdk-lib.aws_connectcampaigns": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ConnectCampaigns"
            },
            "java": {
              "package": "software.amazon.awscdk.services.connectcampaigns"
            },
            "python": {
              "module": "aws_cdk.aws_connectcampaigns"
            }
          }
        },
        "aws-cdk-lib.aws_controltower": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ControlTower"
            },
            "java": {
              "package": "software.amazon.awscdk.services.controltower"
            },
            "python": {
              "module": "aws_cdk.aws_controltower"
            }
          }
        },
        "aws-cdk-lib.aws_cur": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CUR"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cur"
            },
            "python": {
              "module": "aws_cdk.aws_cur"
            }
          }
        },
        "aws-cdk-lib.aws_customerprofiles": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CustomerProfiles"
            },
            "java": {
              "package": "software.amazon.awscdk.services.customerprofiles"
            },
            "python": {
              "module": "aws_cdk.aws_customerprofiles"
            }
          }
        },
        "aws-cdk-lib.aws_databrew": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DataBrew"
            },
            "java": {
              "package": "software.amazon.awscdk.services.databrew"
            },
            "python": {
              "module": "aws_cdk.aws_databrew"
            }
          }
        },
        "aws-cdk-lib.aws_datapipeline": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DataPipeline"
            },
            "java": {
              "package": "software.amazon.awscdk.services.datapipeline"
            },
            "python": {
              "module": "aws_cdk.aws_datapipeline"
            }
          }
        },
        "aws-cdk-lib.aws_datasync": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DataSync"
            },
            "java": {
              "package": "software.amazon.awscdk.services.datasync"
            },
            "python": {
              "module": "aws_cdk.aws_datasync"
            }
          }
        },
        "aws-cdk-lib.aws_datazone": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.DataZone"
            },
            "java": {
              "package": "software.amazon.awscdk.services.datazone"
            },
            "python": {
              "module": "aws_cdk.aws_datazone"
            }
          }
        },
        "aws-cdk-lib.aws_dax": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DAX"
            },
            "java": {
              "package": "software.amazon.awscdk.services.dax"
            },
            "python": {
              "module": "aws_cdk.aws_dax"
            }
          }
        },
        "aws-cdk-lib.aws_deadline": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.Deadline"
            },
            "java": {
              "package": "software.amazon.awscdk.services.deadline"
            },
            "python": {
              "module": "aws_cdk.aws_deadline"
            }
          }
        },
        "aws-cdk-lib.aws_detective": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Detective"
            },
            "java": {
              "package": "software.amazon.awscdk.services.detective"
            },
            "python": {
              "module": "aws_cdk.aws_detective"
            }
          }
        },
        "aws-cdk-lib.aws_devicefarm": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DeviceFarm"
            },
            "java": {
              "package": "software.amazon.awscdk.services.devicefarm"
            },
            "python": {
              "module": "aws_cdk.aws_devicefarm"
            }
          }
        },
        "aws-cdk-lib.aws_devopsguru": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DevOpsGuru"
            },
            "java": {
              "package": "software.amazon.awscdk.services.devopsguru"
            },
            "python": {
              "module": "aws_cdk.aws_devopsguru"
            }
          }
        },
        "aws-cdk-lib.aws_directoryservice": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DirectoryService"
            },
            "java": {
              "package": "software.amazon.awscdk.services.directoryservice"
            },
            "python": {
              "module": "aws_cdk.aws_directoryservice"
            }
          }
        },
        "aws-cdk-lib.aws_dlm": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DLM"
            },
            "java": {
              "package": "software.amazon.awscdk.services.dlm"
            },
            "python": {
              "module": "aws_cdk.aws_dlm"
            }
          }
        },
        "aws-cdk-lib.aws_dms": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DMS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.dms"
            },
            "python": {
              "module": "aws_cdk.aws_dms"
            }
          }
        },
        "aws-cdk-lib.aws_docdb": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DocDB"
            },
            "java": {
              "package": "software.amazon.awscdk.services.docdb"
            },
            "python": {
              "module": "aws_cdk.aws_docdb"
            }
          }
        },
        "aws-cdk-lib.aws_docdbelastic": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DocDBElastic"
            },
            "java": {
              "package": "software.amazon.awscdk.services.docdbelastic"
            },
            "python": {
              "module": "aws_cdk.aws_docdbelastic"
            }
          }
        },
        "aws-cdk-lib.aws_dynamodb": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DynamoDB"
            },
            "java": {
              "package": "software.amazon.awscdk.services.dynamodb"
            },
            "python": {
              "module": "aws_cdk.aws_dynamodb"
            }
          }
        },
        "aws-cdk-lib.aws_ec2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.EC2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ec2"
            },
            "python": {
              "module": "aws_cdk.aws_ec2"
            }
          }
        },
        "aws-cdk-lib.aws_ecr": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ECR"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ecr"
            },
            "python": {
              "module": "aws_cdk.aws_ecr"
            }
          }
        },
        "aws-cdk-lib.aws_ecr_assets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Ecr.Assets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ecr.assets"
            },
            "python": {
              "module": "aws_cdk.aws_ecr_assets"
            }
          }
        },
        "aws-cdk-lib.aws_ecs": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ECS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ecs"
            },
            "python": {
              "module": "aws_cdk.aws_ecs"
            }
          }
        },
        "aws-cdk-lib.aws_ecs_patterns": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ECS.Patterns"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ecs.patterns"
            },
            "python": {
              "module": "aws_cdk.aws_ecs_patterns"
            }
          }
        },
        "aws-cdk-lib.aws_efs": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.EFS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.efs"
            },
            "python": {
              "module": "aws_cdk.aws_efs"
            }
          }
        },
        "aws-cdk-lib.aws_eks": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.EKS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.eks"
            },
            "python": {
              "module": "aws_cdk.aws_eks"
            }
          }
        },
        "aws-cdk-lib.aws_elasticache": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ElastiCache"
            },
            "java": {
              "package": "software.amazon.awscdk.services.elasticache"
            },
            "python": {
              "module": "aws_cdk.aws_elasticache"
            }
          }
        },
        "aws-cdk-lib.aws_elasticbeanstalk": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ElasticBeanstalk"
            },
            "java": {
              "package": "software.amazon.awscdk.services.elasticbeanstalk"
            },
            "python": {
              "module": "aws_cdk.aws_elasticbeanstalk"
            }
          }
        },
        "aws-cdk-lib.aws_elasticloadbalancing": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ElasticLoadBalancing"
            },
            "java": {
              "package": "software.amazon.awscdk.services.elasticloadbalancing"
            },
            "python": {
              "module": "aws_cdk.aws_elasticloadbalancing"
            }
          }
        },
        "aws-cdk-lib.aws_elasticloadbalancingv2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ElasticLoadBalancingV2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.elasticloadbalancingv2"
            },
            "python": {
              "module": "aws_cdk.aws_elasticloadbalancingv2"
            }
          }
        },
        "aws-cdk-lib.aws_elasticloadbalancingv2_actions": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ElasticLoadBalancingV2.Actions"
            },
            "java": {
              "package": "software.amazon.awscdk.services.elasticloadbalancingv2.actions"
            },
            "python": {
              "module": "aws_cdk.aws_elasticloadbalancingv2_actions"
            }
          }
        },
        "aws-cdk-lib.aws_elasticloadbalancingv2_targets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ElasticLoadBalancingV2.Targets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.elasticloadbalancingv2.targets"
            },
            "python": {
              "module": "aws_cdk.aws_elasticloadbalancingv2_targets"
            }
          }
        },
        "aws-cdk-lib.aws_elasticsearch": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Elasticsearch"
            },
            "java": {
              "package": "software.amazon.awscdk.services.elasticsearch"
            },
            "python": {
              "module": "aws_cdk.aws_elasticsearch"
            }
          }
        },
        "aws-cdk-lib.aws_emr": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.EMR"
            },
            "java": {
              "package": "software.amazon.awscdk.services.emr"
            },
            "python": {
              "module": "aws_cdk.aws_emr"
            }
          }
        },
        "aws-cdk-lib.aws_emrcontainers": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.EMRContainers"
            },
            "java": {
              "package": "software.amazon.awscdk.services.emrcontainers"
            },
            "python": {
              "module": "aws_cdk.aws_emrcontainers"
            }
          }
        },
        "aws-cdk-lib.aws_emrserverless": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.EMRServerless"
            },
            "java": {
              "package": "software.amazon.awscdk.services.emrserverless"
            },
            "python": {
              "module": "aws_cdk.aws_emrserverless"
            }
          }
        },
        "aws-cdk-lib.aws_entityresolution": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.EntityResolution"
            },
            "java": {
              "package": "software.amazon.awscdk.services.entityresolution"
            },
            "python": {
              "module": "aws_cdk.aws_entityresolution"
            }
          }
        },
        "aws-cdk-lib.aws_events": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Events"
            },
            "java": {
              "package": "software.amazon.awscdk.services.events"
            },
            "python": {
              "module": "aws_cdk.aws_events"
            }
          }
        },
        "aws-cdk-lib.aws_events_targets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Events.Targets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.events.targets"
            },
            "python": {
              "module": "aws_cdk.aws_events_targets"
            }
          }
        },
        "aws-cdk-lib.aws_eventschemas": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.EventSchemas"
            },
            "java": {
              "package": "software.amazon.awscdk.services.eventschemas"
            },
            "python": {
              "module": "aws_cdk.aws_eventschemas"
            }
          }
        },
        "aws-cdk-lib.aws_evidently": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Evidently"
            },
            "java": {
              "package": "software.amazon.awscdk.services.evidently"
            },
            "python": {
              "module": "aws_cdk.aws_evidently"
            }
          }
        },
        "aws-cdk-lib.aws_finspace": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.FinSpace"
            },
            "java": {
              "package": "software.amazon.awscdk.services.finspace"
            },
            "python": {
              "module": "aws_cdk.aws_finspace"
            }
          }
        },
        "aws-cdk-lib.aws_fis": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.FIS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.fis"
            },
            "python": {
              "module": "aws_cdk.aws_fis"
            }
          }
        },
        "aws-cdk-lib.aws_fms": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.FMS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.fms"
            },
            "python": {
              "module": "aws_cdk.aws_fms"
            }
          }
        },
        "aws-cdk-lib.aws_forecast": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Forecast"
            },
            "java": {
              "package": "software.amazon.awscdk.services.forecast"
            },
            "python": {
              "module": "aws_cdk.aws_forecast"
            }
          }
        },
        "aws-cdk-lib.aws_frauddetector": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.FraudDetector"
            },
            "java": {
              "package": "software.amazon.awscdk.services.frauddetector"
            },
            "python": {
              "module": "aws_cdk.aws_frauddetector"
            }
          }
        },
        "aws-cdk-lib.aws_fsx": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.FSx"
            },
            "java": {
              "package": "software.amazon.awscdk.services.fsx"
            },
            "python": {
              "module": "aws_cdk.aws_fsx"
            }
          }
        },
        "aws-cdk-lib.aws_gamelift": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.GameLift"
            },
            "java": {
              "package": "software.amazon.awscdk.services.gamelift"
            },
            "python": {
              "module": "aws_cdk.aws_gamelift"
            }
          }
        },
        "aws-cdk-lib.aws_globalaccelerator": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.GlobalAccelerator"
            },
            "java": {
              "package": "software.amazon.awscdk.services.globalaccelerator"
            },
            "python": {
              "module": "aws_cdk.aws_globalaccelerator"
            }
          }
        },
        "aws-cdk-lib.aws_globalaccelerator_endpoints": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.GlobalAccelerator.Endpoints"
            },
            "java": {
              "package": "software.amazon.awscdk.services.globalaccelerator.endpoints"
            },
            "python": {
              "module": "aws_cdk.aws_globalaccelerator_endpoints"
            }
          }
        },
        "aws-cdk-lib.aws_glue": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Glue"
            },
            "java": {
              "package": "software.amazon.awscdk.services.glue"
            },
            "python": {
              "module": "aws_cdk.aws_glue"
            }
          }
        },
        "aws-cdk-lib.aws_grafana": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Grafana"
            },
            "java": {
              "package": "software.amazon.awscdk.services.grafana"
            },
            "python": {
              "module": "aws_cdk.aws_grafana"
            }
          }
        },
        "aws-cdk-lib.aws_greengrass": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Greengrass"
            },
            "java": {
              "package": "software.amazon.awscdk.services.greengrass"
            },
            "python": {
              "module": "aws_cdk.aws_greengrass"
            }
          }
        },
        "aws-cdk-lib.aws_greengrassv2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.GreengrassV2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.greengrassv2"
            },
            "python": {
              "module": "aws_cdk.aws_greengrassv2"
            }
          }
        },
        "aws-cdk-lib.aws_groundstation": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.GroundStation"
            },
            "java": {
              "package": "software.amazon.awscdk.services.groundstation"
            },
            "python": {
              "module": "aws_cdk.aws_groundstation"
            }
          }
        },
        "aws-cdk-lib.aws_guardduty": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.GuardDuty"
            },
            "java": {
              "package": "software.amazon.awscdk.services.guardduty"
            },
            "python": {
              "module": "aws_cdk.aws_guardduty"
            }
          }
        },
        "aws-cdk-lib.aws_healthimaging": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.HealthImaging"
            },
            "java": {
              "package": "software.amazon.awscdk.services.healthimaging"
            },
            "python": {
              "module": "aws_cdk.aws_healthimaging"
            }
          }
        },
        "aws-cdk-lib.aws_healthlake": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.HealthLake"
            },
            "java": {
              "package": "software.amazon.awscdk.services.healthlake"
            },
            "python": {
              "module": "aws_cdk.aws_healthlake"
            }
          }
        },
        "aws-cdk-lib.aws_iam": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IAM"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iam"
            },
            "python": {
              "module": "aws_cdk.aws_iam"
            }
          }
        },
        "aws-cdk-lib.aws_identitystore": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IdentityStore"
            },
            "java": {
              "package": "software.amazon.awscdk.services.identitystore"
            },
            "python": {
              "module": "aws_cdk.aws_identitystore"
            }
          }
        },
        "aws-cdk-lib.aws_imagebuilder": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ImageBuilder"
            },
            "java": {
              "package": "software.amazon.awscdk.services.imagebuilder"
            },
            "python": {
              "module": "aws_cdk.aws_imagebuilder"
            }
          }
        },
        "aws-cdk-lib.aws_inspector": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Inspector"
            },
            "java": {
              "package": "software.amazon.awscdk.services.inspector"
            },
            "python": {
              "module": "aws_cdk.aws_inspector"
            }
          }
        },
        "aws-cdk-lib.aws_inspectorv2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.InspectorV2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.inspectorv2"
            },
            "python": {
              "module": "aws_cdk.aws_inspectorv2"
            }
          }
        },
        "aws-cdk-lib.aws_internetmonitor": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.InternetMonitor"
            },
            "java": {
              "package": "software.amazon.awscdk.services.internetmonitor"
            },
            "python": {
              "module": "aws_cdk.aws_internetmonitor"
            }
          }
        },
        "aws-cdk-lib.aws_iot": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoT"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iot"
            },
            "python": {
              "module": "aws_cdk.aws_iot"
            }
          }
        },
        "aws-cdk-lib.aws_iot1click": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoT1Click"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iot1click"
            },
            "python": {
              "module": "aws_cdk.aws_iot1click"
            }
          }
        },
        "aws-cdk-lib.aws_iotanalytics": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTAnalytics"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotanalytics"
            },
            "python": {
              "module": "aws_cdk.aws_iotanalytics"
            }
          }
        },
        "aws-cdk-lib.aws_iotcoredeviceadvisor": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTCoreDeviceAdvisor"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotcoredeviceadvisor"
            },
            "python": {
              "module": "aws_cdk.aws_iotcoredeviceadvisor"
            }
          }
        },
        "aws-cdk-lib.aws_iotevents": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTEvents"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotevents"
            },
            "python": {
              "module": "aws_cdk.aws_iotevents"
            }
          }
        },
        "aws-cdk-lib.aws_iotfleethub": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTFleetHub"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotfleethub"
            },
            "python": {
              "module": "aws_cdk.aws_iotfleethub"
            }
          }
        },
        "aws-cdk-lib.aws_iotfleetwise": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTFleetWise"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotfleetwise"
            },
            "python": {
              "module": "aws_cdk.aws_iotfleetwise"
            }
          }
        },
        "aws-cdk-lib.aws_iotsitewise": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTSiteWise"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotsitewise"
            },
            "python": {
              "module": "aws_cdk.aws_iotsitewise"
            }
          }
        },
        "aws-cdk-lib.aws_iotthingsgraph": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTThingsGraph"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotthingsgraph"
            },
            "python": {
              "module": "aws_cdk.aws_iotthingsgraph"
            }
          }
        },
        "aws-cdk-lib.aws_iottwinmaker": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTTwinMaker"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iottwinmaker"
            },
            "python": {
              "module": "aws_cdk.aws_iottwinmaker"
            }
          }
        },
        "aws-cdk-lib.aws_iotwireless": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTWireless"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotwireless"
            },
            "python": {
              "module": "aws_cdk.aws_iotwireless"
            }
          }
        },
        "aws-cdk-lib.aws_ivs": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Ivs"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ivs"
            },
            "python": {
              "module": "aws_cdk.aws_ivs"
            }
          }
        },
        "aws-cdk-lib.aws_ivschat": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IVSChat"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ivschat"
            },
            "python": {
              "module": "aws_cdk.aws_ivschat"
            }
          }
        },
        "aws-cdk-lib.aws_kafkaconnect": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.KafkaConnect"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kafkaconnect"
            },
            "python": {
              "module": "aws_cdk.aws_kafkaconnect"
            }
          }
        },
        "aws-cdk-lib.aws_kendra": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Kendra"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kendra"
            },
            "python": {
              "module": "aws_cdk.aws_kendra"
            }
          }
        },
        "aws-cdk-lib.aws_kendraranking": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.KendraRanking"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kendraranking"
            },
            "python": {
              "module": "aws_cdk.aws_kendraranking"
            }
          }
        },
        "aws-cdk-lib.aws_kinesis": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Kinesis"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kinesis"
            },
            "python": {
              "module": "aws_cdk.aws_kinesis"
            }
          }
        },
        "aws-cdk-lib.aws_kinesisanalytics": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.KinesisAnalytics"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kinesisanalytics"
            },
            "python": {
              "module": "aws_cdk.aws_kinesisanalytics"
            }
          }
        },
        "aws-cdk-lib.aws_kinesisanalyticsv2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.KinesisAnalyticsV2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kinesisanalyticsv2"
            },
            "python": {
              "module": "aws_cdk.aws_kinesisanalyticsv2"
            }
          }
        },
        "aws-cdk-lib.aws_kinesisfirehose": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.KinesisFirehose"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kinesisfirehose"
            },
            "python": {
              "module": "aws_cdk.aws_kinesisfirehose"
            }
          }
        },
        "aws-cdk-lib.aws_kinesisvideo": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.KinesisVideo"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kinesisvideo"
            },
            "python": {
              "module": "aws_cdk.aws_kinesisvideo"
            }
          }
        },
        "aws-cdk-lib.aws_kms": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.KMS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kms"
            },
            "python": {
              "module": "aws_cdk.aws_kms"
            }
          }
        },
        "aws-cdk-lib.aws_lakeformation": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.LakeFormation"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lakeformation"
            },
            "python": {
              "module": "aws_cdk.aws_lakeformation"
            }
          }
        },
        "aws-cdk-lib.aws_lambda": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Lambda"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lambda"
            },
            "python": {
              "module": "aws_cdk.aws_lambda"
            }
          }
        },
        "aws-cdk-lib.aws_lambda_destinations": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Lambda.Destinations"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lambda.destinations"
            },
            "python": {
              "module": "aws_cdk.aws_lambda_destinations"
            }
          }
        },
        "aws-cdk-lib.aws_lambda_event_sources": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Lambda.EventSources"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lambda.eventsources"
            },
            "python": {
              "module": "aws_cdk.aws_lambda_event_sources"
            }
          }
        },
        "aws-cdk-lib.aws_lambda_nodejs": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Lambda.Nodejs"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lambda.nodejs"
            },
            "python": {
              "module": "aws_cdk.aws_lambda_nodejs"
            }
          }
        },
        "aws-cdk-lib.aws_launchwizard": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.LaunchWizard"
            },
            "java": {
              "package": "software.amazon.awscdk.services.launchwizard"
            },
            "python": {
              "module": "aws_cdk.aws_launchwizard"
            }
          }
        },
        "aws-cdk-lib.aws_lex": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Lex"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lex"
            },
            "python": {
              "module": "aws_cdk.aws_lex"
            }
          }
        },
        "aws-cdk-lib.aws_licensemanager": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.LicenseManager"
            },
            "java": {
              "package": "software.amazon.awscdk.services.licensemanager"
            },
            "python": {
              "module": "aws_cdk.aws_licensemanager"
            }
          }
        },
        "aws-cdk-lib.aws_lightsail": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Lightsail"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lightsail"
            },
            "python": {
              "module": "aws_cdk.aws_lightsail"
            }
          }
        },
        "aws-cdk-lib.aws_location": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Location"
            },
            "java": {
              "package": "software.amazon.awscdk.services.location"
            },
            "python": {
              "module": "aws_cdk.aws_location"
            }
          }
        },
        "aws-cdk-lib.aws_logs": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Logs"
            },
            "java": {
              "package": "software.amazon.awscdk.services.logs"
            },
            "python": {
              "module": "aws_cdk.aws_logs"
            }
          }
        },
        "aws-cdk-lib.aws_logs_destinations": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Logs.Destinations"
            },
            "java": {
              "package": "software.amazon.awscdk.services.logs.destinations"
            },
            "python": {
              "module": "aws_cdk.aws_logs_destinations"
            }
          }
        },
        "aws-cdk-lib.aws_lookoutequipment": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.LookoutEquipment"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lookoutequipment"
            },
            "python": {
              "module": "aws_cdk.aws_lookoutequipment"
            }
          }
        },
        "aws-cdk-lib.aws_lookoutmetrics": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.LookoutMetrics"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lookoutmetrics"
            },
            "python": {
              "module": "aws_cdk.aws_lookoutmetrics"
            }
          }
        },
        "aws-cdk-lib.aws_lookoutvision": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.LookoutVision"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lookoutvision"
            },
            "python": {
              "module": "aws_cdk.aws_lookoutvision"
            }
          }
        },
        "aws-cdk-lib.aws_m2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.M2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.m2"
            },
            "python": {
              "module": "aws_cdk.aws_m2"
            }
          }
        },
        "aws-cdk-lib.aws_macie": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Macie"
            },
            "java": {
              "package": "software.amazon.awscdk.services.macie"
            },
            "python": {
              "module": "aws_cdk.aws_macie"
            }
          }
        },
        "aws-cdk-lib.aws_managedblockchain": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ManagedBlockchain"
            },
            "java": {
              "package": "software.amazon.awscdk.services.managedblockchain"
            },
            "python": {
              "module": "aws_cdk.aws_managedblockchain"
            }
          }
        },
        "aws-cdk-lib.aws_mediaconnect": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MediaConnect"
            },
            "java": {
              "package": "software.amazon.awscdk.services.mediaconnect"
            },
            "python": {
              "module": "aws_cdk.aws_mediaconnect"
            }
          }
        },
        "aws-cdk-lib.aws_mediaconvert": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MediaConvert"
            },
            "java": {
              "package": "software.amazon.awscdk.services.mediaconvert"
            },
            "python": {
              "module": "aws_cdk.aws_mediaconvert"
            }
          }
        },
        "aws-cdk-lib.aws_medialive": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MediaLive"
            },
            "java": {
              "package": "software.amazon.awscdk.services.medialive"
            },
            "python": {
              "module": "aws_cdk.aws_medialive"
            }
          }
        },
        "aws-cdk-lib.aws_mediapackage": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MediaPackage"
            },
            "java": {
              "package": "software.amazon.awscdk.services.mediapackage"
            },
            "python": {
              "module": "aws_cdk.aws_mediapackage"
            }
          }
        },
        "aws-cdk-lib.aws_mediapackagev2": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.MediaPackageV2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.mediapackagev2"
            },
            "python": {
              "module": "aws_cdk.aws_mediapackagev2"
            }
          }
        },
        "aws-cdk-lib.aws_mediastore": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MediaStore"
            },
            "java": {
              "package": "software.amazon.awscdk.services.mediastore"
            },
            "python": {
              "module": "aws_cdk.aws_mediastore"
            }
          }
        },
        "aws-cdk-lib.aws_mediatailor": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MediaTailor"
            },
            "java": {
              "package": "software.amazon.awscdk.services.mediatailor"
            },
            "python": {
              "module": "aws_cdk.aws_mediatailor"
            }
          }
        },
        "aws-cdk-lib.aws_memorydb": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MemoryDB"
            },
            "java": {
              "package": "software.amazon.awscdk.services.memorydb"
            },
            "python": {
              "module": "aws_cdk.aws_memorydb"
            }
          }
        },
        "aws-cdk-lib.aws_msk": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MSK"
            },
            "java": {
              "package": "software.amazon.awscdk.services.msk"
            },
            "python": {
              "module": "aws_cdk.aws_msk"
            }
          }
        },
        "aws-cdk-lib.aws_mwaa": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MWAA"
            },
            "java": {
              "package": "software.amazon.awscdk.services.mwaa"
            },
            "python": {
              "module": "aws_cdk.aws_mwaa"
            }
          }
        },
        "aws-cdk-lib.aws_neptune": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Neptune"
            },
            "java": {
              "package": "software.amazon.awscdk.services.neptune"
            },
            "python": {
              "module": "aws_cdk.aws_neptune"
            }
          }
        },
        "aws-cdk-lib.aws_neptunegraph": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.NeptuneGraph"
            },
            "java": {
              "package": "software.amazon.awscdk.services.neptunegraph"
            },
            "python": {
              "module": "aws_cdk.aws_neptunegraph"
            }
          }
        },
        "aws-cdk-lib.aws_networkfirewall": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.NetworkFirewall"
            },
            "java": {
              "package": "software.amazon.awscdk.services.networkfirewall"
            },
            "python": {
              "module": "aws_cdk.aws_networkfirewall"
            }
          }
        },
        "aws-cdk-lib.aws_networkmanager": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.NetworkManager"
            },
            "java": {
              "package": "software.amazon.awscdk.services.networkmanager"
            },
            "python": {
              "module": "aws_cdk.aws_networkmanager"
            }
          }
        },
        "aws-cdk-lib.aws_nimblestudio": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.NimbleStudio"
            },
            "java": {
              "package": "software.amazon.awscdk.services.nimblestudio"
            },
            "python": {
              "module": "aws_cdk.aws_nimblestudio"
            }
          }
        },
        "aws-cdk-lib.aws_oam": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Oam"
            },
            "java": {
              "package": "software.amazon.awscdk.services.oam"
            },
            "python": {
              "module": "aws_cdk.aws_oam"
            }
          }
        },
        "aws-cdk-lib.aws_omics": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Omics"
            },
            "java": {
              "package": "software.amazon.awscdk.services.omics"
            },
            "python": {
              "module": "aws_cdk.aws_omics"
            }
          }
        },
        "aws-cdk-lib.aws_opensearchserverless": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.OpenSearchServerless"
            },
            "java": {
              "package": "software.amazon.awscdk.services.opensearchserverless"
            },
            "python": {
              "module": "aws_cdk.aws_opensearchserverless"
            }
          }
        },
        "aws-cdk-lib.aws_opensearchservice": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.OpenSearchService"
            },
            "java": {
              "package": "software.amazon.awscdk.services.opensearchservice"
            },
            "python": {
              "module": "aws_cdk.aws_opensearchservice"
            }
          }
        },
        "aws-cdk-lib.aws_opsworks": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.OpsWorks"
            },
            "java": {
              "package": "software.amazon.awscdk.services.opsworks"
            },
            "python": {
              "module": "aws_cdk.aws_opsworks"
            }
          }
        },
        "aws-cdk-lib.aws_opsworkscm": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.OpsWorksCM"
            },
            "java": {
              "package": "software.amazon.awscdk.services.opsworkscm"
            },
            "python": {
              "module": "aws_cdk.aws_opsworkscm"
            }
          }
        },
        "aws-cdk-lib.aws_organizations": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Organizations"
            },
            "java": {
              "package": "software.amazon.awscdk.services.organizations"
            },
            "python": {
              "module": "aws_cdk.aws_organizations"
            }
          }
        },
        "aws-cdk-lib.aws_osis": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.OSIS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.osis"
            },
            "python": {
              "module": "aws_cdk.aws_osis"
            }
          }
        },
        "aws-cdk-lib.aws_panorama": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Panorama"
            },
            "java": {
              "package": "software.amazon.awscdk.services.panorama"
            },
            "python": {
              "module": "aws_cdk.aws_panorama"
            }
          }
        },
        "aws-cdk-lib.aws_paymentcryptography": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.PaymentCryptography"
            },
            "java": {
              "package": "software.amazon.awscdk.services.paymentcryptography"
            },
            "python": {
              "module": "aws_cdk.aws_paymentcryptography"
            }
          }
        },
        "aws-cdk-lib.aws_pcaconnectorad": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.PCAConnectorAD"
            },
            "java": {
              "package": "software.amazon.awscdk.services.pcaconnectorad"
            },
            "python": {
              "module": "aws_cdk.aws_pcaconnectorad"
            }
          }
        },
        "aws-cdk-lib.aws_pcaconnectorscep": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.PCAConnectorSCEP"
            },
            "java": {
              "package": "software.amazon.awscdk.services.pcaconnectorscep"
            },
            "python": {
              "module": "aws_cdk.aws_pcaconnectorscep"
            }
          }
        },
        "aws-cdk-lib.aws_personalize": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Personalize"
            },
            "java": {
              "package": "software.amazon.awscdk.services.personalize"
            },
            "python": {
              "module": "aws_cdk.aws_personalize"
            }
          }
        },
        "aws-cdk-lib.aws_pinpoint": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Pinpoint"
            },
            "java": {
              "package": "software.amazon.awscdk.services.pinpoint"
            },
            "python": {
              "module": "aws_cdk.aws_pinpoint"
            }
          }
        },
        "aws-cdk-lib.aws_pinpointemail": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.PinpointEmail"
            },
            "java": {
              "package": "software.amazon.awscdk.services.pinpointemail"
            },
            "python": {
              "module": "aws_cdk.aws_pinpointemail"
            }
          }
        },
        "aws-cdk-lib.aws_pipes": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Pipes"
            },
            "java": {
              "package": "software.amazon.awscdk.services.pipes"
            },
            "python": {
              "module": "aws_cdk.aws_pipes"
            }
          }
        },
        "aws-cdk-lib.aws_proton": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.Proton"
            },
            "java": {
              "package": "software.amazon.awscdk.services.proton"
            },
            "python": {
              "module": "aws_cdk.aws_proton"
            }
          }
        },
        "aws-cdk-lib.aws_qbusiness": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.QBusiness"
            },
            "java": {
              "package": "software.amazon.awscdk.services.qbusiness"
            },
            "python": {
              "module": "aws_cdk.aws_qbusiness"
            }
          }
        },
        "aws-cdk-lib.aws_qldb": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.QLDB"
            },
            "java": {
              "package": "software.amazon.awscdk.services.qldb"
            },
            "python": {
              "module": "aws_cdk.aws_qldb"
            }
          }
        },
        "aws-cdk-lib.aws_quicksight": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.QuickSight"
            },
            "java": {
              "package": "software.amazon.awscdk.services.quicksight"
            },
            "python": {
              "module": "aws_cdk.aws_quicksight"
            }
          }
        },
        "aws-cdk-lib.aws_ram": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.RAM"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ram"
            },
            "python": {
              "module": "aws_cdk.aws_ram"
            }
          }
        },
        "aws-cdk-lib.aws_rds": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.RDS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.rds"
            },
            "python": {
              "module": "aws_cdk.aws_rds"
            }
          }
        },
        "aws-cdk-lib.aws_redshift": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Redshift"
            },
            "java": {
              "package": "software.amazon.awscdk.services.redshift"
            },
            "python": {
              "module": "aws_cdk.aws_redshift"
            }
          }
        },
        "aws-cdk-lib.aws_redshiftserverless": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.RedshiftServerless"
            },
            "java": {
              "package": "software.amazon.awscdk.services.redshiftserverless"
            },
            "python": {
              "module": "aws_cdk.aws_redshiftserverless"
            }
          }
        },
        "aws-cdk-lib.aws_refactorspaces": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.RefactorSpaces"
            },
            "java": {
              "package": "software.amazon.awscdk.services.refactorspaces"
            },
            "python": {
              "module": "aws_cdk.aws_refactorspaces"
            }
          }
        },
        "aws-cdk-lib.aws_rekognition": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Rekognition"
            },
            "java": {
              "package": "software.amazon.awscdk.services.rekognition"
            },
            "python": {
              "module": "aws_cdk.aws_rekognition"
            }
          }
        },
        "aws-cdk-lib.aws_resiliencehub": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ResilienceHub"
            },
            "java": {
              "package": "software.amazon.awscdk.services.resiliencehub"
            },
            "python": {
              "module": "aws_cdk.aws_resiliencehub"
            }
          }
        },
        "aws-cdk-lib.aws_resourceexplorer2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ResourceExplorer2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.resourceexplorer2"
            },
            "python": {
              "module": "aws_cdk.aws_resourceexplorer2"
            }
          }
        },
        "aws-cdk-lib.aws_resourcegroups": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ResourceGroups"
            },
            "java": {
              "package": "software.amazon.awscdk.services.resourcegroups"
            },
            "python": {
              "module": "aws_cdk.aws_resourcegroups"
            }
          }
        },
        "aws-cdk-lib.aws_robomaker": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.RoboMaker"
            },
            "java": {
              "package": "software.amazon.awscdk.services.robomaker"
            },
            "python": {
              "module": "aws_cdk.aws_robomaker"
            }
          }
        },
        "aws-cdk-lib.aws_rolesanywhere": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.RolesAnywhere"
            },
            "java": {
              "package": "software.amazon.awscdk.services.rolesanywhere"
            },
            "python": {
              "module": "aws_cdk.aws_rolesanywhere"
            }
          }
        },
        "aws-cdk-lib.aws_route53": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Route53"
            },
            "java": {
              "package": "software.amazon.awscdk.services.route53"
            },
            "python": {
              "module": "aws_cdk.aws_route53"
            }
          }
        },
        "aws-cdk-lib.aws_route53_patterns": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Route53.Patterns"
            },
            "java": {
              "package": "software.amazon.awscdk.services.route53.patterns"
            },
            "python": {
              "module": "aws_cdk.aws_route53_patterns"
            }
          }
        },
        "aws-cdk-lib.aws_route53_targets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Route53.Targets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.route53.targets"
            },
            "python": {
              "module": "aws_cdk.aws_route53_targets"
            }
          }
        },
        "aws-cdk-lib.aws_route53profiles": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.Route53Profiles"
            },
            "java": {
              "package": "software.amazon.awscdk.services.route53profiles"
            },
            "python": {
              "module": "aws_cdk.aws_route53profiles"
            }
          }
        },
        "aws-cdk-lib.aws_route53recoverycontrol": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Route53RecoveryControl"
            },
            "java": {
              "package": "software.amazon.awscdk.services.route53recoverycontrol"
            },
            "python": {
              "module": "aws_cdk.aws_route53recoverycontrol"
            }
          }
        },
        "aws-cdk-lib.aws_route53recoveryreadiness": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Route53RecoveryReadiness"
            },
            "java": {
              "package": "software.amazon.awscdk.services.route53recoveryreadiness"
            },
            "python": {
              "module": "aws_cdk.aws_route53recoveryreadiness"
            }
          }
        },
        "aws-cdk-lib.aws_route53resolver": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Route53Resolver"
            },
            "java": {
              "package": "software.amazon.awscdk.services.route53resolver"
            },
            "python": {
              "module": "aws_cdk.aws_route53resolver"
            }
          }
        },
        "aws-cdk-lib.aws_rum": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.RUM"
            },
            "java": {
              "package": "software.amazon.awscdk.services.rum"
            },
            "python": {
              "module": "aws_cdk.aws_rum"
            }
          }
        },
        "aws-cdk-lib.aws_s3": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.S3"
            },
            "java": {
              "package": "software.amazon.awscdk.services.s3"
            },
            "python": {
              "module": "aws_cdk.aws_s3"
            }
          }
        },
        "aws-cdk-lib.aws_s3_assets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.S3.Assets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.s3.assets"
            },
            "python": {
              "module": "aws_cdk.aws_s3_assets"
            }
          }
        },
        "aws-cdk-lib.aws_s3_deployment": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.S3.Deployment"
            },
            "java": {
              "package": "software.amazon.awscdk.services.s3.deployment"
            },
            "python": {
              "module": "aws_cdk.aws_s3_deployment"
            }
          }
        },
        "aws-cdk-lib.aws_s3_notifications": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.S3.Notifications"
            },
            "java": {
              "package": "software.amazon.awscdk.services.s3.notifications"
            },
            "python": {
              "module": "aws_cdk.aws_s3_notifications"
            }
          }
        },
        "aws-cdk-lib.aws_s3express": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.S3Express"
            },
            "java": {
              "package": "software.amazon.awscdk.services.s3express"
            },
            "python": {
              "module": "aws_cdk.aws_s3express"
            }
          }
        },
        "aws-cdk-lib.aws_s3objectlambda": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.S3ObjectLambda"
            },
            "java": {
              "package": "software.amazon.awscdk.services.s3objectlambda"
            },
            "python": {
              "module": "aws_cdk.aws_s3objectlambda"
            }
          }
        },
        "aws-cdk-lib.aws_s3outposts": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.S3Outposts"
            },
            "java": {
              "package": "software.amazon.awscdk.services.s3outposts"
            },
            "python": {
              "module": "aws_cdk.aws_s3outposts"
            }
          }
        },
        "aws-cdk-lib.aws_sagemaker": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Sagemaker"
            },
            "java": {
              "package": "software.amazon.awscdk.services.sagemaker"
            },
            "python": {
              "module": "aws_cdk.aws_sagemaker"
            }
          }
        },
        "aws-cdk-lib.aws_sam": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SAM"
            },
            "java": {
              "package": "software.amazon.awscdk.services.sam"
            },
            "python": {
              "module": "aws_cdk.aws_sam"
            }
          }
        },
        "aws-cdk-lib.aws_scheduler": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Scheduler"
            },
            "java": {
              "package": "software.amazon.awscdk.services.scheduler"
            },
            "python": {
              "module": "aws_cdk.aws_scheduler"
            }
          }
        },
        "aws-cdk-lib.aws_sdb": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SDB"
            },
            "java": {
              "package": "software.amazon.awscdk.services.sdb"
            },
            "python": {
              "module": "aws_cdk.aws_sdb"
            }
          }
        },
        "aws-cdk-lib.aws_secretsmanager": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SecretsManager"
            },
            "java": {
              "package": "software.amazon.awscdk.services.secretsmanager"
            },
            "python": {
              "module": "aws_cdk.aws_secretsmanager"
            }
          }
        },
        "aws-cdk-lib.aws_securityhub": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SecurityHub"
            },
            "java": {
              "package": "software.amazon.awscdk.services.securityhub"
            },
            "python": {
              "module": "aws_cdk.aws_securityhub"
            }
          }
        },
        "aws-cdk-lib.aws_securitylake": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.SecurityLake"
            },
            "java": {
              "package": "software.amazon.awscdk.services.securitylake"
            },
            "python": {
              "module": "aws_cdk.aws_securitylake"
            }
          }
        },
        "aws-cdk-lib.aws_servicecatalog": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Servicecatalog"
            },
            "java": {
              "package": "software.amazon.awscdk.services.servicecatalog"
            },
            "python": {
              "module": "aws_cdk.aws_servicecatalog"
            }
          }
        },
        "aws-cdk-lib.aws_servicecatalogappregistry": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Servicecatalogappregistry"
            },
            "java": {
              "package": "software.amazon.awscdk.services.servicecatalogappregistry"
            },
            "python": {
              "module": "aws_cdk.aws_servicecatalogappregistry"
            }
          }
        },
        "aws-cdk-lib.aws_servicediscovery": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ServiceDiscovery"
            },
            "java": {
              "package": "software.amazon.awscdk.services.servicediscovery"
            },
            "python": {
              "module": "aws_cdk.aws_servicediscovery"
            }
          }
        },
        "aws-cdk-lib.aws_ses": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SES"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ses"
            },
            "python": {
              "module": "aws_cdk.aws_ses"
            }
          }
        },
        "aws-cdk-lib.aws_ses_actions": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SES.Actions"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ses.actions"
            },
            "python": {
              "module": "aws_cdk.aws_ses_actions"
            }
          }
        },
        "aws-cdk-lib.aws_shield": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.Shield"
            },
            "java": {
              "package": "software.amazon.awscdk.services.shield"
            },
            "python": {
              "module": "aws_cdk.aws_shield"
            }
          }
        },
        "aws-cdk-lib.aws_signer": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Signer"
            },
            "java": {
              "package": "software.amazon.awscdk.services.signer"
            },
            "python": {
              "module": "aws_cdk.aws_signer"
            }
          }
        },
        "aws-cdk-lib.aws_simspaceweaver": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SimSpaceWeaver"
            },
            "java": {
              "package": "software.amazon.awscdk.services.simspaceweaver"
            },
            "python": {
              "module": "aws_cdk.aws_simspaceweaver"
            }
          }
        },
        "aws-cdk-lib.aws_sns": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SNS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.sns"
            },
            "python": {
              "module": "aws_cdk.aws_sns"
            }
          }
        },
        "aws-cdk-lib.aws_sns_subscriptions": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SNS.Subscriptions"
            },
            "java": {
              "package": "software.amazon.awscdk.services.sns.subscriptions"
            },
            "python": {
              "module": "aws_cdk.aws_sns_subscriptions"
            }
          }
        },
        "aws-cdk-lib.aws_sqs": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SQS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.sqs"
            },
            "python": {
              "module": "aws_cdk.aws_sqs"
            }
          }
        },
        "aws-cdk-lib.aws_ssm": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SSM"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ssm"
            },
            "python": {
              "module": "aws_cdk.aws_ssm"
            }
          }
        },
        "aws-cdk-lib.aws_ssmcontacts": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SSMContacts"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ssmcontacts"
            },
            "python": {
              "module": "aws_cdk.aws_ssmcontacts"
            }
          }
        },
        "aws-cdk-lib.aws_ssmincidents": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SSMIncidents"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ssmincidents"
            },
            "python": {
              "module": "aws_cdk.aws_ssmincidents"
            }
          }
        },
        "aws-cdk-lib.aws_ssmquicksetup": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.SSMQuickSetup"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ssmquicksetup"
            },
            "python": {
              "module": "aws_cdk.aws_ssmquicksetup"
            }
          }
        },
        "aws-cdk-lib.aws_sso": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SSO"
            },
            "java": {
              "package": "software.amazon.awscdk.services.sso"
            },
            "python": {
              "module": "aws_cdk.aws_sso"
            }
          }
        },
        "aws-cdk-lib.aws_stepfunctions": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.StepFunctions"
            },
            "java": {
              "package": "software.amazon.awscdk.services.stepfunctions"
            },
            "python": {
              "module": "aws_cdk.aws_stepfunctions"
            }
          }
        },
        "aws-cdk-lib.aws_stepfunctions_tasks": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.StepFunctions.Tasks"
            },
            "java": {
              "package": "software.amazon.awscdk.services.stepfunctions.tasks"
            },
            "python": {
              "module": "aws_cdk.aws_stepfunctions_tasks"
            }
          }
        },
        "aws-cdk-lib.aws_supportapp": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SupportApp"
            },
            "java": {
              "package": "software.amazon.awscdk.services.supportapp"
            },
            "python": {
              "module": "aws_cdk.aws_supportapp"
            }
          }
        },
        "aws-cdk-lib.aws_synthetics": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Synthetics"
            },
            "java": {
              "package": "software.amazon.awscdk.services.synthetics"
            },
            "python": {
              "module": "aws_cdk.aws_synthetics"
            }
          }
        },
        "aws-cdk-lib.aws_systemsmanagersap": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SystemsManagerSAP"
            },
            "java": {
              "package": "software.amazon.awscdk.services.systemsmanagersap"
            },
            "python": {
              "module": "aws_cdk.aws_systemsmanagersap"
            }
          }
        },
        "aws-cdk-lib.aws_timestream": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Timestream"
            },
            "java": {
              "package": "software.amazon.awscdk.services.timestream"
            },
            "python": {
              "module": "aws_cdk.aws_timestream"
            }
          }
        },
        "aws-cdk-lib.aws_transfer": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Transfer"
            },
            "java": {
              "package": "software.amazon.awscdk.services.transfer"
            },
            "python": {
              "module": "aws_cdk.aws_transfer"
            }
          }
        },
        "aws-cdk-lib.aws_verifiedpermissions": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.VerifiedPermissions"
            },
            "java": {
              "package": "software.amazon.awscdk.services.verifiedpermissions"
            },
            "python": {
              "module": "aws_cdk.aws_verifiedpermissions"
            }
          }
        },
        "aws-cdk-lib.aws_voiceid": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.VoiceID"
            },
            "java": {
              "package": "software.amazon.awscdk.services.voiceid"
            },
            "python": {
              "module": "aws_cdk.aws_voiceid"
            }
          }
        },
        "aws-cdk-lib.aws_vpclattice": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.VpcLattice"
            },
            "java": {
              "package": "software.amazon.awscdk.services.vpclattice"
            },
            "python": {
              "module": "aws_cdk.aws_vpclattice"
            }
          }
        },
        "aws-cdk-lib.aws_waf": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.WAF"
            },
            "java": {
              "package": "software.amazon.awscdk.services.waf"
            },
            "python": {
              "module": "aws_cdk.aws_waf"
            }
          }
        },
        "aws-cdk-lib.aws_wafregional": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.WAFRegional"
            },
            "java": {
              "package": "software.amazon.awscdk.services.waf.regional"
            },
            "python": {
              "module": "aws_cdk.aws_wafregional"
            }
          }
        },
        "aws-cdk-lib.aws_wafv2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.WAFv2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.wafv2"
            },
            "python": {
              "module": "aws_cdk.aws_wafv2"
            }
          }
        },
        "aws-cdk-lib.aws_wisdom": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Wisdom"
            },
            "java": {
              "package": "software.amazon.awscdk.services.wisdom"
            },
            "python": {
              "module": "aws_cdk.aws_wisdom"
            }
          }
        },
        "aws-cdk-lib.aws_workspaces": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.WorkSpaces"
            },
            "java": {
              "package": "software.amazon.awscdk.services.workspaces"
            },
            "python": {
              "module": "aws_cdk.aws_workspaces"
            }
          }
        },
        "aws-cdk-lib.aws_workspacesthinclient": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.WorkSpacesThinClient"
            },
            "java": {
              "package": "software.amazon.awscdk.services.workspacesthinclient"
            },
            "python": {
              "module": "aws_cdk.aws_workspacesthinclient"
            }
          }
        },
        "aws-cdk-lib.aws_workspacesweb": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.WorkSpacesWeb"
            },
            "java": {
              "package": "software.amazon.awscdk.services.workspacesweb"
            },
            "python": {
              "module": "aws_cdk.aws_workspacesweb"
            }
          }
        },
        "aws-cdk-lib.aws_xray": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.XRay"
            },
            "java": {
              "package": "software.amazon.awscdk.services.xray"
            },
            "python": {
              "module": "aws_cdk.aws_xray"
            }
          }
        },
        "aws-cdk-lib.cloud_assembly_schema": {},
        "aws-cdk-lib.cloudformation_include": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.CloudFormation.Include"
            },
            "java": {
              "package": "software.amazon.awscdk.cloudformation.include"
            },
            "python": {
              "module": "aws_cdk.cloudformation_include"
            }
          }
        },
        "aws-cdk-lib.custom_resources": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.CustomResources"
            },
            "java": {
              "package": "software.amazon.awscdk.customresources"
            },
            "python": {
              "module": "aws_cdk.custom_resources"
            }
          }
        },
        "aws-cdk-lib.cx_api": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.CXAPI"
            },
            "java": {
              "package": "software.amazon.awscdk.cxapi"
            },
            "python": {
              "module": "aws_cdk.cx_api"
            }
          }
        },
        "aws-cdk-lib.lambda_layer_awscli": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.LambdaLayer.AwsCli"
            },
            "java": {
              "package": "software.amazon.awscdk.lambdalayer.awscli"
            },
            "python": {
              "module": "aws_cdk.lambda_layer_awscli"
            }
          }
        },
        "aws-cdk-lib.lambda_layer_kubectl": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.LambdaLayer.Kubectl"
            },
            "java": {
              "package": "software.amazon.awscdk.lambdalayer.kubectl"
            },
            "python": {
              "module": "aws_cdk.lambda_layer_kubectl"
            }
          }
        },
        "aws-cdk-lib.lambda_layer_node_proxy_agent": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.LambdaLayer.NodeProxyAgent"
            },
            "java": {
              "package": "software.amazon.awscdk.lambda.layer.node.proxy.agent"
            },
            "python": {
              "module": "aws_cdk.lambda_layer_node_proxy_agent"
            }
          }
        },
        "aws-cdk-lib.pipelines": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.Pipelines"
            },
            "java": {
              "package": "software.amazon.awscdk.pipelines"
            },
            "python": {
              "module": "aws_cdk.pipelines"
            }
          }
        },
        "aws-cdk-lib.region_info": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.RegionInfo"
            },
            "java": {
              "package": "software.amazon.awscdk.regioninfo"
            },
            "python": {
              "module": "aws_cdk.region_info"
            }
          }
        },
        "aws-cdk-lib.triggers": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.Triggers"
            },
            "java": {
              "package": "software.amazon.awscdk.triggers"
            },
            "python": {
              "module": "aws_cdk.triggers"
            }
          }
        }
      },
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK.Lib"
        },
        "go": {
          "moduleName": "github.com/aws/aws-cdk-go",
          "packageName": "awscdk"
        },
        "java": {
          "maven": {
            "artifactId": "aws-cdk-lib",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk"
        },
        "js": {
          "npm": "aws-cdk-lib"
        },
        "python": {
          "distName": "aws-cdk-lib",
          "module": "aws_cdk"
        }
      }
    },
    "constructs": {
      "targets": {
        "dotnet": {
          "namespace": "Constructs",
          "packageId": "Constructs"
        },
        "go": {
          "moduleName": "github.com/aws/constructs-go"
        },
        "java": {
          "maven": {
            "artifactId": "constructs",
            "groupId": "software.constructs"
          },
          "package": "software.constructs"
        },
        "js": {
          "npm": "constructs"
        },
        "python": {
          "distName": "constructs",
          "module": "constructs"
        }
      }
    }
  },
  "description": "The CDK Construct Library for AWS::Cognito Identity Pools",
  "docs": {
    "stability": "experimental"
  },
  "homepage": "https://github.com/aws/aws-cdk",
  "jsiiVersion": "5.4.35 (build 032e483)",
  "keywords": [
    "aws",
    "cdk",
    "constructs",
    "cognito",
    "identitypool"
  ],
  "license": "Apache-2.0",
  "metadata": {
    "jsii": {
      "compiledWithDeprecationWarnings": true,
      "pacmak": {
        "hasDefaultInterfaces": true
      },
      "rosetta": {
        "strict": true
      }
    }
  },
  "name": "@aws-cdk/aws-cognito-identitypool-alpha",
  "readme": {
    "markdown": "# Amazon Cognito Identity Pool Construct Library\n\n> **Identity Pools are in a separate module while the API is being stabilized. Once we stabilize the module, they will**\n**be included into the stable [aws-cognito](../aws-cognito) library. Please provide feedback on this experience by**\n**creating an [issue here](https://github.com/aws/aws-cdk/issues/new/choose)**\n\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cdk-constructs: Experimental](https://img.shields.io/badge/cdk--constructs-experimental-important.svg?style=for-the-badge)\n\n> The APIs of higher level constructs in this module are experimental and under active development.\n> They are subject to non-backward compatible changes or removal in any future version. These are\n> not subject to the [Semantic Versioning](https://semver.org/) model and breaking changes will be\n> announced in the release notes. This means that while you may use them, you may need to update\n> your source code when upgrading to a newer version of this package.\n\n---\n\n<!--END STABILITY BANNER-->\n\n[Amazon Cognito Identity Pools](https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-identity.html) enable you to grant your users access to other AWS services.\n\nIdentity Pools are one of the two main components of [Amazon Cognito](https://docs.aws.amazon.com/cognito/latest/developerguide/what-is-amazon-cognito.html), which provides authentication, authorization, and\nuser management for your web and mobile apps. Your users can sign in through a a trusted identity provider, like a user\npool or a SAML 2.0 service, as well as with third party providers such as Facebook, Amazon, Google or Apple.\n\nThe other main component in Amazon Cognito is [user pools](https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools.html). User Pools are user directories that provide sign-up and\nsign-in options for your app users.\n\nThis module is part of the [AWS Cloud Development Kit](https://github.com/aws/aws-cdk) project.\n\n```ts nofixture\nimport { IdentityPool, UserPoolAuthenticationProvider } from '@aws-cdk/aws-cognito-identitypool-alpha';\n```\n\n## Table of Contents\n\n- [Identity Pools](#identity-pools)\n  - [Authenticated and Unauthenticated Identities](#authenticated-and-unauthenticated-identities)\n  - [Authentication Providers](#authentication-providers)\n    - [User Pool Authentication Provider](#user-pool-authentication-provider)\n    - [Server Side Token Check](#server-side-token-check)\n    - [Associating an External Provider Directly](#associating-an-external-provider-directly)\n    - [OpenIdConnect and Saml](#openid-connect-and-saml)\n    - [Custom Providers](#custom-providers)\n  - [Role Mapping](#role-mapping)\n    - [Provider Urls](#provider-urls)\n  - [Authentication Flow](#authentication-flow)\n  - [Cognito Sync](#cognito-sync)\n  - [Importing Identity Pools](#importing-identity-pools)\n\n## Identity Pools\n\nIdentity pools provide temporary AWS credentials for users who are guests (unauthenticated) and for users who have\nauthenticated by presenting a token from another identity provider. An identity pool is a store of user identity data\nspecific to an account.\n\nIdentity pools can be used in conjunction with Cognito User Pools or by accessing external federated identity providers\ndirectly. Learn more at [Amazon Cognito Identity Pools](https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-identity.html).\n\n### Authenticated and Unauthenticated Identities\n\nIdentity pools define two types of identities: authenticated(`user`) and unauthenticated (`guest`). Every identity in\nan identity pool is either authenticated or unauthenticated. Each identity pool has a default role for authenticated\nidentities, and a default role for unauthenticated identities. Absent other overriding rules (see below), these are the\nroles that will be assumed by the corresponding users in the authentication process.\n\nA basic Identity Pool with minimal configuration has no required props, with default authenticated (user) and\nunauthenticated (guest) roles applied to the identity pool:\n\n```ts\nnew IdentityPool(this, 'myIdentityPool');\n```\n\nBy default, both the authenticated and unauthenticated roles will have no permissions attached. Grant permissions\nto roles using the public `authenticatedRole` and `unauthenticatedRole` properties:\n\n```ts\nimport * as dynamodb from 'aws-cdk-lib/aws-dynamodb';\n\nconst identityPool = new IdentityPool(this, 'myIdentityPool');\ndeclare const table: dynamodb.Table;\n\n// Grant permissions to authenticated users\ntable.grantReadWriteData(identityPool.authenticatedRole);\n// Grant permissions to unauthenticated guest users\ntable.grantReadData(identityPool.unauthenticatedRole);\n\n//Or add policy statements straight to the role\nidentityPool.authenticatedRole.addToPrincipalPolicy(new iam.PolicyStatement({\n  effect: iam.Effect.ALLOW,\n  actions: ['dynamodb:*'],\n  resources: ['*'],\n}));\n```\n\nThe default roles can also be supplied in `IdentityPoolProps`:\n\n```ts\nconst stack = new Stack();\nconst authenticatedRole = new iam.Role(this, 'authRole', {\n  assumedBy: new iam.ServicePrincipal('service.amazonaws.com'),\n});\nconst unauthenticatedRole = new iam.Role(this, 'unauthRole', {\n  assumedBy: new iam.ServicePrincipal('service.amazonaws.com'),\n});\nconst identityPool = new IdentityPool(this, 'TestIdentityPoolActions', {\n  authenticatedRole,\n  unauthenticatedRole,\n});\n```\n\n### Authentication Providers\n\nAuthenticated identities belong to users who are authenticated by a public login provider (Amazon Cognito user pools,\nLogin with Amazon, Sign in with Apple, Facebook, Google, SAML, or any OpenID Connect Providers) or a developer provider\n(your own backend authentication process).\n\n[Authentication providers](https://docs.aws.amazon.com/cognito/latest/developerguide/external-identity-providers.html) can be associated with an Identity Pool by first associating them with a Cognito User Pool or by\nassociating the provider directly with the identity pool.\n\n#### User Pool Authentication Provider\n\nIn order to attach a user pool to an identity pool as an authentication provider, the identity pool needs properties\nfrom both the user pool and the user pool client. For this reason identity pools use a `UserPoolAuthenticationProvider`\nto gather the necessary properties from the user pool constructs.\n\n```ts\nconst userPool = new cognito.UserPool(this, 'Pool');\n\nnew IdentityPool(this, 'myidentitypool', {\n  identityPoolName: 'myidentitypool',\n  authenticationProviders: {\n    userPools: [new UserPoolAuthenticationProvider({ userPool })],\n  },\n});\n```\n\nUser pools can also be associated with an identity pool after instantiation. The Identity Pool's `addUserPoolAuthentication` method\nreturns the User Pool Client that has been created:\n\n```ts\ndeclare const identityPool: IdentityPool;\nconst userPool = new cognito.UserPool(this, 'Pool');\nconst userPoolClient = identityPool.addUserPoolAuthentication(new UserPoolAuthenticationProvider({\n  userPool,\n}));\n```\n\n#### Server Side Token Check\n\nWith the `IdentityPool` CDK Construct, by default the pool is configured to check with the integrated user pools to\nmake sure that the user has not been globally signed out or deleted before the identity pool provides an OIDC token or\nAWS credentials for the user.\n\nIf the user is signed out or deleted, the identity pool will return a 400 Not Authorized error. This setting can be\ndisabled, however, in several ways.\n\nSetting `disableServerSideTokenCheck` to true will change the default behavior to no server side token check. Learn\nmore [here](https://docs.aws.amazon.com/cognitoidentity/latest/APIReference/API_CognitoIdentityProvider.html#CognitoIdentity-Type-CognitoIdentityProvider-ServerSideTokenCheck):\n\n```ts\ndeclare const identityPool: IdentityPool;\nconst userPool = new cognito.UserPool(this, 'Pool');\nidentityPool.addUserPoolAuthentication(new UserPoolAuthenticationProvider({\n  userPool,\n  disableServerSideTokenCheck: true,\n}));\n```\n\n#### Associating an External Provider Directly\n\nOne or more [external identity providers](https://docs.aws.amazon.com/cognito/latest/developerguide/external-identity-providers.html) can be associated with an identity pool directly using\n`authenticationProviders`:\n\n```ts\nnew IdentityPool(this, 'myidentitypool', {\n  identityPoolName: 'myidentitypool',\n  authenticationProviders: {\n    amazon: {\n      appId: 'amzn1.application.12312k3j234j13rjiwuenf',\n    },\n    facebook: {\n      appId: '1234567890123',\n    },\n    google: {\n      clientId: '12345678012.apps.googleusercontent.com',\n    },\n    apple: {\n      servicesId: 'com.myappleapp.auth',\n    },\n    twitter: {\n      consumerKey: 'my-twitter-id',\n      consumerSecret: 'my-twitter-secret',\n    },\n  },\n});\n```\n\nTo associate more than one provider of the same type with the identity pool, use User\nPools, OpenIdConnect, or SAML. Only one provider per external service can be attached directly to the identity pool.\n\n#### OpenId Connect and Saml\n\n[OpenID Connect](https://docs.aws.amazon.com/cognito/latest/developerguide/open-id.html) is an open standard for\nauthentication that is supported by a number of login providers. Amazon Cognito supports linking of identities with\nOpenID Connect providers that are configured through [AWS Identity and Access Management](http://aws.amazon.com/iam/).\n\nAn identity provider that supports [Security Assertion Markup Language 2.0 (SAML 2.0)](https://docs.aws.amazon.com/cognito/latest/developerguide/saml-identity-provider.html) can be used to provide a simple\nonboarding flow for users. The SAML-supporting identity provider specifies the IAM roles that can be assumed by users\nso that different users can be granted different sets of permissions. Associating an OpenId Connect or Saml provider\nwith an identity pool:\n\n```ts\ndeclare const openIdConnectProvider: iam.OpenIdConnectProvider;\ndeclare const samlProvider: iam.SamlProvider;\n\nnew IdentityPool(this, 'myidentitypool', {\n  identityPoolName: 'myidentitypool',\n  authenticationProviders: {\n    openIdConnectProviders: [openIdConnectProvider],\n    samlProviders: [samlProvider],\n  },\n});\n```\n\n#### Custom Providers\n\nThe identity pool's behavior can be customized further using custom [developer authenticated identities](https://docs.aws.amazon.com/cognito/latest/developerguide/developer-authenticated-identities.html).\nWith developer authenticated identities, users can be registered and authenticated via an existing authentication\nprocess while still using Amazon Cognito to synchronize user data and access AWS resources.\n\nLike the supported external providers, though, only one custom provider can be directly associated with the identity\npool.\n\n```ts\ndeclare const openIdConnectProvider: iam.OpenIdConnectProvider;\nnew IdentityPool(this, 'myidentitypool', {\n  identityPoolName: 'myidentitypool',\n  authenticationProviders: {\n    google: {\n      clientId: '12345678012.apps.googleusercontent.com',\n    },\n    openIdConnectProviders: [openIdConnectProvider],\n    customProvider: 'my-custom-provider.example.com',\n  },\n});\n```\n\n### Role Mapping\n\nIn addition to setting default roles for authenticated and unauthenticated users, identity pools can also be used to\ndefine rules to choose the role for each user based on claims in the user's ID token by using Role Mapping. When using\nrole mapping, it's important to be aware of some of the permissions the role will need. An in depth\nreview of roles and role mapping can be found [here](https://docs.aws.amazon.com/cognito/latest/developerguide/role-based-access-control.html).\n\nUsing a [token-based approach](https://docs.aws.amazon.com/cognito/latest/developerguide/role-based-access-control.html#using-tokens-to-assign-roles-to-users) to role mapping will allow mapped roles to be passed through the `cognito:roles` or\n`cognito:preferred_role` claims from the identity provider:\n\n```ts\nimport { IdentityPoolProviderUrl } from '@aws-cdk/aws-cognito-identitypool-alpha';\n\nnew IdentityPool(this, 'myidentitypool', {\n  identityPoolName: 'myidentitypool',\n  roleMappings: [{\n    providerUrl: IdentityPoolProviderUrl.AMAZON,\n    useToken: true,\n  }],\n});\n```\n\nUsing a rule-based approach to role mapping allows roles to be assigned based on custom claims passed from the identity provider:\n\n```ts\nimport { IdentityPoolProviderUrl, RoleMappingMatchType } from '@aws-cdk/aws-cognito-identitypool-alpha';\n\ndeclare const adminRole: iam.Role;\ndeclare const nonAdminRole: iam.Role;\nnew IdentityPool(this, 'myidentitypool', {\n  identityPoolName: 'myidentitypool',\n  // Assign specific roles to users based on whether or not the custom admin claim is passed from the identity provider\n  roleMappings: [{\n    providerUrl: IdentityPoolProviderUrl.AMAZON,\n    rules: [\n      {\n        claim: 'custom:admin',\n        claimValue: 'admin',\n        mappedRole: adminRole,\n      },\n      {\n        claim: 'custom:admin',\n        claimValue: 'admin',\n        matchType: RoleMappingMatchType.NOTEQUAL,\n        mappedRole: nonAdminRole,\n      }\n    ],\n  }],\n});\n```\n\nRole mappings can also be added after instantiation with the Identity Pool's `addRoleMappings` method:\n\n```ts\nimport { IdentityPoolRoleMapping } from '@aws-cdk/aws-cognito-identitypool-alpha';\n\ndeclare const identityPool: IdentityPool;\ndeclare const myAddedRoleMapping1: IdentityPoolRoleMapping;\ndeclare const myAddedRoleMapping2: IdentityPoolRoleMapping;\ndeclare const myAddedRoleMapping3: IdentityPoolRoleMapping;\n\nidentityPool.addRoleMappings(myAddedRoleMapping1, myAddedRoleMapping2, myAddedRoleMapping3);\n```\n\n#### Provider Urls\n\nRole mappings must be associated with the url of an Identity Provider which can be supplied\n`IdentityPoolProviderUrl`. Supported Providers have static Urls that can be used:\n\n```ts\nimport { IdentityPoolProviderUrl } from '@aws-cdk/aws-cognito-identitypool-alpha';\n\nnew IdentityPool(this, 'myidentitypool', {\n  identityPoolName: 'myidentitypool',\n  roleMappings: [{\n    providerUrl: IdentityPoolProviderUrl.FACEBOOK,\n    useToken: true,\n  }],\n});\n```\n\nFor identity providers that don't have static Urls, a custom Url can be supplied:\n\n```ts\nimport { IdentityPoolProviderUrl } from '@aws-cdk/aws-cognito-identitypool-alpha';\n\nnew IdentityPool(this, 'myidentitypool', {\n  identityPoolName: 'myidentitypool',\n  roleMappings: [\n    {\n      providerUrl: IdentityPoolProviderUrl.custom('my-custom-provider.com'),\n      useToken: true,\n    },\n  ],\n});\n```\n\nIf a provider URL is a CDK Token, as it will be if you are trying to use a previously defined Cognito User Pool, you will need to also provide a mappingKey.\nThis is because by default, the key in the Cloudformation role mapping hash is the providerUrl, and Cloudformation map keys must be concrete strings, they\ncannot be references. For example:\n\n```ts\nimport { UserPool, UserPoolClient } from 'aws-cdk-lib/aws-cognito';\nimport { IdentityPoolProviderUrl } from '@aws-cdk/aws-cognito-identitypool-alpha';\n\ndeclare const userPool: UserPool;\ndeclare const userPoolClient: UserPoolClient;\nnew IdentityPool(this, 'myidentitypool', {\n  identityPoolName: 'myidentitypool',\n  roleMappings: [{\n    mappingKey: 'cognito',\n    providerUrl: IdentityPoolProviderUrl.userPool(userPool, userPoolClient),\n    useToken: true,\n  }],\n});\n```\n\nSee [here](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-identitypoolroleattachment-rolemapping.html#cfn-cognito-identitypoolroleattachment-rolemapping-identityprovider) for more information.\n\n### Authentication Flow\n\nIdentity Pool [Authentication Flow](https://docs.aws.amazon.com/cognito/latest/developerguide/authentication-flow.html) defaults to the enhanced, simplified flow. The Classic (basic) Authentication Flow\ncan also be implemented using `allowClassicFlow`:\n\n```ts\nnew IdentityPool(this, 'myidentitypool', {\n  identityPoolName: 'myidentitypool',\n  allowClassicFlow: true,\n});\n```\n\n### Cognito Sync\n\nIt's now recommended to integrate [AWS AppSync](https://aws.amazon.com/appsync/) for synchronizing app data across devices, so\nCognito Sync features like `PushSync`, `CognitoEvents`, and `CognitoStreams` are not a part of `IdentityPool`. More\ninformation can be found [here](https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-sync.html).\n\n### Importing Identity Pools\n\nYou can import existing identity pools into your stack using Identity Pool static methods with the Identity Pool Id or\nArn:\n\n```ts\nIdentityPool.fromIdentityPoolId(this, 'my-imported-identity-pool',\n  'us-east-1:dj2823ryiwuhef937');\nIdentityPool.fromIdentityPoolArn(this, 'my-imported-identity-pool',\n  'arn:aws:cognito-identity:us-east-1:123456789012:identitypool/us-east-1:dj2823ryiwuhef937');\n```\n"
  },
  "repository": {
    "directory": "packages/@aws-cdk/aws-cognito-identitypool-alpha",
    "type": "git",
    "url": "https://github.com/aws/aws-cdk.git"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "dotnet": {
      "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
      "namespace": "Amazon.CDK.AWS.Cognito.IdentityPool.Alpha",
      "packageId": "Amazon.CDK.AWS.Cognito.IdentityPool.Alpha"
    },
    "go": {
      "moduleName": "github.com/aws/aws-cdk-go",
      "packageName": "awscdkcognitoidentitypoolalpha"
    },
    "java": {
      "maven": {
        "artifactId": "cognito-identitypool-alpha",
        "groupId": "software.amazon.awscdk"
      },
      "package": "software.amazon.awscdk.services.cognito.identitypool.alpha"
    },
    "js": {
      "npm": "@aws-cdk/aws-cognito-identitypool-alpha"
    },
    "python": {
      "classifiers": [
        "Framework :: AWS CDK",
        "Framework :: AWS CDK :: 2"
      ],
      "distName": "aws-cdk.aws-cognito-identitypool-alpha",
      "module": "aws_cdk.aws_cognito_identitypool_alpha"
    }
  },
  "types": {
    "@aws-cdk/aws-cognito-identitypool-alpha.IIdentityPool": {
      "assembly": "@aws-cdk/aws-cognito-identitypool-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "Represents a Cognito Identity Pool."
      },
      "fqn": "@aws-cdk/aws-cognito-identitypool-alpha.IIdentityPool",
      "interfaces": [
        "aws-cdk-lib.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/identitypool.ts",
        "line": 11
      },
      "name": "IIdentityPool",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The ARN of the Identity Pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/identitypool.ts",
            "line": 22
          },
          "name": "identityPoolArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The ID of the Identity Pool in the format REGION:GUID."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/identitypool.ts",
            "line": 16
          },
          "name": "identityPoolId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "Name of the Identity Pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/identitypool.ts",
            "line": 28
          },
          "name": "identityPoolName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/identitypool:IIdentityPool"
    },
    "@aws-cdk/aws-cognito-identitypool-alpha.IIdentityPoolRoleAttachment": {
      "assembly": "@aws-cdk/aws-cognito-identitypool-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "Represents an Identity Pool Role Attachment."
      },
      "fqn": "@aws-cdk/aws-cognito-identitypool-alpha.IIdentityPoolRoleAttachment",
      "interfaces": [
        "aws-cdk-lib.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/identitypool-role-attachment.ts",
        "line": 10
      },
      "name": "IIdentityPoolRoleAttachment",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "ID of the Attachment's underlying Identity Pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/identitypool-role-attachment.ts",
            "line": 14
          },
          "name": "identityPoolId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/identitypool-role-attachment:IIdentityPoolRoleAttachment"
    },
    "@aws-cdk/aws-cognito-identitypool-alpha.IUserPoolAuthenticationProvider": {
      "assembly": "@aws-cdk/aws-cognito-identitypool-alpha",
      "docs": {
        "remarks": "You use user pool authentication providers to configure User Pools\nand User Pool Clients for use with Identity Pools",
        "stability": "experimental",
        "summary": "Represents the concept of a User Pool Authentication Provider."
      },
      "fqn": "@aws-cdk/aws-cognito-identitypool-alpha.IUserPoolAuthenticationProvider",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/identitypool-user-pool-authentication-provider.ts",
        "line": 16
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The method called when a given User Pool Authentication Provider is added (for the first time) to an Identity Pool."
          },
          "locationInModule": {
            "filename": "lib/identitypool-user-pool-authentication-provider.ts",
            "line": 21
          },
          "name": "bind",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "identityPool",
              "type": {
                "fqn": "@aws-cdk/aws-cognito-identitypool-alpha.IIdentityPool"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cognito-identitypool-alpha.UserPoolAuthenticationProviderBindOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cognito-identitypool-alpha.UserPoolAuthenticationProviderBindConfig"
            }
          }
        }
      ],
      "name": "IUserPoolAuthenticationProvider",
      "symbolId": "lib/identitypool-user-pool-authentication-provider:IUserPoolAuthenticationProvider"
    },
    "@aws-cdk/aws-cognito-identitypool-alpha.IdentityPool": {
      "assembly": "@aws-cdk/aws-cognito-identitypool-alpha",
      "base": "aws-cdk-lib.Resource",
      "docs": {
        "custom": {
          "resource": "AWS::Cognito::IdentityPool",
          "exampleMetadata": "infused"
        },
        "stability": "experimental",
        "summary": "Define a Cognito Identity Pool.",
        "example": "declare const openIdConnectProvider: iam.OpenIdConnectProvider;\nnew IdentityPool(this, 'myidentitypool', {\n  identityPoolName: 'myidentitypool',\n  authenticationProviders: {\n    google: {\n      clientId: '12345678012.apps.googleusercontent.com',\n    },\n    openIdConnectProviders: [openIdConnectProvider],\n    customProvider: 'my-custom-provider.example.com',\n  },\n});"
      },
      "fqn": "@aws-cdk/aws-cognito-identitypool-alpha.IdentityPool",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/identitypool.ts",
          "line": 361
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-cognito-identitypool-alpha.IdentityPoolProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-cognito-identitypool-alpha.IIdentityPool"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/identitypool.ts",
        "line": 275
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Import an existing Identity Pool from its ARN."
          },
          "locationInModule": {
            "filename": "lib/identitypool.ts",
            "line": 293
          },
          "name": "fromIdentityPoolArn",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "identityPoolArn",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cognito-identitypool-alpha.IIdentityPool"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Import an existing Identity Pool from its ID."
          },
          "locationInModule": {
            "filename": "lib/identitypool.ts",
            "line": 279
          },
          "name": "fromIdentityPoolId",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "identityPoolId",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cognito-identitypool-alpha.IIdentityPool"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Add Role Mappings to the Identity Pool."
          },
          "locationInModule": {
            "filename": "lib/identitypool.ts",
            "line": 426
          },
          "name": "addRoleMappings",
          "parameters": [
            {
              "name": "roleMappings",
              "type": {
                "fqn": "@aws-cdk/aws-cognito-identitypool-alpha.IdentityPoolRoleMapping"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Add a User Pool to the Identity Pool and configure the User Pool client to handle identities."
          },
          "locationInModule": {
            "filename": "lib/identitypool.ts",
            "line": 418
          },
          "name": "addUserPoolAuthentication",
          "parameters": [
            {
              "name": "userPool",
              "type": {
                "fqn": "@aws-cdk/aws-cognito-identitypool-alpha.IUserPoolAuthenticationProvider"
              }
            }
          ]
        }
      ],
      "name": "IdentityPool",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Default Role for authenticated users."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/identitypool.ts",
            "line": 344
          },
          "name": "authenticatedRole",
          "type": {
            "fqn": "aws-cdk-lib.aws_iam.IRole"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The ARN of the Identity Pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/identitypool.ts",
            "line": 333
          },
          "name": "identityPoolArn",
          "overrides": "@aws-cdk/aws-cognito-identitypool-alpha.IIdentityPool",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The ID of the Identity Pool in the format REGION:GUID."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/identitypool.ts",
            "line": 327
          },
          "name": "identityPoolId",
          "overrides": "@aws-cdk/aws-cognito-identitypool-alpha.IIdentityPool",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The name of the Identity Pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/identitypool.ts",
            "line": 339
          },
          "name": "identityPoolName",
          "overrides": "@aws-cdk/aws-cognito-identitypool-alpha.IIdentityPool",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Default Role for unauthenticated users."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/identitypool.ts",
            "line": 349
          },
          "name": "unauthenticatedRole",
          "type": {
            "fqn": "aws-cdk-lib.aws_iam.IRole"
          }
        }
      ],
      "symbolId": "lib/identitypool:IdentityPool"
    },
    "@aws-cdk/aws-cognito-identitypool-alpha.IdentityPoolAmazonLoginProvider": {
      "assembly": "@aws-cdk/aws-cognito-identitypool-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Login Provider for identity federation using Amazon credentials.",
        "example": "new IdentityPool(this, 'myidentitypool', {\n  identityPoolName: 'myidentitypool',\n  authenticationProviders: {\n    amazon: {\n      appId: 'amzn1.application.12312k3j234j13rjiwuenf',\n    },\n    facebook: {\n      appId: '1234567890123',\n    },\n    google: {\n      clientId: '12345678012.apps.googleusercontent.com',\n    },\n    apple: {\n      servicesId: 'com.myappleapp.auth',\n    },\n    twitter: {\n      consumerKey: 'my-twitter-id',\n      consumerSecret: 'my-twitter-secret',\n    },\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cognito-identitypool-alpha.IdentityPoolAmazonLoginProvider",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/identitypool.ts",
        "line": 158
      },
      "name": "IdentityPoolAmazonLoginProvider",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "App ID for Amazon identity federation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/identitypool.ts",
            "line": 162
          },
          "name": "appId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/identitypool:IdentityPoolAmazonLoginProvider"
    },
    "@aws-cdk/aws-cognito-identitypool-alpha.IdentityPoolAppleLoginProvider": {
      "assembly": "@aws-cdk/aws-cognito-identitypool-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Login Provider for identity federation using Apple credentials.",
        "example": "new IdentityPool(this, 'myidentitypool', {\n  identityPoolName: 'myidentitypool',\n  authenticationProviders: {\n    amazon: {\n      appId: 'amzn1.application.12312k3j234j13rjiwuenf',\n    },\n    facebook: {\n      appId: '1234567890123',\n    },\n    google: {\n      clientId: '12345678012.apps.googleusercontent.com',\n    },\n    apple: {\n      servicesId: 'com.myappleapp.auth',\n    },\n    twitter: {\n      consumerKey: 'my-twitter-id',\n      consumerSecret: 'my-twitter-secret',\n    },\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cognito-identitypool-alpha.IdentityPoolAppleLoginProvider",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/identitypool.ts",
        "line": 178
      },
      "name": "IdentityPoolAppleLoginProvider",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Services ID for Apple identity federation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/identitypool.ts",
            "line": 182
          },
          "name": "servicesId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/identitypool:IdentityPoolAppleLoginProvider"
    },
    "@aws-cdk/aws-cognito-identitypool-alpha.IdentityPoolAuthenticationProviders": {
      "assembly": "@aws-cdk/aws-cognito-identitypool-alpha",
      "datatype": true,
      "docs": {
        "see": "https://docs.aws.amazon.com/cognito/latest/developerguide/external-identity-providers.html",
        "stability": "experimental",
        "summary": "External Authentication Providers for usage in Identity Pool.",
        "example": "declare const openIdConnectProvider: iam.OpenIdConnectProvider;\nnew IdentityPool(this, 'myidentitypool', {\n  identityPoolName: 'myidentitypool',\n  authenticationProviders: {\n    google: {\n      clientId: '12345678012.apps.googleusercontent.com',\n    },\n    openIdConnectProviders: [openIdConnectProvider],\n    customProvider: 'my-custom-provider.example.com',\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cognito-identitypool-alpha.IdentityPoolAuthenticationProviders",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/identitypool.ts",
        "line": 214
      },
      "name": "IdentityPoolAuthenticationProviders",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "-  No Amazon Authentication Provider used without OpenIdConnect or a User Pool",
            "stability": "experimental",
            "summary": "The Amazon Authentication Provider associated with this Identity Pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/identitypool.ts",
            "line": 231
          },
          "name": "amazon",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito-identitypool-alpha.IdentityPoolAmazonLoginProvider"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No Apple Authentication Provider used without OpenIdConnect or a User Pool",
            "stability": "experimental",
            "summary": "The Apple Authentication Provider associated with this Identity Pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/identitypool.ts",
            "line": 237
          },
          "name": "apple",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito-identitypool-alpha.IdentityPoolAppleLoginProvider"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no custom provider",
            "stability": "experimental",
            "summary": "The developer provider name to associate with this Identity Pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/identitypool.ts",
            "line": 267
          },
          "name": "customProvider",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No Facebook Authentication Provider used without OpenIdConnect or a User Pool",
            "stability": "experimental",
            "summary": "The Facebook Authentication Provider associated with this Identity Pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/identitypool.ts",
            "line": 219
          },
          "name": "facebook",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito-identitypool-alpha.IdentityPoolFacebookLoginProvider"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No Google Authentication Provider used without OpenIdConnect or a User Pool",
            "stability": "experimental",
            "summary": "The Google Authentication Provider associated with this Identity Pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/identitypool.ts",
            "line": 225
          },
          "name": "google",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito-identitypool-alpha.IdentityPoolGoogleLoginProvider"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no OpenIdConnectProvider",
            "stability": "experimental",
            "summary": "The OpenIdConnect Provider associated with this Identity Pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/identitypool.ts",
            "line": 255
          },
          "name": "openIdConnectProviders",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "aws-cdk-lib.aws_iam.IOpenIdConnectProvider"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no SamlProvider",
            "stability": "experimental",
            "summary": "The Security Assertion Markup Language provider associated with this Identity Pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/identitypool.ts",
            "line": 261
          },
          "name": "samlProviders",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "aws-cdk-lib.aws_iam.ISamlProvider"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No Twitter Authentication Provider used without OpenIdConnect or a User Pool",
            "stability": "experimental",
            "summary": "The Twitter Authentication Provider associated with this Identity Pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/identitypool.ts",
            "line": 243
          },
          "name": "twitter",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito-identitypool-alpha.IdentityPoolTwitterLoginProvider"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no User Pools associated",
            "stability": "experimental",
            "summary": "The User Pool Authentication Providers associated with this Identity Pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/identitypool.ts",
            "line": 249
          },
          "name": "userPools",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-cognito-identitypool-alpha.IUserPoolAuthenticationProvider"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/identitypool:IdentityPoolAuthenticationProviders"
    },
    "@aws-cdk/aws-cognito-identitypool-alpha.IdentityPoolFacebookLoginProvider": {
      "assembly": "@aws-cdk/aws-cognito-identitypool-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Login Provider for identity federation using Facebook credentials.",
        "example": "new IdentityPool(this, 'myidentitypool', {\n  identityPoolName: 'myidentitypool',\n  authenticationProviders: {\n    amazon: {\n      appId: 'amzn1.application.12312k3j234j13rjiwuenf',\n    },\n    facebook: {\n      appId: '1234567890123',\n    },\n    google: {\n      clientId: '12345678012.apps.googleusercontent.com',\n    },\n    apple: {\n      servicesId: 'com.myappleapp.auth',\n    },\n    twitter: {\n      consumerKey: 'my-twitter-id',\n      consumerSecret: 'my-twitter-secret',\n    },\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cognito-identitypool-alpha.IdentityPoolFacebookLoginProvider",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/identitypool.ts",
        "line": 168
      },
      "name": "IdentityPoolFacebookLoginProvider",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "App ID for Facebook identity federation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/identitypool.ts",
            "line": 172
          },
          "name": "appId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/identitypool:IdentityPoolFacebookLoginProvider"
    },
    "@aws-cdk/aws-cognito-identitypool-alpha.IdentityPoolGoogleLoginProvider": {
      "assembly": "@aws-cdk/aws-cognito-identitypool-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Login Provider for identity federation using Google credentials.",
        "example": "new IdentityPool(this, 'myidentitypool', {\n  identityPoolName: 'myidentitypool',\n  authenticationProviders: {\n    amazon: {\n      appId: 'amzn1.application.12312k3j234j13rjiwuenf',\n    },\n    facebook: {\n      appId: '1234567890123',\n    },\n    google: {\n      clientId: '12345678012.apps.googleusercontent.com',\n    },\n    apple: {\n      servicesId: 'com.myappleapp.auth',\n    },\n    twitter: {\n      consumerKey: 'my-twitter-id',\n      consumerSecret: 'my-twitter-secret',\n    },\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cognito-identitypool-alpha.IdentityPoolGoogleLoginProvider",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/identitypool.ts",
        "line": 188
      },
      "name": "IdentityPoolGoogleLoginProvider",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Client ID for Google identity federation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/identitypool.ts",
            "line": 192
          },
          "name": "clientId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/identitypool:IdentityPoolGoogleLoginProvider"
    },
    "@aws-cdk/aws-cognito-identitypool-alpha.IdentityPoolProps": {
      "assembly": "@aws-cdk/aws-cognito-identitypool-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Props for the Identity Pool construct.",
        "example": "declare const openIdConnectProvider: iam.OpenIdConnectProvider;\nnew IdentityPool(this, 'myidentitypool', {\n  identityPoolName: 'myidentitypool',\n  authenticationProviders: {\n    google: {\n      clientId: '12345678012.apps.googleusercontent.com',\n    },\n    openIdConnectProviders: [openIdConnectProvider],\n    customProvider: 'my-custom-provider.example.com',\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cognito-identitypool-alpha.IdentityPoolProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/identitypool.ts",
        "line": 34
      },
      "name": "IdentityPoolProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- Classic Flow not allowed",
            "stability": "experimental",
            "summary": "Enables the Basic (Classic) authentication flow."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/identitypool.ts",
            "line": 69
          },
          "name": "allowClassicFlow",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- false",
            "stability": "experimental",
            "summary": "Whether the Identity Pool supports unauthenticated logins."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/identitypool.ts",
            "line": 57
          },
          "name": "allowUnauthenticatedIdentities",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- A default authenticated Role will be added",
            "stability": "experimental",
            "summary": "The default Role to be assumed by authenticated users."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/identitypool.ts",
            "line": 45
          },
          "name": "authenticatedRole",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_iam.IRole"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No Authentication Providers passed directly to Identity Pool",
            "stability": "experimental",
            "summary": "Authentication Providers for using in Identity Pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/identitypool.ts",
            "line": 75
          },
          "name": "authenticationProviders",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito-identitypool-alpha.IdentityPoolAuthenticationProviders"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Automatically generated name by CloudFormation at deploy time",
            "stability": "experimental",
            "summary": "The name of the Identity Pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/identitypool.ts",
            "line": 39
          },
          "name": "identityPoolName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no role mappings",
            "stability": "experimental",
            "summary": "Rules for mapping roles to users."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/identitypool.ts",
            "line": 63
          },
          "name": "roleMappings",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-cognito-identitypool-alpha.IdentityPoolRoleMapping"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- A default unauthenticated Role will be added",
            "stability": "experimental",
            "summary": "The default Role to be assumed by unauthenticated users."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/identitypool.ts",
            "line": 51
          },
          "name": "unauthenticatedRole",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_iam.IRole"
          }
        }
      ],
      "symbolId": "lib/identitypool:IdentityPoolProps"
    },
    "@aws-cdk/aws-cognito-identitypool-alpha.IdentityPoolProviderType": {
      "assembly": "@aws-cdk/aws-cognito-identitypool-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "Types of Identity Pool Login Providers."
      },
      "fqn": "@aws-cdk/aws-cognito-identitypool-alpha.IdentityPoolProviderType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/identitypool.ts",
        "line": 81
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Facebook provider type."
          },
          "name": "FACEBOOK"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Google provider type."
          },
          "name": "GOOGLE"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Amazon provider type."
          },
          "name": "AMAZON"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Apple provider type."
          },
          "name": "APPLE"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Twitter provider type."
          },
          "name": "TWITTER"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Open Id provider type."
          },
          "name": "OPEN_ID"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Saml provider type."
          },
          "name": "SAML"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "User Pool provider type."
          },
          "name": "USER_POOL"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Custom provider type."
          },
          "name": "CUSTOM"
        }
      ],
      "name": "IdentityPoolProviderType",
      "symbolId": "lib/identitypool:IdentityPoolProviderType"
    },
    "@aws-cdk/aws-cognito-identitypool-alpha.IdentityPoolProviderUrl": {
      "assembly": "@aws-cdk/aws-cognito-identitypool-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "Keys for Login Providers - each correspond to the client IDs of their respective federation Identity Providers.",
        "example": "import { IdentityPoolProviderUrl } from '@aws-cdk/aws-cognito-identitypool-alpha';\n\nnew IdentityPool(this, 'myidentitypool', {\n  identityPoolName: 'myidentitypool',\n  roleMappings: [\n    {\n      providerUrl: IdentityPoolProviderUrl.custom('my-custom-provider.com'),\n      useToken: true,\n    },\n  ],\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cognito-identitypool-alpha.IdentityPoolProviderUrl",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/identitypool.ts",
          "line": 142
        },
        "parameters": [
          {
            "docs": {
              "summary": "The type of Identity Pool Provider."
            },
            "name": "type",
            "type": {
              "fqn": "@aws-cdk/aws-cognito-identitypool-alpha.IdentityPoolProviderType"
            }
          },
          {
            "docs": {
              "summary": "The value of the Identity Pool Provider."
            },
            "name": "value",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/identitypool.ts",
        "line": 105
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Custom Provider url."
          },
          "locationInModule": {
            "filename": "lib/identitypool.ts",
            "line": 138
          },
          "name": "custom",
          "parameters": [
            {
              "name": "url",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cognito-identitypool-alpha.IdentityPoolProviderUrl"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "OpenId Provider url."
          },
          "locationInModule": {
            "filename": "lib/identitypool.ts",
            "line": 122
          },
          "name": "openId",
          "parameters": [
            {
              "name": "url",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cognito-identitypool-alpha.IdentityPoolProviderUrl"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Saml Provider url."
          },
          "locationInModule": {
            "filename": "lib/identitypool.ts",
            "line": 127
          },
          "name": "saml",
          "parameters": [
            {
              "name": "url",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cognito-identitypool-alpha.IdentityPoolProviderUrl"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "User Pool Provider Url."
          },
          "locationInModule": {
            "filename": "lib/identitypool.ts",
            "line": 132
          },
          "name": "userPool",
          "parameters": [
            {
              "name": "userPool",
              "type": {
                "fqn": "aws-cdk-lib.aws_cognito.IUserPool"
              }
            },
            {
              "name": "userPoolClient",
              "type": {
                "fqn": "aws-cdk-lib.aws_cognito.IUserPoolClient"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cognito-identitypool-alpha.IdentityPoolProviderUrl"
            }
          },
          "static": true
        }
      ],
      "name": "IdentityPoolProviderUrl",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "Amazon Provider url."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/identitypool.ts",
            "line": 113
          },
          "name": "AMAZON",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito-identitypool-alpha.IdentityPoolProviderUrl"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "Apple Provider url."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/identitypool.ts",
            "line": 116
          },
          "name": "APPLE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito-identitypool-alpha.IdentityPoolProviderUrl"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "Facebook Provider url."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/identitypool.ts",
            "line": 107
          },
          "name": "FACEBOOK",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito-identitypool-alpha.IdentityPoolProviderUrl"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "Google Provider url."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/identitypool.ts",
            "line": 110
          },
          "name": "GOOGLE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito-identitypool-alpha.IdentityPoolProviderUrl"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "Twitter Provider url."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/identitypool.ts",
            "line": 119
          },
          "name": "TWITTER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito-identitypool-alpha.IdentityPoolProviderUrl"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The type of Identity Pool Provider."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/identitypool.ts",
            "line": 146
          },
          "name": "type",
          "type": {
            "fqn": "@aws-cdk/aws-cognito-identitypool-alpha.IdentityPoolProviderType"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The value of the Identity Pool Provider."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/identitypool.ts",
            "line": 151
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/identitypool:IdentityPoolProviderUrl"
    },
    "@aws-cdk/aws-cognito-identitypool-alpha.IdentityPoolRoleAttachment": {
      "assembly": "@aws-cdk/aws-cognito-identitypool-alpha",
      "base": "aws-cdk-lib.Resource",
      "docs": {
        "custom": {
          "resource": "AWS::Cognito::IdentityPoolRoleAttachment",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "experimental",
        "summary": "Defines an Identity Pool Role Attachment.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito_identitypool_alpha from '@aws-cdk/aws-cognito-identitypool-alpha';\nimport { aws_iam as iam } from 'aws-cdk-lib';\n\ndeclare const identityPool: cognito_identitypool_alpha.IdentityPool;\ndeclare const identityPoolProviderUrl: cognito_identitypool_alpha.IdentityPoolProviderUrl;\ndeclare const role: iam.Role;\nconst identityPoolRoleAttachment = new cognito_identitypool_alpha.IdentityPoolRoleAttachment(this, 'MyIdentityPoolRoleAttachment', {\n  identityPool: identityPool,\n\n  // the properties below are optional\n  authenticatedRole: role,\n  roleMappings: [{\n    providerUrl: identityPoolProviderUrl,\n\n    // the properties below are optional\n    mappingKey: 'mappingKey',\n    resolveAmbiguousRoles: false,\n    rules: [{\n      claim: 'claim',\n      claimValue: 'claimValue',\n      mappedRole: role,\n\n      // the properties below are optional\n      matchType: cognito_identitypool_alpha.RoleMappingMatchType.EQUALS,\n    }],\n    useToken: false,\n  }],\n  unauthenticatedRole: role,\n});"
      },
      "fqn": "@aws-cdk/aws-cognito-identitypool-alpha.IdentityPoolRoleAttachment",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/identitypool-role-attachment.ts",
          "line": 145
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cognito-identitypool-alpha.IdentityPoolRoleAttachmentProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-cognito-identitypool-alpha.IIdentityPoolRoleAttachment"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/identitypool-role-attachment.ts",
        "line": 139
      },
      "name": "IdentityPoolRoleAttachment",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "ID of the underlying Identity Pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/identitypool-role-attachment.ts",
            "line": 143
          },
          "name": "identityPoolId",
          "overrides": "@aws-cdk/aws-cognito-identitypool-alpha.IIdentityPoolRoleAttachment",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/identitypool-role-attachment:IdentityPoolRoleAttachment"
    },
    "@aws-cdk/aws-cognito-identitypool-alpha.IdentityPoolRoleAttachmentProps": {
      "assembly": "@aws-cdk/aws-cognito-identitypool-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Props for an Identity Pool Role Attachment.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito_identitypool_alpha from '@aws-cdk/aws-cognito-identitypool-alpha';\nimport { aws_iam as iam } from 'aws-cdk-lib';\n\ndeclare const identityPool: cognito_identitypool_alpha.IdentityPool;\ndeclare const identityPoolProviderUrl: cognito_identitypool_alpha.IdentityPoolProviderUrl;\ndeclare const role: iam.Role;\nconst identityPoolRoleAttachmentProps: cognito_identitypool_alpha.IdentityPoolRoleAttachmentProps = {\n  identityPool: identityPool,\n\n  // the properties below are optional\n  authenticatedRole: role,\n  roleMappings: [{\n    providerUrl: identityPoolProviderUrl,\n\n    // the properties below are optional\n    mappingKey: 'mappingKey',\n    resolveAmbiguousRoles: false,\n    rules: [{\n      claim: 'claim',\n      claimValue: 'claimValue',\n      mappedRole: role,\n\n      // the properties below are optional\n      matchType: cognito_identitypool_alpha.RoleMappingMatchType.EQUALS,\n    }],\n    useToken: false,\n  }],\n  unauthenticatedRole: role,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-cognito-identitypool-alpha.IdentityPoolRoleAttachmentProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/identitypool-role-attachment.ts",
        "line": 20
      },
      "name": "IdentityPoolRoleAttachmentProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "ID of the Attachment's underlying Identity Pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/identitypool-role-attachment.ts",
            "line": 25
          },
          "name": "identityPool",
          "type": {
            "fqn": "@aws-cdk/aws-cognito-identitypool-alpha.IIdentityPool"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No default authenticated Role will be added",
            "stability": "experimental",
            "summary": "Default authenticated (User) Role."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/identitypool-role-attachment.ts",
            "line": 31
          },
          "name": "authenticatedRole",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_iam.IRole"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No role mappings",
            "stability": "experimental",
            "summary": "Rules for mapping roles to users."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/identitypool-role-attachment.ts",
            "line": 43
          },
          "name": "roleMappings",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-cognito-identitypool-alpha.IdentityPoolRoleMapping"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No default unauthenticated Role will be added",
            "stability": "experimental",
            "summary": "Default unauthenticated (Guest) Role."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/identitypool-role-attachment.ts",
            "line": 37
          },
          "name": "unauthenticatedRole",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_iam.IRole"
          }
        }
      ],
      "symbolId": "lib/identitypool-role-attachment:IdentityPoolRoleAttachmentProps"
    },
    "@aws-cdk/aws-cognito-identitypool-alpha.IdentityPoolRoleMapping": {
      "assembly": "@aws-cdk/aws-cognito-identitypool-alpha",
      "datatype": true,
      "docs": {
        "see": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypoolroleattachment.html",
        "stability": "experimental",
        "summary": "Map roles to users in the Identity Pool based on claims from the Identity Provider.",
        "example": "import { IdentityPoolRoleMapping } from '@aws-cdk/aws-cognito-identitypool-alpha';\n\ndeclare const identityPool: IdentityPool;\ndeclare const myAddedRoleMapping1: IdentityPoolRoleMapping;\ndeclare const myAddedRoleMapping2: IdentityPoolRoleMapping;\ndeclare const myAddedRoleMapping3: IdentityPoolRoleMapping;\n\nidentityPool.addRoleMappings(myAddedRoleMapping1, myAddedRoleMapping2, myAddedRoleMapping3);",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cognito-identitypool-alpha.IdentityPoolRoleMapping",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/identitypool-role-attachment.ts",
        "line": 50
      },
      "name": "IdentityPoolRoleMapping",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The url of the Provider for which the role is mapped."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/identitypool-role-attachment.ts",
            "line": 54
          },
          "name": "providerUrl",
          "type": {
            "fqn": "@aws-cdk/aws-cognito-identitypool-alpha.IdentityPoolProviderUrl"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The provided providerUrl",
            "remarks": "Required if the providerUrl is a token.",
            "stability": "experimental",
            "summary": "The key used for the role mapping in the role mapping hash."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/identitypool-role-attachment.ts",
            "line": 60
          },
          "name": "mappingKey",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false - Ambiguous role resolutions will lead to requester being denied",
            "stability": "experimental",
            "summary": "Allow for role assumption when results of role mapping are ambiguous."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/identitypool-role-attachment.ts",
            "line": 74
          },
          "name": "resolveAmbiguousRoles",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No role mapping rule",
            "remarks": "Required if useToken is false",
            "stability": "experimental",
            "summary": "The claim and value that must be matched in order to assume the role."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/identitypool-role-attachment.ts",
            "line": 80
          },
          "name": "rules",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-cognito-identitypool-alpha.RoleMappingRule"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "see": "https://docs.aws.amazon.com/cognito/latest/developerguide/role-based-access-control.html#using-tokens-to-assign-roles-to-users",
            "stability": "experimental",
            "summary": "If true then mapped roles must be passed through the cognito:roles or cognito:preferred_role claims from Identity Provider."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/identitypool-role-attachment.ts",
            "line": 68
          },
          "name": "useToken",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/identitypool-role-attachment:IdentityPoolRoleMapping"
    },
    "@aws-cdk/aws-cognito-identitypool-alpha.IdentityPoolTwitterLoginProvider": {
      "assembly": "@aws-cdk/aws-cognito-identitypool-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Login Provider for identity federation using Twitter credentials.",
        "example": "new IdentityPool(this, 'myidentitypool', {\n  identityPoolName: 'myidentitypool',\n  authenticationProviders: {\n    amazon: {\n      appId: 'amzn1.application.12312k3j234j13rjiwuenf',\n    },\n    facebook: {\n      appId: '1234567890123',\n    },\n    google: {\n      clientId: '12345678012.apps.googleusercontent.com',\n    },\n    apple: {\n      servicesId: 'com.myappleapp.auth',\n    },\n    twitter: {\n      consumerKey: 'my-twitter-id',\n      consumerSecret: 'my-twitter-secret',\n    },\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cognito-identitypool-alpha.IdentityPoolTwitterLoginProvider",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/identitypool.ts",
        "line": 198
      },
      "name": "IdentityPoolTwitterLoginProvider",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Consumer key for Twitter identity federation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/identitypool.ts",
            "line": 202
          },
          "name": "consumerKey",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Consumer secret for identity federation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/identitypool.ts",
            "line": 207
          },
          "name": "consumerSecret",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/identitypool:IdentityPoolTwitterLoginProvider"
    },
    "@aws-cdk/aws-cognito-identitypool-alpha.RoleMappingMatchType": {
      "assembly": "@aws-cdk/aws-cognito-identitypool-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "Types of matches allowed for role mapping.",
        "example": "import { IdentityPoolProviderUrl, RoleMappingMatchType } from '@aws-cdk/aws-cognito-identitypool-alpha';\n\ndeclare const adminRole: iam.Role;\ndeclare const nonAdminRole: iam.Role;\nnew IdentityPool(this, 'myidentitypool', {\n  identityPoolName: 'myidentitypool',\n  // Assign specific roles to users based on whether or not the custom admin claim is passed from the identity provider\n  roleMappings: [{\n    providerUrl: IdentityPoolProviderUrl.AMAZON,\n    rules: [\n      {\n        claim: 'custom:admin',\n        claimValue: 'admin',\n        mappedRole: adminRole,\n      },\n      {\n        claim: 'custom:admin',\n        claimValue: 'admin',\n        matchType: RoleMappingMatchType.NOTEQUAL,\n        mappedRole: nonAdminRole,\n      }\n    ],\n  }],\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cognito-identitypool-alpha.RoleMappingMatchType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/identitypool-role-attachment.ts",
        "line": 86
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The claim from the token must equal the given value in order for a match."
          },
          "name": "EQUALS"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The claim from the token must contain the given value in order for a match."
          },
          "name": "CONTAINS"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The claim from the token must start with the given value in order for a match."
          },
          "name": "STARTS_WITH"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The claim from the token must not equal the given value in order for a match."
          },
          "name": "NOTEQUAL"
        }
      ],
      "name": "RoleMappingMatchType",
      "symbolId": "lib/identitypool-role-attachment:RoleMappingMatchType"
    },
    "@aws-cdk/aws-cognito-identitypool-alpha.RoleMappingRule": {
      "assembly": "@aws-cdk/aws-cognito-identitypool-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Represents an Identity Pool Role Attachment role mapping rule.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito_identitypool_alpha from '@aws-cdk/aws-cognito-identitypool-alpha';\nimport { aws_iam as iam } from 'aws-cdk-lib';\n\ndeclare const role: iam.Role;\nconst roleMappingRule: cognito_identitypool_alpha.RoleMappingRule = {\n  claim: 'claim',\n  claimValue: 'claimValue',\n  mappedRole: role,\n\n  // the properties below are optional\n  matchType: cognito_identitypool_alpha.RoleMappingMatchType.EQUALS,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-cognito-identitypool-alpha.RoleMappingRule",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/identitypool-role-attachment.ts",
        "line": 111
      },
      "name": "RoleMappingRule",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The key sent in the token by the federated Identity Provider."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/identitypool-role-attachment.ts",
            "line": 115
          },
          "name": "claim",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The value of the claim that must be matched."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/identitypool-role-attachment.ts",
            "line": 125
          },
          "name": "claimValue",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The role to be assumed when the claim value is matched."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/identitypool-role-attachment.ts",
            "line": 120
          },
          "name": "mappedRole",
          "type": {
            "fqn": "aws-cdk-lib.aws_iam.IRole"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "RoleMappingMatchType.EQUALS",
            "stability": "experimental",
            "summary": "How to match with the claim value."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/identitypool-role-attachment.ts",
            "line": 131
          },
          "name": "matchType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito-identitypool-alpha.RoleMappingMatchType"
          }
        }
      ],
      "symbolId": "lib/identitypool-role-attachment:RoleMappingRule"
    },
    "@aws-cdk/aws-cognito-identitypool-alpha.UserPoolAuthenticationProvider": {
      "assembly": "@aws-cdk/aws-cognito-identitypool-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "Defines a User Pool Authentication Provider.",
        "example": "declare const identityPool: IdentityPool;\nconst userPool = new cognito.UserPool(this, 'Pool');\nidentityPool.addUserPoolAuthentication(new UserPoolAuthenticationProvider({\n  userPool,\n  disableServerSideTokenCheck: true,\n}));",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cognito-identitypool-alpha.UserPoolAuthenticationProvider",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/identitypool-user-pool-authentication-provider.ts",
          "line": 96
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cognito-identitypool-alpha.UserPoolAuthenticationProviderProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-cognito-identitypool-alpha.IUserPoolAuthenticationProvider"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/identitypool-user-pool-authentication-provider.ts",
        "line": 80
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The method called when a given User Pool Authentication Provider is added (for the first time) to an Identity Pool."
          },
          "locationInModule": {
            "filename": "lib/identitypool-user-pool-authentication-provider.ts",
            "line": 102
          },
          "name": "bind",
          "overrides": "@aws-cdk/aws-cognito-identitypool-alpha.IUserPoolAuthenticationProvider",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "identityPool",
              "type": {
                "fqn": "@aws-cdk/aws-cognito-identitypool-alpha.IIdentityPool"
              }
            },
            {
              "name": "_options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cognito-identitypool-alpha.UserPoolAuthenticationProviderBindOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cognito-identitypool-alpha.UserPoolAuthenticationProviderBindConfig"
            }
          }
        }
      ],
      "name": "UserPoolAuthenticationProvider",
      "symbolId": "lib/identitypool-user-pool-authentication-provider:UserPoolAuthenticationProvider"
    },
    "@aws-cdk/aws-cognito-identitypool-alpha.UserPoolAuthenticationProviderBindConfig": {
      "assembly": "@aws-cdk/aws-cognito-identitypool-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Represents a UserPoolAuthenticationProvider Bind Configuration.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito_identitypool_alpha from '@aws-cdk/aws-cognito-identitypool-alpha';\nconst userPoolAuthenticationProviderBindConfig: cognito_identitypool_alpha.UserPoolAuthenticationProviderBindConfig = {\n  clientId: 'clientId',\n  providerName: 'providerName',\n  serverSideTokenCheck: false,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-cognito-identitypool-alpha.UserPoolAuthenticationProviderBindConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/identitypool-user-pool-authentication-provider.ts",
        "line": 60
      },
      "name": "UserPoolAuthenticationProviderBindConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Client Id of the Associated User Pool Client."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/identitypool-user-pool-authentication-provider.ts",
            "line": 64
          },
          "name": "clientId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The identity providers associated with the UserPool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/identitypool-user-pool-authentication-provider.ts",
            "line": 69
          },
          "name": "providerName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Whether to enable the identity pool's server side token check."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/identitypool-user-pool-authentication-provider.ts",
            "line": 74
          },
          "name": "serverSideTokenCheck",
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/identitypool-user-pool-authentication-provider:UserPoolAuthenticationProviderBindConfig"
    },
    "@aws-cdk/aws-cognito-identitypool-alpha.UserPoolAuthenticationProviderBindOptions": {
      "assembly": "@aws-cdk/aws-cognito-identitypool-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Represents UserPoolAuthenticationProvider Bind Options.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito_identitypool_alpha from '@aws-cdk/aws-cognito-identitypool-alpha';\nconst userPoolAuthenticationProviderBindOptions: cognito_identitypool_alpha.UserPoolAuthenticationProviderBindOptions = { };",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-cognito-identitypool-alpha.UserPoolAuthenticationProviderBindOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/identitypool-user-pool-authentication-provider.ts",
        "line": 55
      },
      "name": "UserPoolAuthenticationProviderBindOptions",
      "symbolId": "lib/identitypool-user-pool-authentication-provider:UserPoolAuthenticationProviderBindOptions"
    },
    "@aws-cdk/aws-cognito-identitypool-alpha.UserPoolAuthenticationProviderProps": {
      "assembly": "@aws-cdk/aws-cognito-identitypool-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Props for the User Pool Authentication Provider.",
        "example": "declare const identityPool: IdentityPool;\nconst userPool = new cognito.UserPool(this, 'Pool');\nidentityPool.addUserPoolAuthentication(new UserPoolAuthenticationProvider({\n  userPool,\n  disableServerSideTokenCheck: true,\n}));",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cognito-identitypool-alpha.UserPoolAuthenticationProviderProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/identitypool-user-pool-authentication-provider.ts",
        "line": 31
      },
      "name": "UserPoolAuthenticationProviderProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The User Pool of the Associated Identity Providers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/identitypool-user-pool-authentication-provider.ts",
            "line": 35
          },
          "name": "userPool",
          "type": {
            "fqn": "aws-cdk-lib.aws_cognito.IUserPool"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "see": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-identitypool-cognitoidentityprovider.html",
            "stability": "experimental",
            "summary": "Setting this to true turns off identity pool checks for this user pool to make sure the user has not been globally signed out or deleted before the identity pool provides an OIDC token or AWS credentials for the user."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/identitypool-user-pool-authentication-provider.ts",
            "line": 48
          },
          "name": "disableServerSideTokenCheck",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- A default user pool client will be added to User Pool",
            "stability": "experimental",
            "summary": "The User Pool Client for the provided User Pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/identitypool-user-pool-authentication-provider.ts",
            "line": 41
          },
          "name": "userPoolClient",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_cognito.IUserPoolClient"
          }
        }
      ],
      "symbolId": "lib/identitypool-user-pool-authentication-provider:UserPoolAuthenticationProviderProps"
    }
  },
  "version": "2.163.1-alpha.0",
  "fingerprint": "**********"
}