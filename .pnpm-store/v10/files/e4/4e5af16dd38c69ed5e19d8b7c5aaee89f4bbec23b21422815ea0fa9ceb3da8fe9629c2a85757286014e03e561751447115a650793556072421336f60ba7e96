{
  "author": {
    "email": "apj-cope@amazon.com",
    "name": "AWS APJ COPE",
    "roles": [
      "author"
    ]
  },
  "bin": {
    "monorepo.nx-dir-hasher": "././scripts/monorepo/nx-dir-hasher.js",
    "pdk": "./_scripts/pdk.sh",
    "type-safe-api": "./scripts/type-safe-api/run.js"
  },
  "bundled": {
    "@pnpm/reviewing.dependencies-hierarchy": "2.1.11",
    "chalk": "^4.x",
    "execa": "5.1.1",
    "find-up": "^4.x",
    "findup": "0.1.5",
    "fs-extra": "11.2.0",
    "he": "1.2.0",
    "lodash": "4.17.21",
    "lodash.clonedeep": "4.5.0",
    "lodash.isempty": "4.4.0",
    "lodash.memoize": "4.1.2",
    "lodash.merge": "4.6.2",
    "lodash.omit": "4.5.0",
    "lodash.startcase": "4.4.0",
    "lodash.uniq": "4.5.0",
    "lodash.uniqby": "4.7.0",
    "lodash.words": "4.2.0",
    "log4js": "6.9.1",
    "mustache": "4.2.0",
    "openapi-types": "12.1.3",
    "read-pkg-up": "7.0.1",
    "semver": "7.6.3",
    "shorthash2": "1.0.5",
    "svgson": "5.3.1",
    "to-px": "1.1.0",
    "traverse": "0.6.10",
    "ts-graphviz": "1.8.2",
    "ts-node": "10.9.2",
    "word-wrap": "1.2.5"
  },
  "dependencies": {
    "@aws-cdk/aws-cognito-identitypool-alpha": "^2.163.1-alpha.0",
    "aws-cdk-lib": "^2.163.1",
    "cdk-nag": "^2.31.0",
    "constructs": "^10.4.2",
    "projen": "^0.82.8"
  },
  "dependencyClosure": {
    "@aws-cdk/asset-awscli-v1": {
      "targets": {
        "dotnet": {
          "namespace": "Amazon.CDK.Asset.AwsCliV1",
          "packageId": "Amazon.CDK.Asset.AwsCliV1"
        },
        "go": {
          "moduleName": "github.com/cdklabs/awscdk-asset-awscli-go",
          "packageName": "awscliv1"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-asset-awscli-v1",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cdk.asset.awscli.v1"
        },
        "js": {
          "npm": "@aws-cdk/asset-awscli-v1"
        },
        "python": {
          "distName": "aws-cdk.asset-awscli-v1",
          "module": "aws_cdk.asset_awscli_v1"
        }
      }
    },
    "@aws-cdk/asset-kubectl-v20": {
      "targets": {
        "dotnet": {
          "namespace": "Amazon.CDK.Asset.KubectlV20",
          "packageId": "Amazon.CDK.Asset.KubectlV20"
        },
        "go": {
          "moduleName": "github.com/cdklabs/awscdk-asset-kubectl-go",
          "packageName": "kubectlv20"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-asset-kubectl-v20",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cdk.asset.kubectl.v20"
        },
        "js": {
          "npm": "@aws-cdk/asset-kubectl-v20"
        },
        "python": {
          "distName": "aws-cdk.asset-kubectl-v20",
          "module": "aws_cdk.asset_kubectl_v20"
        }
      }
    },
    "@aws-cdk/asset-node-proxy-agent-v6": {
      "targets": {
        "dotnet": {
          "namespace": "Amazon.CDK.Asset.NodeProxyAgentV6",
          "packageId": "Amazon.CDK.Asset.NodeProxyAgentV6"
        },
        "go": {
          "moduleName": "github.com/cdklabs/awscdk-asset-node-proxy-agent-go",
          "packageName": "nodeproxyagentv6"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-asset-node-proxy-agent-v6",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cdk.asset.node.proxy.agent.v6"
        },
        "js": {
          "npm": "@aws-cdk/asset-node-proxy-agent-v6"
        },
        "python": {
          "distName": "aws-cdk.asset-node-proxy-agent-v6",
          "module": "aws_cdk.asset_node_proxy_agent_v6"
        }
      }
    },
    "@aws-cdk/aws-cognito-identitypool-alpha": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Cognito.IdentityPool.Alpha",
          "packageId": "Amazon.CDK.AWS.Cognito.IdentityPool.Alpha"
        },
        "go": {
          "moduleName": "github.com/aws/aws-cdk-go",
          "packageName": "awscdkcognitoidentitypoolalpha"
        },
        "java": {
          "maven": {
            "artifactId": "cognito-identitypool-alpha",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cognito.identitypool.alpha"
        },
        "js": {
          "npm": "@aws-cdk/aws-cognito-identitypool-alpha"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 2"
          ],
          "distName": "aws-cdk.aws-cognito-identitypool-alpha",
          "module": "aws_cdk.aws_cognito_identitypool_alpha"
        }
      }
    },
    "@aws-cdk/cloud-assembly-schema": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CloudAssembly.Schema",
          "packageId": "Amazon.CDK.CloudAssembly.Schema"
        },
        "go": {
          "moduleName": "github.com/cdklabs/cloud-assembly-schema-go"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cloud-assembly-schema",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cloudassembly.schema"
        },
        "js": {
          "npm": "@aws-cdk/cloud-assembly-schema"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 2"
          ],
          "distName": "aws-cdk.cloud-assembly-schema",
          "module": "aws_cdk.cloud_assembly_schema"
        }
      }
    },
    "aws-cdk-lib": {
      "submodules": {
        "aws-cdk-lib.alexa_ask": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.Alexa.Ask"
            },
            "java": {
              "package": "software.amazon.awscdk.alexa.ask"
            },
            "python": {
              "module": "aws_cdk.alexa_ask"
            }
          }
        },
        "aws-cdk-lib.assertions": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.Assertions"
            },
            "java": {
              "package": "software.amazon.awscdk.assertions"
            },
            "python": {
              "module": "aws_cdk.assertions"
            }
          }
        },
        "aws-cdk-lib.assets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.Assets"
            },
            "java": {
              "package": "software.amazon.awscdk.assets"
            },
            "python": {
              "module": "aws_cdk.assets"
            }
          }
        },
        "aws-cdk-lib.aws_accessanalyzer": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AccessAnalyzer"
            },
            "java": {
              "package": "software.amazon.awscdk.services.accessanalyzer"
            },
            "python": {
              "module": "aws_cdk.aws_accessanalyzer"
            }
          }
        },
        "aws-cdk-lib.aws_acmpca": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ACMPCA"
            },
            "java": {
              "package": "software.amazon.awscdk.services.acmpca"
            },
            "python": {
              "module": "aws_cdk.aws_acmpca"
            }
          }
        },
        "aws-cdk-lib.aws_amazonmq": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AmazonMQ"
            },
            "java": {
              "package": "software.amazon.awscdk.services.amazonmq"
            },
            "python": {
              "module": "aws_cdk.aws_amazonmq"
            }
          }
        },
        "aws-cdk-lib.aws_amplify": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Amplify"
            },
            "java": {
              "package": "software.amazon.awscdk.services.amplify"
            },
            "python": {
              "module": "aws_cdk.aws_amplify"
            }
          }
        },
        "aws-cdk-lib.aws_amplifyuibuilder": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AmplifyUIBuilder"
            },
            "java": {
              "package": "software.amazon.awscdk.services.amplifyuibuilder"
            },
            "python": {
              "module": "aws_cdk.aws_amplifyuibuilder"
            }
          }
        },
        "aws-cdk-lib.aws_apigateway": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.APIGateway"
            },
            "java": {
              "package": "software.amazon.awscdk.services.apigateway"
            },
            "python": {
              "module": "aws_cdk.aws_apigateway"
            }
          }
        },
        "aws-cdk-lib.aws_apigatewayv2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Apigatewayv2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.apigatewayv2"
            },
            "python": {
              "module": "aws_cdk.aws_apigatewayv2"
            }
          }
        },
        "aws-cdk-lib.aws_apigatewayv2_authorizers": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AwsApigatewayv2Authorizers"
            },
            "java": {
              "package": "software.amazon.awscdk.aws_apigatewayv2_authorizers"
            },
            "python": {
              "module": "aws_cdk.aws_apigatewayv2_authorizers"
            }
          }
        },
        "aws-cdk-lib.aws_apigatewayv2_integrations": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AwsApigatewayv2Integrations"
            },
            "java": {
              "package": "software.amazon.awscdk.aws_apigatewayv2_integrations"
            },
            "python": {
              "module": "aws_cdk.aws_apigatewayv2_integrations"
            }
          }
        },
        "aws-cdk-lib.aws_appconfig": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AppConfig"
            },
            "java": {
              "package": "software.amazon.awscdk.services.appconfig"
            },
            "python": {
              "module": "aws_cdk.aws_appconfig"
            }
          }
        },
        "aws-cdk-lib.aws_appflow": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AppFlow"
            },
            "java": {
              "package": "software.amazon.awscdk.services.appflow"
            },
            "python": {
              "module": "aws_cdk.aws_appflow"
            }
          }
        },
        "aws-cdk-lib.aws_appintegrations": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AppIntegrations"
            },
            "java": {
              "package": "software.amazon.awscdk.services.appintegrations"
            },
            "python": {
              "module": "aws_cdk.aws_appintegrations"
            }
          }
        },
        "aws-cdk-lib.aws_applicationautoscaling": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ApplicationAutoScaling"
            },
            "java": {
              "package": "software.amazon.awscdk.services.applicationautoscaling"
            },
            "python": {
              "module": "aws_cdk.aws_applicationautoscaling"
            }
          }
        },
        "aws-cdk-lib.aws_applicationinsights": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ApplicationInsights"
            },
            "java": {
              "package": "software.amazon.awscdk.services.applicationinsights"
            },
            "python": {
              "module": "aws_cdk.aws_applicationinsights"
            }
          }
        },
        "aws-cdk-lib.aws_applicationsignals": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.ApplicationSignals"
            },
            "java": {
              "package": "software.amazon.awscdk.services.applicationsignals"
            },
            "python": {
              "module": "aws_cdk.aws_applicationsignals"
            }
          }
        },
        "aws-cdk-lib.aws_appmesh": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AppMesh"
            },
            "java": {
              "package": "software.amazon.awscdk.services.appmesh"
            },
            "python": {
              "module": "aws_cdk.aws_appmesh"
            }
          }
        },
        "aws-cdk-lib.aws_apprunner": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AppRunner"
            },
            "java": {
              "package": "software.amazon.awscdk.services.apprunner"
            },
            "python": {
              "module": "aws_cdk.aws_apprunner"
            }
          }
        },
        "aws-cdk-lib.aws_appstream": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AppStream"
            },
            "java": {
              "package": "software.amazon.awscdk.services.appstream"
            },
            "python": {
              "module": "aws_cdk.aws_appstream"
            }
          }
        },
        "aws-cdk-lib.aws_appsync": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AppSync"
            },
            "java": {
              "package": "software.amazon.awscdk.services.appsync"
            },
            "python": {
              "module": "aws_cdk.aws_appsync"
            }
          }
        },
        "aws-cdk-lib.aws_apptest": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.AppTest"
            },
            "java": {
              "package": "software.amazon.awscdk.services.apptest"
            },
            "python": {
              "module": "aws_cdk.aws_apptest"
            }
          }
        },
        "aws-cdk-lib.aws_aps": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.APS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.aps"
            },
            "python": {
              "module": "aws_cdk.aws_aps"
            }
          }
        },
        "aws-cdk-lib.aws_arczonalshift": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.ARCZonalShift"
            },
            "java": {
              "package": "software.amazon.awscdk.services.arczonalshift"
            },
            "python": {
              "module": "aws_cdk.aws_arczonalshift"
            }
          }
        },
        "aws-cdk-lib.aws_athena": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Athena"
            },
            "java": {
              "package": "software.amazon.awscdk.services.athena"
            },
            "python": {
              "module": "aws_cdk.aws_athena"
            }
          }
        },
        "aws-cdk-lib.aws_auditmanager": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AuditManager"
            },
            "java": {
              "package": "software.amazon.awscdk.services.auditmanager"
            },
            "python": {
              "module": "aws_cdk.aws_auditmanager"
            }
          }
        },
        "aws-cdk-lib.aws_autoscaling": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AutoScaling"
            },
            "java": {
              "package": "software.amazon.awscdk.services.autoscaling"
            },
            "python": {
              "module": "aws_cdk.aws_autoscaling"
            }
          }
        },
        "aws-cdk-lib.aws_autoscaling_common": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AutoScaling.Common"
            },
            "java": {
              "package": "software.amazon.awscdk.services.autoscaling.common"
            },
            "python": {
              "module": "aws_cdk.aws_autoscaling_common"
            }
          }
        },
        "aws-cdk-lib.aws_autoscaling_hooktargets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AutoScaling.HookTargets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.autoscaling.hooktargets"
            },
            "python": {
              "module": "aws_cdk.aws_autoscaling_hooktargets"
            }
          }
        },
        "aws-cdk-lib.aws_autoscalingplans": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AutoScalingPlans"
            },
            "java": {
              "package": "software.amazon.awscdk.services.autoscalingplans"
            },
            "python": {
              "module": "aws_cdk.aws_autoscalingplans"
            }
          }
        },
        "aws-cdk-lib.aws_b2bi": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.B2BI"
            },
            "java": {
              "package": "software.amazon.awscdk.services.b2bi"
            },
            "python": {
              "module": "aws_cdk.aws_b2bi"
            }
          }
        },
        "aws-cdk-lib.aws_backup": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Backup"
            },
            "java": {
              "package": "software.amazon.awscdk.services.backup"
            },
            "python": {
              "module": "aws_cdk.aws_backup"
            }
          }
        },
        "aws-cdk-lib.aws_backupgateway": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.BackupGateway"
            },
            "java": {
              "package": "software.amazon.awscdk.services.backupgateway"
            },
            "python": {
              "module": "aws_cdk.aws_backupgateway"
            }
          }
        },
        "aws-cdk-lib.aws_batch": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Batch"
            },
            "java": {
              "package": "software.amazon.awscdk.services.batch"
            },
            "python": {
              "module": "aws_cdk.aws_batch"
            }
          }
        },
        "aws-cdk-lib.aws_bcmdataexports": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.BCMDataExports"
            },
            "java": {
              "package": "software.amazon.awscdk.services.bcmdataexports"
            },
            "python": {
              "module": "aws_cdk.aws_bcmdataexports"
            }
          }
        },
        "aws-cdk-lib.aws_bedrock": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.Bedrock"
            },
            "java": {
              "package": "software.amazon.awscdk.services.bedrock"
            },
            "python": {
              "module": "aws_cdk.aws_bedrock"
            }
          }
        },
        "aws-cdk-lib.aws_billingconductor": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.BillingConductor"
            },
            "java": {
              "package": "software.amazon.awscdk.services.billingconductor"
            },
            "python": {
              "module": "aws_cdk.aws_billingconductor"
            }
          }
        },
        "aws-cdk-lib.aws_budgets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Budgets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.budgets"
            },
            "python": {
              "module": "aws_cdk.aws_budgets"
            }
          }
        },
        "aws-cdk-lib.aws_cassandra": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Cassandra"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cassandra"
            },
            "python": {
              "module": "aws_cdk.aws_cassandra"
            }
          }
        },
        "aws-cdk-lib.aws_ce": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CE"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ce"
            },
            "python": {
              "module": "aws_cdk.aws_ce"
            }
          }
        },
        "aws-cdk-lib.aws_certificatemanager": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CertificateManager"
            },
            "java": {
              "package": "software.amazon.awscdk.services.certificatemanager"
            },
            "python": {
              "module": "aws_cdk.aws_certificatemanager"
            }
          }
        },
        "aws-cdk-lib.aws_chatbot": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Chatbot"
            },
            "java": {
              "package": "software.amazon.awscdk.services.chatbot"
            },
            "python": {
              "module": "aws_cdk.aws_chatbot"
            }
          }
        },
        "aws-cdk-lib.aws_cleanrooms": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.CleanRooms"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cleanrooms"
            },
            "python": {
              "module": "aws_cdk.aws_cleanrooms"
            }
          }
        },
        "aws-cdk-lib.aws_cleanroomsml": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.CleanRoomsML"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cleanroomsml"
            },
            "python": {
              "module": "aws_cdk.aws_cleanroomsml"
            }
          }
        },
        "aws-cdk-lib.aws_cloud9": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Cloud9"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cloud9"
            },
            "python": {
              "module": "aws_cdk.aws_cloud9"
            }
          }
        },
        "aws-cdk-lib.aws_cloudformation": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CloudFormation"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cloudformation"
            },
            "python": {
              "module": "aws_cdk.aws_cloudformation"
            }
          }
        },
        "aws-cdk-lib.aws_cloudfront": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CloudFront"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cloudfront"
            },
            "python": {
              "module": "aws_cdk.aws_cloudfront"
            }
          }
        },
        "aws-cdk-lib.aws_cloudfront.experimental": {},
        "aws-cdk-lib.aws_cloudfront_origins": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CloudFront.Origins"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cloudfront.origins"
            },
            "python": {
              "module": "aws_cdk.aws_cloudfront_origins"
            }
          }
        },
        "aws-cdk-lib.aws_cloudtrail": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CloudTrail"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cloudtrail"
            },
            "python": {
              "module": "aws_cdk.aws_cloudtrail"
            }
          }
        },
        "aws-cdk-lib.aws_cloudwatch": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CloudWatch"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cloudwatch"
            },
            "python": {
              "module": "aws_cdk.aws_cloudwatch"
            }
          }
        },
        "aws-cdk-lib.aws_cloudwatch_actions": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CloudWatch.Actions"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cloudwatch.actions"
            },
            "python": {
              "module": "aws_cdk.aws_cloudwatch_actions"
            }
          }
        },
        "aws-cdk-lib.aws_codeartifact": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeArtifact"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codeartifact"
            },
            "python": {
              "module": "aws_cdk.aws_codeartifact"
            }
          }
        },
        "aws-cdk-lib.aws_codebuild": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeBuild"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codebuild"
            },
            "python": {
              "module": "aws_cdk.aws_codebuild"
            }
          }
        },
        "aws-cdk-lib.aws_codecommit": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeCommit"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codecommit"
            },
            "python": {
              "module": "aws_cdk.aws_codecommit"
            }
          }
        },
        "aws-cdk-lib.aws_codeconnections": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.CodeConnections"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codeconnections"
            },
            "python": {
              "module": "aws_cdk.aws_codeconnections"
            }
          }
        },
        "aws-cdk-lib.aws_codedeploy": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeDeploy"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codedeploy"
            },
            "python": {
              "module": "aws_cdk.aws_codedeploy"
            }
          }
        },
        "aws-cdk-lib.aws_codeguruprofiler": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeGuruProfiler"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codeguruprofiler"
            },
            "python": {
              "module": "aws_cdk.aws_codeguruprofiler"
            }
          }
        },
        "aws-cdk-lib.aws_codegurureviewer": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeGuruReviewer"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codegurureviewer"
            },
            "python": {
              "module": "aws_cdk.aws_codegurureviewer"
            }
          }
        },
        "aws-cdk-lib.aws_codepipeline": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodePipeline"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codepipeline"
            },
            "python": {
              "module": "aws_cdk.aws_codepipeline"
            }
          }
        },
        "aws-cdk-lib.aws_codepipeline_actions": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodePipeline.Actions"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codepipeline.actions"
            },
            "python": {
              "module": "aws_cdk.aws_codepipeline_actions"
            }
          }
        },
        "aws-cdk-lib.aws_codestar": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Codestar"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codestar"
            },
            "python": {
              "module": "aws_cdk.aws_codestar"
            }
          }
        },
        "aws-cdk-lib.aws_codestarconnections": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeStarConnections"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codestarconnections"
            },
            "python": {
              "module": "aws_cdk.aws_codestarconnections"
            }
          }
        },
        "aws-cdk-lib.aws_codestarnotifications": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeStarNotifications"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codestarnotifications"
            },
            "python": {
              "module": "aws_cdk.aws_codestarnotifications"
            }
          }
        },
        "aws-cdk-lib.aws_cognito": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Cognito"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cognito"
            },
            "python": {
              "module": "aws_cdk.aws_cognito"
            }
          }
        },
        "aws-cdk-lib.aws_comprehend": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Comprehend"
            },
            "java": {
              "package": "software.amazon.awscdk.services.comprehend"
            },
            "python": {
              "module": "aws_cdk.aws_comprehend"
            }
          }
        },
        "aws-cdk-lib.aws_config": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Config"
            },
            "java": {
              "package": "software.amazon.awscdk.services.config"
            },
            "python": {
              "module": "aws_cdk.aws_config"
            }
          }
        },
        "aws-cdk-lib.aws_connect": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Connect"
            },
            "java": {
              "package": "software.amazon.awscdk.services.connect"
            },
            "python": {
              "module": "aws_cdk.aws_connect"
            }
          }
        },
        "aws-cdk-lib.aws_connectcampaigns": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ConnectCampaigns"
            },
            "java": {
              "package": "software.amazon.awscdk.services.connectcampaigns"
            },
            "python": {
              "module": "aws_cdk.aws_connectcampaigns"
            }
          }
        },
        "aws-cdk-lib.aws_controltower": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ControlTower"
            },
            "java": {
              "package": "software.amazon.awscdk.services.controltower"
            },
            "python": {
              "module": "aws_cdk.aws_controltower"
            }
          }
        },
        "aws-cdk-lib.aws_cur": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CUR"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cur"
            },
            "python": {
              "module": "aws_cdk.aws_cur"
            }
          }
        },
        "aws-cdk-lib.aws_customerprofiles": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CustomerProfiles"
            },
            "java": {
              "package": "software.amazon.awscdk.services.customerprofiles"
            },
            "python": {
              "module": "aws_cdk.aws_customerprofiles"
            }
          }
        },
        "aws-cdk-lib.aws_databrew": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DataBrew"
            },
            "java": {
              "package": "software.amazon.awscdk.services.databrew"
            },
            "python": {
              "module": "aws_cdk.aws_databrew"
            }
          }
        },
        "aws-cdk-lib.aws_datapipeline": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DataPipeline"
            },
            "java": {
              "package": "software.amazon.awscdk.services.datapipeline"
            },
            "python": {
              "module": "aws_cdk.aws_datapipeline"
            }
          }
        },
        "aws-cdk-lib.aws_datasync": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DataSync"
            },
            "java": {
              "package": "software.amazon.awscdk.services.datasync"
            },
            "python": {
              "module": "aws_cdk.aws_datasync"
            }
          }
        },
        "aws-cdk-lib.aws_datazone": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.DataZone"
            },
            "java": {
              "package": "software.amazon.awscdk.services.datazone"
            },
            "python": {
              "module": "aws_cdk.aws_datazone"
            }
          }
        },
        "aws-cdk-lib.aws_dax": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DAX"
            },
            "java": {
              "package": "software.amazon.awscdk.services.dax"
            },
            "python": {
              "module": "aws_cdk.aws_dax"
            }
          }
        },
        "aws-cdk-lib.aws_deadline": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.Deadline"
            },
            "java": {
              "package": "software.amazon.awscdk.services.deadline"
            },
            "python": {
              "module": "aws_cdk.aws_deadline"
            }
          }
        },
        "aws-cdk-lib.aws_detective": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Detective"
            },
            "java": {
              "package": "software.amazon.awscdk.services.detective"
            },
            "python": {
              "module": "aws_cdk.aws_detective"
            }
          }
        },
        "aws-cdk-lib.aws_devicefarm": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DeviceFarm"
            },
            "java": {
              "package": "software.amazon.awscdk.services.devicefarm"
            },
            "python": {
              "module": "aws_cdk.aws_devicefarm"
            }
          }
        },
        "aws-cdk-lib.aws_devopsguru": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DevOpsGuru"
            },
            "java": {
              "package": "software.amazon.awscdk.services.devopsguru"
            },
            "python": {
              "module": "aws_cdk.aws_devopsguru"
            }
          }
        },
        "aws-cdk-lib.aws_directoryservice": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DirectoryService"
            },
            "java": {
              "package": "software.amazon.awscdk.services.directoryservice"
            },
            "python": {
              "module": "aws_cdk.aws_directoryservice"
            }
          }
        },
        "aws-cdk-lib.aws_dlm": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DLM"
            },
            "java": {
              "package": "software.amazon.awscdk.services.dlm"
            },
            "python": {
              "module": "aws_cdk.aws_dlm"
            }
          }
        },
        "aws-cdk-lib.aws_dms": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DMS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.dms"
            },
            "python": {
              "module": "aws_cdk.aws_dms"
            }
          }
        },
        "aws-cdk-lib.aws_docdb": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DocDB"
            },
            "java": {
              "package": "software.amazon.awscdk.services.docdb"
            },
            "python": {
              "module": "aws_cdk.aws_docdb"
            }
          }
        },
        "aws-cdk-lib.aws_docdbelastic": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DocDBElastic"
            },
            "java": {
              "package": "software.amazon.awscdk.services.docdbelastic"
            },
            "python": {
              "module": "aws_cdk.aws_docdbelastic"
            }
          }
        },
        "aws-cdk-lib.aws_dynamodb": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DynamoDB"
            },
            "java": {
              "package": "software.amazon.awscdk.services.dynamodb"
            },
            "python": {
              "module": "aws_cdk.aws_dynamodb"
            }
          }
        },
        "aws-cdk-lib.aws_ec2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.EC2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ec2"
            },
            "python": {
              "module": "aws_cdk.aws_ec2"
            }
          }
        },
        "aws-cdk-lib.aws_ecr": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ECR"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ecr"
            },
            "python": {
              "module": "aws_cdk.aws_ecr"
            }
          }
        },
        "aws-cdk-lib.aws_ecr_assets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Ecr.Assets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ecr.assets"
            },
            "python": {
              "module": "aws_cdk.aws_ecr_assets"
            }
          }
        },
        "aws-cdk-lib.aws_ecs": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ECS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ecs"
            },
            "python": {
              "module": "aws_cdk.aws_ecs"
            }
          }
        },
        "aws-cdk-lib.aws_ecs_patterns": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ECS.Patterns"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ecs.patterns"
            },
            "python": {
              "module": "aws_cdk.aws_ecs_patterns"
            }
          }
        },
        "aws-cdk-lib.aws_efs": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.EFS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.efs"
            },
            "python": {
              "module": "aws_cdk.aws_efs"
            }
          }
        },
        "aws-cdk-lib.aws_eks": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.EKS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.eks"
            },
            "python": {
              "module": "aws_cdk.aws_eks"
            }
          }
        },
        "aws-cdk-lib.aws_elasticache": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ElastiCache"
            },
            "java": {
              "package": "software.amazon.awscdk.services.elasticache"
            },
            "python": {
              "module": "aws_cdk.aws_elasticache"
            }
          }
        },
        "aws-cdk-lib.aws_elasticbeanstalk": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ElasticBeanstalk"
            },
            "java": {
              "package": "software.amazon.awscdk.services.elasticbeanstalk"
            },
            "python": {
              "module": "aws_cdk.aws_elasticbeanstalk"
            }
          }
        },
        "aws-cdk-lib.aws_elasticloadbalancing": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ElasticLoadBalancing"
            },
            "java": {
              "package": "software.amazon.awscdk.services.elasticloadbalancing"
            },
            "python": {
              "module": "aws_cdk.aws_elasticloadbalancing"
            }
          }
        },
        "aws-cdk-lib.aws_elasticloadbalancingv2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ElasticLoadBalancingV2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.elasticloadbalancingv2"
            },
            "python": {
              "module": "aws_cdk.aws_elasticloadbalancingv2"
            }
          }
        },
        "aws-cdk-lib.aws_elasticloadbalancingv2_actions": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ElasticLoadBalancingV2.Actions"
            },
            "java": {
              "package": "software.amazon.awscdk.services.elasticloadbalancingv2.actions"
            },
            "python": {
              "module": "aws_cdk.aws_elasticloadbalancingv2_actions"
            }
          }
        },
        "aws-cdk-lib.aws_elasticloadbalancingv2_targets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ElasticLoadBalancingV2.Targets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.elasticloadbalancingv2.targets"
            },
            "python": {
              "module": "aws_cdk.aws_elasticloadbalancingv2_targets"
            }
          }
        },
        "aws-cdk-lib.aws_elasticsearch": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Elasticsearch"
            },
            "java": {
              "package": "software.amazon.awscdk.services.elasticsearch"
            },
            "python": {
              "module": "aws_cdk.aws_elasticsearch"
            }
          }
        },
        "aws-cdk-lib.aws_emr": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.EMR"
            },
            "java": {
              "package": "software.amazon.awscdk.services.emr"
            },
            "python": {
              "module": "aws_cdk.aws_emr"
            }
          }
        },
        "aws-cdk-lib.aws_emrcontainers": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.EMRContainers"
            },
            "java": {
              "package": "software.amazon.awscdk.services.emrcontainers"
            },
            "python": {
              "module": "aws_cdk.aws_emrcontainers"
            }
          }
        },
        "aws-cdk-lib.aws_emrserverless": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.EMRServerless"
            },
            "java": {
              "package": "software.amazon.awscdk.services.emrserverless"
            },
            "python": {
              "module": "aws_cdk.aws_emrserverless"
            }
          }
        },
        "aws-cdk-lib.aws_entityresolution": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.EntityResolution"
            },
            "java": {
              "package": "software.amazon.awscdk.services.entityresolution"
            },
            "python": {
              "module": "aws_cdk.aws_entityresolution"
            }
          }
        },
        "aws-cdk-lib.aws_events": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Events"
            },
            "java": {
              "package": "software.amazon.awscdk.services.events"
            },
            "python": {
              "module": "aws_cdk.aws_events"
            }
          }
        },
        "aws-cdk-lib.aws_events_targets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Events.Targets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.events.targets"
            },
            "python": {
              "module": "aws_cdk.aws_events_targets"
            }
          }
        },
        "aws-cdk-lib.aws_eventschemas": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.EventSchemas"
            },
            "java": {
              "package": "software.amazon.awscdk.services.eventschemas"
            },
            "python": {
              "module": "aws_cdk.aws_eventschemas"
            }
          }
        },
        "aws-cdk-lib.aws_evidently": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Evidently"
            },
            "java": {
              "package": "software.amazon.awscdk.services.evidently"
            },
            "python": {
              "module": "aws_cdk.aws_evidently"
            }
          }
        },
        "aws-cdk-lib.aws_finspace": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.FinSpace"
            },
            "java": {
              "package": "software.amazon.awscdk.services.finspace"
            },
            "python": {
              "module": "aws_cdk.aws_finspace"
            }
          }
        },
        "aws-cdk-lib.aws_fis": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.FIS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.fis"
            },
            "python": {
              "module": "aws_cdk.aws_fis"
            }
          }
        },
        "aws-cdk-lib.aws_fms": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.FMS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.fms"
            },
            "python": {
              "module": "aws_cdk.aws_fms"
            }
          }
        },
        "aws-cdk-lib.aws_forecast": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Forecast"
            },
            "java": {
              "package": "software.amazon.awscdk.services.forecast"
            },
            "python": {
              "module": "aws_cdk.aws_forecast"
            }
          }
        },
        "aws-cdk-lib.aws_frauddetector": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.FraudDetector"
            },
            "java": {
              "package": "software.amazon.awscdk.services.frauddetector"
            },
            "python": {
              "module": "aws_cdk.aws_frauddetector"
            }
          }
        },
        "aws-cdk-lib.aws_fsx": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.FSx"
            },
            "java": {
              "package": "software.amazon.awscdk.services.fsx"
            },
            "python": {
              "module": "aws_cdk.aws_fsx"
            }
          }
        },
        "aws-cdk-lib.aws_gamelift": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.GameLift"
            },
            "java": {
              "package": "software.amazon.awscdk.services.gamelift"
            },
            "python": {
              "module": "aws_cdk.aws_gamelift"
            }
          }
        },
        "aws-cdk-lib.aws_globalaccelerator": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.GlobalAccelerator"
            },
            "java": {
              "package": "software.amazon.awscdk.services.globalaccelerator"
            },
            "python": {
              "module": "aws_cdk.aws_globalaccelerator"
            }
          }
        },
        "aws-cdk-lib.aws_globalaccelerator_endpoints": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.GlobalAccelerator.Endpoints"
            },
            "java": {
              "package": "software.amazon.awscdk.services.globalaccelerator.endpoints"
            },
            "python": {
              "module": "aws_cdk.aws_globalaccelerator_endpoints"
            }
          }
        },
        "aws-cdk-lib.aws_glue": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Glue"
            },
            "java": {
              "package": "software.amazon.awscdk.services.glue"
            },
            "python": {
              "module": "aws_cdk.aws_glue"
            }
          }
        },
        "aws-cdk-lib.aws_grafana": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Grafana"
            },
            "java": {
              "package": "software.amazon.awscdk.services.grafana"
            },
            "python": {
              "module": "aws_cdk.aws_grafana"
            }
          }
        },
        "aws-cdk-lib.aws_greengrass": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Greengrass"
            },
            "java": {
              "package": "software.amazon.awscdk.services.greengrass"
            },
            "python": {
              "module": "aws_cdk.aws_greengrass"
            }
          }
        },
        "aws-cdk-lib.aws_greengrassv2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.GreengrassV2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.greengrassv2"
            },
            "python": {
              "module": "aws_cdk.aws_greengrassv2"
            }
          }
        },
        "aws-cdk-lib.aws_groundstation": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.GroundStation"
            },
            "java": {
              "package": "software.amazon.awscdk.services.groundstation"
            },
            "python": {
              "module": "aws_cdk.aws_groundstation"
            }
          }
        },
        "aws-cdk-lib.aws_guardduty": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.GuardDuty"
            },
            "java": {
              "package": "software.amazon.awscdk.services.guardduty"
            },
            "python": {
              "module": "aws_cdk.aws_guardduty"
            }
          }
        },
        "aws-cdk-lib.aws_healthimaging": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.HealthImaging"
            },
            "java": {
              "package": "software.amazon.awscdk.services.healthimaging"
            },
            "python": {
              "module": "aws_cdk.aws_healthimaging"
            }
          }
        },
        "aws-cdk-lib.aws_healthlake": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.HealthLake"
            },
            "java": {
              "package": "software.amazon.awscdk.services.healthlake"
            },
            "python": {
              "module": "aws_cdk.aws_healthlake"
            }
          }
        },
        "aws-cdk-lib.aws_iam": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IAM"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iam"
            },
            "python": {
              "module": "aws_cdk.aws_iam"
            }
          }
        },
        "aws-cdk-lib.aws_identitystore": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IdentityStore"
            },
            "java": {
              "package": "software.amazon.awscdk.services.identitystore"
            },
            "python": {
              "module": "aws_cdk.aws_identitystore"
            }
          }
        },
        "aws-cdk-lib.aws_imagebuilder": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ImageBuilder"
            },
            "java": {
              "package": "software.amazon.awscdk.services.imagebuilder"
            },
            "python": {
              "module": "aws_cdk.aws_imagebuilder"
            }
          }
        },
        "aws-cdk-lib.aws_inspector": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Inspector"
            },
            "java": {
              "package": "software.amazon.awscdk.services.inspector"
            },
            "python": {
              "module": "aws_cdk.aws_inspector"
            }
          }
        },
        "aws-cdk-lib.aws_inspectorv2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.InspectorV2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.inspectorv2"
            },
            "python": {
              "module": "aws_cdk.aws_inspectorv2"
            }
          }
        },
        "aws-cdk-lib.aws_internetmonitor": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.InternetMonitor"
            },
            "java": {
              "package": "software.amazon.awscdk.services.internetmonitor"
            },
            "python": {
              "module": "aws_cdk.aws_internetmonitor"
            }
          }
        },
        "aws-cdk-lib.aws_iot": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoT"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iot"
            },
            "python": {
              "module": "aws_cdk.aws_iot"
            }
          }
        },
        "aws-cdk-lib.aws_iot1click": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoT1Click"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iot1click"
            },
            "python": {
              "module": "aws_cdk.aws_iot1click"
            }
          }
        },
        "aws-cdk-lib.aws_iotanalytics": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTAnalytics"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotanalytics"
            },
            "python": {
              "module": "aws_cdk.aws_iotanalytics"
            }
          }
        },
        "aws-cdk-lib.aws_iotcoredeviceadvisor": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTCoreDeviceAdvisor"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotcoredeviceadvisor"
            },
            "python": {
              "module": "aws_cdk.aws_iotcoredeviceadvisor"
            }
          }
        },
        "aws-cdk-lib.aws_iotevents": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTEvents"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotevents"
            },
            "python": {
              "module": "aws_cdk.aws_iotevents"
            }
          }
        },
        "aws-cdk-lib.aws_iotfleethub": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTFleetHub"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotfleethub"
            },
            "python": {
              "module": "aws_cdk.aws_iotfleethub"
            }
          }
        },
        "aws-cdk-lib.aws_iotfleetwise": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTFleetWise"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotfleetwise"
            },
            "python": {
              "module": "aws_cdk.aws_iotfleetwise"
            }
          }
        },
        "aws-cdk-lib.aws_iotsitewise": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTSiteWise"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotsitewise"
            },
            "python": {
              "module": "aws_cdk.aws_iotsitewise"
            }
          }
        },
        "aws-cdk-lib.aws_iotthingsgraph": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTThingsGraph"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotthingsgraph"
            },
            "python": {
              "module": "aws_cdk.aws_iotthingsgraph"
            }
          }
        },
        "aws-cdk-lib.aws_iottwinmaker": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTTwinMaker"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iottwinmaker"
            },
            "python": {
              "module": "aws_cdk.aws_iottwinmaker"
            }
          }
        },
        "aws-cdk-lib.aws_iotwireless": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTWireless"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotwireless"
            },
            "python": {
              "module": "aws_cdk.aws_iotwireless"
            }
          }
        },
        "aws-cdk-lib.aws_ivs": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Ivs"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ivs"
            },
            "python": {
              "module": "aws_cdk.aws_ivs"
            }
          }
        },
        "aws-cdk-lib.aws_ivschat": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IVSChat"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ivschat"
            },
            "python": {
              "module": "aws_cdk.aws_ivschat"
            }
          }
        },
        "aws-cdk-lib.aws_kafkaconnect": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.KafkaConnect"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kafkaconnect"
            },
            "python": {
              "module": "aws_cdk.aws_kafkaconnect"
            }
          }
        },
        "aws-cdk-lib.aws_kendra": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Kendra"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kendra"
            },
            "python": {
              "module": "aws_cdk.aws_kendra"
            }
          }
        },
        "aws-cdk-lib.aws_kendraranking": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.KendraRanking"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kendraranking"
            },
            "python": {
              "module": "aws_cdk.aws_kendraranking"
            }
          }
        },
        "aws-cdk-lib.aws_kinesis": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Kinesis"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kinesis"
            },
            "python": {
              "module": "aws_cdk.aws_kinesis"
            }
          }
        },
        "aws-cdk-lib.aws_kinesisanalytics": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.KinesisAnalytics"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kinesisanalytics"
            },
            "python": {
              "module": "aws_cdk.aws_kinesisanalytics"
            }
          }
        },
        "aws-cdk-lib.aws_kinesisanalyticsv2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.KinesisAnalyticsV2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kinesisanalyticsv2"
            },
            "python": {
              "module": "aws_cdk.aws_kinesisanalyticsv2"
            }
          }
        },
        "aws-cdk-lib.aws_kinesisfirehose": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.KinesisFirehose"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kinesisfirehose"
            },
            "python": {
              "module": "aws_cdk.aws_kinesisfirehose"
            }
          }
        },
        "aws-cdk-lib.aws_kinesisvideo": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.KinesisVideo"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kinesisvideo"
            },
            "python": {
              "module": "aws_cdk.aws_kinesisvideo"
            }
          }
        },
        "aws-cdk-lib.aws_kms": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.KMS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kms"
            },
            "python": {
              "module": "aws_cdk.aws_kms"
            }
          }
        },
        "aws-cdk-lib.aws_lakeformation": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.LakeFormation"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lakeformation"
            },
            "python": {
              "module": "aws_cdk.aws_lakeformation"
            }
          }
        },
        "aws-cdk-lib.aws_lambda": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Lambda"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lambda"
            },
            "python": {
              "module": "aws_cdk.aws_lambda"
            }
          }
        },
        "aws-cdk-lib.aws_lambda_destinations": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Lambda.Destinations"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lambda.destinations"
            },
            "python": {
              "module": "aws_cdk.aws_lambda_destinations"
            }
          }
        },
        "aws-cdk-lib.aws_lambda_event_sources": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Lambda.EventSources"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lambda.eventsources"
            },
            "python": {
              "module": "aws_cdk.aws_lambda_event_sources"
            }
          }
        },
        "aws-cdk-lib.aws_lambda_nodejs": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Lambda.Nodejs"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lambda.nodejs"
            },
            "python": {
              "module": "aws_cdk.aws_lambda_nodejs"
            }
          }
        },
        "aws-cdk-lib.aws_launchwizard": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.LaunchWizard"
            },
            "java": {
              "package": "software.amazon.awscdk.services.launchwizard"
            },
            "python": {
              "module": "aws_cdk.aws_launchwizard"
            }
          }
        },
        "aws-cdk-lib.aws_lex": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Lex"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lex"
            },
            "python": {
              "module": "aws_cdk.aws_lex"
            }
          }
        },
        "aws-cdk-lib.aws_licensemanager": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.LicenseManager"
            },
            "java": {
              "package": "software.amazon.awscdk.services.licensemanager"
            },
            "python": {
              "module": "aws_cdk.aws_licensemanager"
            }
          }
        },
        "aws-cdk-lib.aws_lightsail": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Lightsail"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lightsail"
            },
            "python": {
              "module": "aws_cdk.aws_lightsail"
            }
          }
        },
        "aws-cdk-lib.aws_location": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Location"
            },
            "java": {
              "package": "software.amazon.awscdk.services.location"
            },
            "python": {
              "module": "aws_cdk.aws_location"
            }
          }
        },
        "aws-cdk-lib.aws_logs": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Logs"
            },
            "java": {
              "package": "software.amazon.awscdk.services.logs"
            },
            "python": {
              "module": "aws_cdk.aws_logs"
            }
          }
        },
        "aws-cdk-lib.aws_logs_destinations": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Logs.Destinations"
            },
            "java": {
              "package": "software.amazon.awscdk.services.logs.destinations"
            },
            "python": {
              "module": "aws_cdk.aws_logs_destinations"
            }
          }
        },
        "aws-cdk-lib.aws_lookoutequipment": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.LookoutEquipment"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lookoutequipment"
            },
            "python": {
              "module": "aws_cdk.aws_lookoutequipment"
            }
          }
        },
        "aws-cdk-lib.aws_lookoutmetrics": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.LookoutMetrics"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lookoutmetrics"
            },
            "python": {
              "module": "aws_cdk.aws_lookoutmetrics"
            }
          }
        },
        "aws-cdk-lib.aws_lookoutvision": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.LookoutVision"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lookoutvision"
            },
            "python": {
              "module": "aws_cdk.aws_lookoutvision"
            }
          }
        },
        "aws-cdk-lib.aws_m2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.M2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.m2"
            },
            "python": {
              "module": "aws_cdk.aws_m2"
            }
          }
        },
        "aws-cdk-lib.aws_macie": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Macie"
            },
            "java": {
              "package": "software.amazon.awscdk.services.macie"
            },
            "python": {
              "module": "aws_cdk.aws_macie"
            }
          }
        },
        "aws-cdk-lib.aws_managedblockchain": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ManagedBlockchain"
            },
            "java": {
              "package": "software.amazon.awscdk.services.managedblockchain"
            },
            "python": {
              "module": "aws_cdk.aws_managedblockchain"
            }
          }
        },
        "aws-cdk-lib.aws_mediaconnect": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MediaConnect"
            },
            "java": {
              "package": "software.amazon.awscdk.services.mediaconnect"
            },
            "python": {
              "module": "aws_cdk.aws_mediaconnect"
            }
          }
        },
        "aws-cdk-lib.aws_mediaconvert": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MediaConvert"
            },
            "java": {
              "package": "software.amazon.awscdk.services.mediaconvert"
            },
            "python": {
              "module": "aws_cdk.aws_mediaconvert"
            }
          }
        },
        "aws-cdk-lib.aws_medialive": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MediaLive"
            },
            "java": {
              "package": "software.amazon.awscdk.services.medialive"
            },
            "python": {
              "module": "aws_cdk.aws_medialive"
            }
          }
        },
        "aws-cdk-lib.aws_mediapackage": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MediaPackage"
            },
            "java": {
              "package": "software.amazon.awscdk.services.mediapackage"
            },
            "python": {
              "module": "aws_cdk.aws_mediapackage"
            }
          }
        },
        "aws-cdk-lib.aws_mediapackagev2": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.MediaPackageV2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.mediapackagev2"
            },
            "python": {
              "module": "aws_cdk.aws_mediapackagev2"
            }
          }
        },
        "aws-cdk-lib.aws_mediastore": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MediaStore"
            },
            "java": {
              "package": "software.amazon.awscdk.services.mediastore"
            },
            "python": {
              "module": "aws_cdk.aws_mediastore"
            }
          }
        },
        "aws-cdk-lib.aws_mediatailor": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MediaTailor"
            },
            "java": {
              "package": "software.amazon.awscdk.services.mediatailor"
            },
            "python": {
              "module": "aws_cdk.aws_mediatailor"
            }
          }
        },
        "aws-cdk-lib.aws_memorydb": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MemoryDB"
            },
            "java": {
              "package": "software.amazon.awscdk.services.memorydb"
            },
            "python": {
              "module": "aws_cdk.aws_memorydb"
            }
          }
        },
        "aws-cdk-lib.aws_msk": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MSK"
            },
            "java": {
              "package": "software.amazon.awscdk.services.msk"
            },
            "python": {
              "module": "aws_cdk.aws_msk"
            }
          }
        },
        "aws-cdk-lib.aws_mwaa": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MWAA"
            },
            "java": {
              "package": "software.amazon.awscdk.services.mwaa"
            },
            "python": {
              "module": "aws_cdk.aws_mwaa"
            }
          }
        },
        "aws-cdk-lib.aws_neptune": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Neptune"
            },
            "java": {
              "package": "software.amazon.awscdk.services.neptune"
            },
            "python": {
              "module": "aws_cdk.aws_neptune"
            }
          }
        },
        "aws-cdk-lib.aws_neptunegraph": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.NeptuneGraph"
            },
            "java": {
              "package": "software.amazon.awscdk.services.neptunegraph"
            },
            "python": {
              "module": "aws_cdk.aws_neptunegraph"
            }
          }
        },
        "aws-cdk-lib.aws_networkfirewall": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.NetworkFirewall"
            },
            "java": {
              "package": "software.amazon.awscdk.services.networkfirewall"
            },
            "python": {
              "module": "aws_cdk.aws_networkfirewall"
            }
          }
        },
        "aws-cdk-lib.aws_networkmanager": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.NetworkManager"
            },
            "java": {
              "package": "software.amazon.awscdk.services.networkmanager"
            },
            "python": {
              "module": "aws_cdk.aws_networkmanager"
            }
          }
        },
        "aws-cdk-lib.aws_nimblestudio": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.NimbleStudio"
            },
            "java": {
              "package": "software.amazon.awscdk.services.nimblestudio"
            },
            "python": {
              "module": "aws_cdk.aws_nimblestudio"
            }
          }
        },
        "aws-cdk-lib.aws_oam": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Oam"
            },
            "java": {
              "package": "software.amazon.awscdk.services.oam"
            },
            "python": {
              "module": "aws_cdk.aws_oam"
            }
          }
        },
        "aws-cdk-lib.aws_omics": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Omics"
            },
            "java": {
              "package": "software.amazon.awscdk.services.omics"
            },
            "python": {
              "module": "aws_cdk.aws_omics"
            }
          }
        },
        "aws-cdk-lib.aws_opensearchserverless": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.OpenSearchServerless"
            },
            "java": {
              "package": "software.amazon.awscdk.services.opensearchserverless"
            },
            "python": {
              "module": "aws_cdk.aws_opensearchserverless"
            }
          }
        },
        "aws-cdk-lib.aws_opensearchservice": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.OpenSearchService"
            },
            "java": {
              "package": "software.amazon.awscdk.services.opensearchservice"
            },
            "python": {
              "module": "aws_cdk.aws_opensearchservice"
            }
          }
        },
        "aws-cdk-lib.aws_opsworks": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.OpsWorks"
            },
            "java": {
              "package": "software.amazon.awscdk.services.opsworks"
            },
            "python": {
              "module": "aws_cdk.aws_opsworks"
            }
          }
        },
        "aws-cdk-lib.aws_opsworkscm": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.OpsWorksCM"
            },
            "java": {
              "package": "software.amazon.awscdk.services.opsworkscm"
            },
            "python": {
              "module": "aws_cdk.aws_opsworkscm"
            }
          }
        },
        "aws-cdk-lib.aws_organizations": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Organizations"
            },
            "java": {
              "package": "software.amazon.awscdk.services.organizations"
            },
            "python": {
              "module": "aws_cdk.aws_organizations"
            }
          }
        },
        "aws-cdk-lib.aws_osis": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.OSIS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.osis"
            },
            "python": {
              "module": "aws_cdk.aws_osis"
            }
          }
        },
        "aws-cdk-lib.aws_panorama": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Panorama"
            },
            "java": {
              "package": "software.amazon.awscdk.services.panorama"
            },
            "python": {
              "module": "aws_cdk.aws_panorama"
            }
          }
        },
        "aws-cdk-lib.aws_paymentcryptography": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.PaymentCryptography"
            },
            "java": {
              "package": "software.amazon.awscdk.services.paymentcryptography"
            },
            "python": {
              "module": "aws_cdk.aws_paymentcryptography"
            }
          }
        },
        "aws-cdk-lib.aws_pcaconnectorad": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.PCAConnectorAD"
            },
            "java": {
              "package": "software.amazon.awscdk.services.pcaconnectorad"
            },
            "python": {
              "module": "aws_cdk.aws_pcaconnectorad"
            }
          }
        },
        "aws-cdk-lib.aws_pcaconnectorscep": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.PCAConnectorSCEP"
            },
            "java": {
              "package": "software.amazon.awscdk.services.pcaconnectorscep"
            },
            "python": {
              "module": "aws_cdk.aws_pcaconnectorscep"
            }
          }
        },
        "aws-cdk-lib.aws_personalize": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Personalize"
            },
            "java": {
              "package": "software.amazon.awscdk.services.personalize"
            },
            "python": {
              "module": "aws_cdk.aws_personalize"
            }
          }
        },
        "aws-cdk-lib.aws_pinpoint": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Pinpoint"
            },
            "java": {
              "package": "software.amazon.awscdk.services.pinpoint"
            },
            "python": {
              "module": "aws_cdk.aws_pinpoint"
            }
          }
        },
        "aws-cdk-lib.aws_pinpointemail": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.PinpointEmail"
            },
            "java": {
              "package": "software.amazon.awscdk.services.pinpointemail"
            },
            "python": {
              "module": "aws_cdk.aws_pinpointemail"
            }
          }
        },
        "aws-cdk-lib.aws_pipes": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Pipes"
            },
            "java": {
              "package": "software.amazon.awscdk.services.pipes"
            },
            "python": {
              "module": "aws_cdk.aws_pipes"
            }
          }
        },
        "aws-cdk-lib.aws_proton": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.Proton"
            },
            "java": {
              "package": "software.amazon.awscdk.services.proton"
            },
            "python": {
              "module": "aws_cdk.aws_proton"
            }
          }
        },
        "aws-cdk-lib.aws_qbusiness": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.QBusiness"
            },
            "java": {
              "package": "software.amazon.awscdk.services.qbusiness"
            },
            "python": {
              "module": "aws_cdk.aws_qbusiness"
            }
          }
        },
        "aws-cdk-lib.aws_qldb": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.QLDB"
            },
            "java": {
              "package": "software.amazon.awscdk.services.qldb"
            },
            "python": {
              "module": "aws_cdk.aws_qldb"
            }
          }
        },
        "aws-cdk-lib.aws_quicksight": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.QuickSight"
            },
            "java": {
              "package": "software.amazon.awscdk.services.quicksight"
            },
            "python": {
              "module": "aws_cdk.aws_quicksight"
            }
          }
        },
        "aws-cdk-lib.aws_ram": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.RAM"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ram"
            },
            "python": {
              "module": "aws_cdk.aws_ram"
            }
          }
        },
        "aws-cdk-lib.aws_rds": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.RDS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.rds"
            },
            "python": {
              "module": "aws_cdk.aws_rds"
            }
          }
        },
        "aws-cdk-lib.aws_redshift": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Redshift"
            },
            "java": {
              "package": "software.amazon.awscdk.services.redshift"
            },
            "python": {
              "module": "aws_cdk.aws_redshift"
            }
          }
        },
        "aws-cdk-lib.aws_redshiftserverless": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.RedshiftServerless"
            },
            "java": {
              "package": "software.amazon.awscdk.services.redshiftserverless"
            },
            "python": {
              "module": "aws_cdk.aws_redshiftserverless"
            }
          }
        },
        "aws-cdk-lib.aws_refactorspaces": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.RefactorSpaces"
            },
            "java": {
              "package": "software.amazon.awscdk.services.refactorspaces"
            },
            "python": {
              "module": "aws_cdk.aws_refactorspaces"
            }
          }
        },
        "aws-cdk-lib.aws_rekognition": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Rekognition"
            },
            "java": {
              "package": "software.amazon.awscdk.services.rekognition"
            },
            "python": {
              "module": "aws_cdk.aws_rekognition"
            }
          }
        },
        "aws-cdk-lib.aws_resiliencehub": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ResilienceHub"
            },
            "java": {
              "package": "software.amazon.awscdk.services.resiliencehub"
            },
            "python": {
              "module": "aws_cdk.aws_resiliencehub"
            }
          }
        },
        "aws-cdk-lib.aws_resourceexplorer2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ResourceExplorer2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.resourceexplorer2"
            },
            "python": {
              "module": "aws_cdk.aws_resourceexplorer2"
            }
          }
        },
        "aws-cdk-lib.aws_resourcegroups": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ResourceGroups"
            },
            "java": {
              "package": "software.amazon.awscdk.services.resourcegroups"
            },
            "python": {
              "module": "aws_cdk.aws_resourcegroups"
            }
          }
        },
        "aws-cdk-lib.aws_robomaker": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.RoboMaker"
            },
            "java": {
              "package": "software.amazon.awscdk.services.robomaker"
            },
            "python": {
              "module": "aws_cdk.aws_robomaker"
            }
          }
        },
        "aws-cdk-lib.aws_rolesanywhere": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.RolesAnywhere"
            },
            "java": {
              "package": "software.amazon.awscdk.services.rolesanywhere"
            },
            "python": {
              "module": "aws_cdk.aws_rolesanywhere"
            }
          }
        },
        "aws-cdk-lib.aws_route53": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Route53"
            },
            "java": {
              "package": "software.amazon.awscdk.services.route53"
            },
            "python": {
              "module": "aws_cdk.aws_route53"
            }
          }
        },
        "aws-cdk-lib.aws_route53_patterns": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Route53.Patterns"
            },
            "java": {
              "package": "software.amazon.awscdk.services.route53.patterns"
            },
            "python": {
              "module": "aws_cdk.aws_route53_patterns"
            }
          }
        },
        "aws-cdk-lib.aws_route53_targets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Route53.Targets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.route53.targets"
            },
            "python": {
              "module": "aws_cdk.aws_route53_targets"
            }
          }
        },
        "aws-cdk-lib.aws_route53profiles": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.Route53Profiles"
            },
            "java": {
              "package": "software.amazon.awscdk.services.route53profiles"
            },
            "python": {
              "module": "aws_cdk.aws_route53profiles"
            }
          }
        },
        "aws-cdk-lib.aws_route53recoverycontrol": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Route53RecoveryControl"
            },
            "java": {
              "package": "software.amazon.awscdk.services.route53recoverycontrol"
            },
            "python": {
              "module": "aws_cdk.aws_route53recoverycontrol"
            }
          }
        },
        "aws-cdk-lib.aws_route53recoveryreadiness": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Route53RecoveryReadiness"
            },
            "java": {
              "package": "software.amazon.awscdk.services.route53recoveryreadiness"
            },
            "python": {
              "module": "aws_cdk.aws_route53recoveryreadiness"
            }
          }
        },
        "aws-cdk-lib.aws_route53resolver": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Route53Resolver"
            },
            "java": {
              "package": "software.amazon.awscdk.services.route53resolver"
            },
            "python": {
              "module": "aws_cdk.aws_route53resolver"
            }
          }
        },
        "aws-cdk-lib.aws_rum": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.RUM"
            },
            "java": {
              "package": "software.amazon.awscdk.services.rum"
            },
            "python": {
              "module": "aws_cdk.aws_rum"
            }
          }
        },
        "aws-cdk-lib.aws_s3": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.S3"
            },
            "java": {
              "package": "software.amazon.awscdk.services.s3"
            },
            "python": {
              "module": "aws_cdk.aws_s3"
            }
          }
        },
        "aws-cdk-lib.aws_s3_assets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.S3.Assets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.s3.assets"
            },
            "python": {
              "module": "aws_cdk.aws_s3_assets"
            }
          }
        },
        "aws-cdk-lib.aws_s3_deployment": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.S3.Deployment"
            },
            "java": {
              "package": "software.amazon.awscdk.services.s3.deployment"
            },
            "python": {
              "module": "aws_cdk.aws_s3_deployment"
            }
          }
        },
        "aws-cdk-lib.aws_s3_notifications": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.S3.Notifications"
            },
            "java": {
              "package": "software.amazon.awscdk.services.s3.notifications"
            },
            "python": {
              "module": "aws_cdk.aws_s3_notifications"
            }
          }
        },
        "aws-cdk-lib.aws_s3express": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.S3Express"
            },
            "java": {
              "package": "software.amazon.awscdk.services.s3express"
            },
            "python": {
              "module": "aws_cdk.aws_s3express"
            }
          }
        },
        "aws-cdk-lib.aws_s3objectlambda": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.S3ObjectLambda"
            },
            "java": {
              "package": "software.amazon.awscdk.services.s3objectlambda"
            },
            "python": {
              "module": "aws_cdk.aws_s3objectlambda"
            }
          }
        },
        "aws-cdk-lib.aws_s3outposts": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.S3Outposts"
            },
            "java": {
              "package": "software.amazon.awscdk.services.s3outposts"
            },
            "python": {
              "module": "aws_cdk.aws_s3outposts"
            }
          }
        },
        "aws-cdk-lib.aws_sagemaker": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Sagemaker"
            },
            "java": {
              "package": "software.amazon.awscdk.services.sagemaker"
            },
            "python": {
              "module": "aws_cdk.aws_sagemaker"
            }
          }
        },
        "aws-cdk-lib.aws_sam": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SAM"
            },
            "java": {
              "package": "software.amazon.awscdk.services.sam"
            },
            "python": {
              "module": "aws_cdk.aws_sam"
            }
          }
        },
        "aws-cdk-lib.aws_scheduler": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Scheduler"
            },
            "java": {
              "package": "software.amazon.awscdk.services.scheduler"
            },
            "python": {
              "module": "aws_cdk.aws_scheduler"
            }
          }
        },
        "aws-cdk-lib.aws_sdb": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SDB"
            },
            "java": {
              "package": "software.amazon.awscdk.services.sdb"
            },
            "python": {
              "module": "aws_cdk.aws_sdb"
            }
          }
        },
        "aws-cdk-lib.aws_secretsmanager": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SecretsManager"
            },
            "java": {
              "package": "software.amazon.awscdk.services.secretsmanager"
            },
            "python": {
              "module": "aws_cdk.aws_secretsmanager"
            }
          }
        },
        "aws-cdk-lib.aws_securityhub": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SecurityHub"
            },
            "java": {
              "package": "software.amazon.awscdk.services.securityhub"
            },
            "python": {
              "module": "aws_cdk.aws_securityhub"
            }
          }
        },
        "aws-cdk-lib.aws_securitylake": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.SecurityLake"
            },
            "java": {
              "package": "software.amazon.awscdk.services.securitylake"
            },
            "python": {
              "module": "aws_cdk.aws_securitylake"
            }
          }
        },
        "aws-cdk-lib.aws_servicecatalog": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Servicecatalog"
            },
            "java": {
              "package": "software.amazon.awscdk.services.servicecatalog"
            },
            "python": {
              "module": "aws_cdk.aws_servicecatalog"
            }
          }
        },
        "aws-cdk-lib.aws_servicecatalogappregistry": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Servicecatalogappregistry"
            },
            "java": {
              "package": "software.amazon.awscdk.services.servicecatalogappregistry"
            },
            "python": {
              "module": "aws_cdk.aws_servicecatalogappregistry"
            }
          }
        },
        "aws-cdk-lib.aws_servicediscovery": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ServiceDiscovery"
            },
            "java": {
              "package": "software.amazon.awscdk.services.servicediscovery"
            },
            "python": {
              "module": "aws_cdk.aws_servicediscovery"
            }
          }
        },
        "aws-cdk-lib.aws_ses": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SES"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ses"
            },
            "python": {
              "module": "aws_cdk.aws_ses"
            }
          }
        },
        "aws-cdk-lib.aws_ses_actions": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SES.Actions"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ses.actions"
            },
            "python": {
              "module": "aws_cdk.aws_ses_actions"
            }
          }
        },
        "aws-cdk-lib.aws_shield": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.Shield"
            },
            "java": {
              "package": "software.amazon.awscdk.services.shield"
            },
            "python": {
              "module": "aws_cdk.aws_shield"
            }
          }
        },
        "aws-cdk-lib.aws_signer": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Signer"
            },
            "java": {
              "package": "software.amazon.awscdk.services.signer"
            },
            "python": {
              "module": "aws_cdk.aws_signer"
            }
          }
        },
        "aws-cdk-lib.aws_simspaceweaver": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SimSpaceWeaver"
            },
            "java": {
              "package": "software.amazon.awscdk.services.simspaceweaver"
            },
            "python": {
              "module": "aws_cdk.aws_simspaceweaver"
            }
          }
        },
        "aws-cdk-lib.aws_sns": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SNS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.sns"
            },
            "python": {
              "module": "aws_cdk.aws_sns"
            }
          }
        },
        "aws-cdk-lib.aws_sns_subscriptions": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SNS.Subscriptions"
            },
            "java": {
              "package": "software.amazon.awscdk.services.sns.subscriptions"
            },
            "python": {
              "module": "aws_cdk.aws_sns_subscriptions"
            }
          }
        },
        "aws-cdk-lib.aws_sqs": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SQS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.sqs"
            },
            "python": {
              "module": "aws_cdk.aws_sqs"
            }
          }
        },
        "aws-cdk-lib.aws_ssm": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SSM"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ssm"
            },
            "python": {
              "module": "aws_cdk.aws_ssm"
            }
          }
        },
        "aws-cdk-lib.aws_ssmcontacts": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SSMContacts"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ssmcontacts"
            },
            "python": {
              "module": "aws_cdk.aws_ssmcontacts"
            }
          }
        },
        "aws-cdk-lib.aws_ssmincidents": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SSMIncidents"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ssmincidents"
            },
            "python": {
              "module": "aws_cdk.aws_ssmincidents"
            }
          }
        },
        "aws-cdk-lib.aws_ssmquicksetup": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.SSMQuickSetup"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ssmquicksetup"
            },
            "python": {
              "module": "aws_cdk.aws_ssmquicksetup"
            }
          }
        },
        "aws-cdk-lib.aws_sso": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SSO"
            },
            "java": {
              "package": "software.amazon.awscdk.services.sso"
            },
            "python": {
              "module": "aws_cdk.aws_sso"
            }
          }
        },
        "aws-cdk-lib.aws_stepfunctions": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.StepFunctions"
            },
            "java": {
              "package": "software.amazon.awscdk.services.stepfunctions"
            },
            "python": {
              "module": "aws_cdk.aws_stepfunctions"
            }
          }
        },
        "aws-cdk-lib.aws_stepfunctions_tasks": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.StepFunctions.Tasks"
            },
            "java": {
              "package": "software.amazon.awscdk.services.stepfunctions.tasks"
            },
            "python": {
              "module": "aws_cdk.aws_stepfunctions_tasks"
            }
          }
        },
        "aws-cdk-lib.aws_supportapp": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SupportApp"
            },
            "java": {
              "package": "software.amazon.awscdk.services.supportapp"
            },
            "python": {
              "module": "aws_cdk.aws_supportapp"
            }
          }
        },
        "aws-cdk-lib.aws_synthetics": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Synthetics"
            },
            "java": {
              "package": "software.amazon.awscdk.services.synthetics"
            },
            "python": {
              "module": "aws_cdk.aws_synthetics"
            }
          }
        },
        "aws-cdk-lib.aws_systemsmanagersap": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SystemsManagerSAP"
            },
            "java": {
              "package": "software.amazon.awscdk.services.systemsmanagersap"
            },
            "python": {
              "module": "aws_cdk.aws_systemsmanagersap"
            }
          }
        },
        "aws-cdk-lib.aws_timestream": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Timestream"
            },
            "java": {
              "package": "software.amazon.awscdk.services.timestream"
            },
            "python": {
              "module": "aws_cdk.aws_timestream"
            }
          }
        },
        "aws-cdk-lib.aws_transfer": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Transfer"
            },
            "java": {
              "package": "software.amazon.awscdk.services.transfer"
            },
            "python": {
              "module": "aws_cdk.aws_transfer"
            }
          }
        },
        "aws-cdk-lib.aws_verifiedpermissions": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.VerifiedPermissions"
            },
            "java": {
              "package": "software.amazon.awscdk.services.verifiedpermissions"
            },
            "python": {
              "module": "aws_cdk.aws_verifiedpermissions"
            }
          }
        },
        "aws-cdk-lib.aws_voiceid": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.VoiceID"
            },
            "java": {
              "package": "software.amazon.awscdk.services.voiceid"
            },
            "python": {
              "module": "aws_cdk.aws_voiceid"
            }
          }
        },
        "aws-cdk-lib.aws_vpclattice": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.VpcLattice"
            },
            "java": {
              "package": "software.amazon.awscdk.services.vpclattice"
            },
            "python": {
              "module": "aws_cdk.aws_vpclattice"
            }
          }
        },
        "aws-cdk-lib.aws_waf": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.WAF"
            },
            "java": {
              "package": "software.amazon.awscdk.services.waf"
            },
            "python": {
              "module": "aws_cdk.aws_waf"
            }
          }
        },
        "aws-cdk-lib.aws_wafregional": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.WAFRegional"
            },
            "java": {
              "package": "software.amazon.awscdk.services.waf.regional"
            },
            "python": {
              "module": "aws_cdk.aws_wafregional"
            }
          }
        },
        "aws-cdk-lib.aws_wafv2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.WAFv2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.wafv2"
            },
            "python": {
              "module": "aws_cdk.aws_wafv2"
            }
          }
        },
        "aws-cdk-lib.aws_wisdom": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Wisdom"
            },
            "java": {
              "package": "software.amazon.awscdk.services.wisdom"
            },
            "python": {
              "module": "aws_cdk.aws_wisdom"
            }
          }
        },
        "aws-cdk-lib.aws_workspaces": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.WorkSpaces"
            },
            "java": {
              "package": "software.amazon.awscdk.services.workspaces"
            },
            "python": {
              "module": "aws_cdk.aws_workspaces"
            }
          }
        },
        "aws-cdk-lib.aws_workspacesthinclient": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.WorkSpacesThinClient"
            },
            "java": {
              "package": "software.amazon.awscdk.services.workspacesthinclient"
            },
            "python": {
              "module": "aws_cdk.aws_workspacesthinclient"
            }
          }
        },
        "aws-cdk-lib.aws_workspacesweb": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.WorkSpacesWeb"
            },
            "java": {
              "package": "software.amazon.awscdk.services.workspacesweb"
            },
            "python": {
              "module": "aws_cdk.aws_workspacesweb"
            }
          }
        },
        "aws-cdk-lib.aws_xray": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.XRay"
            },
            "java": {
              "package": "software.amazon.awscdk.services.xray"
            },
            "python": {
              "module": "aws_cdk.aws_xray"
            }
          }
        },
        "aws-cdk-lib.cloud_assembly_schema": {},
        "aws-cdk-lib.cloudformation_include": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.CloudFormation.Include"
            },
            "java": {
              "package": "software.amazon.awscdk.cloudformation.include"
            },
            "python": {
              "module": "aws_cdk.cloudformation_include"
            }
          }
        },
        "aws-cdk-lib.custom_resources": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.CustomResources"
            },
            "java": {
              "package": "software.amazon.awscdk.customresources"
            },
            "python": {
              "module": "aws_cdk.custom_resources"
            }
          }
        },
        "aws-cdk-lib.cx_api": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.CXAPI"
            },
            "java": {
              "package": "software.amazon.awscdk.cxapi"
            },
            "python": {
              "module": "aws_cdk.cx_api"
            }
          }
        },
        "aws-cdk-lib.lambda_layer_awscli": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.LambdaLayer.AwsCli"
            },
            "java": {
              "package": "software.amazon.awscdk.lambdalayer.awscli"
            },
            "python": {
              "module": "aws_cdk.lambda_layer_awscli"
            }
          }
        },
        "aws-cdk-lib.lambda_layer_kubectl": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.LambdaLayer.Kubectl"
            },
            "java": {
              "package": "software.amazon.awscdk.lambdalayer.kubectl"
            },
            "python": {
              "module": "aws_cdk.lambda_layer_kubectl"
            }
          }
        },
        "aws-cdk-lib.lambda_layer_node_proxy_agent": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.LambdaLayer.NodeProxyAgent"
            },
            "java": {
              "package": "software.amazon.awscdk.lambda.layer.node.proxy.agent"
            },
            "python": {
              "module": "aws_cdk.lambda_layer_node_proxy_agent"
            }
          }
        },
        "aws-cdk-lib.pipelines": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.Pipelines"
            },
            "java": {
              "package": "software.amazon.awscdk.pipelines"
            },
            "python": {
              "module": "aws_cdk.pipelines"
            }
          }
        },
        "aws-cdk-lib.region_info": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.RegionInfo"
            },
            "java": {
              "package": "software.amazon.awscdk.regioninfo"
            },
            "python": {
              "module": "aws_cdk.region_info"
            }
          }
        },
        "aws-cdk-lib.triggers": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.Triggers"
            },
            "java": {
              "package": "software.amazon.awscdk.triggers"
            },
            "python": {
              "module": "aws_cdk.triggers"
            }
          }
        }
      },
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK.Lib"
        },
        "go": {
          "moduleName": "github.com/aws/aws-cdk-go",
          "packageName": "awscdk"
        },
        "java": {
          "maven": {
            "artifactId": "aws-cdk-lib",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk"
        },
        "js": {
          "npm": "aws-cdk-lib"
        },
        "python": {
          "distName": "aws-cdk-lib",
          "module": "aws_cdk"
        }
      }
    },
    "cdk-nag": {
      "submodules": {
        "cdk-nag.rules": {},
        "cdk-nag.rules.apigw": {},
        "cdk-nag.rules.appsync": {},
        "cdk-nag.rules.athena": {},
        "cdk-nag.rules.autoscaling": {},
        "cdk-nag.rules.cloud9": {},
        "cdk-nag.rules.cloudfront": {},
        "cdk-nag.rules.cloudtrail": {},
        "cdk-nag.rules.cloudwatch": {},
        "cdk-nag.rules.codebuild": {},
        "cdk-nag.rules.cognito": {},
        "cdk-nag.rules.dms": {},
        "cdk-nag.rules.documentdb": {},
        "cdk-nag.rules.dynamodb": {},
        "cdk-nag.rules.ec2": {},
        "cdk-nag.rules.ecr": {},
        "cdk-nag.rules.ecs": {},
        "cdk-nag.rules.efs": {},
        "cdk-nag.rules.eks": {},
        "cdk-nag.rules.elasticache": {},
        "cdk-nag.rules.elasticbeanstalk": {},
        "cdk-nag.rules.elb": {},
        "cdk-nag.rules.emr": {},
        "cdk-nag.rules.eventbridge": {},
        "cdk-nag.rules.glue": {},
        "cdk-nag.rules.iam": {},
        "cdk-nag.rules.kinesis": {},
        "cdk-nag.rules.kms": {},
        "cdk-nag.rules.lambda": {},
        "cdk-nag.rules.lex": {},
        "cdk-nag.rules.mediastore": {},
        "cdk-nag.rules.msk": {},
        "cdk-nag.rules.neptune": {},
        "cdk-nag.rules.opensearch": {},
        "cdk-nag.rules.quicksight": {},
        "cdk-nag.rules.rds": {},
        "cdk-nag.rules.redshift": {},
        "cdk-nag.rules.s3": {},
        "cdk-nag.rules.sagemaker": {},
        "cdk-nag.rules.secretsmanager": {},
        "cdk-nag.rules.sns": {},
        "cdk-nag.rules.sqs": {},
        "cdk-nag.rules.stepfunctions": {},
        "cdk-nag.rules.timestream": {},
        "cdk-nag.rules.vpc": {},
        "cdk-nag.rules.waf": {}
      },
      "targets": {
        "dotnet": {
          "namespace": "Cdklabs.CdkNag",
          "packageId": "Cdklabs.CdkNag"
        },
        "go": {
          "moduleName": "github.com/cdklabs/cdk-nag-go"
        },
        "java": {
          "maven": {
            "artifactId": "cdknag",
            "groupId": "io.github.cdklabs"
          },
          "package": "io.github.cdklabs.cdknag"
        },
        "js": {
          "npm": "cdk-nag"
        },
        "python": {
          "distName": "cdk-nag",
          "module": "cdk_nag"
        }
      }
    },
    "constructs": {
      "targets": {
        "dotnet": {
          "namespace": "Constructs",
          "packageId": "Constructs"
        },
        "go": {
          "moduleName": "github.com/aws/constructs-go"
        },
        "java": {
          "maven": {
            "artifactId": "constructs",
            "groupId": "software.constructs"
          },
          "package": "software.constructs"
        },
        "js": {
          "npm": "constructs"
        },
        "python": {
          "distName": "constructs",
          "module": "constructs"
        }
      }
    },
    "projen": {
      "submodules": {
        "projen.awscdk": {},
        "projen.build": {},
        "projen.cdk": {},
        "projen.cdk8s": {},
        "projen.cdktf": {},
        "projen.circleci": {},
        "projen.github": {},
        "projen.github.workflows": {},
        "projen.gitlab": {},
        "projen.java": {},
        "projen.javascript": {},
        "projen.python": {},
        "projen.release": {},
        "projen.typescript": {},
        "projen.vscode": {},
        "projen.web": {}
      },
      "targets": {
        "go": {
          "moduleName": "github.com/projen/projen-go"
        },
        "java": {
          "maven": {
            "artifactId": "projen",
            "groupId": "io.github.cdklabs"
          },
          "package": "io.github.cdklabs.projen"
        },
        "js": {
          "npm": "projen"
        },
        "python": {
          "distName": "projen",
          "module": "projen"
        }
      }
    }
  },
  "description": "@aws/pdk",
  "docs": {
    "stability": "stable"
  },
  "homepage": "https://github.com/aws/aws-pdk",
  "jsiiVersion": "5.5.4 (build 1378d94)",
  "keywords": [
    "aws",
    "jsii",
    "pdk",
    "projen"
  ],
  "license": "Apache-2.0",
  "metadata": {
    "jsii": {
      "pacmak": {
        "hasDefaultInterfaces": true
      }
    },
    "tscRootDir": "."
  },
  "name": "@aws/pdk",
  "readme": {
    "markdown": "# AWS PDK\n\nAll documentation is located at: https://aws.github.io/aws-pdk\n\n# aws-arch\n\nPlease refer to [Developer Guide](./docs/developer_guides/aws-arch/index.md).\n\n# cdk-graph\n\nPlease refer to [Developer Guide](./docs/developer_guides/cdk-graph/index.md).\n\n# cdk-graph-plugin-diagram\n\nPlease refer to [Developer Guide](./docs/developer_guides/cdk-graph-plugin-diagram/index.md).\n\n# cdk-graph-plugin-threat-composer\n\nPlease refer to [Developer Guide](./docs/developer_guides/cdk-graph-plugin-threat-composer/index.md).\n\n# cloudscape-react-ts-website\n\nPlease refer to [Developer Guide](./docs/developer_guides/cloudscape-react-ts-website/index.md).\n\n# identity\n\nPlease refer to [Developer Guide](./docs/developer_guides/identity/index.md).\n\n# infrastructure\n\nPlease refer to [Developer Guide](./docs/developer_guides/infrastructure/index.md).\n\n# monorepo\n\nPlease refer to [Developer Guide](./docs/developer_guides/monorepo/index.md).\n\n# pdk-nag\n\nPlease refer to [Developer Guide](./docs/developer_guides/pdk-nag/index.md).\n\n# pipeline\n\nPlease refer to [Developer Guide](./docs/developer_guides/pipeline/index.md).\n\n# static-website\n\nPlease refer to [Developer Guide](./docs/developer_guides/static-website/index.md).\n\n# type-safe-api\n\nPlease refer to [Developer Guide](./docs/developer_guides/type-safe-api/index.md)."
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/aws/aws-pdk"
  },
  "schema": "jsii/0.10.0",
  "submodules": {
    "@aws/pdk.aws_arch": {
      "locationInModule": {
        "filename": "index.ts",
        "line": 7
      },
      "symbolId": "aws-arch/index:"
    },
    "@aws/pdk.aws_arch.aws_arch": {
      "locationInModule": {
        "filename": "aws-arch/index.ts",
        "line": 4
      },
      "symbolId": "aws-arch/ns:"
    },
    "@aws/pdk.aws_arch.aws_arch.AwsAsset": {
      "locationInModule": {
        "filename": "aws-arch/generated/assets.ts",
        "line": 3
      },
      "symbolId": "aws-arch/generated/assets:AwsAsset"
    },
    "@aws/pdk.aws_arch.aws_arch.CfnSpec": {
      "locationInModule": {
        "filename": "aws-arch/generated/cfnspec.ts",
        "line": 3
      },
      "symbolId": "aws-arch/generated/cfnspec:CfnSpec"
    },
    "@aws/pdk.aws_arch.aws_arch.DrawioSpec": {
      "locationInModule": {
        "filename": "aws-arch/generated/drawio-spec.ts",
        "line": 3
      },
      "symbolId": "aws-arch/generated/drawio-spec:DrawioSpec"
    },
    "@aws/pdk.aws_arch.aws_arch.DrawioSpec.Aws4": {
      "locationInModule": {
        "filename": "aws-arch/generated/drawio-spec.ts",
        "line": 4
      },
      "symbolId": "aws-arch/generated/drawio-spec:DrawioSpec.Aws4"
    },
    "@aws/pdk.aws_arch.aws_arch.PricingManifest": {
      "locationInModule": {
        "filename": "aws-arch/internal/pricing-manifest/index.ts",
        "line": 10
      },
      "symbolId": "aws-arch/internal/pricing-manifest/index:PricingManifest"
    },
    "@aws/pdk.cdk_graph": {
      "locationInModule": {
        "filename": "index.ts",
        "line": 8
      },
      "symbolId": "cdk-graph/index:"
    },
    "@aws/pdk.cdk_graph_plugin_diagram": {
      "locationInModule": {
        "filename": "index.ts",
        "line": 9
      },
      "symbolId": "cdk-graph-plugin-diagram/index:"
    },
    "@aws/pdk.cdk_graph_plugin_threat_composer": {
      "locationInModule": {
        "filename": "index.ts",
        "line": 10
      },
      "symbolId": "cdk-graph-plugin-threat-composer/index:"
    },
    "@aws/pdk.cloudscape_react_ts_website": {
      "locationInModule": {
        "filename": "index.ts",
        "line": 6
      },
      "symbolId": "cloudscape-react-ts-website/index:"
    },
    "@aws/pdk.identity": {
      "locationInModule": {
        "filename": "index.ts",
        "line": 4
      },
      "symbolId": "identity/index:"
    },
    "@aws/pdk.infrastructure": {
      "locationInModule": {
        "filename": "index.ts",
        "line": 12
      },
      "symbolId": "infrastructure/index:"
    },
    "@aws/pdk.monorepo": {
      "locationInModule": {
        "filename": "index.ts",
        "line": 2
      },
      "symbolId": "monorepo/index:"
    },
    "@aws/pdk.monorepo.NodePackageUtils": {
      "locationInModule": {
        "filename": "monorepo/utils/node.ts",
        "line": 15
      },
      "symbolId": "monorepo/utils/node:NodePackageUtils"
    },
    "@aws/pdk.monorepo.NodePackageUtils.command": {
      "locationInModule": {
        "filename": "monorepo/utils/node.ts",
        "line": 111
      },
      "symbolId": "monorepo/utils/node:NodePackageUtils.command"
    },
    "@aws/pdk.monorepo.Nx": {
      "locationInModule": {
        "filename": "monorepo/nx-types.ts",
        "line": 6
      },
      "symbolId": "monorepo/nx-types:Nx"
    },
    "@aws/pdk.monorepo.ProjectUtils": {
      "locationInModule": {
        "filename": "monorepo/utils/project.ts",
        "line": 11
      },
      "symbolId": "monorepo/utils/project:ProjectUtils"
    },
    "@aws/pdk.monorepo.Syncpack": {
      "locationInModule": {
        "filename": "monorepo/projects/typescript/syncpack-options.ts",
        "line": 10
      },
      "symbolId": "monorepo/projects/typescript/syncpack-options:Syncpack"
    },
    "@aws/pdk.monorepo.Syncpack.BaseGroupConfig": {
      "locationInModule": {
        "filename": "monorepo/projects/typescript/syncpack-options.ts",
        "line": 92
      },
      "symbolId": "monorepo/projects/typescript/syncpack-options:Syncpack.BaseGroupConfig"
    },
    "@aws/pdk.monorepo.Syncpack.CustomTypeConfig": {
      "locationInModule": {
        "filename": "monorepo/projects/typescript/syncpack-options.ts",
        "line": 156
      },
      "symbolId": "monorepo/projects/typescript/syncpack-options:Syncpack.CustomTypeConfig"
    },
    "@aws/pdk.monorepo.Syncpack.SemverGroupConfig": {
      "locationInModule": {
        "filename": "monorepo/projects/typescript/syncpack-options.ts",
        "line": 102
      },
      "symbolId": "monorepo/projects/typescript/syncpack-options:Syncpack.SemverGroupConfig"
    },
    "@aws/pdk.monorepo.Syncpack.VersionGroupConfig": {
      "locationInModule": {
        "filename": "monorepo/projects/typescript/syncpack-options.ts",
        "line": 118
      },
      "symbolId": "monorepo/projects/typescript/syncpack-options:Syncpack.VersionGroupConfig"
    },
    "@aws/pdk.pdk_nag": {
      "locationInModule": {
        "filename": "index.ts",
        "line": 1
      },
      "symbolId": "pdk-nag/index:"
    },
    "@aws/pdk.pipeline": {
      "locationInModule": {
        "filename": "index.ts",
        "line": 11
      },
      "symbolId": "pipeline/index:"
    },
    "@aws/pdk.static_website": {
      "locationInModule": {
        "filename": "index.ts",
        "line": 3
      },
      "symbolId": "static-website/index:"
    },
    "@aws/pdk.type_safe_api": {
      "locationInModule": {
        "filename": "index.ts",
        "line": 5
      },
      "symbolId": "type-safe-api/index:"
    }
  },
  "targets": {
    "java": {
      "maven": {
        "artifactId": "pdk",
        "groupId": "software.aws"
      },
      "package": "software.aws.pdk"
    },
    "js": {
      "npm": "@aws/pdk"
    },
    "python": {
      "distName": "aws_pdk",
      "module": "aws_pdk"
    }
  },
  "types": {
    "@aws/pdk.aws_arch.AwsArchitecture": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "AwsArchitecture provides an interface for retrieving the inferred normalization between [@aws-cdk/cfnspec](https://github.com/aws/aws-cdk/blob/main/packages/%40aws-cdk/cfnspec) and [AWS Architecture Icons](https://aws.amazon.com/architecture/icons/) systems for all CloudFormation \"services\" and \"resources\"."
      },
      "fqn": "@aws/pdk.aws_arch.AwsArchitecture",
      "kind": "class",
      "locationInModule": {
        "filename": "aws-arch/arch.ts",
        "line": 712
      },
      "methods": [
        {
          "docs": {
            "returns": "Relative asset file path",
            "stability": "stable",
            "summary": "Gets formatted asset path including extension and theme."
          },
          "locationInModule": {
            "filename": "aws-arch/arch.ts",
            "line": 860
          },
          "name": "formatAssetPath",
          "parameters": [
            {
              "docs": {
                "summary": "The qualified asset key (eg: compute/ec2/service_icon, storage/s3/bucket)."
              },
              "name": "qualifiedAssetKey",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The format to return (eg: png, svg)."
              },
              "name": "format",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "- (Optional) The theme to use, if not specific or now matching asset for the them, the default theme is used."
              },
              "name": "theme",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          },
          "static": true
        },
        {
          "docs": {
            "see": "{@link AwsCategory.getCategory }",
            "stability": "stable",
            "summary": "Get specific category based on id."
          },
          "locationInModule": {
            "filename": "aws-arch/arch.ts",
            "line": 753
          },
          "name": "getCategory",
          "parameters": [
            {
              "name": "category",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws/pdk.aws_arch.AwsCategory"
            }
          },
          "static": true
        },
        {
          "docs": {
            "returns": "Returns relative asset icon path",
            "stability": "stable",
            "summary": "Get icon for EC2 instance type."
          },
          "locationInModule": {
            "filename": "aws-arch/arch.ts",
            "line": 784
          },
          "name": "getInstanceTypeIcon",
          "parameters": [
            {
              "docs": {
                "summary": "- The {@link AwsAsset.InstanceType} to get icon for."
              },
              "name": "instanceType",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "- The format of icon."
              },
              "name": "format",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "- Optional theme."
              },
              "name": "theme",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          },
          "static": true
        },
        {
          "docs": {
            "returns": "Returns relative asset icon path",
            "stability": "stable",
            "summary": "Get icon for RDS instance type."
          },
          "locationInModule": {
            "filename": "aws-arch/arch.ts",
            "line": 803
          },
          "name": "getRdsInstanceTypeIcon",
          "parameters": [
            {
              "docs": {
                "summary": "- The {@link AwsAsset.RdsInstanceType} to get icon for."
              },
              "name": "instanceType",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "- The format of icon."
              },
              "name": "format",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "- Optional theme."
              },
              "name": "theme",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          },
          "static": true
        },
        {
          "docs": {
            "see": "{@link AwsResource.getResource }",
            "stability": "stable",
            "summary": "Get resource based on Cfn Resource Type (eg: AWS::S3::Bucket)."
          },
          "locationInModule": {
            "filename": "aws-arch/arch.ts",
            "line": 773
          },
          "name": "getResource",
          "parameters": [
            {
              "name": "cfnType",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws/pdk.aws_arch.AwsResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "see": "{@link AwsSerfice.getService }",
            "stability": "stable",
            "summary": "Get specific service based on identifier (eg: S3, AWS::S3, AWS::S3::Bucket)."
          },
          "locationInModule": {
            "filename": "aws-arch/arch.ts",
            "line": 761
          },
          "name": "getService",
          "parameters": [
            {
              "name": "identifier",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws/pdk.aws_arch.AwsService"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Parse assets path into part descriptor."
          },
          "locationInModule": {
            "filename": "aws-arch/arch.ts",
            "line": 884
          },
          "name": "parseAssetPath",
          "parameters": [
            {
              "docs": {
                "summary": "- Absolute or relative asset file path to parse."
              },
              "name": "assetPath",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws/pdk.aws_arch.aws_arch.ParsedAssetKey"
            }
          },
          "static": true
        },
        {
          "docs": {
            "custom": {
              "throws": "Error if asset path is not relative"
            },
            "returns": "Absolute asset path",
            "stability": "stable",
            "summary": "Resolve relative asset path to absolute asset path."
          },
          "locationInModule": {
            "filename": "aws-arch/arch.ts",
            "line": 822
          },
          "name": "resolveAssetPath",
          "parameters": [
            {
              "docs": {
                "summary": "- The relative asset path to resolve."
              },
              "name": "assetPath",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          },
          "static": true
        },
        {
          "docs": {
            "custom": {
              "throws": "Error if path is not svg"
            },
            "remarks": "`data:image/svg+xml;base64,...`",
            "returns": "SVG [Data URL](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URLs)",
            "stability": "stable",
            "summary": "Resolve relative asset path as SVG [Data URL](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URLs)."
          },
          "locationInModule": {
            "filename": "aws-arch/arch.ts",
            "line": 840
          },
          "name": "resolveAssetSvgDataUrl",
          "parameters": [
            {
              "docs": {
                "summary": "- The relative path of svg asset to resolve."
              },
              "name": "svgAssetPath",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          },
          "static": true
        }
      ],
      "name": "AwsArchitecture",
      "namespace": "aws_arch",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The absolute directory where [AWS Architecture Icons](https://aws.amazon.com/architecture/icons/) are stored and retrieved."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/arch.ts",
            "line": 717
          },
          "name": "assetDirectory",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "{@link AwsCategory.categories }",
            "stability": "stable",
            "summary": "Get all categories."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/arch.ts",
            "line": 731
          },
          "name": "categories",
          "static": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.aws_arch.AwsCategory"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "{@link AwsResource.resources }",
            "stability": "stable",
            "summary": "Get all resources."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/arch.ts",
            "line": 745
          },
          "name": "resources",
          "static": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.aws_arch.AwsResource"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "{@link AwsService.services }",
            "stability": "stable",
            "summary": "Get all services."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/arch.ts",
            "line": 738
          },
          "name": "services",
          "static": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.aws_arch.AwsService"
              },
              "kind": "map"
            }
          }
        }
      ],
      "symbolId": "aws-arch/arch:AwsArchitecture"
    },
    "@aws/pdk.aws_arch.AwsCategory": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "AwsCategory class provides an interface for normalizing category metadata between mapped systems."
      },
      "fqn": "@aws/pdk.aws_arch.AwsCategory",
      "kind": "class",
      "locationInModule": {
        "filename": "aws-arch/arch.ts",
        "line": 118
      },
      "methods": [
        {
          "docs": {
            "returns": "Returns the category with the id",
            "stability": "stable",
            "summary": "Get {@link AwsCategory} based on {@link AwsCategoryId}."
          },
          "locationInModule": {
            "filename": "aws-arch/arch.ts",
            "line": 131
          },
          "name": "getCategory",
          "parameters": [
            {
              "docs": {
                "summary": "The id of the category to retrieve."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws/pdk.aws_arch.AwsCategory"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Gets a list of all services within this category."
          },
          "locationInModule": {
            "filename": "aws-arch/arch.ts",
            "line": 239
          },
          "name": "categoryServices",
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "fqn": "@aws/pdk.aws_arch.AwsService"
                },
                "kind": "array"
              }
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Retrieves a well-formatted relative path to the icon for this given category in the specified format."
          },
          "locationInModule": {
            "filename": "aws-arch/arch.ts",
            "line": 227
          },
          "name": "icon",
          "parameters": [
            {
              "name": "format",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "theme",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "optional": true,
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "AwsCategory",
      "namespace": "aws_arch",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Get record of all categories keyed by category id."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/arch.ts",
            "line": 145
          },
          "name": "categories",
          "static": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.aws_arch.AwsCategory"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Fill color for the category."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/arch.ts",
            "line": 164
          },
          "name": "fillColor",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Font color for the category."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/arch.ts",
            "line": 172
          },
          "name": "fontColor",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Gradien color for the category."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/arch.ts",
            "line": 168
          },
          "name": "gradientColor",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "example": "\"security_identity_compliance\"",
            "stability": "stable",
            "summary": "The unique id of the category."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/arch.ts",
            "line": 154
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "example": "\"Security, Identity, & Compliance\"",
            "stability": "stable",
            "summary": "The proper name of the category."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/arch.ts",
            "line": 160
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Alternative names used to identity this category."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/arch.ts",
            "line": 176
          },
          "name": "variants",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Drawio style definition for this category."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/arch.ts",
            "line": 181
          },
          "name": "drawioStyles",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.aws_arch.AwsCategoryDrawioStyles"
          }
        }
      ],
      "symbolId": "aws-arch/arch:AwsCategory"
    },
    "@aws/pdk.aws_arch.AwsCategoryDrawioStyles": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "AwsCategoryDrawioStyles is a utility class for constructing drawio shape styles for services and resources."
      },
      "fqn": "@aws/pdk.aws_arch.AwsCategoryDrawioStyles",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "aws-arch/arch.ts",
          "line": 58
        },
        "parameters": [
          {
            "name": "categoryShape",
            "type": {
              "fqn": "@aws/pdk.aws_arch.aws_arch.DrawioSpec.Aws4.ShapeNames"
            }
          },
          {
            "name": "base",
            "type": {
              "fqn": "@aws/pdk.aws_arch.aws_arch.DrawioAwsResourceIconStyleBase"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "aws-arch/arch.ts",
        "line": 54
      },
      "methods": [
        {
          "docs": {
            "returns": "The style drawio style definition for the resource based on category style.",
            "stability": "stable",
            "summary": "Gets the drawio style for a resource based on the category style."
          },
          "locationInModule": {
            "filename": "aws-arch/arch.ts",
            "line": 96
          },
          "name": "getResourceStyle",
          "parameters": [
            {
              "docs": {
                "summary": "The resource shape to style based on category."
              },
              "name": "resourceShape",
              "type": {
                "fqn": "@aws/pdk.aws_arch.aws_arch.DrawioSpec.Aws4.ShapeNames"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws/pdk.aws_arch.AwsDrawioShapeStyle"
            }
          }
        },
        {
          "docs": {
            "returns": "The style drawio style definition for the resource based on category style.",
            "stability": "stable",
            "summary": "Gets the drawio style for a service based on the category style."
          },
          "locationInModule": {
            "filename": "aws-arch/arch.ts",
            "line": 82
          },
          "name": "getServiceStyle",
          "parameters": [
            {
              "docs": {
                "summary": "The service shape to style based on category."
              },
              "name": "serviceShape",
              "type": {
                "fqn": "@aws/pdk.aws_arch.aws_arch.DrawioSpec.Aws4.ShapeNames"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws/pdk.aws_arch.AwsDrawioResourceIconStyle"
            }
          }
        }
      ],
      "name": "AwsCategoryDrawioStyles",
      "namespace": "aws_arch",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/arch.ts",
            "line": 56
          },
          "name": "base",
          "type": {
            "fqn": "@aws/pdk.aws_arch.aws_arch.DrawioAwsResourceIconStyleBase"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/arch.ts",
            "line": 55
          },
          "name": "categoryShape",
          "type": {
            "fqn": "@aws/pdk.aws_arch.aws_arch.DrawioSpec.Aws4.ShapeNames"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Get the drawio style for this category."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/arch.ts",
            "line": 69
          },
          "name": "categoryStyle",
          "type": {
            "fqn": "@aws/pdk.aws_arch.AwsDrawioResourceIconStyle"
          }
        }
      ],
      "symbolId": "aws-arch/arch:AwsCategoryDrawioStyles"
    },
    "@aws/pdk.aws_arch.AwsDrawioResourceIconStyle": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Drawio resource icon style definition for AWS Resources."
      },
      "fqn": "@aws/pdk.aws_arch.AwsDrawioResourceIconStyle",
      "interfaces": [
        "@aws/pdk.aws_arch.aws_arch.DrawioAwsResourceIconStyleBase"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "aws-arch/arch.ts",
        "line": 37
      },
      "name": "AwsDrawioResourceIconStyle",
      "namespace": "aws_arch",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/arch.ts",
            "line": 40
          },
          "name": "resIcon",
          "type": {
            "fqn": "@aws/pdk.aws_arch.aws_arch.DrawioSpec.Aws4.ShapeNames"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/arch.ts",
            "line": 39
          },
          "name": "shape",
          "type": {
            "fqn": "@aws/pdk.aws_arch.aws_arch.DrawioAws4ParentShapes"
          }
        }
      ],
      "symbolId": "aws-arch/arch:AwsDrawioResourceIconStyle"
    },
    "@aws/pdk.aws_arch.AwsDrawioShapeStyle": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Drawio shape based style definition."
      },
      "fqn": "@aws/pdk.aws_arch.AwsDrawioShapeStyle",
      "interfaces": [
        "@aws/pdk.aws_arch.aws_arch.DrawioAwsResourceIconStyleBase"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "aws-arch/arch.ts",
        "line": 46
      },
      "name": "AwsDrawioShapeStyle",
      "namespace": "aws_arch",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/arch.ts",
            "line": 47
          },
          "name": "shape",
          "type": {
            "fqn": "@aws/pdk.aws_arch.aws_arch.DrawioSpec.Aws4.ShapeNames"
          }
        }
      ],
      "symbolId": "aws-arch/arch:AwsDrawioShapeStyle"
    },
    "@aws/pdk.aws_arch.AwsResource": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "AwsResource class provides an interface for normalizing resource metadata between mapped systems."
      },
      "fqn": "@aws/pdk.aws_arch.AwsResource",
      "kind": "class",
      "locationInModule": {
        "filename": "aws-arch/arch.ts",
        "line": 462
      },
      "methods": [
        {
          "docs": {
            "custom": {
              "throws": "Error is no resource found"
            },
            "stability": "stable",
            "summary": "Find {@link AwsResource} associated with given value."
          },
          "locationInModule": {
            "filename": "aws-arch/arch.ts",
            "line": 491
          },
          "name": "findResource",
          "parameters": [
            {
              "docs": {
                "remarks": "can be id, asset key, full name, etc.",
                "summary": "- The value to match {@link AwsResource};"
              },
              "name": "value",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "optional": true,
            "type": {
              "fqn": "@aws/pdk.aws_arch.AwsResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "custom": {
              "throws": "Error is no resource found"
            },
            "stability": "stable",
            "summary": "Get {@link AwsResource} by CloudFormation resource type."
          },
          "locationInModule": {
            "filename": "aws-arch/arch.ts",
            "line": 478
          },
          "name": "getResource",
          "parameters": [
            {
              "docs": {
                "summary": "- Fully qualifief CloudFormation resource type (eg: AWS:S3:Bucket)."
              },
              "name": "cfnResourceType",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws/pdk.aws_arch.AwsResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Gets the draiwio style for the resource."
          },
          "locationInModule": {
            "filename": "aws-arch/arch.ts",
            "line": 678
          },
          "name": "drawioStyle",
          "returns": {
            "optional": true,
            "type": {
              "fqn": "@aws/pdk.aws_arch.AwsDrawioShapeStyle"
            }
          }
        },
        {
          "docs": {
            "remarks": "This maybe different than {@link AwsResource.service.category.icon } based on mappings overrides, which\nif do not exist will fallback to {@link AwsResource.service.category.icon }.",
            "returns": "Returns relative asset icon path",
            "see": "{@link AwsService.icon }",
            "stability": "stable",
            "summary": "Gets the category icon for the resource."
          },
          "locationInModule": {
            "filename": "aws-arch/arch.ts",
            "line": 588
          },
          "name": "getCategoryIcon",
          "parameters": [
            {
              "docs": {
                "summary": "- The format of icon."
              },
              "name": "format",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "- Optional theme."
              },
              "name": "theme",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "optional": true,
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "docs": {
            "returns": "Returns relative asset icon path or undefined if does not have general icon",
            "stability": "stable",
            "summary": "Gets the general icon for the resource if available."
          },
          "locationInModule": {
            "filename": "aws-arch/arch.ts",
            "line": 649
          },
          "name": "getGeneralIcon",
          "parameters": [
            {
              "docs": {
                "summary": "- The format of icon."
              },
              "name": "format",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "- Optional theme."
              },
              "name": "theme",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "optional": true,
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "docs": {
            "returns": "Returns relative asset icon path or undefined if does not have resource icon",
            "stability": "stable",
            "summary": "Gets the resource specific icon for the resource."
          },
          "locationInModule": {
            "filename": "aws-arch/arch.ts",
            "line": 634
          },
          "name": "getResourceIcon",
          "parameters": [
            {
              "docs": {
                "summary": "- The format of icon."
              },
              "name": "format",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "- Optional theme."
              },
              "name": "theme",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "optional": true,
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "docs": {
            "remarks": "This maybe different than {@link AwsResource.service.icon } based on mappings overrides, which\nif do not exist will fallback to {@link AwsResource.service.icon }.",
            "returns": "Returns relative asset icon path",
            "see": "{@link AwsService.icon }",
            "stability": "stable",
            "summary": "Gets the service icon for the resource."
          },
          "locationInModule": {
            "filename": "aws-arch/arch.ts",
            "line": 614
          },
          "name": "getServiceIcon",
          "parameters": [
            {
              "docs": {
                "summary": "- The format of icon."
              },
              "name": "format",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "- Optional theme."
              },
              "name": "theme",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "optional": true,
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "docs": {
            "remarks": "explicit resource icon\n2. general icon\n3. service icon",
            "returns": "Returns relative asset icon path",
            "stability": "stable",
            "summary": "Gets the best icon match for the resource following the order of: 1."
          },
          "locationInModule": {
            "filename": "aws-arch/arch.ts",
            "line": 667
          },
          "name": "icon",
          "parameters": [
            {
              "docs": {
                "summary": "- The format of icon."
              },
              "name": "format",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "- Optional theme."
              },
              "name": "theme",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "optional": true,
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "AwsResource",
      "namespace": "aws_arch",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Get record of all resources keyed by resource id."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/arch.ts",
            "line": 512
          },
          "name": "resources",
          "static": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.aws_arch.AwsResource"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Fully-qualified CloudFormation resource type (eg: \"AWS:S3:Bucket\")."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/arch.ts",
            "line": 519
          },
          "name": "cfnResourceType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The {@link AwsService} the resource belongs to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/arch.ts",
            "line": 523
          },
          "name": "service",
          "type": {
            "fqn": "@aws/pdk.aws_arch.AwsService"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The drawio shape mapped to this resource, or undefined if no mapping."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/arch.ts",
            "line": 533
          },
          "name": "drawioShape",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.aws_arch.aws_arch.DrawioSpec.Aws4.ShapeNames"
          }
        },
        {
          "docs": {
            "example": "\"Bucket\", \"Amazon S3 on Outposts\"",
            "stability": "stable",
            "summary": "The proper full name of the resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/arch.ts",
            "line": 529
          },
          "name": "fullName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "aws-arch/arch:AwsResource"
    },
    "@aws/pdk.aws_arch.AwsService": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "AwsService class provides an interface for normalizing service metadata between mapped systems."
      },
      "fqn": "@aws/pdk.aws_arch.AwsService",
      "kind": "class",
      "locationInModule": {
        "filename": "aws-arch/arch.ts",
        "line": 264
      },
      "methods": [
        {
          "docs": {
            "custom": {
              "throws": "Error if service not found"
            },
            "returns": "Returns matching {@link AwsService } or `undefined` if not found",
            "stability": "stable",
            "summary": "Finds the {@link AwsService} associated with a given value."
          },
          "locationInModule": {
            "filename": "aws-arch/arch.ts",
            "line": 296
          },
          "name": "findService",
          "parameters": [
            {
              "docs": {
                "summary": "Value to match {@link AwsService}, which can be `id`, `assetKey`, `fullName`, etc."
              },
              "name": "value",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "optional": true,
            "type": {
              "fqn": "@aws/pdk.aws_arch.AwsService"
            }
          },
          "static": true
        },
        {
          "docs": {
            "custom": {
              "throws": "Error is service not found"
            },
            "returns": "Returns the {@link AwsService } associated with the `cfnService` provided",
            "stability": "stable",
            "summary": "Get {@link AwsService} by CloudFormation \"service\" name, where service name is expressed as `<provider>::<service>::<resource>`."
          },
          "locationInModule": {
            "filename": "aws-arch/arch.ts",
            "line": 282
          },
          "name": "getService",
          "parameters": [
            {
              "docs": {
                "summary": "The service name to retrieve {@link AwsService} for."
              },
              "name": "cfnService",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws/pdk.aws_arch.AwsService"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Get drawio style for this service."
          },
          "locationInModule": {
            "filename": "aws-arch/arch.ts",
            "line": 405
          },
          "name": "drawioStyle",
          "returns": {
            "optional": true,
            "type": {
              "fqn": "@aws/pdk.aws_arch.AwsDrawioResourceIconStyle"
            }
          }
        },
        {
          "docs": {
            "returns": "Returns relative asset icon path",
            "stability": "stable",
            "summary": "Get relative asset icon for the service for a given format and optional theme."
          },
          "locationInModule": {
            "filename": "aws-arch/arch.ts",
            "line": 393
          },
          "name": "icon",
          "parameters": [
            {
              "docs": {
                "summary": "- The format of icon."
              },
              "name": "format",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "- Optional theme."
              },
              "name": "theme",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "optional": true,
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "List all resources of this service."
          },
          "locationInModule": {
            "filename": "aws-arch/arch.ts",
            "line": 424
          },
          "name": "serviceResources",
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "fqn": "@aws/pdk.aws_arch.AwsResource"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "AwsService",
      "namespace": "aws_arch",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Get record of all {@link AwsService}s keyed by `id`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/arch.ts",
            "line": 316
          },
          "name": "services",
          "static": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.aws_arch.AwsService"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The CloudFormation \"provider\" for the service, as expressed by `<provicer>::<service>::<resource>`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/arch.ts",
            "line": 327
          },
          "name": "cfnProvider",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The CloudFormation \"service\" for the service, as expressed by `<provicer>::<service>::<resource>`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/arch.ts",
            "line": 331
          },
          "name": "cfnService",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "example": "\"AWS Glue\", \"Amazon S3\"",
            "stability": "stable",
            "summary": "The proper full name of the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/arch.ts",
            "line": 376
          },
          "name": "fullName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The category the service belongs to, or undefined if does not belong to a category."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/arch.ts",
            "line": 323
          },
          "name": "category",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.aws_arch.AwsCategory"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Drawio shape associated with this service, or undefined if service not mapped to draiwio shape."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/arch.ts",
            "line": 335
          },
          "name": "drawioShape",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.aws_arch.aws_arch.DrawioSpec.Aws4.ShapeNames"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Get service pricing metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/arch.ts",
            "line": 437
          },
          "name": "pricingMetadata",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.aws_arch.aws_arch.PricingManifest.Service"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The pricing `serviceCode` associated with this service, or undefined if service not mapped to pricing."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/arch.ts",
            "line": 339
          },
          "name": "pricingServiceCode",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "aws-arch/arch:AwsService"
    },
    "@aws/pdk.aws_arch.ParsedAssetKey": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Parsed asset key."
      },
      "fqn": "@aws/pdk.aws_arch.ParsedAssetKey",
      "kind": "interface",
      "locationInModule": {
        "filename": "aws-arch/internal/assets/helpers.ts",
        "line": 11
      },
      "name": "ParsedAssetKey",
      "namespace": "aws_arch",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Reference to the full key that was parsed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/internal/assets/helpers.ts",
            "line": 13
          },
          "name": "assetKey",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "For instances and things this includes the dir prefix.",
            "stability": "stable",
            "summary": "The last segment of the key (which is the nested icon)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/internal/assets/helpers.ts",
            "line": 21
          },
          "name": "basename",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Category id."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/internal/assets/helpers.ts",
            "line": 15
          },
          "name": "category",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The instance type if key is for an ec2 instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/internal/assets/helpers.ts",
            "line": 23
          },
          "name": "instanceType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The iot thing if key is for an iot thing."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/internal/assets/helpers.ts",
            "line": 25
          },
          "name": "iotThing",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Resource id if key is for a resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/internal/assets/helpers.ts",
            "line": 19
          },
          "name": "resource",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Service id if key is partitioned by resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/internal/assets/helpers.ts",
            "line": 17
          },
          "name": "service",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "aws-arch/internal/assets/helpers:ParsedAssetKey"
    },
    "@aws/pdk.aws_arch.aws_arch.ArrowFormat": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Theme arrow format definition."
      },
      "fqn": "@aws/pdk.aws_arch.aws_arch.ArrowFormat",
      "kind": "interface",
      "locationInModule": {
        "filename": "aws-arch/themes/types.ts",
        "line": 46
      },
      "name": "ArrowFormat",
      "namespace": "aws_arch.aws_arch",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/themes/types.ts",
            "line": 47
          },
          "name": "color",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "primitive": "boolean"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/themes/types.ts",
            "line": 48
          },
          "name": "head",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/themes/types.ts",
            "line": 51
          },
          "name": "style",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/themes/types.ts",
            "line": 49
          },
          "name": "tail",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/themes/types.ts",
            "line": 50
          },
          "name": "width",
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "aws-arch/themes/types:ArrowFormat"
    },
    "@aws/pdk.aws_arch.aws_arch.AwsCategoryDefinition": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Category definition."
      },
      "fqn": "@aws/pdk.aws_arch.aws_arch.AwsCategoryDefinition",
      "kind": "interface",
      "locationInModule": {
        "filename": "aws-arch/internal/categories/definitions.ts",
        "line": 9
      },
      "name": "AwsCategoryDefinition",
      "namespace": "aws_arch.aws_arch",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/internal/categories/definitions.ts",
            "line": 12
          },
          "name": "fillColor",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/internal/categories/definitions.ts",
            "line": 13
          },
          "name": "gradientColor",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/internal/categories/definitions.ts",
            "line": 10
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/internal/categories/definitions.ts",
            "line": 11
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/internal/categories/definitions.ts",
            "line": 14
          },
          "name": "fontColor",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/internal/categories/definitions.ts",
            "line": 15
          },
          "name": "variants",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "aws-arch/internal/categories/definitions:AwsCategoryDefinition"
    },
    "@aws/pdk.aws_arch.aws_arch.DarkPalette": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "Dark theme color palette."
      },
      "fqn": "@aws/pdk.aws_arch.aws_arch.DarkPalette",
      "kind": "enum",
      "locationInModule": {
        "filename": "aws-arch/themes/dark.ts",
        "line": 7
      },
      "members": [
        {
          "docs": {
            "stability": "stable"
          },
          "name": "PUBLIC"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "PRIVATE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "GENERIC"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "PRIMARY"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SECONDARY"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "TERTIARY"
        }
      ],
      "name": "DarkPalette",
      "namespace": "aws_arch.aws_arch",
      "symbolId": "aws-arch/themes/dark:DarkPalette"
    },
    "@aws/pdk.aws_arch.aws_arch.DrawioAws4ParentShapes": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "Draiwio aws4 parent shapes enum."
      },
      "fqn": "@aws/pdk.aws_arch.aws_arch.DrawioAws4ParentShapes",
      "kind": "enum",
      "locationInModule": {
        "filename": "aws-arch/internal/drawio/types.ts",
        "line": 19
      },
      "members": [
        {
          "docs": {
            "stability": "stable"
          },
          "name": "RESOURCE_ICON"
        }
      ],
      "name": "DrawioAws4ParentShapes",
      "namespace": "aws_arch.aws_arch",
      "symbolId": "aws-arch/internal/drawio/types:DrawioAws4ParentShapes"
    },
    "@aws/pdk.aws_arch.aws_arch.DrawioAwsResourceIconStyleBase": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Based style definition for drawio aws resource icon."
      },
      "fqn": "@aws/pdk.aws_arch.aws_arch.DrawioAwsResourceIconStyleBase",
      "interfaces": [
        "@aws/pdk.aws_arch.aws_arch.DrawioAwsShapeStyleBase"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "aws-arch/internal/drawio/types.ts",
        "line": 40
      },
      "name": "DrawioAwsResourceIconStyleBase",
      "namespace": "aws_arch.aws_arch",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/internal/drawio/types.ts",
            "line": 42
          },
          "name": "fillColor",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/internal/drawio/types.ts",
            "line": 44
          },
          "name": "fontColor",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/internal/drawio/types.ts",
            "line": 43
          },
          "name": "gradientColor",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "aws-arch/internal/drawio/types:DrawioAwsResourceIconStyleBase"
    },
    "@aws/pdk.aws_arch.aws_arch.DrawioAwsShapeStyleBase": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Base definition of drawio aws shape style."
      },
      "fqn": "@aws/pdk.aws_arch.aws_arch.DrawioAwsShapeStyleBase",
      "kind": "interface",
      "locationInModule": {
        "filename": "aws-arch/internal/drawio/types.ts",
        "line": 24
      },
      "name": "DrawioAwsShapeStyleBase",
      "namespace": "aws_arch.aws_arch",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/internal/drawio/types.ts",
            "line": 31
          },
          "name": "align",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/internal/drawio/types.ts",
            "line": 35
          },
          "name": "aspect",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/internal/drawio/types.ts",
            "line": 28
          },
          "name": "dashed",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/internal/drawio/types.ts",
            "line": 33
          },
          "name": "fontSize",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/internal/drawio/types.ts",
            "line": 34
          },
          "name": "fontStyle",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "primitive": "number"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/internal/drawio/types.ts",
            "line": 26
          },
          "name": "gradientDirection",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/internal/drawio/types.ts",
            "line": 32
          },
          "name": "html",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/internal/drawio/types.ts",
            "line": 25
          },
          "name": "outlineConnect",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/internal/drawio/types.ts",
            "line": 27
          },
          "name": "strokeColor",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/internal/drawio/types.ts",
            "line": 30
          },
          "name": "verticalAlign",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/internal/drawio/types.ts",
            "line": 29
          },
          "name": "verticalLabelPosition",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/internal/drawio/types.ts",
            "line": 36
          },
          "name": "pointerEvent",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "aws-arch/internal/drawio/types:DrawioAwsShapeStyleBase"
    },
    "@aws/pdk.aws_arch.aws_arch.DrawioSpec.Aws4.ShapeNames": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws/pdk.aws_arch.aws_arch.DrawioSpec.Aws4.ShapeNames",
      "kind": "enum",
      "locationInModule": {
        "filename": "aws-arch/generated/drawio-spec.ts",
        "line": 5
      },
      "members": [
        {
          "docs": {
            "stability": "stable"
          },
          "name": "A1_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ACCESS_ANALYZER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ACTION"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ACTIVATE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ACTUATOR"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ADDON"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "AD_CONNECTOR"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "AGENT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "AGENT2"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ALARM"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ALEXA_ENABLED_DEVICE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ALEXA_FOR_BUSINESS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ALEXA_SKILL"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ALEXA_SMART_HOME_SKILL"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ALEXA_VOICE_SERVICE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ALL_PRODUCTS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "AMI"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "AMPLIFY"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "AMPLIFY_AWS_AMPLIFY_STUDIO"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ANALYTICS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "APACHE_MXNET_ON_AWS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "API_GATEWAY"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "APPFLOW"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "APPLICATION"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "APPLICATION_AUTO_SCALING"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "APPLICATION_COST_PROFILER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "APPLICATION_DISCOVERY_SERVICE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "APPLICATION_INTEGRATION"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "APPLICATION_LOAD_BALANCER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "APPS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "APPSTREAM_20"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "APPSYNC"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "APP_CONFIG"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "APP_MESH"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "APP_RUNNER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "APP_WIZARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ARCHIVE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ARTIFACT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "AR_VR"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ATHENA"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ATTRIBUTE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ATTRIBUTES"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "AUDIT_MANAGER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "AUGMENTED_AI"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "AURORA"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "AURORA_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "AURORA_INSTANCE_ALT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "AUTOMATION"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "AUTOSCALING"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "AUTO_SCALING"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "AUTO_SCALING2"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "AUTO_SCALING3"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "AWS_CLOUD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "BACKINT_AGENT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "BACKUP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "BACKUP_AWS_BACKUP_SUPPORT_FOR_AMAZON_S3"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "BACKUP_AWS_BACKUP_SUPPORT_FOR_VMWARE_WORKLOADS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "BACKUP_BACKUP_PLAN"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "BACKUP_BACKUP_RESTORE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "BACKUP_COMPLIANCE_REPORTING"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "BACKUP_COMPUTE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "BACKUP_DATABASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "BACKUP_GATEWAY"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "BACKUP_PLAN"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "BACKUP_RECOVERY_POINT_OBJECTIVE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "BACKUP_RECOVERY_TIME_OBJECTIVE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "BACKUP_RESTORE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "BACKUP_STORAGE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "BACKUP_VAULT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "BACKUP_VIRTUAL_MACHINE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "BACKUP_VIRTUAL_MACHINE_MONITOR"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "BANK"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "BATCH"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "BLOCKCHAIN"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "BLOCKCHAIN_RESOURCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "BOTTLEROCKET"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "BRAKET"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "BRAKET_CHANDELIER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "BRAKET_CHIP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "BRAKET_NOISE_SIMULATOR"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "BRAKET_QPU"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "BRAKET_SIMULATOR"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "BRAKET_SIMULATOR_1"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "BRAKET_SIMULATOR_2"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "BRAKET_SIMULATOR_3"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "BRAKET_SIMULATOR_4"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "BRAKET_STATE_VECTOR"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "BRAKET_TENSOR_NETWORK"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "BUCKET"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "BUCKET_WITH_OBJECTS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "BUDGETS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "BUDGETS_2"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "BUSINESS_APPLICATION"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "BYCICLE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "C4_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "C5A"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "C5AD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "C5D"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "C5N_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "C5_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "C6GD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "C6G_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CACHED_VOLUME"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CACHE_NODE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CAMERA"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CAMERA2"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CAR"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CART"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CERTIFICATE_MANAGER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CERTIFICATE_MANAGER_2"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CERTIFICATE_MANAGER_3"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CHANGE_SET"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CHATBOT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CHECKLIST"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CHECKLIST_COST"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CHECKLIST_FAULT_TOLERANT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CHECKLIST_PERFORMANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CHECKLIST_SECURITY"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CHIME"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CHIME_SDK"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CLASSIC_LOAD_BALANCER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CLIENT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CLIENT_VPN"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CLOUD9"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CLOUDENDURE_DISASTER_RECOVERY"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CLOUDENDURE_MIGRATION"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CLOUDFORMATION"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CLOUDFRONT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CLOUDFRONT_FUNCTIONS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CLOUDHSM"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CLOUDSEARCH"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CLOUDSEARCH2"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CLOUDSHELL"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CLOUDTRAIL"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CLOUDWATCH"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CLOUDWATCH_2"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CLOUDWATCH_EVIDENTLY"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CLOUDWATCH_METRICS_INSIGHTS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CLOUDWATCH_RUM"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CLOUDWATCH_SYNTHETICS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CLOUD_CONTROL_API"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CLOUD_DEVELOPMENT_KIT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CLOUD_DIGITAL_INTERFACE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CLOUD_DIRECTORY"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CLOUD_EXTENSION_ROS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CLOUD_MAP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CLOUD_MAP_RESOURCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CLOUD_WAN"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CLOUD_WAN_SEGMENT_NETWORK"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CLOUD_WAN_VIRTUAL_POP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CLUSTER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CODEARTIFACT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CODEBUILD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CODECOMMIT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CODEDEPLOY"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CODEGURU"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CODEGURU_2"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CODEPIPELINE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CODESTAR"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "COFFEE_POT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "COGNITO"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "COMMAND_LINE_INTERFACE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "COMPREHEND"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "COMPREHEND_MEDICAL"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "COMPUTE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "COMPUTE_OPTIMIZER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CONFIG"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CONNECT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CONNECTOR"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CONTAINERS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CONTAINER_1"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CONTAINER_2"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CONTAINER_3"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CONTAINER_REGISTRY_IMAGE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CONTROL_TOWER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CORPORATE_DATA_CENTER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CORPORATE_DATA_CENTER2"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CORRETTO"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "COST_AND_USAGE_REPORT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "COST_EXPLORER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "COST_MANAGEMENT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CUSTOMER_ENABLEMENT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CUSTOMER_ENGAGEMENT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CUSTOMER_GATEWAY"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CUSTOM_BILLING_MANAGER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CUSTOM_EVENT_BUS_RESOURCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "D2_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "D3EN_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "D3_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DATABASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DATABASE_MIGRATION_SERVICE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DATABASE_MIGRATION_WORKFLOW_JOB"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DATASYNC"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DATA_ENCRYPTION_KEY"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DATA_EXCHANGE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DATA_EXCHANGE_FOR_APIS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DATA_LAKE_RESOURCE_ICON"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DATA_PIPELINE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DATA_SET"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DB_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DB_INSTANCE_READ_REPLICA"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DB_INSTANCE_STANDBY"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DB_ON_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DB_ON_INSTANCE2"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DEEPCOMPOSER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DEEPLENS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DEEPRACER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DEEP_LEARNING_AMIS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DEEP_LEARNING_CONTAINERS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DEFAULT_EVENT_BUS_RESOURCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DENSE_COMPUTE_NODE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DENSE_STORAGE_NODE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DEPLOYMENT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DEPLOYMENTS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DESIRED_STATE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DESKTOP_AND_APP_STREAMING"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DETECTIVE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DEVELOPER_TOOLS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DEVELOPMENT_ENVIRONMENT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DEVICE_FARM"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DEVOPS_GURU"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DEVOPS_GURU_INSIGHTS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DIRECTORY_SERVICE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DIRECT_CONNECT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DISK"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DISTRO_FOR_OPENTELEMETRY"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DOCUMENTDB_WITH_MONGODB_COMPATIBILITY"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DOCUMENTS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DOCUMENTS2"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DOOR_LOCK"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DOWNLOAD_DISTRIBUTION"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DYNAMODB"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DYNAMODB_DAX"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DYNAMODB_STANDARD_ACCESS_TABLE_CLASS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DYNAMODB_STANDARD_INFREQUENT_ACCESS_TABLE_CLASS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DYNAMODB_STREAM"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "EC2"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "EC2_AWS_MICROSERVICE_EXTRACTOR_FOR_NET"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "EC2_C6A_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "EC2_C6GN_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "EC2_C6I_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "EC2_C7G_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "EC2_DL1_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "EC2_G5G_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "EC2_G5_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "EC2_HPC6A_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "EC2_I4I_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "EC2_IM4GN_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "EC2_IMAGE_BUILDER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "EC2_INSTANCE_CONTENTS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "EC2_IS4GEN_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "EC2_M1_MAC_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "EC2_M6A_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "EC2_M6I_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "EC2_R6I_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "EC2_TRN1_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "EC2_VT1_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "EC2_X2GD_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "EC2_X2IDN_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "EC2_X2IEDN_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "EC2_X2IEZN_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ECHO"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ECR"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ECS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ECS_ANYWHERE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ECS_COPILOT_CLI"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ECS_SERVICE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ECS_TASK"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "EDGE_LOCATION"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "EFS_INFREQUENTACCESS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "EFS_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "EKS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "EKS_ANYWHERE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "EKS_CLOUD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "EKS_DISTRO"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ELASTICACHE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ELASTICACHE_FOR_MEMCACHED"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ELASTICACHE_FOR_REDIS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ELASTICSEARCH_SERVICE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ELASTIC_BEANSTALK"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ELASTIC_BLOCK_STORE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ELASTIC_BLOCK_STORE_AMAZON_DATA_LIFECYCLE_MANAGER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ELASTIC_BLOCK_STORE_VOLUME_GP3"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ELASTIC_FABRIC_ADAPTER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ELASTIC_FILE_SYSTEM"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ELASTIC_FILE_SYSTEM_INFREQUENT_ACCESS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ELASTIC_FILE_SYSTEM_INTELLIGENT_TIERING"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ELASTIC_FILE_SYSTEM_ONE_ZONE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ELASTIC_FILE_SYSTEM_ONE_ZONE_INFREQUENT_ACCESS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ELASTIC_FILE_SYSTEM_ONE_ZONE_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ELASTIC_FILE_SYSTEM_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ELASTIC_FILE_SYSTEM_STANDARD_INFREQUENT_ACCESS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ELASTIC_INFERENCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ELASTIC_INFERENCE_2"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ELASTIC_IP_ADDRESS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ELASTIC_LOAD_BALANCING"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ELASTIC_NETWORK_ADAPTER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ELASTIC_NETWORK_INTERFACE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ELASTIC_TRANSCODER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ELEMENTAL"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ELEMENTAL_LINK"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ELEMENTAL_MEDIACONNECT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ELEMENTAL_MEDIACONVERT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ELEMENTAL_MEDIALIVE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ELEMENTAL_MEDIAPACKAGE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ELEMENTAL_MEDIASTORE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ELEMENTAL_MEDIATAILOR"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "EMAIL"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "EMAIL_2"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "EMAIL_NOTIFICATION"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "EMR"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "EMR_ENGINE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "EMR_ENGINE_MAPR_M3"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "EMR_ENGINE_MAPR_M5"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "EMR_ENGINE_MAPR_M7"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ENCRYPTED_DATA"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ENDPOINT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ENDPOINTS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "EVENT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "EVENTBRIDGE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "EVENTBRIDGE_CUSTOM_EVENT_BUS_RESOURCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "EVENTBRIDGE_DEFAULT_EVENT_BUS_RESOURCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "EVENTBRIDGE_SAAS_PARTNER_EVENT_BUS_RESOURCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "EVENTBRIDGE_SCHEMA"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "EVENTBRIDGE_SCHEMA_REGISTRY"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "EVENT_EVENT_BASED"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "EVENT_RESOURCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "EVENT_TIME_BASED"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "EXPRESS_WORKFLOW"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "EXTERNAL_SDK"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "EXTERNAL_TOOLKIT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "F1_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "FACTORY"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "FARGATE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "FAULT_INJECTION_SIMULATOR"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "FILE_GATEWAY"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "FILE_SYSTEM"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "FILTERING_RULE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "FINDING"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "FINSPACE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "FIRETV"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "FIRETV_STICK"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "FIREWALL_MANAGER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "FLEET_MANAGEMENT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "FLOW_LOGS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "FORECAST"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "FORUMS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "FRAUD_DETECTOR"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "FREERTOS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "FSX"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "FSX_FILE_GATEWAY"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "FSX_FOR_LUSTRE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "FSX_FOR_NETAPP_ONTAP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "FSX_FOR_OPENZFS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "FSX_FOR_WINDOWS_FILE_SERVER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "G3_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "G4AD_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "G4DN"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "GAMEKIT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "GAMELIFT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "GAMESPARKS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "GAME_TECH"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "GAME_TECH2"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "GATEWAY"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "GATEWAY_LOAD_BALANCER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "GEAR"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "GENERAL"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "GENERAL_ACCESS_POINTS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "GENERIC"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "GENERIC_DATABASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "GENERIC_FIREWALL"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "GENOMICS_CLI"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "GLACIER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "GLACIER_DEEP_ARCHIVE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "GLOBAL_ACCELERATOR"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "GLOBAL_SECONDARY_INDEX"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "GLUE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "GLUE_CRAWLERS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "GLUE_DATABREW"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "GLUE_DATA_CATALOG"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "GLUE_ELASTIC_VIEWS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "GREENGRASS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "GROUND_STATION"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "GROUP_ACCOUNT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "GROUP_AUTO_SCALING_GROUP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "GROUP_AVAILABILITY_ZONE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "GROUP_AWS_CLOUD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "GROUP_AWS_CLOUD_ALT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "GROUP_AWS_STEP_FUNCTIONS_WORKFLOW"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "GROUP_CORPORATE_DATA_CENTER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "GROUP_EC2_INSTANCE_CONTENTS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "GROUP_ELASTIC_BEANSTALK"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "GROUP_ELASTIC_LOAD_BALANCING"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "GROUP_IOT_GREENGRASS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "GROUP_IOT_GREENGRASS_DEPLOYMENT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "GROUP_ON_PREMISE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "GROUP_REGION"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "GROUP_SECURITY_GROUP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "GROUP_SPOT_FLEET"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "GROUP_SUBNET"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "GROUP_VPC"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "GUARDDUTY"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "H1_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "HABANA_GAUDI"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "HARDWARE_BOARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "HDFS_CLUSTER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "HEALTHLAKE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "HIGH_MEMORY_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "HONEYCODE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "HOSTED_ZONE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "HOUSE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "HTTP2_PROTOCOL"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "HTTP_NOTIFICATION"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "HTTP_PROTOCOL"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "I2"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "I3EN"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "I3_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IDENTITY_AND_ACCESS_MANAGEMENT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ILLUSTRATION_DESKTOP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ILLUSTRATION_DEVICES"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ILLUSTRATION_NOTIFICATION"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ILLUSTRATION_OFFICE_BUILDING"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ILLUSTRATION_USERS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IMPORT_EXPORT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "INF1"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "INFERENTIA"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "INFREQUENT_ACCESS_STORAGE_CLASS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "INSPECTOR"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "INSTANCE2"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "INSTANCES"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "INSTANCES_2"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "INSTANCE_WITH_CLOUDWATCH"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "INSTANCE_WITH_CLOUDWATCH2"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "INTELLIGENT_TIERING"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "INTERACTIVE_VIDEO"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "INTERNET"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "INTERNET_ALT1"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "INTERNET_ALT2"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "INTERNET_ALT22"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "INTERNET_GATEWAY"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "INTERNET_OF_THINGS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "INVENTORY"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IOT_1CLICK"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IOT_ANALYTICS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IOT_ANALYTICS_CHANNEL"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IOT_ANALYTICS_DATA_STORE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IOT_ANALYTICS_PIPELINE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IOT_BUTTON"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IOT_CORE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IOT_DEVICE_DEFENDER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IOT_DEVICE_DEFENDER_IOT_DEVICE_JOBS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IOT_DEVICE_GATEWAY"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IOT_DEVICE_JOBS_RESOURCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IOT_DEVICE_MANAGEMENT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IOT_EVENTS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IOT_EXPRESSLINK"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IOT_FLEETWISE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IOT_GREENGRASS_ARTIFACT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IOT_GREENGRASS_COMPONENT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IOT_GREENGRASS_COMPONENT_MACHINE_LEARNING"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IOT_GREENGRASS_COMPONENT_NUCLEUS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IOT_GREENGRASS_COMPONENT_PRIVATE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IOT_GREENGRASS_COMPONENT_PUBLIC"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IOT_GREENGRASS_INTERPROCESS_COMMUNICATION"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IOT_GREENGRASS_PROTOCOL"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IOT_GREENGRASS_RECIPE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IOT_GREENGRASS_STREAM_MANAGER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IOT_LORAWAN_PROTOCOL"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IOT_OVER_THE_AIR_UPDATE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IOT_ROBORUNNER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IOT_SAILBOAT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IOT_SITEWISE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IOT_SITEWISE_ASSET"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IOT_SITEWISE_ASSET_HIERARCHY"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IOT_SITEWISE_ASSET_MODEL"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IOT_SITEWISE_ASSET_PROPERTIES"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IOT_SITEWISE_DATA_STREAMS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IOT_THINGS_GRAPH"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IOT_THING_FREERTOS_DEVICE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IOT_THING_HUMIDITY_SENSOR"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IOT_THING_INDUSTRIAL_PC"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IOT_THING_PLC"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IOT_THING_RELAY"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IOT_THING_STACKLIGHT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IOT_THING_TEMPERATURE_HUMIDITY_SENSOR"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IOT_THING_TEMPERATURE_SENSOR"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IOT_THING_TEMPERATURE_VIBRATION_SENSOR"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IOT_THING_VIBRATION_SENSOR"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IOT_TWINMAKER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IQ"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ITEM"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ITEMS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "KENDRA"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "KEYSPACES"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "KEY_MANAGEMENT_SERVICE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "KINESIS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "KINESIS_DATA_ANALYTICS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "KINESIS_DATA_FIREHOSE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "KINESIS_DATA_STREAMS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "KINESIS_VIDEO_STREAMS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "LAKE_FORMATION"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "LAMBDA"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "LAMBDA_FUNCTION"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "LAYERS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "LEX"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "LICENSE_MANAGER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "LICENSE_MANAGER_APPLICATION_DISCOVERY"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "LICENSE_MANAGER_LICENSE_BLENDING"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "LIGHTBULB"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "LIGHTSAIL"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "LOCAL_ZONES"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "LOCATION_SERVICE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "LOCATION_SERVICE_GEOFENCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "LOCATION_SERVICE_MAP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "LOCATION_SERVICE_PLACE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "LOCATION_SERVICE_ROUTES"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "LOCATION_SERVICE_TRACK"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "LOGS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "LONG_TERM_SECURITY_CREDENTIAL"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "LOOKOUT_FOR_EQUIPMENT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "LOOKOUT_FOR_METRICS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "LOOKOUT_FOR_VISION"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "LUMBERYARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "M4_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "M5A_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "M5DN_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "M5D_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "M5N"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "M5N_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "M5ZN_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "M5_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "M6GD_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "M6G_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MACHINE_LEARNING"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MACIE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MAC_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MAINFRAME_MODERNIZATION"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MAINFRAME_MODERNIZATION_ANALYZER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MAINFRAME_MODERNIZATION_COMPILER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MAINFRAME_MODERNIZATION_CONVERTER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MAINFRAME_MODERNIZATION_DEVELOPER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MAINFRAME_MODERNIZATION_RUNTIME"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MAINTENANCE_WINDOWS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MANAGED_APACHE_CASSANDRA_SERVICE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MANAGED_BLOCKCHAIN"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MANAGED_MS_AD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MANAGED_SERVICES"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MANAGED_SERVICE_FOR_GRAFANA"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MANAGED_SERVICE_FOR_PROMETHEUS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MANAGED_STREAMING_FOR_KAFKA"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MANAGED_WORKFLOWS_FOR_APACHE_AIRFLOW"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MANAGEMENT_AND_GOVERNANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MANAGEMENT_CONSOLE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MARKETPLACE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MEDIA_SERVICES"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MEDICAL_EMERGENCY"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MEMORYDB_FOR_REDIS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MESH"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MESSAGE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MFA_TOKEN"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MIGRATION_AND_TRANSFER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MIGRATION_EVALUATOR"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MIGRATION_HUB"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MIGRATION_HUB_REFACTOR_SPACES_APPLICATIONS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MIGRATION_HUB_REFACTOR_SPACES_ENVIRONMENTS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MIGRATION_HUB_REFACTOR_SPACES_SERVICES"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MOBILE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MOBILE_APPLICATION"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MOBILE_CLIENT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MOBILE_HUB"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MONITORING"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MONITRON"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MQ"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MQTT_PROTOCOL"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MQ_BROKER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MSK_AMAZON_MSK_CONNECT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MS_SQL_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MS_SQL_INSTANCE_ALTERNATE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MULTIMEDIA"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MULTIPLE_VOLUMES_RESOURCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MYSQL_DB_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MYSQL_DB_INSTANCE_ALTERNATE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "NAMESPACE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "NAT_GATEWAY"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "NEPTUNE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "NETWORKING_AND_CONTENT_DELIVERY"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "NETWORK_ACCESS_CONTROL_LIST"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "NETWORK_FIREWALL"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "NETWORK_FIREWALL_ENDPOINTS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "NETWORK_LOAD_BALANCER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "NEURON_ML_SDK"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "NICE_DCV"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "NICE_ENGINFRAME"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "NIMBLE_STUDIO"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "NITRO_ENCLAVES"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "NON_CACHED_VOLUME"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "NOTEBOOK"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "OBJECT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "OFFICE_BUILDING"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ONE_ZONE_IA"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "OPEN_3D_ENGINE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "OPSWORKS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "OPSWORKS_APPS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "OPSWORKS_PERMISSIONS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "OPTIMIZED_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ORACLE_DB_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ORACLE_DB_INSTANCE_ALTERNATE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ORGANIZATIONS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ORGANIZATIONS_ACCOUNT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ORGANIZATIONS_ACCOUNT2"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ORGANIZATIONS_MANAGEMENT_ACCOUNT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ORGANIZATIONS_MANAGEMENT_ACCOUNT2"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ORGANIZATIONS_ORGANIZATIONAL_UNIT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ORGANIZATIONS_ORGANIZATIONAL_UNIT2"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "OUTPOSTS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "OUTPOSTS_1U_AND_2U_SERVERS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "OUTPOSTS_FAMILY"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "P2_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "P3DN_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "P3_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "P4D_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "P4_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "PANORAMA"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "PARALLEL_CLUSTER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "PARAMETER_STORE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "PATCH_MANAGER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "PEERING"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "PERMISSIONS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "PERMISSIONS_2"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "PERSONALIZE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "PERSONAL_HEALTH_DASHBOARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "PINPOINT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "PINPOINT_JOURNEY"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "POLICE_EMERGENCY"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "POLICY"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "POLLY"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "POSTGRESQL_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "PRIVATELINK"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "PRIVATE_5G"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "PROFESSIONAL_SERVICES"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "PROTON"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "QUANTUM_LEDGER_DATABASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "QUANTUM_TECHNOLOGIES"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "QUESTION"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "QUEUE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "QUICKSIGHT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "R4_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "R5AD_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "R5A_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "R5B_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "R5D_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "R5GD_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "R5N"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "R5N_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "R5_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "R6G_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "RDN_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "RDS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "RDS_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "RDS_INSTANCE_ALT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "RDS_MARIADB_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "RDS_MARIADB_INSTANCE_ALT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "RDS_MULTI_AZ"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "RDS_MULTI_AZ_DB_CLUSTER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "RDS_MYSQL_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "RDS_MYSQL_INSTANCE_ALT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "RDS_ON_VMWARE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "RDS_ORACLE_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "RDS_ORACLE_INSTANCE_ALT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "RDS_PIOP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "RDS_PIOPS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "RDS_POSTGRESQL_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "RDS_POSTGRESQL_INSTANCE_ALT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "RDS_PROXY"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "RDS_PROXY_ALT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "RDS_SQL_SERVER_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "RDS_SQL_SERVER_INSTANCE_ALT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "REDSHIFT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "REDSHIFT_ML"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "REDSHIFT_RA3"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "RED_HAT_OPENSHIFT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "REGISTRY"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "REKOGNITION"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "REKOGNITION_2"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "REKOGNITION_IMAGE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "REKOGNITION_VIDEO"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "REPLICATION"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "REPLICATION_TIME_CONTROL"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "REPORTED_STATE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "REPOST"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "RESCUE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "RESERVED_INSTANCE_REPORTING"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "RESILIENCE_HUB"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "RESOURCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "RESOURCES"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "RESOURCE_ACCESS_MANAGER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ROBOMAKER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ROBOTICS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ROLE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ROUTER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ROUTE_53"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ROUTE_53_APPLICATION_RECOVERY_CONTROLLER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ROUTE_53_READINESS_CHECKS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ROUTE_53_RESOLVER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ROUTE_53_RESOLVER_DNS_FIREWALL"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ROUTE_53_RESOLVER_QUERY_LOGGING"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ROUTE_53_ROUTING_CONTROLS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ROUTE_TABLE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "RULE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "RULE_2"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "RULE_3"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "RUN_COMMAND"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "S3"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "S3_FILE_GATEWAY"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "S3_OBJECT_LAMBDA"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "S3_OBJECT_LAMBDA_ACCESS_POINTS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "S3_ON_OUTPOSTS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "S3_ON_OUTPOSTS_STORAGE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "S3_REPLICATION_TIME_CONTROL"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "S3_STORAGE_LENS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SAAS_EVENT_BUS_RESOURCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SAGEMAKER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SAGEMAKER_CANVAS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SAGEMAKER_GROUND_TRUTH"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SAGEMAKER_MODEL"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SAGEMAKER_NOTEBOOK"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SAGEMAKER_STUDIO_LAB"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SAGEMAKER_TRAIN"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SAML_TOKEN"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SATELLITE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SAVINGS_PLANS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SEARCH_DOCUMENTS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SECRETS_MANAGER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SECURITY_GROUP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SECURITY_HUB"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SECURITY_HUB_FINDING"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SECURITY_IDENTITY_AND_COMPLIANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SENSOR"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SERVERLESS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SERVERLESS_APPLICATION_REPOSITORY"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SERVER_MIGRATION_SERVICE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SERVICE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SERVICE_CATALOG"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SERVO"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SHADOW"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SHIELD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SHIELD_SHIELD_ADVANCED"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SIGNER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SIMPLE_AD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SIMPLE_EMAIL_SERVICE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SIMPLE_STORAGE_SERVICE_S3_GLACIER_INSTANT_RETRIEVAL"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SIMULATION"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SIMULATOR"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SINGLE_SIGN_ON"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SITE_TO_SITE_VPN"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SNAPSHOT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SNOWBALL"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SNOWBALL_EDGE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SNOWCONE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SNOWMOBILE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SNS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SPOT_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SQL_PRIMARY"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SQL_REPLICA"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SQL_WORKBENCH"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SQS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SSL_PADLOCK"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "STACK"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "STACK2"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "STANDARD_IA"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "STATE_MANAGER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "STEP_FUNCTIONS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "STORAGE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "STORAGE_GATEWAY"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "STREAMING_DISTRIBUTION"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "STS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "STS_ALTERNATE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SUMERIAN"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SUPPORT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SYSTEMS_MANAGER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SYSTEMS_MANAGER_INCIDENT_MANAGER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SYSTEMS_MANAGER_OPSCENTER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "T2_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "T3A_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "T3_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "T4G_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "TABLE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "TAPE_GATEWAY"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "TAPE_STORAGE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "TEMPLATE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "TEMPORARY_SECURITY_CREDENTIAL"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "TENSORFLOW_ON_AWS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "TEXTRACT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "THERMOSTAT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "THINKBOX_DEADLINE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "THINKBOX_DRAFT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "THINKBOX_FROST"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "THINKBOX_KRAKATOA"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "THINKBOX_SEQUOIA"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "THINKBOX_STOKE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "THINKBOX_XMESH"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "TIMESTREAM"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "TOOLS_AND_SDKS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "TOPIC"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "TOPIC_2"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "TORCHSERVE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "TRADITIONAL_SERVER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "TRAINING_CERTIFICATION"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "TRAINIUM_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "TRANSCRIBE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "TRANSFER_FAMILY"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "TRANSFER_FOR_FTPS_RESOURCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "TRANSFER_FOR_FTP_RESOURCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "TRANSFER_FOR_SFTP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "TRANSFER_FOR_SFTP_RESOURCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "TRANSIT_GATEWAY"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "TRANSIT_GATEWAY_ATTACHMENT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "TRANSLATE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "TRAVEL"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "TRUSTED_ADVISOR"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "USER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "USERS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "UTILITY"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "VAULT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "VIRTUAL_GATEWAY"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "VIRTUAL_NODE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "VIRTUAL_PRIVATE_CLOUD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "VIRTUAL_ROUTER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "VIRTUAL_SERVICE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "VIRTUAL_TAPE_LIBRARY"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "VMWARE_CLOUD_ON_AWS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "VOLUME"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "VOLUME_GATEWAY"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "VPC"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "VPC_ACCESS_POINTS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "VPC_CARRIER_GATEWAY"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "VPC_NETWORK_ACCESS_ANALYZER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "VPC_PRIVATELINK"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "VPC_REACHABILITY_ANALYZER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "VPC_TRAFFIC_MIRRORING"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "VPN_CONNECTION"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "VPN_GATEWAY"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WAF"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WAF_BAD_BOT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WAF_BOT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WAF_BOT_CONTROL"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WAF_LABELS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WAF_MANAGED_RULE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WAF_RULE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WAVELENGTH"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WELL_ARCHITECTED_TOOL"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WELL_ARCHITECT_TOOL"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDFARM"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WORKDOCS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WORKLINK"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WORKMAIL"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WORKSPACES"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WORKSPACES_WORKSPACES_WEB"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "X1E_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "X1_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "X1_INSTANCE2"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "XRAY"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "Z1D_INSTANCE"
        }
      ],
      "name": "ShapeNames",
      "namespace": "aws_arch.aws_arch.DrawioSpec.Aws4",
      "symbolId": "aws-arch/generated/drawio-spec:DrawioSpec.Aws4.ShapeNames"
    },
    "@aws/pdk.aws_arch.aws_arch.GroupFormat": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Theme group format definition."
      },
      "fqn": "@aws/pdk.aws_arch.aws_arch.GroupFormat",
      "kind": "interface",
      "locationInModule": {
        "filename": "aws-arch/themes/types.ts",
        "line": 15
      },
      "name": "GroupFormat",
      "namespace": "aws_arch.aws_arch",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/themes/types.ts",
            "line": 17
          },
          "name": "bgcolor",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "primitive": "boolean"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/themes/types.ts",
            "line": 18
          },
          "name": "borderColor",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "primitive": "boolean"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/themes/types.ts",
            "line": 20
          },
          "name": "borderStyle",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/themes/types.ts",
            "line": 16
          },
          "name": "color",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "primitive": "boolean"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/themes/types.ts",
            "line": 23
          },
          "name": "iconPng",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/themes/types.ts",
            "line": 22
          },
          "name": "labelLocation",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "aws-arch/themes/types:GroupFormat"
    },
    "@aws/pdk.aws_arch.aws_arch.LightPalette": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "Light theme color palette."
      },
      "fqn": "@aws/pdk.aws_arch.aws_arch.LightPalette",
      "kind": "enum",
      "locationInModule": {
        "filename": "aws-arch/themes/light.ts",
        "line": 7
      },
      "members": [
        {
          "docs": {
            "stability": "stable"
          },
          "name": "PUBLIC"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "PRIVATE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "GENERIC"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "PRIMARY"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SECONDARY"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "TERTIARY"
        }
      ],
      "name": "LightPalette",
      "namespace": "aws_arch.aws_arch",
      "symbolId": "aws-arch/themes/light:LightPalette"
    },
    "@aws/pdk.aws_arch.aws_arch.ParsedAssetKey": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Parsed asset key."
      },
      "fqn": "@aws/pdk.aws_arch.aws_arch.ParsedAssetKey",
      "kind": "interface",
      "locationInModule": {
        "filename": "aws-arch/internal/assets/helpers.ts",
        "line": 11
      },
      "name": "ParsedAssetKey",
      "namespace": "aws_arch.aws_arch",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Reference to the full key that was parsed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/internal/assets/helpers.ts",
            "line": 13
          },
          "name": "assetKey",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "For instances and things this includes the dir prefix.",
            "stability": "stable",
            "summary": "The last segment of the key (which is the nested icon)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/internal/assets/helpers.ts",
            "line": 21
          },
          "name": "basename",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Category id."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/internal/assets/helpers.ts",
            "line": 15
          },
          "name": "category",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The instance type if key is for an ec2 instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/internal/assets/helpers.ts",
            "line": 23
          },
          "name": "instanceType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The iot thing if key is for an iot thing."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/internal/assets/helpers.ts",
            "line": 25
          },
          "name": "iotThing",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Resource id if key is for a resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/internal/assets/helpers.ts",
            "line": 19
          },
          "name": "resource",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Service id if key is partitioned by resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/internal/assets/helpers.ts",
            "line": 17
          },
          "name": "service",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "aws-arch/internal/assets/helpers:ParsedAssetKey"
    },
    "@aws/pdk.aws_arch.aws_arch.PricingManifest.Service": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Pricing manifest service definition."
      },
      "fqn": "@aws/pdk.aws_arch.aws_arch.PricingManifest.Service",
      "kind": "interface",
      "locationInModule": {
        "filename": "aws-arch/internal/pricing-manifest/index.ts",
        "line": 21
      },
      "name": "Service",
      "namespace": "aws_arch.aws_arch.PricingManifest",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "virtual": "true"
            },
            "remarks": "Used for lookups and matching between systems.",
            "stability": "stable",
            "summary": "List of normalized comparable terms to consider equivalent to this service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/internal/pricing-manifest/index.ts",
            "line": 115
          },
          "name": "comparableTerms",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "example": "\"Amazon API Gateway is a fully managed service that...\"",
            "stability": "stable",
            "summary": "Service descriptoin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/internal/pricing-manifest/index.ts",
            "line": 36
          },
          "name": "description",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "example": "\"true\"",
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/internal/pricing-manifest/index.ts",
            "line": 67
          },
          "name": "isActive",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "example": "\"Amazon API Gateway\"",
            "stability": "stable",
            "summary": "Proper full name of the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/internal/pricing-manifest/index.ts",
            "line": 26
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "example": "[\"us-gov-west-1\",\"us-gov-east-1\",\"af-south-1\",\"ap-east-1\",\"ap-south-1\",\"ap-northeast-2\",\"ap-northeast-3\",...]",
            "stability": "stable",
            "summary": "List of regions where the service is available."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/internal/pricing-manifest/index.ts",
            "line": 58
          },
          "name": "regions",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "example": "[\"API\", \"api\", \"Rest\", \"websocket\", \"messages\"]",
            "stability": "stable",
            "summary": "List of keywords for searching services."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/internal/pricing-manifest/index.ts",
            "line": 41
          },
          "name": "searchKeywords",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "example": "\"amazonApiGateway\"",
            "stability": "stable",
            "summary": "Unique code for service definition in pricing manifest."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/internal/pricing-manifest/index.ts",
            "line": 31
          },
          "name": "serviceCode",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "example": "\"https://d1qsjq9pzbk1k6.cloudfront.net/data/amazonApiGateway/en_US.json\"",
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/internal/pricing-manifest/index.ts",
            "line": 75
          },
          "name": "serviceDefinitionLocation",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "example": "\"AWSService\"",
            "stability": "stable",
            "summary": "Type of service definition."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/internal/pricing-manifest/index.ts",
            "line": 46
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "example": "true",
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/internal/pricing-manifest/index.ts",
            "line": 102
          },
          "name": "bulkImportEnabled",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "example": "false",
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/internal/pricing-manifest/index.ts",
            "line": 79
          },
          "name": "c2e",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "example": "false",
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/internal/pricing-manifest/index.ts",
            "line": 71
          },
          "name": "disableConfigure",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "example": "false",
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/internal/pricing-manifest/index.ts",
            "line": 92
          },
          "name": "disableRegionSupport",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "example": "false",
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/internal/pricing-manifest/index.ts",
            "line": 107
          },
          "name": "hasDataTransfer",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "example": "\"https://aws.amazon.com/api-gateway/\"",
            "stability": "stable",
            "summary": "Url link to related product documentation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/internal/pricing-manifest/index.ts",
            "line": 63
          },
          "name": "linkUrl",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "example": "false@variation[object Object]",
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/internal/pricing-manifest/index.ts",
            "line": 84
          },
          "name": "mvpSupport",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "virtual": "true"
            },
            "stability": "stable",
            "summary": "Service code of the parent for `subService` services."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/internal/pricing-manifest/index.ts",
            "line": 121
          },
          "name": "parentServiceCode",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "example": "\"APIGateway\"",
            "stability": "stable",
            "summary": "Unique slug for given resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/internal/pricing-manifest/index.ts",
            "line": 97
          },
          "name": "slug",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "example": "\"subService\"",
            "stability": "stable",
            "summary": "Sub type of service definition."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/internal/pricing-manifest/index.ts",
            "line": 52
          },
          "name": "subType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "example": "[\"chimeCostAnalysis\", \"chimeBusinessCallingAnalysis\"]",
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/internal/pricing-manifest/index.ts",
            "line": 88
          },
          "name": "templates",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "aws-arch/internal/pricing-manifest/index:PricingManifest.Service"
    },
    "@aws/pdk.aws_arch.aws_arch.Theme": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Theme definition."
      },
      "fqn": "@aws/pdk.aws_arch.aws_arch.Theme",
      "kind": "interface",
      "locationInModule": {
        "filename": "aws-arch/themes/types.ts",
        "line": 103
      },
      "name": "Theme",
      "namespace": "aws_arch.aws_arch",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/themes/types.ts",
            "line": 108
          },
          "name": "arrows",
          "type": {
            "fqn": "@aws/pdk.aws_arch.aws_arch.ThemeArrows"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/themes/types.ts",
            "line": 106
          },
          "name": "backgrounds",
          "type": {
            "fqn": "@aws/pdk.aws_arch.aws_arch.ThemeBackgrounds"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/themes/types.ts",
            "line": 107
          },
          "name": "groups",
          "type": {
            "fqn": "@aws/pdk.aws_arch.aws_arch.ThemeGroups"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/themes/types.ts",
            "line": 104
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/themes/types.ts",
            "line": 105
          },
          "name": "text",
          "type": {
            "fqn": "@aws/pdk.aws_arch.aws_arch.ThemeText"
          }
        }
      ],
      "symbolId": "aws-arch/themes/types:Theme"
    },
    "@aws/pdk.aws_arch.aws_arch.ThemeArrows": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Theme arrow dictionary."
      },
      "fqn": "@aws/pdk.aws_arch.aws_arch.ThemeArrows",
      "kind": "interface",
      "locationInModule": {
        "filename": "aws-arch/themes/types.ts",
        "line": 95
      },
      "name": "ThemeArrows",
      "namespace": "aws_arch.aws_arch",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/themes/types.ts",
            "line": 97
          },
          "name": "child",
          "type": {
            "fqn": "@aws/pdk.aws_arch.aws_arch.ArrowFormat"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/themes/types.ts",
            "line": 96
          },
          "name": "default",
          "type": {
            "fqn": "@aws/pdk.aws_arch.aws_arch.ArrowFormat"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/themes/types.ts",
            "line": 99
          },
          "name": "dependency",
          "type": {
            "fqn": "@aws/pdk.aws_arch.aws_arch.ArrowFormat"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/themes/types.ts",
            "line": 98
          },
          "name": "reference",
          "type": {
            "fqn": "@aws/pdk.aws_arch.aws_arch.ArrowFormat"
          }
        }
      ],
      "symbolId": "aws-arch/themes/types:ThemeArrows"
    },
    "@aws/pdk.aws_arch.aws_arch.ThemeBackgrounds": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Theme background dictionary."
      },
      "fqn": "@aws/pdk.aws_arch.aws_arch.ThemeBackgrounds",
      "kind": "interface",
      "locationInModule": {
        "filename": "aws-arch/themes/types.ts",
        "line": 63
      },
      "name": "ThemeBackgrounds",
      "namespace": "aws_arch.aws_arch",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/themes/types.ts",
            "line": 64
          },
          "name": "base",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/themes/types.ts",
            "line": 67
          },
          "name": "generic",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/themes/types.ts",
            "line": 65
          },
          "name": "private",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/themes/types.ts",
            "line": 66
          },
          "name": "public",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "aws-arch/themes/types:ThemeBackgrounds"
    },
    "@aws/pdk.aws_arch.aws_arch.ThemeGroups": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Theme group dicionary."
      },
      "fqn": "@aws/pdk.aws_arch.aws_arch.ThemeGroups",
      "kind": "interface",
      "locationInModule": {
        "filename": "aws-arch/themes/types.ts",
        "line": 71
      },
      "name": "ThemeGroups",
      "namespace": "aws_arch.aws_arch",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/themes/types.ts",
            "line": 77
          },
          "name": "autoScalingGroup",
          "type": {
            "fqn": "@aws/pdk.aws_arch.aws_arch.GroupFormat"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/themes/types.ts",
            "line": 75
          },
          "name": "availabilityZone",
          "type": {
            "fqn": "@aws/pdk.aws_arch.aws_arch.GroupFormat"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/themes/types.ts",
            "line": 85
          },
          "name": "awsAccount",
          "type": {
            "fqn": "@aws/pdk.aws_arch.aws_arch.GroupFormat"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/themes/types.ts",
            "line": 87
          },
          "name": "awsIoTGreengrass",
          "type": {
            "fqn": "@aws/pdk.aws_arch.aws_arch.GroupFormat"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/themes/types.ts",
            "line": 86
          },
          "name": "awsIoTGreengrassDeployment",
          "type": {
            "fqn": "@aws/pdk.aws_arch.aws_arch.GroupFormat"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/themes/types.ts",
            "line": 89
          },
          "name": "awsStepFunctionsWorkflow",
          "type": {
            "fqn": "@aws/pdk.aws_arch.aws_arch.GroupFormat"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/themes/types.ts",
            "line": 72
          },
          "name": "cloud",
          "type": {
            "fqn": "@aws/pdk.aws_arch.aws_arch.GroupFormat"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/themes/types.ts",
            "line": 73
          },
          "name": "cloudAlt",
          "type": {
            "fqn": "@aws/pdk.aws_arch.aws_arch.GroupFormat"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/themes/types.ts",
            "line": 82
          },
          "name": "corporateDataCenter",
          "type": {
            "fqn": "@aws/pdk.aws_arch.aws_arch.GroupFormat"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/themes/types.ts",
            "line": 83
          },
          "name": "ec2InstanceContents",
          "type": {
            "fqn": "@aws/pdk.aws_arch.aws_arch.GroupFormat"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/themes/types.ts",
            "line": 88
          },
          "name": "elasticBeanstalkContainer",
          "type": {
            "fqn": "@aws/pdk.aws_arch.aws_arch.GroupFormat"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/themes/types.ts",
            "line": 90
          },
          "name": "generic",
          "type": {
            "fqn": "@aws/pdk.aws_arch.aws_arch.GroupFormat"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/themes/types.ts",
            "line": 91
          },
          "name": "genericAlt",
          "type": {
            "fqn": "@aws/pdk.aws_arch.aws_arch.GroupFormat"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/themes/types.ts",
            "line": 79
          },
          "name": "privateSubnet",
          "type": {
            "fqn": "@aws/pdk.aws_arch.aws_arch.GroupFormat"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/themes/types.ts",
            "line": 80
          },
          "name": "publicSubnet",
          "type": {
            "fqn": "@aws/pdk.aws_arch.aws_arch.GroupFormat"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/themes/types.ts",
            "line": 74
          },
          "name": "region",
          "type": {
            "fqn": "@aws/pdk.aws_arch.aws_arch.GroupFormat"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/themes/types.ts",
            "line": 76
          },
          "name": "securityGroup",
          "type": {
            "fqn": "@aws/pdk.aws_arch.aws_arch.GroupFormat"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/themes/types.ts",
            "line": 81
          },
          "name": "serverContents",
          "type": {
            "fqn": "@aws/pdk.aws_arch.aws_arch.GroupFormat"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/themes/types.ts",
            "line": 84
          },
          "name": "spotFleet",
          "type": {
            "fqn": "@aws/pdk.aws_arch.aws_arch.GroupFormat"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/themes/types.ts",
            "line": 78
          },
          "name": "vpc",
          "type": {
            "fqn": "@aws/pdk.aws_arch.aws_arch.GroupFormat"
          }
        }
      ],
      "symbolId": "aws-arch/themes/types:ThemeGroups"
    },
    "@aws/pdk.aws_arch.aws_arch.ThemeText": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Theme text dictionary."
      },
      "fqn": "@aws/pdk.aws_arch.aws_arch.ThemeText",
      "kind": "interface",
      "locationInModule": {
        "filename": "aws-arch/themes/types.ts",
        "line": 55
      },
      "name": "ThemeText",
      "namespace": "aws_arch.aws_arch",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/themes/types.ts",
            "line": 56
          },
          "name": "default",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/themes/types.ts",
            "line": 57
          },
          "name": "primary",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/themes/types.ts",
            "line": 58
          },
          "name": "secondary",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "aws-arch/themes/types.ts",
            "line": 59
          },
          "name": "tertiary",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "aws-arch/themes/types:ThemeText"
    },
    "@aws/pdk.cdk_graph.AppNode": {
      "assembly": "@aws/pdk",
      "base": "@aws/pdk.cdk_graph.Node",
      "docs": {
        "stability": "stable",
        "summary": "AppNode defines a cdk App."
      },
      "fqn": "@aws/pdk.cdk_graph.AppNode",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "cdk-graph/core/graph.ts",
          "line": 2559
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws/pdk.cdk_graph.IAppNodeProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "cdk-graph/core/graph.ts",
        "line": 2548
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Indicates if node is a {@link AppNode}."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2555
          },
          "name": "isAppNode",
          "parameters": [
            {
              "name": "node",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.Node"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          },
          "static": true
        }
      ],
      "name": "AppNode",
      "namespace": "cdk_graph",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Fixed path of the App."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2552
          },
          "name": "PATH",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Fixed UUID for App node."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2550
          },
          "name": "UUID",
          "static": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "cdk-graph/core/graph:AppNode"
    },
    "@aws/pdk.cdk_graph.AttributeReference": {
      "assembly": "@aws/pdk",
      "base": "@aws/pdk.cdk_graph.Reference",
      "docs": {
        "stability": "stable",
        "summary": "Attribute type reference edge."
      },
      "fqn": "@aws/pdk.cdk_graph.AttributeReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "cdk-graph/core/graph.ts",
          "line": 1022
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws/pdk.cdk_graph.IAttributeReferenceProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "cdk-graph/core/graph.ts",
        "line": 1011
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Indicates if edge in an **Fn::GetAtt** {@link Reference}."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1018
          },
          "name": "isAtt",
          "parameters": [
            {
              "name": "edge",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.Edge"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          },
          "static": true
        }
      ],
      "name": "AttributeReference",
      "namespace": "cdk_graph",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Attribute key for resolved value of attribute reference."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1015
          },
          "name": "ATT_VALUE",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Edge prefix to denote **Fn::GetAtt** type reference edge."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1013
          },
          "name": "PREFIX",
          "overrides": "@aws/pdk.cdk_graph.Reference",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Get the resolved attribute value."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1032
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "cdk-graph/core/graph:AttributeReference"
    },
    "@aws/pdk.cdk_graph.BaseEntity": {
      "abstract": true,
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "Base class for all store entities (Node and Edges)."
      },
      "fqn": "@aws/pdk.cdk_graph.BaseEntity",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "cdk-graph/core/graph.ts",
          "line": 433
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws/pdk.cdk_graph.IBaseEntityProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws/pdk.cdk_graph.ISerializableEntity"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "cdk-graph/core/graph.ts",
        "line": 414
      },
      "methods": [
        {
          "docs": {
            "custom": {
              "throws": "Error if attribute for key already exists"
            },
            "stability": "stable",
            "summary": "Add attribute."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 500
          },
          "name": "addAttribute",
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "value",
              "type": {
                "primitive": "any"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Add flag."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 578
          },
          "name": "addFlag",
          "parameters": [
            {
              "name": "flag",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.FlagEnum"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Add metadata entry."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 523
          },
          "name": "addMetadata",
          "parameters": [
            {
              "name": "metadataType",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "data",
              "type": {
                "primitive": "any"
              }
            }
          ]
        },
        {
          "docs": {
            "custom": {
              "throws": "Throws Error is tag for key already exists"
            },
            "stability": "stable",
            "summary": "Add tag."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 551
          },
          "name": "addTag",
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "value",
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "Generally used only for mutations such as collapse and consume to retain data.",
            "stability": "stable",
            "summary": "Applies data (attributes, metadata, tags, flag) to entity."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 595
          },
          "name": "applyData",
          "parameters": [
            {
              "docs": {
                "summary": "- The data to apply."
              },
              "name": "data",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.IBaseEntityDataProps"
              }
            },
            {
              "name": "overwrite",
              "optional": true,
              "type": {
                "primitive": "boolean"
              }
            },
            {
              "docs": {
                "summary": "- Indicates if data is overwritten - Indicates if flags should be applied."
              },
              "name": "applyFlags",
              "optional": true,
              "type": {
                "primitive": "boolean"
              }
            }
          ]
        },
        {
          "docs": {
            "custom": {
              "type": "Readonly<SerializedGraph.Metadata>"
            },
            "stability": "stable",
            "summary": "Retrieves all metadata entries of a given type."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 543
          },
          "name": "findMetadata",
          "parameters": [
            {
              "name": "metadataType",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "fqn": "constructs.MetadataEntry"
                },
                "kind": "array"
              }
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Get attribute by key."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 518
          },
          "name": "getAttribute",
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Get tag by key."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 573
          },
          "name": "getTag",
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "optional": true,
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Indicates if entity has a given attribute defined, and optionally with a specific value."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 485
          },
          "name": "hasAttribute",
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "value",
              "optional": true,
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Indicates if entity has a given flag."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 583
          },
          "name": "hasFlag",
          "parameters": [
            {
              "name": "flag",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.FlagEnum"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Indicates if entity has matching metadata entry."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 531
          },
          "name": "hasMetadata",
          "parameters": [
            {
              "name": "metadataType",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "data",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Indicates if entity has tag, optionally verifying tag value."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 566
          },
          "name": "hasTag",
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "value",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "destructive": "true"
            },
            "stability": "stable",
            "summary": "Destroy the entity be removing all references and removing from store."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 645
          },
          "name": "mutateDestroy",
          "parameters": [
            {
              "docs": {
                "summary": "- If `strict`, then entity must not have any references remaining when attempting to destroy."
              },
              "name": "strict",
              "optional": true,
              "type": {
                "primitive": "boolean"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "This will overwrite existing attribute.",
            "stability": "stable",
            "summary": "Set attribute."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 512
          },
          "name": "setAttribute",
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "value",
              "type": {
                "primitive": "any"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "Will overwrite existing tag.",
            "stability": "stable",
            "summary": "Set tag."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 561
          },
          "name": "setTag",
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "value",
              "type": {
                "primitive": "string"
              }
            }
          ]
        }
      ],
      "name": "BaseEntity",
      "namespace": "cdk_graph",
      "properties": [
        {
          "docs": {
            "custom": {
              "type": "Readonly<SerializedGraph.Attributes>"
            },
            "stability": "stable",
            "summary": "Get *readonly* record of all attributes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 446
          },
          "name": "attributes",
          "type": {
            "collection": {
              "elementtype": {
                "union": {
                  "types": [
                    {
                      "primitive": "string"
                    },
                    {
                      "primitive": "number"
                    },
                    {
                      "primitive": "boolean"
                    },
                    {
                      "fqn": "@aws/pdk.cdk_graph.PlainObject"
                    },
                    {
                      "collection": {
                        "elementtype": {
                          "union": {
                            "types": [
                              {
                                "primitive": "string"
                              },
                              {
                                "primitive": "number"
                              },
                              {
                                "primitive": "boolean"
                              },
                              {
                                "fqn": "@aws/pdk.cdk_graph.PlainObject"
                              }
                            ]
                          }
                        },
                        "kind": "array"
                      }
                    }
                  ]
                }
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "type": "ReadonlyArray<FlagEnum>"
            },
            "stability": "stable",
            "summary": "Get *readonly* list of all flags."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 470
          },
          "name": "flags",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.cdk_graph.FlagEnum"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Indicates if the entity has been destroyed (eg: removed from store)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 475
          },
          "name": "isDestroyed",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Indicates if the entity has had destructive mutations applied."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 480
          },
          "name": "isMutated",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "custom": {
              "type": "Readonly<SerializedGraph.Metadata>"
            },
            "stability": "stable",
            "summary": "Get *readonly* list of all metadata entries."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 454
          },
          "name": "metadata",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "constructs.MetadataEntry"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Reference to the store."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 418
          },
          "name": "store",
          "type": {
            "fqn": "@aws/pdk.cdk_graph.Store"
          }
        },
        {
          "docs": {
            "custom": {
              "type": "Readonly<SerializedGraph.Tags>"
            },
            "stability": "stable",
            "summary": "Get *readonly* record of all tags."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 462
          },
          "name": "tags",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Universally unique identifier."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 420
          },
          "name": "uuid",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "cdk-graph/core/graph:BaseEntity"
    },
    "@aws/pdk.cdk_graph.CdkConstructIds": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "Common cdk construct ids."
      },
      "fqn": "@aws/pdk.cdk_graph.CdkConstructIds",
      "kind": "enum",
      "locationInModule": {
        "filename": "cdk-graph/core/types.ts",
        "line": 8
      },
      "members": [
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DEFAULT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "RESOURCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "EXPORTS"
        }
      ],
      "name": "CdkConstructIds",
      "namespace": "cdk_graph",
      "symbolId": "cdk-graph/core/types:CdkConstructIds"
    },
    "@aws/pdk.cdk_graph.CdkGraph": {
      "assembly": "@aws/pdk",
      "base": "constructs.Construct",
      "docs": {
        "stability": "stable",
        "summary": "CdkGraph construct is the cdk-graph framework controller that is responsible for computing the graph, storing serialized graph, and instrumenting plugins per the plugin contract."
      },
      "fqn": "@aws/pdk.cdk_graph.CdkGraph",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "cdk-graph/cdk-graph.ts",
          "line": 254
        },
        "parameters": [
          {
            "name": "root",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws/pdk.cdk_graph.ICdkGraphProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "cdk-graph/cdk-graph.ts",
        "line": 230
      },
      "methods": [
        {
          "async": true,
          "docs": {
            "remarks": "If a given plugin requires performing asynchronous operations or is general expensive, it should\nutilize `report` rather than `synthesize`.",
            "stability": "stable",
            "summary": "Asynchronous report generation. This operation enables running expensive and non-synchronous report generation by plugins post synthesis."
          },
          "locationInModule": {
            "filename": "cdk-graph/cdk-graph.ts",
            "line": 328
          },
          "name": "report"
        }
      ],
      "name": "CdkGraph",
      "namespace": "cdk_graph",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Fixed CdkGraph construct id."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/cdk-graph.ts",
            "line": 232
          },
          "name": "ID",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Current CdkGraph semantic version."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/cdk-graph.ts",
            "line": 234
          },
          "name": "VERSION",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Config."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/cdk-graph.ts",
            "line": 243
          },
          "name": "config",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "List of plugins registered with this instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/cdk-graph.ts",
            "line": 237
          },
          "name": "plugins",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.cdk_graph.ICdkGraphPlugin"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/cdk-graph.ts",
            "line": 254
          },
          "name": "root",
          "type": {
            "fqn": "constructs.Construct"
          }
        },
        {
          "docs": {
            "remarks": "This will be `undefined` before construct synthesis has initiated.",
            "stability": "stable",
            "summary": "Get the context for the graph instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/cdk-graph.ts",
            "line": 250
          },
          "name": "graphContext",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.cdk_graph.CdkGraphContext"
          }
        }
      ],
      "symbolId": "cdk-graph/cdk-graph:CdkGraph"
    },
    "@aws/pdk.cdk_graph.CdkGraphArtifact": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "CdkGraph artifact definition."
      },
      "fqn": "@aws/pdk.cdk_graph.CdkGraphArtifact",
      "kind": "interface",
      "locationInModule": {
        "filename": "cdk-graph/cdk-graph.ts",
        "line": 25
      },
      "name": "CdkGraphArtifact",
      "namespace": "cdk_graph",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Filename of the artifact."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/cdk-graph.ts",
            "line": 29
          },
          "name": "filename",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Full path where artifact is stored."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/cdk-graph.ts",
            "line": 31
          },
          "name": "filepath",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The unique type of the artifact."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/cdk-graph.ts",
            "line": 27
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The source of the artifact (such as plugin, or core system, etc)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/cdk-graph.ts",
            "line": 35
          },
          "name": "source",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Description of artifact."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/cdk-graph.ts",
            "line": 33
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "cdk-graph/cdk-graph:CdkGraphArtifact"
    },
    "@aws/pdk.cdk_graph.CdkGraphArtifacts": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "CdkGraph core artifacts."
      },
      "fqn": "@aws/pdk.cdk_graph.CdkGraphArtifacts",
      "kind": "enum",
      "locationInModule": {
        "filename": "cdk-graph/cdk-graph.ts",
        "line": 16
      },
      "members": [
        {
          "docs": {
            "stability": "stable"
          },
          "name": "GRAPH_METADATA"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "GRAPH"
        }
      ],
      "name": "CdkGraphArtifacts",
      "namespace": "cdk_graph",
      "symbolId": "cdk-graph/cdk-graph:CdkGraphArtifacts"
    },
    "@aws/pdk.cdk_graph.CdkGraphContext": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "CdkGraph context."
      },
      "fqn": "@aws/pdk.cdk_graph.CdkGraphContext",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "cdk-graph/cdk-graph.ts",
          "line": 46
        },
        "parameters": [
          {
            "name": "store",
            "type": {
              "fqn": "@aws/pdk.cdk_graph.Store"
            }
          },
          {
            "name": "outdir",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "cdk-graph/cdk-graph.ts",
        "line": 42
      },
      "methods": [
        {
          "docs": {
            "custom": {
              "throws": "Error is artifact does not exist"
            },
            "stability": "stable",
            "summary": "Get CdkGraph artifact by id."
          },
          "locationInModule": {
            "filename": "cdk-graph/cdk-graph.ts",
            "line": 55
          },
          "name": "getArtifact",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws/pdk.cdk_graph.CdkGraphArtifact"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Indicates if context has an artifact with *filename* defined."
          },
          "locationInModule": {
            "filename": "cdk-graph/cdk-graph.ts",
            "line": 69
          },
          "name": "hasArtifactFile",
          "parameters": [
            {
              "name": "filename",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "throws": "Error is artifact id or filename already exists"
            },
            "remarks": "In general this should not be called directly, as `writeArtifact` should be utilized\nto perform writing and logging artifacts. However some plugins utilize other tools that generate the artifacts,\nin which case the plugin would call this method to log the entry.",
            "returns": "",
            "stability": "stable",
            "summary": "Logs an artifact entry."
          },
          "locationInModule": {
            "filename": "cdk-graph/cdk-graph.ts",
            "line": 91
          },
          "name": "logArtifact",
          "parameters": [
            {
              "docs": {
                "summary": "The source of the artifact, such as the name of plugin."
              },
              "name": "source",
              "type": {
                "union": {
                  "types": [
                    {
                      "fqn": "@aws/pdk.cdk_graph.CdkGraph"
                    },
                    {
                      "fqn": "@aws/pdk.cdk_graph.ICdkGraphPlugin"
                    }
                  ]
                }
              }
            },
            {
              "docs": {
                "summary": "Unique id of the artifact."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "Full path where the artifact is stored."
              },
              "name": "filepath",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "Description of the artifact."
              },
              "name": "description",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws/pdk.cdk_graph.CdkGraphArtifact"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Writes artifact data to outdir and logs the entry."
          },
          "locationInModule": {
            "filename": "cdk-graph/cdk-graph.ts",
            "line": 145
          },
          "name": "writeArtifact",
          "parameters": [
            {
              "docs": {
                "summary": "The source of the artifact, such as the name of plugin."
              },
              "name": "source",
              "type": {
                "union": {
                  "types": [
                    {
                      "fqn": "@aws/pdk.cdk_graph.CdkGraph"
                    },
                    {
                      "fqn": "@aws/pdk.cdk_graph.ICdkGraphPlugin"
                    }
                  ]
                }
              }
            },
            {
              "docs": {
                "summary": "Unique id of the artifact."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "Relative name of the file."
              },
              "name": "filename",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "data",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "Description of the artifact."
              },
              "name": "description",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws/pdk.cdk_graph.CdkGraphArtifact"
            }
          }
        }
      ],
      "name": "CdkGraphContext",
      "namespace": "cdk_graph",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Get record of all graph artifacts keyed by artifact id."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/cdk-graph.ts",
            "line": 76
          },
          "name": "artifacts",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.cdk_graph.CdkGraphArtifact"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Get CdkGraph core `graph.json` artifact."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/cdk-graph.ts",
            "line": 64
          },
          "name": "graphJson",
          "type": {
            "fqn": "@aws/pdk.cdk_graph.CdkGraphArtifact"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/cdk-graph.ts",
            "line": 48
          },
          "name": "outdir",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/cdk-graph.ts",
            "line": 47
          },
          "name": "store",
          "type": {
            "fqn": "@aws/pdk.cdk_graph.Store"
          }
        }
      ],
      "symbolId": "cdk-graph/cdk-graph:CdkGraphContext"
    },
    "@aws/pdk.cdk_graph.CfnAttributesEnum": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "Common cfn attribute keys."
      },
      "fqn": "@aws/pdk.cdk_graph.CfnAttributesEnum",
      "kind": "enum",
      "locationInModule": {
        "filename": "cdk-graph/core/types.ts",
        "line": 97
      },
      "members": [
        {
          "docs": {
            "stability": "stable"
          },
          "name": "TYPE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "PROPS"
        }
      ],
      "name": "CfnAttributesEnum",
      "namespace": "cdk_graph",
      "symbolId": "cdk-graph/core/types:CfnAttributesEnum"
    },
    "@aws/pdk.cdk_graph.CfnResourceNode": {
      "assembly": "@aws/pdk",
      "base": "@aws/pdk.cdk_graph.Node",
      "docs": {
        "stability": "stable",
        "summary": "CfnResourceNode defines an L1 cdk resource."
      },
      "fqn": "@aws/pdk.cdk_graph.CfnResourceNode",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "cdk-graph/core/graph.ts",
          "line": 2050
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws/pdk.cdk_graph.ICfnResourceNodeProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "cdk-graph/core/graph.ts",
        "line": 2038
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Indicates if a node is a {@link CfnResourceNode}."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2043
          },
          "name": "isCfnResourceNode",
          "parameters": [
            {
              "name": "node",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.Node"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          },
          "static": true
        },
        {
          "docs": {
            "example": "`aws-cdk-lib.aws_lambda.Function` => `aws-cdk-lib.aws_lambda.CfnFunction`",
            "returns": "Returns `true` if equivalent, otherwise `false`",
            "stability": "stable",
            "summary": "Evaluates if CfnResourceNode fqn is equivalent to ResourceNode fqn."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2099
          },
          "name": "isEquivalentFqn",
          "parameters": [
            {
              "docs": {
                "summary": "- {@link Graph.ResourceNode } to compare."
              },
              "name": "resource",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.ResourceNode"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "inheritdoc": "true"
            },
            "stability": "stable",
            "summary": "Destroys this node by removing all references and removing this node from the store."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2130
          },
          "name": "mutateDestroy",
          "overrides": "@aws/pdk.cdk_graph.Node",
          "parameters": [
            {
              "name": "strict",
              "optional": true,
              "type": {
                "primitive": "boolean"
              }
            }
          ]
        }
      ],
      "name": "CfnResourceNode",
      "namespace": "cdk_graph",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Normalized CfnReference attribute."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2040
          },
          "name": "ATT_IMPORT_ARN_TOKEN",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "inheritdoc": "true"
            },
            "stability": "stable",
            "summary": "Indicates if this node is considered a {@link FlagEnum.EXTRANEOUS} node or determined to be extraneous: - Clusters that contain no children."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2079
          },
          "name": "isExtraneous",
          "overrides": "@aws/pdk.cdk_graph.Node",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Indicates if this CfnResource is imported (eg: `s3.Bucket.fromBucketArn`)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2084
          },
          "name": "isImport",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Reference to the L2 Resource that wraps this L1 CfnResource if it is wrapped."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2089
          },
          "name": "resource",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.cdk_graph.ResourceNode"
          }
        }
      ],
      "symbolId": "cdk-graph/core/graph:CfnResourceNode"
    },
    "@aws/pdk.cdk_graph.ConstructInfo": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "see": "https://github.com/aws/aws-cdk/blob/cea1039e3664fdfa89c6f00cdaeb1a0185a12678/packages/%40aws-cdk/core/lib/private/runtime-info.ts#L22",
        "stability": "stable",
        "summary": "Source information on a construct (class fqn and version)."
      },
      "fqn": "@aws/pdk.cdk_graph.ConstructInfo",
      "kind": "interface",
      "locationInModule": {
        "filename": "cdk-graph/cdk-internals/index.ts",
        "line": 63
      },
      "name": "ConstructInfo",
      "namespace": "cdk_graph",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/cdk-internals/index.ts",
            "line": 64
          },
          "name": "fqn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/cdk-internals/index.ts",
            "line": 65
          },
          "name": "version",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "cdk-graph/cdk-internals/index:ConstructInfo"
    },
    "@aws/pdk.cdk_graph.ConstructInfoFqnEnum": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "Commonly used cdk construct info fqn (jsii fully-qualified ids)."
      },
      "fqn": "@aws/pdk.cdk_graph.ConstructInfoFqnEnum",
      "kind": "enum",
      "locationInModule": {
        "filename": "cdk-graph/core/types.ts",
        "line": 15
      },
      "members": [
        {
          "docs": {
            "stability": "stable"
          },
          "name": "APP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "PDKAPP_MONO"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "PDKAPP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "STAGE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "STACK"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "NESTED_STACK"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CFN_STACK"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CFN_OUTPUT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CFN_PARAMETER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CUSTOM_RESOURCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "AWS_CUSTOM_RESOURCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CUSTOM_RESOURCE_PROVIDER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CUSTOM_RESOURCE_PROVIDER_2"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "LAMBDA"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CFN_LAMBDA"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "LAMBDA_LAYER_VERSION"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CFN_LAMBDA_LAYER_VERSION"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "LAMBDA_ALIAS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CFN_LAMBDA_ALIAS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "LAMBDA_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "LAMBDA_SINGLETON"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "LAMBDA_LAYER_AWSCLI"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CFN_LAMBDA_PERMISSIONS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ASSET_STAGING"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "S3_ASSET"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ECR_TARBALL_ASSET"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "EC2_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CFN_EC2_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SECURITY_GROUP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CFN_SECURITY_GROUP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "VPC"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CFN_VPC"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "PRIVATE_SUBNET"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CFN_PRIVATE_SUBNET"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "PUBLIC_SUBNET"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CFN_PUBLIC_SUBNET"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IAM_ROLE"
        }
      ],
      "name": "ConstructInfoFqnEnum",
      "namespace": "cdk_graph",
      "symbolId": "cdk-graph/core/types:ConstructInfoFqnEnum"
    },
    "@aws/pdk.cdk_graph.Dependency": {
      "assembly": "@aws/pdk",
      "base": "@aws/pdk.cdk_graph.Edge",
      "docs": {
        "stability": "stable",
        "summary": "Dependency edge class defines CloudFormation dependency between resources."
      },
      "fqn": "@aws/pdk.cdk_graph.Dependency",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "cdk-graph/core/graph.ts",
          "line": 912
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws/pdk.cdk_graph.ITypedEdgeProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "cdk-graph/core/graph.ts",
        "line": 903
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Indicates if given edge is a {@link Dependency} edge."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 908
          },
          "name": "isDependency",
          "parameters": [
            {
              "name": "edge",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.Edge"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          },
          "static": true
        }
      ],
      "name": "Dependency",
      "namespace": "cdk_graph",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Edge prefix to denote dependency edge."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 905
          },
          "name": "PREFIX",
          "static": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "cdk-graph/core/graph:Dependency"
    },
    "@aws/pdk.cdk_graph.Edge": {
      "assembly": "@aws/pdk",
      "base": "@aws/pdk.cdk_graph.BaseEntity",
      "docs": {
        "stability": "stable",
        "summary": "Edge class defines a link (relationship) between nodes, as in standard [graph theory](https://en.wikipedia.org/wiki/Graph_theory)."
      },
      "fqn": "@aws/pdk.cdk_graph.Edge",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "cdk-graph/core/graph.ts",
          "line": 777
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws/pdk.cdk_graph.IEdgeProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws/pdk.cdk_graph.ISerializableEdge"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "cdk-graph/core/graph.ts",
        "line": 691
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Find all matching edges based on predicate within an EdgeChain."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 713
          },
          "name": "findAllInChain",
          "parameters": [
            {
              "name": "chain",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "array"
                }
              }
            },
            {
              "name": "predicate",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.IEdgePredicate"
              }
            }
          ],
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "fqn": "@aws/pdk.cdk_graph.Edge"
                },
                "kind": "array"
              }
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Find first edge matching predicate within an EdgeChain."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 696
          },
          "name": "findInChain",
          "parameters": [
            {
              "name": "chain",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "array"
                }
              }
            },
            {
              "name": "predicate",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.IEdgePredicate"
              }
            }
          ],
          "returns": {
            "optional": true,
            "type": {
              "fqn": "@aws/pdk.cdk_graph.Edge"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "Edges are considered equivalent if they share same type, source, and target.",
            "stability": "stable",
            "summary": "Indicates if this edge is equivalent to another edge."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 802
          },
          "name": "isEquivalent",
          "parameters": [
            {
              "name": "edge",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.Edge"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "destructive": "true",
              "throws": "Error is edge is not *equivalent*"
            },
            "remarks": "Used during filtering operations to consolidate equivalent edges.",
            "stability": "stable",
            "summary": "Merge an equivalent edge's data into this edge and destroy the other edge."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 870
          },
          "name": "mutateConsume",
          "parameters": [
            {
              "docs": {
                "summary": "- The edge to consume."
              },
              "name": "edge",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.Edge"
              }
            }
          ]
        },
        {
          "docs": {
            "custom": {
              "destructive": "true"
            },
            "remarks": "Remove all references and remove from store.",
            "stability": "stable",
            "summary": "Destroy the edge."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 852
          },
          "name": "mutateDestroy",
          "overrides": "@aws/pdk.cdk_graph.BaseEntity",
          "parameters": [
            {
              "name": "_strict",
              "optional": true,
              "type": {
                "primitive": "boolean"
              }
            }
          ]
        },
        {
          "docs": {
            "custom": {
              "destructive": "true"
            },
            "stability": "stable",
            "summary": "Change the edge **direction**."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 818
          },
          "name": "mutateDirection",
          "parameters": [
            {
              "name": "direction",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.EdgeDirectionEnum"
              }
            }
          ]
        },
        {
          "docs": {
            "custom": {
              "destructive": "true"
            },
            "stability": "stable",
            "summary": "Change the edge **source**."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 828
          },
          "name": "mutateSource",
          "parameters": [
            {
              "name": "node",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.Node"
              }
            }
          ]
        },
        {
          "docs": {
            "custom": {
              "destructive": "true"
            },
            "stability": "stable",
            "summary": "Change the edge **target**."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 840
          },
          "name": "mutateTarget",
          "parameters": [
            {
              "name": "node",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.Node"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Get string representation of this edge."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 886
          },
          "name": "toString",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "Edge",
      "namespace": "cdk_graph",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Indicates if edge allows destructive mutations."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 810
          },
          "name": "allowDestructiveMutations",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Indicates the direction in which the edge is directed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 750
          },
          "name": "direction",
          "type": {
            "fqn": "@aws/pdk.cdk_graph.EdgeDirectionEnum"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Type of edge."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 732
          },
          "name": "edgeType",
          "type": {
            "fqn": "@aws/pdk.cdk_graph.EdgeTypeEnum"
          }
        },
        {
          "docs": {
            "remarks": "To check whether it was originally closed, use `hasFlag(FlagEnum.CLOSED_EDGE)` instead.",
            "stability": "stable",
            "summary": "Indicates if the Edge's **source** and **target** are the same, or were the same when it was created (prior to mutations)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 765
          },
          "name": "isClosed",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Indicates if **source** and **target** nodes reside in different *root* stacks."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 755
          },
          "name": "isCrossStack",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Indicates if edge is extraneous which is determined by explicitly having *EXTRANEOUS* flag added and/or being a closed loop (source===target)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 773
          },
          "name": "isExtraneous",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Edge **source** is the node that defines the edge (tail)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 742
          },
          "name": "source",
          "type": {
            "fqn": "@aws/pdk.cdk_graph.Node"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Edge **target** is the node being referenced by the **source** (head)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 746
          },
          "name": "target",
          "type": {
            "fqn": "@aws/pdk.cdk_graph.Node"
          }
        }
      ],
      "symbolId": "cdk-graph/core/graph:Edge"
    },
    "@aws/pdk.cdk_graph.EdgeDirectionEnum": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "EdgeDirection specifies in which direction the edge is directed or if it is undirected."
      },
      "fqn": "@aws/pdk.cdk_graph.EdgeDirectionEnum",
      "kind": "enum",
      "locationInModule": {
        "filename": "cdk-graph/core/types.ts",
        "line": 148
      },
      "members": [
        {
          "docs": {
            "remarks": "meaning there is no directional relationship between the **source** and **target**.",
            "stability": "stable",
            "summary": "Indicates that edge is *undirected*;"
          },
          "name": "NONE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Indicates the edge is *directed* from the **source** to the **target**."
          },
          "name": "FORWARD"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Indicates the edge is *directed* from the **target** to the **source**."
          },
          "name": "BACK"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Indicates the edge is *bi-directional*."
          },
          "name": "BOTH"
        }
      ],
      "name": "EdgeDirectionEnum",
      "namespace": "cdk_graph",
      "symbolId": "cdk-graph/core/types:EdgeDirectionEnum"
    },
    "@aws/pdk.cdk_graph.EdgeTypeEnum": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "Edge types handles by the graph."
      },
      "fqn": "@aws/pdk.cdk_graph.EdgeTypeEnum",
      "kind": "enum",
      "locationInModule": {
        "filename": "cdk-graph/core/types.ts",
        "line": 136
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Custom edge."
          },
          "name": "CUSTOM"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Reference edge (Ref, Fn::GetAtt, Fn::ImportValue)."
          },
          "name": "REFERENCE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "CloudFormation dependency edge."
          },
          "name": "DEPENDENCY"
        }
      ],
      "name": "EdgeTypeEnum",
      "namespace": "cdk_graph",
      "symbolId": "cdk-graph/core/types:EdgeTypeEnum"
    },
    "@aws/pdk.cdk_graph.FilterPreset": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "Filter presets."
      },
      "fqn": "@aws/pdk.cdk_graph.FilterPreset",
      "kind": "enum",
      "locationInModule": {
        "filename": "cdk-graph/filtering/types.ts",
        "line": 7
      },
      "members": [
        {
          "docs": {
            "remarks": "This most closely represents the developers code for the current application\nand reduces the noise one expects.",
            "stability": "stable",
            "summary": "Collapses extraneous nodes to parent and cdk created nodes on themselves, and prunes extraneous edges."
          },
          "name": "COMPACT"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Collapses extraneous nodes to parent and prunes extraneous edges."
          },
          "name": "NON_EXTRANEOUS"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "No filtering is performed which will output **verbose** graph."
          },
          "name": "NONE"
        }
      ],
      "name": "FilterPreset",
      "namespace": "cdk_graph",
      "symbolId": "cdk-graph/filtering/types:FilterPreset"
    },
    "@aws/pdk.cdk_graph.FilterStrategy": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "Filter strategy to apply to filter matches."
      },
      "fqn": "@aws/pdk.cdk_graph.FilterStrategy",
      "kind": "enum",
      "locationInModule": {
        "filename": "cdk-graph/filtering/types.ts",
        "line": 29
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Remove filtered entity and all its edges."
          },
          "name": "PRUNE"
        },
        {
          "docs": {
            "remarks": "and hoist all edges.",
            "stability": "stable",
            "summary": "Collapse all child entities of filtered entity into filtered entity;"
          },
          "name": "COLLAPSE"
        },
        {
          "docs": {
            "remarks": "and hoist its edges to parent.",
            "stability": "stable",
            "summary": "Collapse all filtered entities into their parent entity;"
          },
          "name": "COLLAPSE_TO_PARENT"
        }
      ],
      "name": "FilterStrategy",
      "namespace": "cdk_graph",
      "symbolId": "cdk-graph/filtering/types:FilterStrategy"
    },
    "@aws/pdk.cdk_graph.FilterValue": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Filter value to use."
      },
      "fqn": "@aws/pdk.cdk_graph.FilterValue",
      "kind": "interface",
      "locationInModule": {
        "filename": "cdk-graph/filtering/filters.ts",
        "line": 12
      },
      "name": "FilterValue",
      "namespace": "cdk_graph",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "String representation of a regex."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/filtering/filters.ts",
            "line": 16
          },
          "name": "regex",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Raw value."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/filtering/filters.ts",
            "line": 21
          },
          "name": "value",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "cdk-graph/filtering/filters:FilterValue"
    },
    "@aws/pdk.cdk_graph.Filters": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws/pdk.cdk_graph.Filters",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "cdk-graph/filtering/filters.ts",
        "line": 24
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Collapses all Cdk Owned containers, which more closely mirrors the application code by removing resources that are automatically created by cdk."
          },
          "locationInModule": {
            "filename": "cdk-graph/filtering/filters.ts",
            "line": 79
          },
          "name": "collapseCdkOwnedResources",
          "returns": {
            "type": {
              "fqn": "@aws/pdk.cdk_graph.IGraphStoreFilter"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "Example, s3.Bucket wraps s3.CfnBucket.",
            "stability": "stable",
            "summary": "Collapses all Cdk Resource wrappers that wrap directly wrap a CfnResource."
          },
          "locationInModule": {
            "filename": "cdk-graph/filtering/filters.ts",
            "line": 102
          },
          "name": "collapseCdkWrappers",
          "returns": {
            "type": {
              "fqn": "@aws/pdk.cdk_graph.IGraphStoreFilter"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Collapses Custom Resource nodes to a single node."
          },
          "locationInModule": {
            "filename": "cdk-graph/filtering/filters.ts",
            "line": 125
          },
          "name": "collapseCustomResources",
          "returns": {
            "type": {
              "fqn": "@aws/pdk.cdk_graph.IGraphStoreFilter"
            }
          },
          "static": true
        },
        {
          "docs": {
            "custom": {
              "destructive": "true",
              "throws": "Error if store is not filterable"
            },
            "remarks": "This most closely represents the developers code for the current application\nand reduces the noise one expects.\n\nInvokes:\n1.\n1. pruneExtraneous()(store);\n1. collapseCdkOwnedResources()(store);\n1. collapseCdkWrappers()(store);\n1. collapseCustomResources()(store);\n1. ~pruneCustomResources()(store);~\n1. pruneEmptyContainers()(store);",
            "stability": "stable",
            "summary": "Collapses extraneous nodes to parent and cdk created nodes on themselves, and prunes extraneous edges."
          },
          "locationInModule": {
            "filename": "cdk-graph/filtering/filters.ts",
            "line": 239
          },
          "name": "compact",
          "returns": {
            "type": {
              "fqn": "@aws/pdk.cdk_graph.IGraphStoreFilter"
            }
          },
          "static": true
        },
        {
          "docs": {
            "custom": {
              "destructive": "true",
              "throws": "Error if store is not filterable"
            },
            "stability": "stable",
            "summary": "Prune all {@link Graph.ResourceNode} and {@link Graph.CfnResourceNode} nodes *matching* specified list of CloudFormation types."
          },
          "locationInModule": {
            "filename": "cdk-graph/filtering/filters.ts",
            "line": 377
          },
          "name": "excludeCfnType",
          "parameters": [
            {
              "name": "cfnTypes",
              "type": {
                "collection": {
                  "elementtype": {
                    "fqn": "@aws/pdk.cdk_graph.FilterValue"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws/pdk.cdk_graph.IGraphFilter"
            }
          },
          "static": true
        },
        {
          "docs": {
            "custom": {
              "destructive": "true",
              "throws": "Error if store is not filterable"
            },
            "remarks": "This filter targets all nodes (except root) - {@link IGraphFilter.allNodes}",
            "stability": "stable",
            "summary": "Prune all {@link Graph.Node}s *matching* specified list."
          },
          "locationInModule": {
            "filename": "cdk-graph/filtering/filters.ts",
            "line": 315
          },
          "name": "excludeNodeType",
          "parameters": [
            {
              "name": "nodeTypes",
              "type": {
                "collection": {
                  "elementtype": {
                    "fqn": "@aws/pdk.cdk_graph.FilterValue"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws/pdk.cdk_graph.IGraphStoreFilter"
            }
          },
          "static": true
        },
        {
          "docs": {
            "custom": {
              "destructive": "true",
              "throws": "Error if store is not filterable"
            },
            "stability": "stable",
            "summary": "Prune all {@link Graph.ResourceNode} and {@link Graph.CfnResourceNode} nodes *except those matching* specified list of CloudFormation types."
          },
          "locationInModule": {
            "filename": "cdk-graph/filtering/filters.ts",
            "line": 367
          },
          "name": "includeCfnType",
          "parameters": [
            {
              "name": "cfnTypes",
              "type": {
                "collection": {
                  "elementtype": {
                    "fqn": "@aws/pdk.cdk_graph.FilterValue"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws/pdk.cdk_graph.IGraphFilter"
            }
          },
          "static": true
        },
        {
          "docs": {
            "custom": {
              "destructive": "true",
              "throws": "Error if store is not filterable"
            },
            "remarks": "This filter targets all nodes (except root) - {@link IGraphFilter.allNodes}",
            "stability": "stable",
            "summary": "Prune all {@link Graph.Node}s *except those matching* specified list."
          },
          "locationInModule": {
            "filename": "cdk-graph/filtering/filters.ts",
            "line": 304
          },
          "name": "includeNodeType",
          "parameters": [
            {
              "name": "nodeTypes",
              "type": {
                "collection": {
                  "elementtype": {
                    "fqn": "@aws/pdk.cdk_graph.FilterValue"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws/pdk.cdk_graph.IGraphStoreFilter"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Prune Custom Resource nodes."
          },
          "locationInModule": {
            "filename": "cdk-graph/filtering/filters.ts",
            "line": 169
          },
          "name": "pruneCustomResources",
          "returns": {
            "type": {
              "fqn": "@aws/pdk.cdk_graph.IGraphStoreFilter"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "Generally L3 constructs in which all children have already been pruned, which\nwould be useful as containers, but without children are considered extraneous.",
            "stability": "stable",
            "summary": "Prune empty containers, which are non-resource default nodes without any children."
          },
          "locationInModule": {
            "filename": "cdk-graph/filtering/filters.ts",
            "line": 195
          },
          "name": "pruneEmptyContainers",
          "returns": {
            "type": {
              "fqn": "@aws/pdk.cdk_graph.IGraphStoreFilter"
            }
          },
          "static": true
        },
        {
          "docs": {
            "custom": {
              "destructive": "true",
              "throws": "Error if store is not filterable"
            },
            "stability": "stable",
            "summary": "Prune **extraneous** nodes and edges."
          },
          "locationInModule": {
            "filename": "cdk-graph/filtering/filters.ts",
            "line": 42
          },
          "name": "pruneExtraneous",
          "returns": {
            "type": {
              "fqn": "@aws/pdk.cdk_graph.IGraphStoreFilter"
            }
          },
          "static": true
        },
        {
          "docs": {
            "custom": {
              "destructive": "true",
              "throws": "Error if store is not filterable"
            },
            "see": "{@link Graph.Node.mutateUncluster }",
            "stability": "stable",
            "summary": "Remove clusters by hoisting their children to the parent of the cluster and collapsing the cluster itself to its parent."
          },
          "locationInModule": {
            "filename": "cdk-graph/filtering/filters.ts",
            "line": 389
          },
          "name": "uncluster",
          "parameters": [
            {
              "name": "clusterTypes",
              "optional": true,
              "type": {
                "collection": {
                  "elementtype": {
                    "fqn": "@aws/pdk.cdk_graph.NodeTypeEnum"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws/pdk.cdk_graph.IGraphStoreFilter"
            }
          },
          "static": true
        },
        {
          "docs": {
            "custom": {
              "throws": "Error if store is not filterable"
            },
            "stability": "stable",
            "summary": "Verify that store is filterable, meaning it allows destructive mutations."
          },
          "locationInModule": {
            "filename": "cdk-graph/filtering/filters.ts",
            "line": 29
          },
          "name": "verifyFilterable",
          "parameters": [
            {
              "name": "store",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.Store"
              }
            }
          ],
          "static": true
        }
      ],
      "name": "Filters",
      "namespace": "cdk_graph",
      "symbolId": "cdk-graph/filtering/filters:Filters"
    },
    "@aws/pdk.cdk_graph.FlagEnum": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "Graph flags."
      },
      "fqn": "@aws/pdk.cdk_graph.FlagEnum",
      "kind": "enum",
      "locationInModule": {
        "filename": "cdk-graph/core/types.ts",
        "line": 172
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Indicates that node is a cluster (container) and treated like an emphasized subgraph."
          },
          "name": "CLUSTER"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Indicates that node is non-resource container (Root, App) and used for structural purpose in the graph only."
          },
          "name": "GRAPH_CONTAINER"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Indicates that the entity is extraneous and considered collapsible to parent without impact of intent."
          },
          "name": "EXTRANEOUS"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Indicates node is considered a CDK Asset (Lambda Code, Docker Image, etc)."
          },
          "name": "ASSET"
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.Resource.html#static-iswbrownedwbrresourceconstruct",
            "stability": "stable",
            "summary": "Indicates that node was created by CDK."
          },
          "name": "CDK_OWNED"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Indicates node ConstructInfoFqn denotes a `aws-cdk-lib.*.Cfn*` construct."
          },
          "name": "CFN_FQN"
        },
        {
          "docs": {
            "remarks": "meaning `source === target`. This flag only gets applied on creation of edge, not during mutations to maintain initial intent.",
            "stability": "stable",
            "summary": "Indicates that edge is closed;"
          },
          "name": "CLOSED_EDGE"
        },
        {
          "docs": {
            "remarks": "meaning a mutation was performed to change originally computed graph value.",
            "stability": "stable",
            "summary": "Indicates that entity was mutated;"
          },
          "name": "MUTATED"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Indicates that resource is imported into CDK (eg: `lambda.Function.fromFunctionName()`, `s3.Bucket.fromBucketArn()`)."
          },
          "name": "IMPORT"
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.custom_resources-readme.html",
            "stability": "stable",
            "summary": "Indicates if node is a CustomResource."
          },
          "name": "CUSTOM_RESOURCE"
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.custom_resources.AwsCustomResource.html",
            "stability": "stable",
            "summary": "Indicates if node is an AwsCustomResource, which is a custom resource that simply calls the AWS SDK API via singleton provider."
          },
          "name": "AWS_CUSTOM_RESOURCE"
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.custom_resources.AwsCustomResource.html",
            "stability": "stable",
            "summary": "Indicates if lambda function resource is a singleton AWS API call lambda for AwsCustomResources."
          },
          "name": "AWS_API_CALL_LAMBDA"
        }
      ],
      "name": "FlagEnum",
      "namespace": "cdk_graph",
      "symbolId": "cdk-graph/core/types:FlagEnum"
    },
    "@aws/pdk.cdk_graph.IAppNodeProps": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "{@link AppNode} props."
      },
      "fqn": "@aws/pdk.cdk_graph.IAppNodeProps",
      "interfaces": [
        "@aws/pdk.cdk_graph.IBaseEntityDataProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "cdk-graph/core/graph.ts",
        "line": 2534
      },
      "name": "IAppNodeProps",
      "namespace": "cdk_graph",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Store."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2536
          },
          "name": "store",
          "type": {
            "fqn": "@aws/pdk.cdk_graph.Store"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Type of CloudFormation resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2544
          },
          "name": "cfnType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Synthesized construct information defining jii resolution data."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2540
          },
          "name": "constructInfo",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.cdk_graph.ConstructInfo"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Logical id of the node, which is only unique within containing stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2542
          },
          "name": "logicalId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Parent node."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2538
          },
          "name": "parent",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.cdk_graph.Node"
          }
        }
      ],
      "symbolId": "cdk-graph/core/graph:IAppNodeProps"
    },
    "@aws/pdk.cdk_graph.IAttributeReferenceProps": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "Attribute type reference props."
      },
      "fqn": "@aws/pdk.cdk_graph.IAttributeReferenceProps",
      "interfaces": [
        "@aws/pdk.cdk_graph.ITypedEdgeProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "cdk-graph/core/graph.ts",
        "line": 1005
      },
      "name": "IAttributeReferenceProps",
      "namespace": "cdk_graph",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Resolved attribute value."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1007
          },
          "name": "value",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "primitive": "number"
                },
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws/pdk.cdk_graph.PlainObject"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "primitive": "string"
                          },
                          {
                            "primitive": "number"
                          },
                          {
                            "primitive": "boolean"
                          },
                          {
                            "fqn": "@aws/pdk.cdk_graph.PlainObject"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "cdk-graph/core/graph:IAttributeReferenceProps"
    },
    "@aws/pdk.cdk_graph.IBaseEntityDataProps": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "Base interface for all store entities **data** props."
      },
      "fqn": "@aws/pdk.cdk_graph.IBaseEntityDataProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "cdk-graph/core/graph.ts",
        "line": 394
      },
      "name": "IBaseEntityDataProps",
      "namespace": "cdk_graph",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Attributes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 396
          },
          "name": "attributes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "union": {
                  "types": [
                    {
                      "primitive": "string"
                    },
                    {
                      "primitive": "number"
                    },
                    {
                      "primitive": "boolean"
                    },
                    {
                      "fqn": "@aws/pdk.cdk_graph.PlainObject"
                    },
                    {
                      "collection": {
                        "elementtype": {
                          "union": {
                            "types": [
                              {
                                "primitive": "string"
                              },
                              {
                                "primitive": "number"
                              },
                              {
                                "primitive": "boolean"
                              },
                              {
                                "fqn": "@aws/pdk.cdk_graph.PlainObject"
                              }
                            ]
                          }
                        },
                        "kind": "array"
                      }
                    }
                  ]
                }
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Flags."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 402
          },
          "name": "flags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.cdk_graph.FlagEnum"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Metadata entries."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 398
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "constructs.MetadataEntry"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Tags."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 400
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        }
      ],
      "symbolId": "cdk-graph/core/graph:IBaseEntityDataProps"
    },
    "@aws/pdk.cdk_graph.IBaseEntityProps": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "Base interface for all store entities props."
      },
      "fqn": "@aws/pdk.cdk_graph.IBaseEntityProps",
      "interfaces": [
        "@aws/pdk.cdk_graph.IBaseEntityDataProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "cdk-graph/core/graph.ts",
        "line": 406
      },
      "name": "IBaseEntityProps",
      "namespace": "cdk_graph",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Store."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 408
          },
          "name": "store",
          "type": {
            "fqn": "@aws/pdk.cdk_graph.Store"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "UUID."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 410
          },
          "name": "uuid",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "cdk-graph/core/graph:IBaseEntityProps"
    },
    "@aws/pdk.cdk_graph.ICdkGraphPlugin": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "CdkGraph **Plugin** interface."
      },
      "fqn": "@aws/pdk.cdk_graph.ICdkGraphPlugin",
      "kind": "interface",
      "locationInModule": {
        "filename": "cdk-graph/cdk-graph.ts",
        "line": 184
      },
      "name": "ICdkGraphPlugin",
      "namespace": "cdk_graph",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Unique identifier for this plugin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/cdk-graph.ts",
            "line": 186
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Plugin version."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/cdk-graph.ts",
            "line": 188
          },
          "name": "version",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "List of plugins this plugin depends on, including optional semver version (eg: [\"foo\", \"bar@1.2\"])."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/cdk-graph.ts",
            "line": 190
          },
          "name": "dependencies",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Enables plugins to receive base configs.",
            "stability": "stable",
            "summary": "Binds the plugin to the CdkGraph instance."
          },
          "locationInModule": {
            "filename": "cdk-graph/cdk-graph.ts",
            "line": 195
          },
          "name": "bind",
          "type": {
            "fqn": "@aws/pdk.cdk_graph.IGraphPluginBindCallback"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "This follows IAspect.visit pattern, but the order\nof visitor traversal in managed by the CdkGraph.",
            "stability": "stable",
            "summary": "Node visitor callback for construct tree traversal."
          },
          "locationInModule": {
            "filename": "cdk-graph/cdk-graph.ts",
            "line": 201
          },
          "name": "inspect",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.cdk_graph.IGraphVisitorCallback"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "This is not automatically called when synthesizing CDK.\nDeveloper must explicitly add `await graphInstance.report()` to the CDK bin or invoke this outside\nof the CDK synth. In either case, the plugin receives the in-memory graph interface when invoked, as the\nCdkGraph will deserialize the graph prior to invoking the plugin report.",
            "stability": "stable",
            "summary": "Generate asynchronous reports based on the graph."
          },
          "locationInModule": {
            "filename": "cdk-graph/cdk-graph.ts",
            "line": 213
          },
          "name": "report",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.cdk_graph.IGraphReportCallback"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "This is called in fifo order of plugins.",
            "stability": "stable",
            "summary": "Called during CDK synthesize to generate synchronous artifacts based on the in-memory graph passed to the plugin."
          },
          "locationInModule": {
            "filename": "cdk-graph/cdk-graph.ts",
            "line": 206
          },
          "name": "synthesize",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.cdk_graph.IGraphSynthesizeCallback"
          }
        }
      ],
      "symbolId": "cdk-graph/cdk-graph:ICdkGraphPlugin"
    },
    "@aws/pdk.cdk_graph.ICdkGraphProps": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "{@link CdkGraph} props."
      },
      "fqn": "@aws/pdk.cdk_graph.ICdkGraphProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "cdk-graph/cdk-graph.ts",
        "line": 220
      },
      "name": "ICdkGraphProps",
      "namespace": "cdk_graph",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Plugins are invoked at each phases in fifo order.",
            "stability": "stable",
            "summary": "List of plugins to extends the graph."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/cdk-graph.ts",
            "line": 222
          },
          "name": "plugins",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.cdk_graph.ICdkGraphPlugin"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "cdk-graph/cdk-graph:ICdkGraphProps"
    },
    "@aws/pdk.cdk_graph.ICfnResourceNodeProps": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "CfnResourceNode props."
      },
      "fqn": "@aws/pdk.cdk_graph.ICfnResourceNodeProps",
      "interfaces": [
        "@aws/pdk.cdk_graph.ITypedNodeProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "cdk-graph/core/graph.ts",
        "line": 2032
      },
      "name": "ICfnResourceNodeProps",
      "namespace": "cdk_graph",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2034
          },
          "name": "importArnToken",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2033
          },
          "name": "nodeType",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.cdk_graph.NodeTypeEnum"
          }
        }
      ],
      "symbolId": "cdk-graph/core/graph:ICfnResourceNodeProps"
    },
    "@aws/pdk.cdk_graph.IEdgePredicate": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "Predicate to match edge."
      },
      "fqn": "@aws/pdk.cdk_graph.IEdgePredicate",
      "kind": "interface",
      "locationInModule": {
        "filename": "cdk-graph/core/graph.ts",
        "line": 1086
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1087
          },
          "name": "filter",
          "parameters": [
            {
              "name": "edge",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.Edge"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          }
        }
      ],
      "name": "IEdgePredicate",
      "namespace": "cdk_graph",
      "symbolId": "cdk-graph/core/graph:IEdgePredicate"
    },
    "@aws/pdk.cdk_graph.IEdgeProps": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "Edge props interface."
      },
      "fqn": "@aws/pdk.cdk_graph.IEdgeProps",
      "interfaces": [
        "@aws/pdk.cdk_graph.ITypedEdgeProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "cdk-graph/core/graph.ts",
        "line": 671
      },
      "name": "IEdgeProps",
      "namespace": "cdk_graph",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Indicates the direction in which the edge is directed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 673
          },
          "name": "direction",
          "type": {
            "fqn": "@aws/pdk.cdk_graph.EdgeDirectionEnum"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Type of edge."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 675
          },
          "name": "edgeType",
          "type": {
            "fqn": "@aws/pdk.cdk_graph.EdgeTypeEnum"
          }
        }
      ],
      "symbolId": "cdk-graph/core/graph:IEdgeProps"
    },
    "@aws/pdk.cdk_graph.IFilter": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "A filter than can be applied to the graph."
      },
      "fqn": "@aws/pdk.cdk_graph.IFilter",
      "kind": "interface",
      "locationInModule": {
        "filename": "cdk-graph/filtering/types.ts",
        "line": 42
      },
      "name": "IFilter",
      "namespace": "cdk_graph",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Graph Filter."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/filtering/types.ts",
            "line": 46
          },
          "name": "graph",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.cdk_graph.IGraphFilter"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Store Filter."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/filtering/types.ts",
            "line": 51
          },
          "name": "store",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.cdk_graph.IGraphStoreFilter"
          }
        }
      ],
      "symbolId": "cdk-graph/filtering/types:IFilter"
    },
    "@aws/pdk.cdk_graph.IFilterFocusCallback": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "Determines focus node of filter plan."
      },
      "fqn": "@aws/pdk.cdk_graph.IFilterFocusCallback",
      "kind": "interface",
      "locationInModule": {
        "filename": "cdk-graph/filtering/types.ts",
        "line": 97
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "cdk-graph/filtering/types.ts",
            "line": 98
          },
          "name": "filter",
          "parameters": [
            {
              "name": "store",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.Store"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws/pdk.cdk_graph.Node"
            }
          }
        }
      ],
      "name": "IFilterFocusCallback",
      "namespace": "cdk_graph",
      "symbolId": "cdk-graph/filtering/types:IFilterFocusCallback"
    },
    "@aws/pdk.cdk_graph.IFindEdgeOptions": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "Options for edge based search operations."
      },
      "fqn": "@aws/pdk.cdk_graph.IFindEdgeOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "cdk-graph/core/graph.ts",
        "line": 1099
      },
      "name": "IFindEdgeOptions",
      "namespace": "cdk_graph",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The order of traversal during search path."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1103
          },
          "name": "order",
          "optional": true,
          "type": {
            "fqn": "constructs.ConstructOrder"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The predicate to match edges(s)."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1101
          },
          "name": "predicate",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.cdk_graph.IEdgePredicate"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Indicates reverse order."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1105
          },
          "name": "reverse",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "cdk-graph/core/graph:IFindEdgeOptions"
    },
    "@aws/pdk.cdk_graph.IFindNodeOptions": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "Options for node based search operations."
      },
      "fqn": "@aws/pdk.cdk_graph.IFindNodeOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "cdk-graph/core/graph.ts",
        "line": 1091
      },
      "name": "IFindNodeOptions",
      "namespace": "cdk_graph",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The order of traversal during search path."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1095
          },
          "name": "order",
          "optional": true,
          "type": {
            "fqn": "constructs.ConstructOrder"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The predicate to match node(s)."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1093
          },
          "name": "predicate",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.cdk_graph.INodePredicate"
          }
        }
      ],
      "symbolId": "cdk-graph/core/graph:IFindNodeOptions"
    },
    "@aws/pdk.cdk_graph.IGraphFilter": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Graph filter."
      },
      "fqn": "@aws/pdk.cdk_graph.IGraphFilter",
      "kind": "interface",
      "locationInModule": {
        "filename": "cdk-graph/filtering/types.ts",
        "line": 59
      },
      "name": "IGraphFilter",
      "namespace": "cdk_graph",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "By enabling this, all Stages, Stacks, and structural construct boundaries will be filtered as well.\nIn general, most users intent is to operate against resources and desire to preserve structural groupings,\nwhich is common in most Cfn/Cdk based filtering where inputs are \"include\" lists.\n\nDefaults to value of containing {@link IGraphFilterPlan.allNodes}",
            "stability": "stable",
            "summary": "Indicates that all nodes will be filtered, rather than just Resource and CfnResource nodes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/filtering/types.ts",
            "line": 91
          },
          "name": "allNodes",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Edges are evaluated after nodes are filtered.",
            "stability": "stable",
            "summary": "Predicate to match edges."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/filtering/types.ts",
            "line": 80
          },
          "name": "edge",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.cdk_graph.IEdgePredicate"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false - Preserve matches, and filter out non-matches.",
            "remarks": "The default follows common [Javascript Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\nprecedence of preserving matches during filtering, while pruning non-matches.",
            "stability": "stable",
            "summary": "Indicates that matches will be filtered, as opposed to non-matches."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/filtering/types.ts",
            "line": 68
          },
          "name": "inverse",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Predicate to match nodes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/filtering/types.ts",
            "line": 78
          },
          "name": "node",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.cdk_graph.INodePredicate"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "{FilterStrategy.PRUNE}",
            "remarks": "Edges do not have a strategy, they are always pruned.",
            "stability": "stable",
            "summary": "Filter strategy to apply to matching nodes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/filtering/types.ts",
            "line": 76
          },
          "name": "strategy",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.cdk_graph.FilterStrategy"
          }
        }
      ],
      "symbolId": "cdk-graph/filtering/types:IGraphFilter"
    },
    "@aws/pdk.cdk_graph.IGraphFilterPlan": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Graph filter plan."
      },
      "fqn": "@aws/pdk.cdk_graph.IGraphFilterPlan",
      "kind": "interface",
      "locationInModule": {
        "filename": "cdk-graph/filtering/types.ts",
        "line": 132
      },
      "name": "IGraphFilterPlan",
      "namespace": "cdk_graph",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "false By default only Resource and CfnResource nodes are filtered.",
            "remarks": "By enabling this, all Stages, Stacks, and structural construct boundaries will be filtered as well.\nIn general, most users intent is to operate against resources and desire to preserve structural groupings,\nwhich is common in most Cfn/Cdk based filtering where inputs are \"include\" lists.",
            "stability": "stable",
            "summary": "Indicates that all nodes will be filtered, rather than just Resource and CfnResource nodes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/filtering/types.ts",
            "line": 162
          },
          "name": "allNodes",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "- Filters are applied *after* the preset filtering is applied if present.\n- Filters are applied sequentially against all nodes, as opposed to IAspect.visitor pattern\nwhich are sequentially applied per node.",
            "stability": "stable",
            "summary": "Ordered list of {@link IGraphFilter} and {@link IGraphStoreFilter} filters to apply to the store."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/filtering/types.ts",
            "line": 146
          },
          "name": "filters",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.cdk_graph.IFilter"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Config to focus the graph on specific node."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/filtering/types.ts",
            "line": 151
          },
          "name": "focus",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.cdk_graph.IGraphFilterPlanFocusConfig"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "{ConstructOrder.PREORDER}",
            "stability": "stable",
            "summary": "The order to visit nodes and edges during filtering."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/filtering/types.ts",
            "line": 169
          },
          "name": "order",
          "optional": true,
          "type": {
            "fqn": "constructs.ConstructOrder"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Optional preset filter to apply before other filters."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/filtering/types.ts",
            "line": 136
          },
          "name": "preset",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.cdk_graph.FilterPreset"
          }
        }
      ],
      "symbolId": "cdk-graph/filtering/types:IGraphFilterPlan"
    },
    "@aws/pdk.cdk_graph.IGraphFilterPlanFocusConfig": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws/pdk.cdk_graph.IGraphFilterPlanFocusConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "cdk-graph/filtering/types.ts",
        "line": 113
      },
      "name": "IGraphFilterPlanFocusConfig",
      "namespace": "cdk_graph",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The node or resolver to determine the node to focus on."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/filtering/types.ts",
            "line": 115
          },
          "name": "filter",
          "type": {
            "fqn": "@aws/pdk.cdk_graph.IFilterFocusCallback"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "If `false`, the \"focused node\" will be hoisted to the graph root and all ancestors will be pruned.\nIf `true`, the \"focused\" will be left in-place, while all siblings and non-scope ancestors will be pruned.",
            "stability": "stable",
            "summary": "Indicates if ancestral containers are preserved (eg: Stages, Stack)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/filtering/types.ts",
            "line": 124
          },
          "name": "noHoist",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "cdk-graph/filtering/types:IGraphFilterPlanFocusConfig"
    },
    "@aws/pdk.cdk_graph.IGraphPluginBindCallback": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "Callback signature for graph `Plugin.bind` operation."
      },
      "fqn": "@aws/pdk.cdk_graph.IGraphPluginBindCallback",
      "kind": "interface",
      "locationInModule": {
        "filename": "cdk-graph/cdk-graph.ts",
        "line": 164
      },
      "name": "IGraphPluginBindCallback",
      "namespace": "cdk_graph",
      "symbolId": "cdk-graph/cdk-graph:IGraphPluginBindCallback"
    },
    "@aws/pdk.cdk_graph.IGraphReportCallback": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "Callback signature for graph `Plugin.report` operation."
      },
      "fqn": "@aws/pdk.cdk_graph.IGraphReportCallback",
      "kind": "interface",
      "locationInModule": {
        "filename": "cdk-graph/cdk-graph.ts",
        "line": 179
      },
      "name": "IGraphReportCallback",
      "namespace": "cdk_graph",
      "symbolId": "cdk-graph/cdk-graph:IGraphReportCallback"
    },
    "@aws/pdk.cdk_graph.IGraphStoreFilter": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "Store filter callback interface used to perform filtering operations directly against the store, as opposed to using {@link IGraphFilter} definitions."
      },
      "fqn": "@aws/pdk.cdk_graph.IGraphStoreFilter",
      "kind": "interface",
      "locationInModule": {
        "filename": "cdk-graph/filtering/types.ts",
        "line": 106
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "cdk-graph/filtering/types.ts",
            "line": 107
          },
          "name": "filter",
          "parameters": [
            {
              "name": "store",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.Store"
              }
            }
          ]
        }
      ],
      "name": "IGraphStoreFilter",
      "namespace": "cdk_graph",
      "symbolId": "cdk-graph/filtering/types:IGraphStoreFilter"
    },
    "@aws/pdk.cdk_graph.IGraphSynthesizeCallback": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "Callback signature for graph `Plugin.synthesize` operation."
      },
      "fqn": "@aws/pdk.cdk_graph.IGraphSynthesizeCallback",
      "kind": "interface",
      "locationInModule": {
        "filename": "cdk-graph/cdk-graph.ts",
        "line": 174
      },
      "name": "IGraphSynthesizeCallback",
      "namespace": "cdk_graph",
      "symbolId": "cdk-graph/cdk-graph:IGraphSynthesizeCallback"
    },
    "@aws/pdk.cdk_graph.IGraphVisitorCallback": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "Callback signature for graph `Plugin.inspect` operation."
      },
      "fqn": "@aws/pdk.cdk_graph.IGraphVisitorCallback",
      "kind": "interface",
      "locationInModule": {
        "filename": "cdk-graph/cdk-graph.ts",
        "line": 169
      },
      "name": "IGraphVisitorCallback",
      "namespace": "cdk_graph",
      "symbolId": "cdk-graph/cdk-graph:IGraphVisitorCallback"
    },
    "@aws/pdk.cdk_graph.INestedStackNodeProps": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "{@link NestedStackNode} props."
      },
      "fqn": "@aws/pdk.cdk_graph.INestedStackNodeProps",
      "interfaces": [
        "@aws/pdk.cdk_graph.IStackNodeProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "cdk-graph/core/graph.ts",
        "line": 2438
      },
      "name": "INestedStackNodeProps",
      "namespace": "cdk_graph",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Parent stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2440
          },
          "name": "parentStack",
          "type": {
            "fqn": "@aws/pdk.cdk_graph.StackNode"
          }
        }
      ],
      "symbolId": "cdk-graph/core/graph:INestedStackNodeProps"
    },
    "@aws/pdk.cdk_graph.INodePredicate": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "Predicate to match node."
      },
      "fqn": "@aws/pdk.cdk_graph.INodePredicate",
      "kind": "interface",
      "locationInModule": {
        "filename": "cdk-graph/core/graph.ts",
        "line": 1081
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1082
          },
          "name": "filter",
          "parameters": [
            {
              "name": "node",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.Node"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          }
        }
      ],
      "name": "INodePredicate",
      "namespace": "cdk_graph",
      "symbolId": "cdk-graph/core/graph:INodePredicate"
    },
    "@aws/pdk.cdk_graph.INodeProps": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "Node props."
      },
      "fqn": "@aws/pdk.cdk_graph.INodeProps",
      "interfaces": [
        "@aws/pdk.cdk_graph.ITypedNodeProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "cdk-graph/core/graph.ts",
        "line": 1075
      },
      "name": "INodeProps",
      "namespace": "cdk_graph",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Type of node."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1077
          },
          "name": "nodeType",
          "type": {
            "fqn": "@aws/pdk.cdk_graph.NodeTypeEnum"
          }
        }
      ],
      "symbolId": "cdk-graph/core/graph:INodeProps"
    },
    "@aws/pdk.cdk_graph.IOutputNodeProps": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "OutputNode props."
      },
      "fqn": "@aws/pdk.cdk_graph.IOutputNodeProps",
      "interfaces": [
        "@aws/pdk.cdk_graph.ITypedNodeProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "cdk-graph/core/graph.ts",
        "line": 2143
      },
      "name": "IOutputNodeProps",
      "namespace": "cdk_graph",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Resolved output value."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2145
          },
          "name": "value",
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Description."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2149
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Export name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2147
          },
          "name": "exportName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "cdk-graph/core/graph:IOutputNodeProps"
    },
    "@aws/pdk.cdk_graph.IParameterNodeProps": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "{@link ParameterNode} props."
      },
      "fqn": "@aws/pdk.cdk_graph.IParameterNodeProps",
      "interfaces": [
        "@aws/pdk.cdk_graph.ITypedNodeProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "cdk-graph/core/graph.ts",
        "line": 2210
      },
      "name": "IParameterNodeProps",
      "namespace": "cdk_graph",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Parameter type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2214
          },
          "name": "parameterType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Resolved value."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2212
          },
          "name": "value",
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Description."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2216
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "cdk-graph/core/graph:IParameterNodeProps"
    },
    "@aws/pdk.cdk_graph.IReferenceProps": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "Reference edge props."
      },
      "fqn": "@aws/pdk.cdk_graph.IReferenceProps",
      "interfaces": [
        "@aws/pdk.cdk_graph.ITypedEdgeProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "cdk-graph/core/graph.ts",
        "line": 924
      },
      "name": "IReferenceProps",
      "namespace": "cdk_graph",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Type of reference."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 926
          },
          "name": "referenceType",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.cdk_graph.ReferenceTypeEnum"
          }
        }
      ],
      "symbolId": "cdk-graph/core/graph:IReferenceProps"
    },
    "@aws/pdk.cdk_graph.IResourceNodeProps": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "ResourceNode props."
      },
      "fqn": "@aws/pdk.cdk_graph.IResourceNodeProps",
      "interfaces": [
        "@aws/pdk.cdk_graph.ITypedNodeProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "cdk-graph/core/graph.ts",
        "line": 1913
      },
      "name": "IResourceNodeProps",
      "namespace": "cdk_graph",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Indicates if this resource is owned by cdk (defined in cdk library)."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1917
          },
          "name": "cdkOwned",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Type of node."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1915
          },
          "name": "nodeType",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.cdk_graph.NodeTypeEnum"
          }
        }
      ],
      "symbolId": "cdk-graph/core/graph:IResourceNodeProps"
    },
    "@aws/pdk.cdk_graph.ISerializableEdge": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "Interface for serializable graph edge entity."
      },
      "fqn": "@aws/pdk.cdk_graph.ISerializableEdge",
      "kind": "interface",
      "locationInModule": {
        "filename": "cdk-graph/core/serialized-graph.ts",
        "line": 152
      },
      "name": "ISerializableEdge",
      "namespace": "cdk_graph",
      "symbolId": "cdk-graph/core/serialized-graph:ISerializableEdge"
    },
    "@aws/pdk.cdk_graph.ISerializableEntity": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "Interface for serializable graph entities."
      },
      "fqn": "@aws/pdk.cdk_graph.ISerializableEntity",
      "kind": "interface",
      "locationInModule": {
        "filename": "cdk-graph/core/serialized-graph.ts",
        "line": 140
      },
      "name": "ISerializableEntity",
      "namespace": "cdk_graph",
      "symbolId": "cdk-graph/core/serialized-graph:ISerializableEntity"
    },
    "@aws/pdk.cdk_graph.ISerializableGraphStore": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "Interface for serializable graph store."
      },
      "fqn": "@aws/pdk.cdk_graph.ISerializableGraphStore",
      "kind": "interface",
      "locationInModule": {
        "filename": "cdk-graph/core/serialized-graph.ts",
        "line": 158
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "cdk-graph/core/serialized-graph.ts",
            "line": 159
          },
          "name": "serialize",
          "returns": {
            "type": {
              "fqn": "@aws/pdk.cdk_graph.SGGraphStore"
            }
          }
        }
      ],
      "name": "ISerializableGraphStore",
      "namespace": "cdk_graph",
      "symbolId": "cdk-graph/core/serialized-graph:ISerializableGraphStore"
    },
    "@aws/pdk.cdk_graph.ISerializableNode": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "Interface for serializable graph node entity."
      },
      "fqn": "@aws/pdk.cdk_graph.ISerializableNode",
      "kind": "interface",
      "locationInModule": {
        "filename": "cdk-graph/core/serialized-graph.ts",
        "line": 146
      },
      "name": "ISerializableNode",
      "namespace": "cdk_graph",
      "symbolId": "cdk-graph/core/serialized-graph:ISerializableNode"
    },
    "@aws/pdk.cdk_graph.IStackNodeProps": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "{@link StackNode} props."
      },
      "fqn": "@aws/pdk.cdk_graph.IStackNodeProps",
      "interfaces": [
        "@aws/pdk.cdk_graph.ITypedNodeProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "cdk-graph/core/graph.ts",
        "line": 2274
      },
      "name": "IStackNodeProps",
      "namespace": "cdk_graph",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Type of node."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2276
          },
          "name": "nodeType",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.cdk_graph.NodeTypeEnum"
          }
        }
      ],
      "symbolId": "cdk-graph/core/graph:IStackNodeProps"
    },
    "@aws/pdk.cdk_graph.IStoreCounts": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "Interface for store counts."
      },
      "fqn": "@aws/pdk.cdk_graph.IStoreCounts",
      "kind": "interface",
      "locationInModule": {
        "filename": "cdk-graph/core/graph.ts",
        "line": 44
      },
      "name": "IStoreCounts",
      "namespace": "cdk_graph",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns {@link ICounterRecord} containing total number of each *cfnResourceType*."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 58
          },
          "name": "cfnResources",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "number"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Counts total number of edges in the store."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 48
          },
          "name": "edges",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns {@link ICounterRecord} containing total number of each *edge type* ({@link EdgeTypeEnum})."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 56
          },
          "name": "edgeTypes",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "number"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Counts total number of nodes in the store."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 46
          },
          "name": "nodes",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns {@link ICounterRecord} containing total number of each *node type* ({@link NodeTypeEnum})."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 54
          },
          "name": "nodeTypes",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "number"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Counts total number of stacks in the store."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 50
          },
          "name": "stacks",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Counts total number of stages in the store."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 52
          },
          "name": "stages",
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "cdk-graph/core/graph:IStoreCounts"
    },
    "@aws/pdk.cdk_graph.ITypedEdgeProps": {
      "assembly": "@aws/pdk",
      "docs": {
        "remarks": "Used for extending per edge class with type specifics.",
        "stability": "stable",
        "summary": "Base edge props agnostic to edge type."
      },
      "fqn": "@aws/pdk.cdk_graph.ITypedEdgeProps",
      "interfaces": [
        "@aws/pdk.cdk_graph.IBaseEntityProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "cdk-graph/core/graph.ts",
        "line": 663
      },
      "name": "ITypedEdgeProps",
      "namespace": "cdk_graph",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Edge **source** is the node that defines the edge (tail)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 665
          },
          "name": "source",
          "type": {
            "fqn": "@aws/pdk.cdk_graph.Node"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Edge **target** is the node being referenced by the **source** (head)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 667
          },
          "name": "target",
          "type": {
            "fqn": "@aws/pdk.cdk_graph.Node"
          }
        }
      ],
      "symbolId": "cdk-graph/core/graph:ITypedEdgeProps"
    },
    "@aws/pdk.cdk_graph.ITypedNodeProps": {
      "assembly": "@aws/pdk",
      "docs": {
        "remarks": "Used for extending per node class with type specifics.",
        "stability": "stable",
        "summary": "Base node props agnostic to node type."
      },
      "fqn": "@aws/pdk.cdk_graph.ITypedNodeProps",
      "interfaces": [
        "@aws/pdk.cdk_graph.IBaseEntityProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "cdk-graph/core/graph.ts",
        "line": 1056
      },
      "name": "ITypedNodeProps",
      "namespace": "cdk_graph",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Node id, which is unique within parent scope."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1058
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Path of the node."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1060
          },
          "name": "path",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Type of CloudFormation resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1071
          },
          "name": "cfnType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Synthesized construct information defining jii resolution data."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1067
          },
          "name": "constructInfo",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.cdk_graph.ConstructInfo"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Logical id of the node, which is only unique within containing stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1069
          },
          "name": "logicalId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Parent node."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1065
          },
          "name": "parent",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.cdk_graph.Node"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Stack the node is contained."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1063
          },
          "name": "stack",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.cdk_graph.StackNode"
          }
        }
      ],
      "symbolId": "cdk-graph/core/graph:ITypedNodeProps"
    },
    "@aws/pdk.cdk_graph.ImportReference": {
      "assembly": "@aws/pdk",
      "base": "@aws/pdk.cdk_graph.Reference",
      "docs": {
        "stability": "stable",
        "summary": "Import reference defines **Fn::ImportValue** type reference edge."
      },
      "fqn": "@aws/pdk.cdk_graph.ImportReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "cdk-graph/core/graph.ts",
          "line": 1047
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws/pdk.cdk_graph.ITypedEdgeProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "cdk-graph/core/graph.ts",
        "line": 1038
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Indicates if edge is **Fn::ImportValue** based {@link Reference}."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1043
          },
          "name": "isImport",
          "parameters": [
            {
              "name": "edge",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.Edge"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          },
          "static": true
        }
      ],
      "name": "ImportReference",
      "namespace": "cdk_graph",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Edge prefix to denote **Fn::ImportValue** type reference edge."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1040
          },
          "name": "PREFIX",
          "overrides": "@aws/pdk.cdk_graph.Reference",
          "static": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "cdk-graph/core/graph:ImportReference"
    },
    "@aws/pdk.cdk_graph.InferredNodeProps": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Inferred node props."
      },
      "fqn": "@aws/pdk.cdk_graph.InferredNodeProps",
      "interfaces": [
        "@aws/pdk.cdk_graph.SGEntity"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "cdk-graph/core/utils.ts",
        "line": 63
      },
      "name": "InferredNodeProps",
      "namespace": "cdk_graph",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/utils.ts",
            "line": 67
          },
          "name": "dependencies",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/utils.ts",
            "line": 68
          },
          "name": "unresolvedReferences",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.cdk_graph.SGUnresolvedReference"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/utils.ts",
            "line": 65
          },
          "name": "cfnType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/utils.ts",
            "line": 66
          },
          "name": "constructInfo",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.cdk_graph.ConstructInfo"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/utils.ts",
            "line": 64
          },
          "name": "logicalId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "cdk-graph/core/utils:InferredNodeProps"
    },
    "@aws/pdk.cdk_graph.MetadataTypeEnum": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "Common cdk metadata types."
      },
      "fqn": "@aws/pdk.cdk_graph.MetadataTypeEnum",
      "kind": "enum",
      "locationInModule": {
        "filename": "cdk-graph/core/types.ts",
        "line": 103
      },
      "members": [
        {
          "docs": {
            "stability": "stable"
          },
          "name": "LOGICAL_ID"
        }
      ],
      "name": "MetadataTypeEnum",
      "namespace": "cdk_graph",
      "symbolId": "cdk-graph/core/types:MetadataTypeEnum"
    },
    "@aws/pdk.cdk_graph.NestedStackNode": {
      "assembly": "@aws/pdk",
      "base": "@aws/pdk.cdk_graph.StackNode",
      "docs": {
        "stability": "stable",
        "summary": "NestedStackNode defines a cdk NestedStack."
      },
      "fqn": "@aws/pdk.cdk_graph.NestedStackNode",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "cdk-graph/core/graph.ts",
          "line": 2458
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws/pdk.cdk_graph.INestedStackNodeProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "cdk-graph/core/graph.ts",
        "line": 2444
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Indicates if node is a {@link NestedStackNode}."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2446
          },
          "name": "isNestedStackNode",
          "parameters": [
            {
              "name": "node",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.Node"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          },
          "static": true
        },
        {
          "docs": {
            "custom": {
              "inheritdoc": "true"
            },
            "stability": "stable",
            "summary": "Hoist *this node* to an *ancestor* by removing it from its current parent node and in turn moving it to the ancestor."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2468
          },
          "name": "mutateHoist",
          "overrides": "@aws/pdk.cdk_graph.StackNode",
          "parameters": [
            {
              "name": "newParent",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.Node"
              }
            }
          ]
        }
      ],
      "name": "NestedStackNode",
      "namespace": "cdk_graph",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Get parent stack of this nested stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2454
          },
          "name": "parentStack",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.cdk_graph.StackNode"
          }
        }
      ],
      "symbolId": "cdk-graph/core/graph:NestedStackNode"
    },
    "@aws/pdk.cdk_graph.Node": {
      "assembly": "@aws/pdk",
      "base": "@aws/pdk.cdk_graph.BaseEntity",
      "docs": {
        "stability": "stable",
        "summary": "Node class is the base definition of **node** entities in the graph, as in standard [graph theory](https://en.wikipedia.org/wiki/Graph_theory)."
      },
      "fqn": "@aws/pdk.cdk_graph.Node",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "cdk-graph/core/graph.ts",
          "line": 1155
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws/pdk.cdk_graph.INodeProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws/pdk.cdk_graph.ISerializableNode"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "cdk-graph/core/graph.ts",
        "line": 1109
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Add *child* node."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1366
          },
          "name": "addChild",
          "parameters": [
            {
              "name": "node",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.Node"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Add *link* to another node."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1356
          },
          "name": "addLink",
          "parameters": [
            {
              "name": "edge",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.Edge"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Add *link* from another node."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1361
          },
          "name": "addReverseLink",
          "parameters": [
            {
              "name": "edge",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.Edge"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Indicates if *this node* depends on *another node*."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1600
          },
          "name": "doesDependOn",
          "parameters": [
            {
              "name": "node",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.Node"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Indicates if *this node* references *another node*."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1595
          },
          "name": "doesReference",
          "parameters": [
            {
              "name": "node",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.Node"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Recursively find the nearest sub-node matching predicate."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1451
          },
          "name": "find",
          "parameters": [
            {
              "name": "predicate",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.INodePredicate"
              }
            }
          ],
          "returns": {
            "optional": true,
            "type": {
              "fqn": "@aws/pdk.cdk_graph.Node"
            }
          }
        },
        {
          "docs": {
            "remarks": "Optionally filter nodes based on predicate.",
            "stability": "stable",
            "summary": "Return this construct and all of its sub-nodes in the given order."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1422
          },
          "name": "findAll",
          "parameters": [
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws/pdk.cdk_graph.IFindNodeOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "fqn": "@aws/pdk.cdk_graph.Node"
                },
                "kind": "array"
              }
            }
          }
        },
        {
          "docs": {
            "remarks": "Optionally filter links based on predicate.",
            "stability": "stable",
            "summary": "Return all direct links of this node and that of all sub-nodes."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1487
          },
          "name": "findAllLinks",
          "parameters": [
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws/pdk.cdk_graph.IFindEdgeOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "fqn": "@aws/pdk.cdk_graph.Edge"
                },
                "kind": "array"
              }
            }
          }
        },
        {
          "docs": {
            "custom": {
              "max": "{number} [max] - Optional maximum levels to ascend"
            },
            "stability": "stable",
            "summary": "Find nearest *ancestor* of *this node* matching given predicate."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1388
          },
          "name": "findAncestor",
          "parameters": [
            {
              "docs": {
                "summary": "- Predicate to match ancestor."
              },
              "name": "predicate",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.INodePredicate"
              }
            },
            {
              "name": "max",
              "optional": true,
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "optional": true,
            "type": {
              "fqn": "@aws/pdk.cdk_graph.Node"
            }
          }
        },
        {
          "docs": {
            "remarks": "Similar to `find` but does not throw error if no child found.",
            "stability": "stable",
            "summary": "Find child with given *id*."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1478
          },
          "name": "findChild",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "optional": true,
            "type": {
              "fqn": "@aws/pdk.cdk_graph.Node"
            }
          }
        },
        {
          "docs": {
            "remarks": "By default this will follow link\nchains to evaluate the predicate against and return the matching direct link\nof this node.",
            "returns": "",
            "stability": "stable",
            "summary": "Find link of this node based on predicate."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1543
          },
          "name": "findLink",
          "parameters": [
            {
              "docs": {
                "summary": "Edge predicate function to match edge."
              },
              "name": "predicate",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.IEdgePredicate"
              }
            },
            {
              "docs": {
                "summary": "Indicates if links are search in reverse order."
              },
              "name": "reverse",
              "optional": true,
              "type": {
                "primitive": "boolean"
              }
            },
            {
              "docs": {
                "summary": "Indicates if link chain is followed."
              },
              "name": "follow",
              "optional": true,
              "type": {
                "primitive": "boolean"
              }
            },
            {
              "docs": {
                "summary": "Indicates that only *direct* links should be searched."
              },
              "name": "direct",
              "optional": true,
              "type": {
                "primitive": "boolean"
              }
            }
          ],
          "returns": {
            "optional": true,
            "type": {
              "fqn": "@aws/pdk.cdk_graph.Edge"
            }
          }
        },
        {
          "docs": {
            "remarks": "By default this will follow link\nchains to evaluate the predicate against and return the matching direct links\nof this node.",
            "returns": "",
            "stability": "stable",
            "summary": "Find all links of this node based on predicate."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1575
          },
          "name": "findLinks",
          "parameters": [
            {
              "docs": {
                "summary": "Edge predicate function to match edge."
              },
              "name": "predicate",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.IEdgePredicate"
              }
            },
            {
              "docs": {
                "summary": "Indicates if links are search in reverse order."
              },
              "name": "reverse",
              "optional": true,
              "type": {
                "primitive": "boolean"
              }
            },
            {
              "docs": {
                "summary": "Indicates if link chain is followed."
              },
              "name": "follow",
              "optional": true,
              "type": {
                "primitive": "boolean"
              }
            },
            {
              "docs": {
                "summary": "Indicates that only *direct* links should be searched."
              },
              "name": "direct",
              "optional": true,
              "type": {
                "primitive": "boolean"
              }
            }
          ],
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "fqn": "@aws/pdk.cdk_graph.Edge"
                },
                "kind": "array"
              }
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Get specific CloudFormation property."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1351
          },
          "name": "getCfnProp",
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "optional": true,
            "type": {
              "union": {
                "types": [
                  {
                    "primitive": "string"
                  },
                  {
                    "primitive": "number"
                  },
                  {
                    "primitive": "boolean"
                  },
                  {
                    "fqn": "@aws/pdk.cdk_graph.PlainObject"
                  },
                  {
                    "collection": {
                      "elementtype": {
                        "union": {
                          "types": [
                            {
                              "primitive": "string"
                            },
                            {
                              "primitive": "number"
                            },
                            {
                              "primitive": "boolean"
                            },
                            {
                              "fqn": "@aws/pdk.cdk_graph.PlainObject"
                            }
                          ]
                        }
                      },
                      "kind": "array"
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "docs": {
            "custom": {
              "throws": "Error if no child with given id"
            },
            "stability": "stable",
            "summary": "Get *child* node with given *id*."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1467
          },
          "name": "getChild",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws/pdk.cdk_graph.Node"
            }
          }
        },
        {
          "docs": {
            "see": "{@link EdgeChain }",
            "stability": "stable",
            "summary": "Resolve all link chains."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1522
          },
          "name": "getLinkChains",
          "parameters": [
            {
              "name": "reverse",
              "optional": true,
              "type": {
                "primitive": "boolean"
              }
            }
          ],
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "collection": {
                    "elementtype": {
                      "primitive": "any"
                    },
                    "kind": "array"
                  }
                },
                "kind": "array"
              }
            }
          }
        },
        {
          "docs": {
            "custom": {
              "throws": "Error if *node* does not share a **common** *ancestor*"
            },
            "stability": "stable",
            "summary": "Gets the nearest **common** *ancestor* shared between *this node* and another *node*."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1400
          },
          "name": "getNearestAncestor",
          "parameters": [
            {
              "name": "node",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.Node"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws/pdk.cdk_graph.Node"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Indicates if a specific *node* is an *ancestor* of *this node*."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1379
          },
          "name": "isAncestor",
          "parameters": [
            {
              "name": "ancestor",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.Node"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Indicates if specific *node* is a *child* of *this node*."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1371
          },
          "name": "isChild",
          "parameters": [
            {
              "name": "node",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.Node"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "destructive": "true"
            },
            "stability": "stable",
            "summary": "Collapses all sub-nodes of *this node* into *this node*."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1616
          },
          "name": "mutateCollapse"
        },
        {
          "docs": {
            "custom": {
              "destructive": "true"
            },
            "stability": "stable",
            "summary": "Collapses *this node* into *an ancestor*."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1642
          },
          "name": "mutateCollapseTo",
          "parameters": [
            {
              "name": "ancestor",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.Node"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws/pdk.cdk_graph.Node"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "destructive": "true"
            },
            "stability": "stable",
            "summary": "Collapses *this node* into *it's parent node*."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1628
          },
          "name": "mutateCollapseToParent",
          "returns": {
            "type": {
              "fqn": "@aws/pdk.cdk_graph.Node"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "destructive": "true"
            },
            "stability": "stable",
            "summary": "Destroys this node by removing all references and removing this node from the store."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1692
          },
          "name": "mutateDestroy",
          "overrides": "@aws/pdk.cdk_graph.BaseEntity",
          "parameters": [
            {
              "docs": {
                "summary": "- Indicates that this node must not have references."
              },
              "name": "strict",
              "optional": true,
              "type": {
                "primitive": "boolean"
              }
            }
          ]
        },
        {
          "docs": {
            "custom": {
              "destructive": "true"
            },
            "stability": "stable",
            "summary": "Hoist *this node* to an *ancestor* by removing it from its current parent node and in turn moving it to the ancestor."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1817
          },
          "name": "mutateHoist",
          "parameters": [
            {
              "name": "newParent",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.Node"
              }
            }
          ]
        },
        {
          "docs": {
            "custom": {
              "destructive": "true"
            },
            "stability": "stable",
            "summary": "Move this node into a new parent node."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1864
          },
          "name": "mutateMove",
          "parameters": [
            {
              "docs": {
                "summary": "- The parent to move this node to."
              },
              "name": "newParent",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.Node"
              }
            }
          ]
        },
        {
          "docs": {
            "custom": {
              "destructive": "true"
            },
            "stability": "stable",
            "summary": "Remove a *child* node from *this node*."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1781
          },
          "name": "mutateRemoveChild",
          "parameters": [
            {
              "name": "node",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.Node"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "destructive": "true"
            },
            "stability": "stable",
            "summary": "Remove a *link* from *this node*."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1796
          },
          "name": "mutateRemoveLink",
          "parameters": [
            {
              "name": "link",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.Edge"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "destructive": "true"
            },
            "stability": "stable",
            "summary": "Remove a *link* to *this node*."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1806
          },
          "name": "mutateRemoveReverseLink",
          "parameters": [
            {
              "name": "link",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.Edge"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "destructive": "true"
            },
            "stability": "stable",
            "summary": "Hoist all children to parent and collapse node to parent."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1848
          },
          "name": "mutateUncluster"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Get string representation of this node."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1878
          },
          "name": "toString",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "Node",
      "namespace": "cdk_graph",
      "properties": [
        {
          "docs": {
            "see": "{@link Store.allowDestructiveMutations }",
            "stability": "stable",
            "summary": "Indicates if this node allows destructive mutations."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1608
          },
          "name": "allowDestructiveMutations",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Get all direct child nodes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1211
          },
          "name": "children",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.cdk_graph.Node"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "see": "{@link Node.reverseDependencyLinks }",
            "stability": "stable",
            "summary": "Get list of **Nodes** that *depend on this node*."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1316
          },
          "name": "dependedOnBy",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.cdk_graph.Node"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "see": "{@link Node.dependencyLinks }",
            "stability": "stable",
            "summary": "Get list of **Nodes** that *this node depends on*."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1308
          },
          "name": "dependencies",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.cdk_graph.Node"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Gets list of {@link Dependency} links (edges) where this node is the **source**."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1261
          },
          "name": "dependencyLinks",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.cdk_graph.Dependency"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Indicates the depth of the node relative to root (0)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1153
          },
          "name": "depth",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Node id, which is only unique within parent scope."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1116
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Indicates if this node is considered a {@link FlagEnum.ASSET}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1338
          },
          "name": "isAsset",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "see": "{@link FlagEnum.CFN_FQN }",
            "stability": "stable",
            "summary": "Indicates if node ConstructInfoFqn denotes a `aws-cdk-lib.*.Cfn*` construct."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1244
          },
          "name": "isCfnFqn",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Indicates if this node is considered a {@link FlagEnum.CLUSTER}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1325
          },
          "name": "isCluster",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Indicates if node is a *Custom Resource*."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1236
          },
          "name": "isCustomResource",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Indicates if this node is considered a {@link FlagEnum.EXTRANEOUS} node or determined to be extraneous: - Clusters that contain no children."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1333
          },
          "name": "isExtraneous",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Indicates if this node is considered a {@link FlagEnum.GRAPH_CONTAINER}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1321
          },
          "name": "isGraphContainer",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Indicates if this node is a *leaf* node, which means it does not have children."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1216
          },
          "name": "isLeaf",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Indicates if node is direct child of the graph root node."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1198
          },
          "name": "isTopLevel",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Gets all links (edges) in which this node is the **source**."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1221
          },
          "name": "links",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.cdk_graph.Edge"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Type of node."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1114
          },
          "name": "nodeType",
          "type": {
            "fqn": "@aws/pdk.cdk_graph.NodeTypeEnum"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Path of the node."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1118
          },
          "name": "path",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "{@link Node.reverseReferenceLinks }",
            "stability": "stable",
            "summary": "Get list of **Nodes** that *reference this node*."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1300
          },
          "name": "referencedBy",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.cdk_graph.Node"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Gets list of {@link Reference} links (edges) where this node is the **source**."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1275
          },
          "name": "referenceLinks",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.cdk_graph.Reference"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "see": "{@link Node.referenceLinks }",
            "stability": "stable",
            "summary": "Get list of **Nodes** that *this node references*."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1292
          },
          "name": "references",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.cdk_graph.Node"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Gets list of {@link Dependency} links (edges) where this node is the **target**."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1268
          },
          "name": "reverseDependencyLinks",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.cdk_graph.Dependency"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Gets all links (edges) in which this node is the **target**."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1226
          },
          "name": "reverseLinks",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.cdk_graph.Edge"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Gets list of {@link Reference} links (edges) where this node is the **target**."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1282
          },
          "name": "reverseReferenceLinks",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.cdk_graph.Reference"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Gets descending ordered list of ancestors from the root."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1190
          },
          "name": "scopes",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.cdk_graph.Node"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Get list of *siblings* of this node."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1343
          },
          "name": "siblings",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.cdk_graph.Node"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Gets CloudFormation properties for this node."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1249
          },
          "name": "cfnProps",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.cdk_graph.PlainObject"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Get the CloudFormation resource type for this node."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1256
          },
          "name": "cfnType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Synthesized construct information defining jii resolution data."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1136
          },
          "name": "constructInfo",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.cdk_graph.ConstructInfo"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Synthesized construct information defining jii resolution data."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1231
          },
          "name": "constructInfoFqn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Logical id of the node, which is only unique within containing stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1138
          },
          "name": "logicalId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "remarks": "Only the root node should not have parent.",
            "stability": "stable",
            "summary": "Parent node."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1131
          },
          "name": "parent",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.cdk_graph.Node"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Get **root** stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1203
          },
          "name": "rootStack",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.cdk_graph.StackNode"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Stack the node is contained in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1126
          },
          "name": "stack",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.cdk_graph.StackNode"
          }
        }
      ],
      "symbolId": "cdk-graph/core/graph:Node"
    },
    "@aws/pdk.cdk_graph.NodeTypeEnum": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "Node types handled by the graph."
      },
      "fqn": "@aws/pdk.cdk_graph.NodeTypeEnum",
      "kind": "enum",
      "locationInModule": {
        "filename": "cdk-graph/core/types.ts",
        "line": 108
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Default node type - used for all nodes that don't have explicit type defined."
          },
          "name": "DEFAULT"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "L1 cfn resource node."
          },
          "name": "CFN_RESOURCE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "L2 cdk resource node."
          },
          "name": "RESOURCE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Cdk customer resource node."
          },
          "name": "CUSTOM_RESOURCE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Graph root node."
          },
          "name": "ROOT"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Cdk App node."
          },
          "name": "APP"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Cdk Stage node."
          },
          "name": "STAGE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Cdk Stack node."
          },
          "name": "STACK"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Cdk NestedStack node."
          },
          "name": "NESTED_STACK"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "CfnOutput node."
          },
          "name": "OUTPUT"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "CfnParameter node."
          },
          "name": "PARAMETER"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Cdk asset node."
          },
          "name": "ASSET"
        }
      ],
      "name": "NodeTypeEnum",
      "namespace": "cdk_graph",
      "symbolId": "cdk-graph/core/types:NodeTypeEnum"
    },
    "@aws/pdk.cdk_graph.OutputNode": {
      "assembly": "@aws/pdk",
      "base": "@aws/pdk.cdk_graph.Node",
      "docs": {
        "stability": "stable",
        "summary": "OutputNode defines a cdk CfnOutput resources."
      },
      "fqn": "@aws/pdk.cdk_graph.OutputNode",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "cdk-graph/core/graph.ts",
          "line": 2167
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws/pdk.cdk_graph.IOutputNodeProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "cdk-graph/core/graph.ts",
        "line": 2153
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Indicates if node is an {@link OutputNode}."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2160
          },
          "name": "isOutputNode",
          "parameters": [
            {
              "name": "node",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.Node"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          },
          "static": true
        },
        {
          "docs": {
            "custom": {
              "inheritdoc": "true"
            },
            "stability": "stable",
            "summary": "Destroys this node by removing all references and removing this node from the store."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2202
          },
          "name": "mutateDestroy",
          "overrides": "@aws/pdk.cdk_graph.Node",
          "parameters": [
            {
              "name": "strict",
              "optional": true,
              "type": {
                "primitive": "boolean"
              }
            }
          ]
        }
      ],
      "name": "OutputNode",
      "namespace": "cdk_graph",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Attribute key where output export name is stored."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2157
          },
          "name": "ATTR_EXPORT_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Attribute key where output value is stored."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2155
          },
          "name": "ATTR_VALUE",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Indicates if {@link OutputNode} is **exported**."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2165
          },
          "name": "isExport",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Get the *value** attribute."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2192
          },
          "name": "value",
          "type": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Get the export name attribute."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2197
          },
          "name": "exportName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "cdk-graph/core/graph:OutputNode"
    },
    "@aws/pdk.cdk_graph.ParameterNode": {
      "assembly": "@aws/pdk",
      "base": "@aws/pdk.cdk_graph.Node",
      "docs": {
        "stability": "stable",
        "summary": "ParameterNode defines a CfnParameter node."
      },
      "fqn": "@aws/pdk.cdk_graph.ParameterNode",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "cdk-graph/core/graph.ts",
          "line": 2234
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws/pdk.cdk_graph.IParameterNodeProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "cdk-graph/core/graph.ts",
        "line": 2220
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Indicates if node is a {@link ParameterNode}."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2227
          },
          "name": "isParameterNode",
          "parameters": [
            {
              "name": "node",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.Node"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          },
          "static": true
        },
        {
          "docs": {
            "custom": {
              "inheritdoc": "true"
            },
            "stability": "stable",
            "summary": "Destroys this node by removing all references and removing this node from the store."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2266
          },
          "name": "mutateDestroy",
          "overrides": "@aws/pdk.cdk_graph.Node",
          "parameters": [
            {
              "name": "strict",
              "optional": true,
              "type": {
                "primitive": "boolean"
              }
            }
          ]
        }
      ],
      "name": "ParameterNode",
      "namespace": "cdk_graph",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Attribute key where parameter type is stored."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2224
          },
          "name": "ATTR_TYPE",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Attribute key where parameter value is store."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2222
          },
          "name": "ATTR_VALUE",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Indicates if parameter is a reference to a stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2232
          },
          "name": "isStackReference",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Get the parameter type attribute."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2261
          },
          "name": "parameterType",
          "type": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Get the value attribute."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2256
          },
          "name": "value",
          "type": {
            "primitive": "any"
          }
        }
      ],
      "symbolId": "cdk-graph/core/graph:ParameterNode"
    },
    "@aws/pdk.cdk_graph.PlainObject": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Serializable plain object value (JSII supported)."
      },
      "fqn": "@aws/pdk.cdk_graph.PlainObject",
      "kind": "interface",
      "locationInModule": {
        "filename": "cdk-graph/core/serialized-graph.ts",
        "line": 21
      },
      "name": "PlainObject",
      "namespace": "cdk_graph",
      "symbolId": "cdk-graph/core/serialized-graph:PlainObject"
    },
    "@aws/pdk.cdk_graph.Reference": {
      "assembly": "@aws/pdk",
      "base": "@aws/pdk.cdk_graph.Edge",
      "docs": {
        "stability": "stable",
        "summary": "Reference edge class defines a directed relationship between nodes."
      },
      "fqn": "@aws/pdk.cdk_graph.Reference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "cdk-graph/core/graph.ts",
          "line": 946
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws/pdk.cdk_graph.IReferenceProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "cdk-graph/core/graph.ts",
        "line": 930
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Indicates if edge is a **Ref** based {@link Reference} edge."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 942
          },
          "name": "isRef",
          "parameters": [
            {
              "name": "edge",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.Edge"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Indicates if edge is a {@link Reference}."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 937
          },
          "name": "isReference",
          "parameters": [
            {
              "name": "edge",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.Edge"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Resolve reference chain."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 965
          },
          "name": "resolveChain",
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "array"
              }
            }
          }
        },
        {
          "docs": {
            "see": "{@link EdgeChain }",
            "stability": "stable",
            "summary": "Resolve targets by following potential edge chain."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 989
          },
          "name": "resolveTargets",
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "fqn": "@aws/pdk.cdk_graph.Node"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "Reference",
      "namespace": "cdk_graph",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Attribute defining the type of reference."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 934
          },
          "name": "ATT_TYPE",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Edge prefix to denote **Ref** type reference edge."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 932
          },
          "name": "PREFIX",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Get type of reference."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 960
          },
          "name": "referenceType",
          "type": {
            "fqn": "@aws/pdk.cdk_graph.ReferenceTypeEnum"
          }
        }
      ],
      "symbolId": "cdk-graph/core/graph:Reference"
    },
    "@aws/pdk.cdk_graph.ReferenceTypeEnum": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "Reference edge types."
      },
      "fqn": "@aws/pdk.cdk_graph.ReferenceTypeEnum",
      "kind": "enum",
      "locationInModule": {
        "filename": "cdk-graph/core/types.ts",
        "line": 160
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "CloudFormation **Ref** reference."
          },
          "name": "REF"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "CloudFormation **Fn::GetAtt** reference."
          },
          "name": "ATTRIBUTE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "CloudFormation **Fn::ImportValue** reference."
          },
          "name": "IMPORT"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "CloudFormation **Fn::Join** reference of imported resourced (eg: `s3.Bucket.fromBucketArn()`)."
          },
          "name": "IMPORT_ARN"
        }
      ],
      "name": "ReferenceTypeEnum",
      "namespace": "cdk_graph",
      "symbolId": "cdk-graph/core/types:ReferenceTypeEnum"
    },
    "@aws/pdk.cdk_graph.ResourceNode": {
      "assembly": "@aws/pdk",
      "base": "@aws/pdk.cdk_graph.Node",
      "docs": {
        "stability": "stable",
        "summary": "ResourceNode class defines a L2 cdk resource construct."
      },
      "fqn": "@aws/pdk.cdk_graph.ResourceNode",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "cdk-graph/core/graph.ts",
          "line": 1935
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws/pdk.cdk_graph.IResourceNodeProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "cdk-graph/core/graph.ts",
        "line": 1921
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Indicates if node is a {@link ResourceNode}."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1928
          },
          "name": "isResourceNode",
          "parameters": [
            {
              "name": "node",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.Node"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          },
          "static": true
        },
        {
          "docs": {
            "custom": {
              "destructive": "true"
            },
            "stability": "stable",
            "summary": "Modifies the L1 resource wrapped by this L2 resource."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2016
          },
          "name": "mutateCfnResource",
          "parameters": [
            {
              "name": "cfnResource",
              "optional": true,
              "type": {
                "fqn": "@aws/pdk.cdk_graph.CfnResourceNode"
              }
            }
          ]
        },
        {
          "docs": {
            "custom": {
              "inheritdoc": "true"
            },
            "stability": "stable",
            "summary": "Remove a *child* node from *this node*."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2023
          },
          "name": "mutateRemoveChild",
          "overrides": "@aws/pdk.cdk_graph.Node",
          "parameters": [
            {
              "name": "node",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.Node"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          }
        }
      ],
      "name": "ResourceNode",
      "namespace": "cdk_graph",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Attribute key for cfn properties."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1925
          },
          "name": "ATT_WRAPPED_CFN_PROPS",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Attribute key for cfn resource type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1923
          },
          "name": "ATT_WRAPPED_CFN_TYPE",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Indicates if this resource is owned by cdk (defined in cdk library)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1957
          },
          "name": "isCdkOwned",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Indicates if Resource wraps a single CfnResource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1962
          },
          "name": "isWrapper",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Get the cfn properties from the L1 resource that this L2 resource wraps."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2003
          },
          "name": "cfnProps",
          "optional": true,
          "overrides": "@aws/pdk.cdk_graph.Node",
          "type": {
            "fqn": "@aws/pdk.cdk_graph.PlainObject"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Get the default/primary CfnResource that this Resource wraps."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1967
          },
          "name": "cfnResource",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.cdk_graph.CfnResourceNode"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Get the CloudFormation resource type for this L2 resource or for the L1 resource is wraps."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 1947
          },
          "name": "cfnType",
          "optional": true,
          "overrides": "@aws/pdk.cdk_graph.Node",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "cdk-graph/core/graph:ResourceNode"
    },
    "@aws/pdk.cdk_graph.RootNode": {
      "assembly": "@aws/pdk",
      "base": "@aws/pdk.cdk_graph.Node",
      "docs": {
        "stability": "stable",
        "summary": "RootNode represents the root of the store tree."
      },
      "fqn": "@aws/pdk.cdk_graph.RootNode",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "cdk-graph/core/graph.ts",
          "line": 2585
        },
        "parameters": [
          {
            "docs": {
              "summary": "Reference to the store."
            },
            "name": "store",
            "type": {
              "fqn": "@aws/pdk.cdk_graph.Store"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "cdk-graph/core/graph.ts",
        "line": 2574
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Indicates if node is a {@link RootNode}."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2581
          },
          "name": "isRootNode",
          "parameters": [
            {
              "name": "node",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.Node"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          },
          "static": true
        },
        {
          "docs": {
            "custom": {
              "inheritdoc": "**The root not is excluded from list**"
            },
            "remarks": "Optionally filter nodes based on predicate.\n**The root not is excluded from list**",
            "stability": "stable",
            "summary": "Return this construct and all of its sub-nodes in the given order."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2601
          },
          "name": "findAll",
          "overrides": "@aws/pdk.cdk_graph.Node",
          "parameters": [
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws/pdk.cdk_graph.IFindNodeOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "fqn": "@aws/pdk.cdk_graph.Node"
                },
                "kind": "array"
              }
            }
          }
        },
        {
          "docs": {
            "custom": {
              "inheritdoc": "true",
              "throws": "Error does not support"
            },
            "remarks": "> {@link RootNode} does not support this mutation",
            "stability": "stable",
            "summary": "Collapses all sub-nodes of *this node* into *this node*."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2610
          },
          "name": "mutateCollapse",
          "overrides": "@aws/pdk.cdk_graph.Node"
        },
        {
          "docs": {
            "custom": {
              "inheritdoc": "true",
              "throws": "Error does not support"
            },
            "stability": "stable",
            "summary": "Collapses *this node* into *an ancestor* > {@link RootNode} does not support this mutation."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2628
          },
          "name": "mutateCollapseTo",
          "overrides": "@aws/pdk.cdk_graph.Node",
          "parameters": [
            {
              "name": "_ancestor",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.Node"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws/pdk.cdk_graph.Node"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "inheritdoc": "true",
              "throws": "Error does not support"
            },
            "stability": "stable",
            "summary": "Collapses *this node* into *it's parent node* > {@link RootNode} does not support this mutation."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2619
          },
          "name": "mutateCollapseToParent",
          "overrides": "@aws/pdk.cdk_graph.Node",
          "returns": {
            "type": {
              "fqn": "@aws/pdk.cdk_graph.Node"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "inheritdoc": "true",
              "throws": "Error does not support"
            },
            "remarks": "> {@link RootNode} does not support this mutation",
            "stability": "stable",
            "summary": "Destroys this node by removing all references and removing this node from the store."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2637
          },
          "name": "mutateDestroy",
          "overrides": "@aws/pdk.cdk_graph.Node",
          "parameters": [
            {
              "name": "_strict",
              "optional": true,
              "type": {
                "primitive": "boolean"
              }
            }
          ]
        },
        {
          "docs": {
            "custom": {
              "inheritdoc": "true",
              "throws": "Error does not support"
            },
            "remarks": "> {@link RootNode} does not support this mutation",
            "stability": "stable",
            "summary": "Hoist *this node* to an *ancestor* by removing it from its current parent node and in turn moving it to the ancestor."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2646
          },
          "name": "mutateHoist",
          "overrides": "@aws/pdk.cdk_graph.Node",
          "parameters": [
            {
              "name": "_newParent",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.Node"
              }
            }
          ]
        }
      ],
      "name": "RootNode",
      "namespace": "cdk_graph",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Fixed path of root."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2578
          },
          "name": "PATH",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Fixed UUID of root."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2576
          },
          "name": "UUID",
          "static": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "cdk-graph/core/graph:RootNode"
    },
    "@aws/pdk.cdk_graph.SGEdge": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Serializable graph edge entity."
      },
      "fqn": "@aws/pdk.cdk_graph.SGEdge",
      "interfaces": [
        "@aws/pdk.cdk_graph.SGEntity"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "cdk-graph/core/serialized-graph.ts",
        "line": 115
      },
      "name": "SGEdge",
      "namespace": "cdk_graph",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Indicates the direction in which the edge is directed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/serialized-graph.ts",
            "line": 119
          },
          "name": "direction",
          "type": {
            "fqn": "@aws/pdk.cdk_graph.EdgeDirectionEnum"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Type of edge."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/serialized-graph.ts",
            "line": 117
          },
          "name": "edgeType",
          "type": {
            "fqn": "@aws/pdk.cdk_graph.EdgeTypeEnum"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "UUID of edge **source**  node (tail)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/serialized-graph.ts",
            "line": 121
          },
          "name": "source",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "UUID of edge **target**  node (head)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/serialized-graph.ts",
            "line": 123
          },
          "name": "target",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "cdk-graph/core/serialized-graph:SGEdge"
    },
    "@aws/pdk.cdk_graph.SGEntity": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Serializable graph entity."
      },
      "fqn": "@aws/pdk.cdk_graph.SGEntity",
      "kind": "interface",
      "locationInModule": {
        "filename": "cdk-graph/core/serialized-graph.ts",
        "line": 58
      },
      "name": "SGEntity",
      "namespace": "cdk_graph",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Universally unique identity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/serialized-graph.ts",
            "line": 60
          },
          "name": "uuid",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "{@link Attributes }",
            "stability": "stable",
            "summary": "Serializable entity attributes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/serialized-graph.ts",
            "line": 66
          },
          "name": "attributes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "union": {
                  "types": [
                    {
                      "primitive": "string"
                    },
                    {
                      "primitive": "number"
                    },
                    {
                      "primitive": "boolean"
                    },
                    {
                      "fqn": "@aws/pdk.cdk_graph.PlainObject"
                    },
                    {
                      "collection": {
                        "elementtype": {
                          "union": {
                            "types": [
                              {
                                "primitive": "string"
                              },
                              {
                                "primitive": "number"
                              },
                              {
                                "primitive": "boolean"
                              },
                              {
                                "fqn": "@aws/pdk.cdk_graph.PlainObject"
                              }
                            ]
                          }
                        },
                        "kind": "array"
                      }
                    }
                  ]
                }
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "{@link FlagEnum }",
            "stability": "stable",
            "summary": "Serializable entity flags."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/serialized-graph.ts",
            "line": 81
          },
          "name": "flags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.cdk_graph.FlagEnum"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "{@link Metadata }",
            "stability": "stable",
            "summary": "Serializable entity metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/serialized-graph.ts",
            "line": 71
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "constructs.MetadataEntry"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "{@link Tags }",
            "stability": "stable",
            "summary": "Serializable entity tags."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/serialized-graph.ts",
            "line": 76
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        }
      ],
      "symbolId": "cdk-graph/core/serialized-graph:SGEntity"
    },
    "@aws/pdk.cdk_graph.SGGraphStore": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Serializable graph store."
      },
      "fqn": "@aws/pdk.cdk_graph.SGGraphStore",
      "kind": "interface",
      "locationInModule": {
        "filename": "cdk-graph/core/serialized-graph.ts",
        "line": 130
      },
      "name": "SGGraphStore",
      "namespace": "cdk_graph",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "List of edges."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/serialized-graph.ts",
            "line": 136
          },
          "name": "edges",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.cdk_graph.SGEdge"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Node tree."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/serialized-graph.ts",
            "line": 134
          },
          "name": "tree",
          "type": {
            "fqn": "@aws/pdk.cdk_graph.SGNode"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Store version."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/serialized-graph.ts",
            "line": 132
          },
          "name": "version",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "cdk-graph/core/serialized-graph:SGGraphStore"
    },
    "@aws/pdk.cdk_graph.SGNode": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Serializable graph node entity."
      },
      "fqn": "@aws/pdk.cdk_graph.SGNode",
      "interfaces": [
        "@aws/pdk.cdk_graph.SGEntity"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "cdk-graph/core/serialized-graph.ts",
        "line": 88
      },
      "name": "SGNode",
      "namespace": "cdk_graph",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Node id within parent (unique only between parent child nodes)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/serialized-graph.ts",
            "line": 96
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Node type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/serialized-graph.ts",
            "line": 90
          },
          "name": "nodeType",
          "type": {
            "fqn": "@aws/pdk.cdk_graph.NodeTypeEnum"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Node path."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/serialized-graph.ts",
            "line": 98
          },
          "name": "path",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "CloudFormation resource type for this node."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/serialized-graph.ts",
            "line": 104
          },
          "name": "cfnType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Child node record."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/serialized-graph.ts",
            "line": 106
          },
          "name": "children",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.cdk_graph.SGNode"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Synthesized construct information defining jii resolution data."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/serialized-graph.ts",
            "line": 100
          },
          "name": "constructInfo",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.cdk_graph.ConstructInfo"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "List of edge UUIDs where this node is the **source**."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/serialized-graph.ts",
            "line": 108
          },
          "name": "edges",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Logical id of the node, which is only unique within containing stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/serialized-graph.ts",
            "line": 102
          },
          "name": "logicalId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "UUID of node parent."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/serialized-graph.ts",
            "line": 94
          },
          "name": "parent",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "UUID of node stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/serialized-graph.ts",
            "line": 92
          },
          "name": "stack",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "cdk-graph/core/serialized-graph:SGNode"
    },
    "@aws/pdk.cdk_graph.SGUnresolvedReference": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "remarks": "During graph computation references are unresolved and stored in this struct.",
        "stability": "stable",
        "summary": "Unresolved reference struct."
      },
      "fqn": "@aws/pdk.cdk_graph.SGUnresolvedReference",
      "kind": "interface",
      "locationInModule": {
        "filename": "cdk-graph/core/serialized-graph.ts",
        "line": 163
      },
      "name": "SGUnresolvedReference",
      "namespace": "cdk_graph",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/serialized-graph.ts",
            "line": 165
          },
          "name": "referenceType",
          "type": {
            "fqn": "@aws/pdk.cdk_graph.ReferenceTypeEnum"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/serialized-graph.ts",
            "line": 164
          },
          "name": "source",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/serialized-graph.ts",
            "line": 166
          },
          "name": "target",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/serialized-graph.ts",
            "line": 167
          },
          "name": "value",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "primitive": "number"
                },
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws/pdk.cdk_graph.PlainObject"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "primitive": "string"
                          },
                          {
                            "primitive": "number"
                          },
                          {
                            "primitive": "boolean"
                          },
                          {
                            "fqn": "@aws/pdk.cdk_graph.PlainObject"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "cdk-graph/core/serialized-graph:SGUnresolvedReference"
    },
    "@aws/pdk.cdk_graph.StackNode": {
      "assembly": "@aws/pdk",
      "base": "@aws/pdk.cdk_graph.Node",
      "docs": {
        "stability": "stable",
        "summary": "StackNode defines a cdk Stack."
      },
      "fqn": "@aws/pdk.cdk_graph.StackNode",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "cdk-graph/core/graph.ts",
          "line": 2320
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws/pdk.cdk_graph.IStackNodeProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "cdk-graph/core/graph.ts",
        "line": 2280
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Indicates if node is a {@link StackNode}."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2282
          },
          "name": "isStackNode",
          "parameters": [
            {
              "name": "node",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.Node"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          },
          "static": true
        },
        {
          "docs": {
            "custom": {
              "throws": "Error is node is not contained in a stack"
            },
            "stability": "stable",
            "summary": "Gets the {@link StackNode} containing a given resource."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2290
          },
          "name": "of",
          "parameters": [
            {
              "name": "node",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.Node"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws/pdk.cdk_graph.StackNode"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Associate {@link OutputNode} with this stack."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2349
          },
          "name": "addOutput",
          "parameters": [
            {
              "name": "node",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.OutputNode"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Associate {@link ParameterNode} with this stack."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2372
          },
          "name": "addParameter",
          "parameters": [
            {
              "name": "node",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.ParameterNode"
              }
            }
          ]
        },
        {
          "docs": {
            "custom": {
              "throws": "Error is no output found matching *logicalId*"
            },
            "stability": "stable",
            "summary": "Find {@link OutputNode} with *logicalId* defined by this stack."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2357
          },
          "name": "findOutput",
          "parameters": [
            {
              "name": "logicalId",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws/pdk.cdk_graph.OutputNode"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "throws": "Error is no parameter found matching *parameterId*"
            },
            "stability": "stable",
            "summary": "Find {@link ParameterNode} with *parameterId* defined by this stack."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2380
          },
          "name": "findParameter",
          "parameters": [
            {
              "name": "parameterId",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws/pdk.cdk_graph.ParameterNode"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "inheritdoc": "true"
            },
            "stability": "stable",
            "summary": "Destroys this node by removing all references and removing this node from the store."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2415
          },
          "name": "mutateDestroy",
          "overrides": "@aws/pdk.cdk_graph.Node",
          "parameters": [
            {
              "name": "strict",
              "optional": true,
              "type": {
                "primitive": "boolean"
              }
            }
          ]
        },
        {
          "docs": {
            "custom": {
              "inheritdoc": "true"
            },
            "stability": "stable",
            "summary": "Hoist *this node* to an *ancestor* by removing it from its current parent node and in turn moving it to the ancestor."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2422
          },
          "name": "mutateHoist",
          "overrides": "@aws/pdk.cdk_graph.Node",
          "parameters": [
            {
              "name": "newParent",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.Node"
              }
            }
          ]
        },
        {
          "docs": {
            "custom": {
              "destructive": "true"
            },
            "stability": "stable",
            "summary": "Disassociate {@link OutputNode} from this stack."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2398
          },
          "name": "mutateRemoveOutput",
          "parameters": [
            {
              "name": "node",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.OutputNode"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "destructive": "true"
            },
            "stability": "stable",
            "summary": "Disassociate {@link ParameterNode} from this stack."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2408
          },
          "name": "mutateRemoveParameter",
          "parameters": [
            {
              "name": "node",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.ParameterNode"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          }
        }
      ],
      "name": "StackNode",
      "namespace": "cdk_graph",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Get all **exported** {@link OutputNode}s defined by this stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2344
          },
          "name": "exports",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.cdk_graph.OutputNode"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Get all {@link OutputNode}s defined by this stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2311
          },
          "name": "outputs",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.cdk_graph.OutputNode"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Get all {@link ParameterNode}s defined by this stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2316
          },
          "name": "parameters",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.cdk_graph.ParameterNode"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Get {@link StageNode} containing this stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2306
          },
          "name": "stage",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.cdk_graph.StageNode"
          }
        }
      ],
      "symbolId": "cdk-graph/core/graph:StackNode"
    },
    "@aws/pdk.cdk_graph.StageNode": {
      "assembly": "@aws/pdk",
      "base": "@aws/pdk.cdk_graph.Node",
      "docs": {
        "stability": "stable",
        "summary": "StageNode defines a cdk Stage."
      },
      "fqn": "@aws/pdk.cdk_graph.StageNode",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "cdk-graph/core/graph.ts",
          "line": 2506
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws/pdk.cdk_graph.ITypedNodeProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "cdk-graph/core/graph.ts",
        "line": 2480
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Indicates if node is a {@link StageNode}."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2482
          },
          "name": "isStageNode",
          "parameters": [
            {
              "name": "node",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.Node"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          },
          "static": true
        },
        {
          "docs": {
            "custom": {
              "throws": "Error is node is not contained in a stage"
            },
            "stability": "stable",
            "summary": "Gets the {@link StageNode} containing a given resource."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2490
          },
          "name": "of",
          "parameters": [
            {
              "name": "node",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.Node"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws/pdk.cdk_graph.StageNode"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Associate a {@link StackNode} with this stage."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2518
          },
          "name": "addStack",
          "parameters": [
            {
              "name": "stack",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.StackNode"
              }
            }
          ]
        },
        {
          "docs": {
            "custom": {
              "destructive": "true"
            },
            "stability": "stable",
            "summary": "Disassociate {@link StackNode} from this stage."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2526
          },
          "name": "mutateRemoveStack",
          "parameters": [
            {
              "name": "stack",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.StackNode"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          }
        }
      ],
      "name": "StageNode",
      "namespace": "cdk_graph",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Gets all stacks contained by this stage."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 2502
          },
          "name": "stacks",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.cdk_graph.StackNode"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "cdk-graph/core/graph:StageNode"
    },
    "@aws/pdk.cdk_graph.Store": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "Store class provides the in-memory database-like interface for managing all entities in the graph."
      },
      "fqn": "@aws/pdk.cdk_graph.Store",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "cdk-graph/core/graph.ts",
          "line": 107
        },
        "parameters": [
          {
            "name": "allowDestructiveMutations",
            "optional": true,
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "interfaces": [
        "@aws/pdk.cdk_graph.ISerializableGraphStore"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "cdk-graph/core/graph.ts",
        "line": 62
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Builds store from serialized store data."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 64
          },
          "name": "fromSerializedStore",
          "parameters": [
            {
              "name": "serializedStore",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.SGGraphStore"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws/pdk.cdk_graph.Store"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Add **edge** to the store."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 174
          },
          "name": "addEdge",
          "parameters": [
            {
              "name": "edge",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.Edge"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Add **node** to the store."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 190
          },
          "name": "addNode",
          "parameters": [
            {
              "name": "node",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.Node"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Add **stack** node to the store."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 220
          },
          "name": "addStack",
          "parameters": [
            {
              "name": "stack",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.StackNode"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Add **stage** to the store."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 234
          },
          "name": "addStage",
          "parameters": [
            {
              "name": "stage",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.StageNode"
              }
            }
          ]
        },
        {
          "docs": {
            "returns": "Returns a clone of the store that allows destructive mutations",
            "stability": "stable",
            "summary": "Clone the store to allow destructive mutations."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 333
          },
          "name": "clone",
          "parameters": [
            {
              "docs": {
                "remarks": "defaults to `true`",
                "summary": "Indicates if destructive mutations are allowed;"
              },
              "name": "allowDestructiveMutations",
              "optional": true,
              "type": {
                "primitive": "boolean"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws/pdk.cdk_graph.Store"
            }
          }
        },
        {
          "docs": {
            "remarks": "Construct *logicalIds are only unique within their containing stack, so to use *logicalId*\nlookups universally (like resolving references) we need a universal key.",
            "stability": "stable",
            "summary": "Compute **universal** *logicalId* based on parent stack and construct *logicalId* (`<stack>:<logicalId>`)."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 253
          },
          "name": "computeLogicalUniversalId",
          "parameters": [
            {
              "name": "stack",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.StackNode"
              }
            },
            {
              "name": "logicalId",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "docs": {
            "returns": "Returns matching {@link Node } if found, otherwise undefined.",
            "stability": "stable",
            "summary": "Attempts to lookup the {@link Node} associated with a given *import arn token*."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 307
          },
          "name": "findNodeByImportArn",
          "parameters": [
            {
              "docs": {
                "summary": "Import arn value, which is either object to tokenize or already tokenized string."
              },
              "name": "value",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "optional": true,
            "type": {
              "fqn": "@aws/pdk.cdk_graph.Node"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Find node within given **stack** with given *logicalId*."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 269
          },
          "name": "findNodeByLogicalId",
          "parameters": [
            {
              "name": "stack",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.StackNode"
              }
            },
            {
              "name": "logicalId",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws/pdk.cdk_graph.Node"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Find node by **universal** *logicalId* (`<stack>:<logicalId>`)."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 261
          },
          "name": "findNodeByLogicalUniversalId",
          "parameters": [
            {
              "name": "uid",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws/pdk.cdk_graph.Node"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Get stored **edge** by UUID."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 181
          },
          "name": "getEdge",
          "parameters": [
            {
              "name": "uuid",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws/pdk.cdk_graph.Edge"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Get stored **node** by UUID."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 206
          },
          "name": "getNode",
          "parameters": [
            {
              "name": "uuid",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws/pdk.cdk_graph.Node"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Get stored **stack** node by UUID."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 225
          },
          "name": "getStack",
          "parameters": [
            {
              "name": "uuid",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws/pdk.cdk_graph.StackNode"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Get stored **stage** node by UUID."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 239
          },
          "name": "getStage",
          "parameters": [
            {
              "name": "uuid",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws/pdk.cdk_graph.StageNode"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "destructive": "true"
            },
            "stability": "stable",
            "summary": "Remove **edge** from the store."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 353
          },
          "name": "mutateRemoveEdge",
          "parameters": [
            {
              "name": "edge",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.Edge"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "destructive": "true"
            },
            "stability": "stable",
            "summary": "Remove **node** from the store."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 365
          },
          "name": "mutateRemoveNode",
          "parameters": [
            {
              "name": "node",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.Node"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Records arn tokens from imported resources (eg: `s3.Bucket.fromBucketArn()`) that are used for resolving references."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 298
          },
          "name": "recordImportArn",
          "parameters": [
            {
              "name": "arnToken",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "resource",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.Node"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Record a **universal** *logicalId* to node mapping in the store."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 289
          },
          "name": "recordLogicalId",
          "parameters": [
            {
              "name": "stack",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.StackNode"
              }
            },
            {
              "name": "logicalId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "resource",
              "type": {
                "fqn": "@aws/pdk.cdk_graph.Node"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Serialize the store."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 320
          },
          "name": "serialize",
          "overrides": "@aws/pdk.cdk_graph.ISerializableGraphStore",
          "returns": {
            "type": {
              "fqn": "@aws/pdk.cdk_graph.SGGraphStore"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "throws": "Error is store does **not** allow mutations"
            },
            "stability": "stable",
            "summary": "Verifies that the store allows destructive mutations."
          },
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 341
          },
          "name": "verifyDestructiveMutationAllowed"
        }
      ],
      "name": "Store",
      "namespace": "cdk_graph",
      "properties": [
        {
          "docs": {
            "remarks": "Destructive mutations are only allowed on clones of the store to prevent plugins and filters from\nmutating the store for downstream plugins.\n\nAll `mutate*` methods are only allowed on stores that allow destructive mutations.\n\nThis behavior may change in the future if the need arises for plugins to pass mutated stores\nto downstream plugins. But it will be done cautiously with ensuring the intent of\ndownstream plugin is to receive the mutated store.",
            "stability": "stable",
            "summary": "Indicates if the store allows destructive mutations."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 105
          },
          "name": "allowDestructiveMutations",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Get record of all store counters."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 161
          },
          "name": "counts",
          "type": {
            "fqn": "@aws/pdk.cdk_graph.IStoreCounts"
          }
        },
        {
          "docs": {
            "custom": {
              "type": "ReadonlyArray<Edge>"
            },
            "stability": "stable",
            "summary": "Gets all stored **edges**."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 124
          },
          "name": "edges",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.cdk_graph.Edge"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "type": "ReadonlyArray<Node>"
            },
            "stability": "stable",
            "summary": "Gets all stored **nodes**."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 132
          },
          "name": "nodes",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.cdk_graph.Node"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "remarks": "The **root** node is not the computed root, but the graph root\nwhich is auto-generated and can not be mutated.",
            "stability": "stable",
            "summary": "Root node in the store."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 116
          },
          "name": "root",
          "type": {
            "fqn": "@aws/pdk.cdk_graph.RootNode"
          }
        },
        {
          "docs": {
            "custom": {
              "type": "ReadonlyArray<StackNode>"
            },
            "stability": "stable",
            "summary": "Gets all stored **root stack** nodes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 156
          },
          "name": "rootStacks",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.cdk_graph.StackNode"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "type": "ReadonlyArray<StackNode>"
            },
            "stability": "stable",
            "summary": "Gets all stored **stack** nodes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 140
          },
          "name": "stacks",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.cdk_graph.StackNode"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "type": "ReadonlyArray<StageNode>"
            },
            "stability": "stable",
            "summary": "Gets all stored **stage** nodes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 148
          },
          "name": "stages",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.cdk_graph.StageNode"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Current SemVer version of the store."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph/core/graph.ts",
            "line": 69
          },
          "name": "version",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "cdk-graph/core/graph:Store"
    },
    "@aws/pdk.cdk_graph_plugin_diagram.CdkGraphDiagramPlugin": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "CdkGraphDiagramPlugin is a {@link ICdkGraphPluginCdkGraph Plugin} implementation for generating diagram artifacts from the {@link CdkGraph} framework."
      },
      "fqn": "@aws/pdk.cdk_graph_plugin_diagram.CdkGraphDiagramPlugin",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "cdk-graph-plugin-diagram/plugin.ts",
          "line": 102
        },
        "parameters": [
          {
            "name": "config",
            "optional": true,
            "type": {
              "fqn": "@aws/pdk.cdk_graph_plugin_diagram.IPluginConfig"
            }
          }
        ]
      },
      "interfaces": [
        "@aws/pdk.cdk_graph.ICdkGraphPlugin"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "cdk-graph-plugin-diagram/plugin.ts",
        "line": 33
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Get standardized artifact file name for diagram artifacts."
          },
          "locationInModule": {
            "filename": "cdk-graph-plugin-diagram/plugin.ts",
            "line": 49
          },
          "name": "artifactFilename",
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "format",
              "type": {
                "fqn": "@aws/pdk.cdk_graph_plugin_diagram.DiagramFormat"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Get standardized artifact id for diagram artifacts."
          },
          "locationInModule": {
            "filename": "cdk-graph-plugin-diagram/plugin.ts",
            "line": 42
          },
          "name": "artifactId",
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "format",
              "type": {
                "fqn": "@aws/pdk.cdk_graph_plugin_diagram.DiagramFormat"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Get diagram artifact for a given name and format."
          },
          "locationInModule": {
            "filename": "cdk-graph-plugin-diagram/plugin.ts",
            "line": 107
          },
          "name": "getDiagramArtifact",
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "format",
              "type": {
                "fqn": "@aws/pdk.cdk_graph_plugin_diagram.DiagramFormat"
              }
            }
          ],
          "returns": {
            "optional": true,
            "type": {
              "fqn": "@aws/pdk.cdk_graph.CdkGraphArtifact"
            }
          }
        }
      ],
      "name": "CdkGraphDiagramPlugin",
      "namespace": "cdk_graph_plugin_diagram",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Namespace for artifacts of the diagram plugin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph-plugin-diagram/plugin.ts",
            "line": 35
          },
          "name": "ARTIFACT_NS",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Fixed id of the diagram plugin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph-plugin-diagram/plugin.ts",
            "line": 37
          },
          "name": "ID",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Current semantic version of the diagram plugin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph-plugin-diagram/plugin.ts",
            "line": 39
          },
          "name": "VERSION",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Get diagram plugin config."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph-plugin-diagram/plugin.ts",
            "line": 93
          },
          "name": "config",
          "type": {
            "fqn": "@aws/pdk.cdk_graph_plugin_diagram.IPluginConfig"
          }
        },
        {
          "docs": {
            "custom": {
              "inheritdoc": "true"
            },
            "stability": "stable",
            "summary": "Unique identifier for this plugin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph-plugin-diagram/plugin.ts",
            "line": 57
          },
          "name": "id",
          "overrides": "@aws/pdk.cdk_graph.ICdkGraphPlugin",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "inheritdoc": "true"
            },
            "stability": "stable",
            "summary": "Plugin version."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph-plugin-diagram/plugin.ts",
            "line": 61
          },
          "name": "version",
          "overrides": "@aws/pdk.cdk_graph.ICdkGraphPlugin",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Get default dot artifact."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph-plugin-diagram/plugin.ts",
            "line": 75
          },
          "name": "defaultDotArtifact",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.cdk_graph.CdkGraphArtifact"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Get default PNG artifact."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph-plugin-diagram/plugin.ts",
            "line": 84
          },
          "name": "defaultPngArtifact",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.cdk_graph.CdkGraphArtifact"
          }
        },
        {
          "docs": {
            "custom": {
              "inheritdoc": "true"
            },
            "stability": "stable",
            "summary": "List of plugins this plugin depends on, including optional semver version (eg: [\"foo\", \"bar@1.2\"])."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph-plugin-diagram/plugin.ts",
            "line": 66
          },
          "name": "dependencies",
          "optional": true,
          "overrides": "@aws/pdk.cdk_graph.ICdkGraphPlugin",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "inheritdoc": "true"
            },
            "remarks": "Enables plugins to receive base configs.",
            "stability": "stable",
            "summary": "Binds the plugin to the CdkGraph instance."
          },
          "locationInModule": {
            "filename": "cdk-graph-plugin-diagram/plugin.ts",
            "line": 117
          },
          "name": "bind",
          "overrides": "@aws/pdk.cdk_graph.ICdkGraphPlugin",
          "type": {
            "fqn": "@aws/pdk.cdk_graph.IGraphPluginBindCallback"
          }
        },
        {
          "docs": {
            "custom": {
              "inheritdoc": "true"
            },
            "remarks": "This is not automatically called when synthesizing CDK.\nDeveloper must explicitly add `await graphInstance.report()` to the CDK bin or invoke this outside\nof the CDK synth. In either case, the plugin receives the in-memory graph interface when invoked, as the\nCdkGraph will deserialize the graph prior to invoking the plugin report.",
            "stability": "stable",
            "summary": "Generate asynchronous reports based on the graph."
          },
          "locationInModule": {
            "filename": "cdk-graph-plugin-diagram/plugin.ts",
            "line": 162
          },
          "name": "report",
          "optional": true,
          "overrides": "@aws/pdk.cdk_graph.ICdkGraphPlugin",
          "type": {
            "fqn": "@aws/pdk.cdk_graph.IGraphReportCallback"
          }
        }
      ],
      "symbolId": "cdk-graph-plugin-diagram/plugin:CdkGraphDiagramPlugin"
    },
    "@aws/pdk.cdk_graph_plugin_diagram.DiagramFormat": {
      "assembly": "@aws/pdk",
      "docs": {
        "remarks": "Extended formats are automatically generated, for example if you generate \"png\" which extends\n\"svg\" which extends \"dot\", the resulting generated files will be all aforementioned.",
        "stability": "stable",
        "summary": "Supported diagram formats that can be generated."
      },
      "fqn": "@aws/pdk.cdk_graph_plugin_diagram.DiagramFormat",
      "kind": "enum",
      "locationInModule": {
        "filename": "cdk-graph-plugin-diagram/config.ts",
        "line": 12
      },
      "members": [
        {
          "docs": {
            "default": "",
            "stability": "stable",
            "summary": "Graphviz [DOT Language](https://graphviz.org/doc/info/lang.html)."
          },
          "name": "DOT"
        },
        {
          "docs": {
            "custom": {
              "extends": "DiagramFormat.DOT"
            },
            "stability": "stable",
            "summary": "[SVG](https://developer.mozilla.org/en-US/docs/Web/SVG) generated using [dot-wasm](https://hpcc-systems.github.io/hpcc-js-wasm/classes/graphviz.Graphviz.html) from {@link DiagramFormat.DOT} file."
          },
          "name": "SVG"
        },
        {
          "docs": {
            "custom": {
              "extends": "DiagramFormat.SVG"
            },
            "stability": "stable",
            "summary": "[PNG](https://en.wikipedia.org/wiki/Portable_Network_Graphics) generated using [sharp](https://sharp.pixelplumbing.com/api-output#png) from {@link DiagramFormat.SVG} file."
          },
          "name": "PNG"
        }
      ],
      "name": "DiagramFormat",
      "namespace": "cdk_graph_plugin_diagram",
      "symbolId": "cdk-graph-plugin-diagram/config:DiagramFormat"
    },
    "@aws/pdk.cdk_graph_plugin_diagram.DiagramOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for diagrams."
      },
      "fqn": "@aws/pdk.cdk_graph_plugin_diagram.DiagramOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "cdk-graph-plugin-diagram/internal/graphviz/diagram.ts",
        "line": 27
      },
      "name": "DiagramOptions",
      "namespace": "cdk_graph_plugin_diagram",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph-plugin-diagram/internal/graphviz/diagram.ts",
            "line": 28
          },
          "name": "title",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph-plugin-diagram/internal/graphviz/diagram.ts",
            "line": 31
          },
          "name": "nodePositions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.cdk_graph_plugin_diagram.INodePosition"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph-plugin-diagram/internal/graphviz/diagram.ts",
            "line": 29
          },
          "name": "preset",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.cdk_graph.FilterPreset"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph-plugin-diagram/internal/graphviz/diagram.ts",
            "line": 30
          },
          "name": "theme",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws/pdk.cdk_graph_plugin_diagram.IGraphThemeConfigAlt"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "cdk-graph-plugin-diagram/internal/graphviz/diagram:DiagramOptions"
    },
    "@aws/pdk.cdk_graph_plugin_diagram.GraphThemeRenderingIconTarget": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "Icon rendering target options for GraphTheme."
      },
      "fqn": "@aws/pdk.cdk_graph_plugin_diagram.GraphThemeRenderingIconTarget",
      "kind": "enum",
      "locationInModule": {
        "filename": "cdk-graph-plugin-diagram/internal/graphviz/theme/theme.ts",
        "line": 8
      },
      "members": [
        {
          "docs": {
            "default": "",
            "remarks": "Resolution precedence: `data => resource => general => service => category`",
            "stability": "stable",
            "summary": "Data icon (eg: EC2 instance type icon, T2)."
          },
          "name": "DATA"
        },
        {
          "docs": {
            "remarks": "Resolution precedence: `resource => general => service => category`",
            "stability": "stable",
            "summary": "Resource icon."
          },
          "name": "RESOURCE"
        },
        {
          "docs": {
            "remarks": "Resolution precedence: `resource => general => service => category`",
            "stability": "stable",
            "summary": "General icon."
          },
          "name": "GENERAL"
        },
        {
          "docs": {
            "remarks": "Resolution precedence: `service => category`",
            "stability": "stable",
            "summary": "Service icon."
          },
          "name": "SERVICE"
        },
        {
          "docs": {
            "remarks": "Resolution precedence: `category`",
            "stability": "stable",
            "summary": "Category icon."
          },
          "name": "CATEGORY"
        }
      ],
      "name": "GraphThemeRenderingIconTarget",
      "namespace": "cdk_graph_plugin_diagram",
      "symbolId": "cdk-graph-plugin-diagram/internal/graphviz/theme/theme:GraphThemeRenderingIconTarget"
    },
    "@aws/pdk.cdk_graph_plugin_diagram.IDiagramConfig": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Diagram configuration definition."
      },
      "fqn": "@aws/pdk.cdk_graph_plugin_diagram.IDiagramConfig",
      "interfaces": [
        "@aws/pdk.cdk_graph_plugin_diagram.IDiagramConfigBase"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "cdk-graph-plugin-diagram/config.ts",
        "line": 70
      },
      "name": "IDiagramConfig",
      "namespace": "cdk_graph_plugin_diagram",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Used as the basename of the generated file(s) which gets the extension appended.",
            "stability": "stable",
            "summary": "Name of the diagram."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph-plugin-diagram/config.ts",
            "line": 74
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The title of the diagram."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph-plugin-diagram/config.ts",
            "line": 79
          },
          "name": "title",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Indicates if default diagram config is applied as defaults to this config."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph-plugin-diagram/config.ts",
            "line": 86
          },
          "name": "ignoreDefaults",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "cdk-graph-plugin-diagram/config:IDiagramConfig"
    },
    "@aws/pdk.cdk_graph_plugin_diagram.IDiagramConfigBase": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Base config to specific a unique diagram to be generated."
      },
      "fqn": "@aws/pdk.cdk_graph_plugin_diagram.IDiagramConfigBase",
      "kind": "interface",
      "locationInModule": {
        "filename": "cdk-graph-plugin-diagram/config.ts",
        "line": 50
      },
      "name": "IDiagramConfigBase",
      "namespace": "cdk_graph_plugin_diagram",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Graph {@link IGraphFilterPlanFilter Plan}  used to generate a unique diagram."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph-plugin-diagram/config.ts",
            "line": 58
          },
          "name": "filterPlan",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.cdk_graph.IGraphFilterPlan"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "`DiagramFormat.PNG` - which will through extension also generate `DiagramFormat.SVG` and `DiagramFormat.DOT`",
            "stability": "stable",
            "summary": "The output format(s) to generated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph-plugin-diagram/config.ts",
            "line": 55
          },
          "name": "format",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws/pdk.cdk_graph_plugin_diagram.DiagramFormat"
                },
                {
                  "collection": {
                    "elementtype": {
                      "fqn": "@aws/pdk.cdk_graph_plugin_diagram.DiagramFormat"
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Config for predetermined node positions given their CDK construct id."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph-plugin-diagram/config.ts",
            "line": 64
          },
          "name": "nodePositions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.cdk_graph_plugin_diagram.INodePosition"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Config for graph theme."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph-plugin-diagram/config.ts",
            "line": 61
          },
          "name": "theme",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws/pdk.cdk_graph_plugin_diagram.IGraphThemeConfigAlt"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "cdk-graph-plugin-diagram/config:IDiagramConfigBase"
    },
    "@aws/pdk.cdk_graph_plugin_diagram.IGraphThemeConfigAlt": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "GraphThemeConfigAlt is simplified definition of theme to apply."
      },
      "fqn": "@aws/pdk.cdk_graph_plugin_diagram.IGraphThemeConfigAlt",
      "kind": "interface",
      "locationInModule": {
        "filename": "cdk-graph-plugin-diagram/internal/graphviz/theme/theme.ts",
        "line": 92
      },
      "name": "IGraphThemeConfigAlt",
      "namespace": "cdk_graph_plugin_diagram",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph-plugin-diagram/internal/graphviz/theme/theme.ts",
            "line": 94
          },
          "name": "rendering",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.cdk_graph_plugin_diagram.IGraphThemeRendering"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph-plugin-diagram/internal/graphviz/theme/theme.ts",
            "line": 93
          },
          "name": "theme",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "cdk-graph-plugin-diagram/internal/graphviz/theme/theme:IGraphThemeConfigAlt"
    },
    "@aws/pdk.cdk_graph_plugin_diagram.IGraphThemeRendering": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "Properties for defining the rendering options for the graph theme."
      },
      "fqn": "@aws/pdk.cdk_graph_plugin_diagram.IGraphThemeRendering",
      "interfaces": [
        "@aws/pdk.cdk_graph_plugin_diagram.IGraphThemeRenderingIconProps",
        "@aws/pdk.cdk_graph_plugin_diagram.IGraphThemeRenderingOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "cdk-graph-plugin-diagram/internal/graphviz/theme/theme.ts",
        "line": 87
      },
      "name": "IGraphThemeRendering",
      "namespace": "cdk_graph_plugin_diagram",
      "symbolId": "cdk-graph-plugin-diagram/internal/graphviz/theme/theme:IGraphThemeRendering"
    },
    "@aws/pdk.cdk_graph_plugin_diagram.IGraphThemeRenderingIconProps": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "Icon specific properties for configuring graph rendering of resource icons."
      },
      "fqn": "@aws/pdk.cdk_graph_plugin_diagram.IGraphThemeRenderingIconProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "cdk-graph-plugin-diagram/internal/graphviz/theme/theme.ts",
        "line": 43
      },
      "name": "IGraphThemeRenderingIconProps",
      "namespace": "cdk_graph_plugin_diagram",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Highest Graph.CfnResourceNode icon to render."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph-plugin-diagram/internal/graphviz/theme/theme.ts",
            "line": 51
          },
          "name": "cfnResourceIconMax",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.cdk_graph_plugin_diagram.GraphThemeRenderingIconTarget"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Lowest Graph.CfnResourceNode icon to render."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph-plugin-diagram/internal/graphviz/theme/theme.ts",
            "line": 49
          },
          "name": "cfnResourceIconMin",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.cdk_graph_plugin_diagram.GraphThemeRenderingIconTarget"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Highest Graph.ResourceNode icon to render."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph-plugin-diagram/internal/graphviz/theme/theme.ts",
            "line": 47
          },
          "name": "resourceIconMax",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.cdk_graph_plugin_diagram.GraphThemeRenderingIconTarget"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Lowest Graph.ResourceNode icon to render."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph-plugin-diagram/internal/graphviz/theme/theme.ts",
            "line": 45
          },
          "name": "resourceIconMin",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.cdk_graph_plugin_diagram.GraphThemeRenderingIconTarget"
          }
        }
      ],
      "symbolId": "cdk-graph-plugin-diagram/internal/graphviz/theme/theme:IGraphThemeRenderingIconProps"
    },
    "@aws/pdk.cdk_graph_plugin_diagram.IGraphThemeRenderingOptions": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "Additional graph rendering options."
      },
      "fqn": "@aws/pdk.cdk_graph_plugin_diagram.IGraphThemeRenderingOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "cdk-graph-plugin-diagram/internal/graphviz/theme/theme.ts",
        "line": 55
      },
      "name": "IGraphThemeRenderingOptions",
      "namespace": "cdk_graph_plugin_diagram",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "horizontal",
            "stability": "stable",
            "summary": "Layout direction of the graph."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph-plugin-diagram/internal/graphviz/theme/theme.ts",
            "line": 67
          },
          "name": "layout",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "undefined Will render all stacks",
            "stability": "stable",
            "summary": "Specify regex pattern to match root stacks to render."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph-plugin-diagram/internal/graphviz/theme/theme.ts",
            "line": 83
          },
          "name": "stack",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "last",
            "remarks": "Can be a preset value of \"first\", \"last\", and \"all\", or regex string of the stage(s) to render.",
            "stability": "stable",
            "summary": "Specify which stage to render when multiple stages are available."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph-plugin-diagram/internal/graphviz/theme/theme.ts",
            "line": 76
          },
          "name": "stage",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "see": "https://graphviz.org/docs/attrs/constraint/",
            "stability": "stable",
            "summary": "Prevent cross-cluster edges from ranking nodes in layout."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph-plugin-diagram/internal/graphviz/theme/theme.ts",
            "line": 61
          },
          "name": "unconstrainedCrossClusterEdges",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "cdk-graph-plugin-diagram/internal/graphviz/theme/theme:IGraphThemeRenderingOptions"
    },
    "@aws/pdk.cdk_graph_plugin_diagram.INodePosition": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "Positional coordinates for a node in inches."
      },
      "fqn": "@aws/pdk.cdk_graph_plugin_diagram.INodePosition",
      "kind": "interface",
      "locationInModule": {
        "filename": "cdk-graph-plugin-diagram/config.ts",
        "line": 41
      },
      "name": "INodePosition",
      "namespace": "cdk_graph_plugin_diagram",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph-plugin-diagram/config.ts",
            "line": 42
          },
          "name": "x",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph-plugin-diagram/config.ts",
            "line": 43
          },
          "name": "y",
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "cdk-graph-plugin-diagram/config:INodePosition"
    },
    "@aws/pdk.cdk_graph_plugin_diagram.IPluginConfig": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Plugin configuration for diagram plugin."
      },
      "fqn": "@aws/pdk.cdk_graph_plugin_diagram.IPluginConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "cdk-graph-plugin-diagram/config.ts",
        "line": 93
      },
      "name": "IPluginConfig",
      "namespace": "cdk_graph_plugin_diagram",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Default configuration to apply to all diagrams."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph-plugin-diagram/config.ts",
            "line": 95
          },
          "name": "defaults",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.cdk_graph_plugin_diagram.IDiagramConfigBase"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "List of diagram configurations to generate diagrams."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph-plugin-diagram/config.ts",
            "line": 97
          },
          "name": "diagrams",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.cdk_graph_plugin_diagram.IDiagramConfig"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "cdk-graph-plugin-diagram/config:IPluginConfig"
    },
    "@aws/pdk.cdk_graph_plugin_threat_composer.CdkGraphThreatComposerPlugin": {
      "assembly": "@aws/pdk",
      "docs": {
        "see": "https://github.com/awslabs/threat-composer",
        "stability": "stable",
        "summary": "CdkGraphThreatComposerPlugin is a {@link ICdkGraphPluginCdkGraph Plugin} implementation for generating Threat Composer threat models."
      },
      "fqn": "@aws/pdk.cdk_graph_plugin_threat_composer.CdkGraphThreatComposerPlugin",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "cdk-graph-plugin-threat-composer/plugin.ts",
          "line": 72
        },
        "parameters": [
          {
            "name": "options",
            "optional": true,
            "type": {
              "fqn": "@aws/pdk.cdk_graph_plugin_threat_composer.CdkGraphThreatComposerPluginOptions"
            }
          }
        ]
      },
      "interfaces": [
        "@aws/pdk.cdk_graph.ICdkGraphPlugin"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "cdk-graph-plugin-threat-composer/plugin.ts",
        "line": 31
      },
      "name": "CdkGraphThreatComposerPlugin",
      "namespace": "cdk_graph_plugin_threat_composer",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Fixed ID of the threat-composer plugin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph-plugin-threat-composer/plugin.ts",
            "line": 35
          },
          "name": "ID",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Curent semantic version of the threat-composer plugin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph-plugin-threat-composer/plugin.ts",
            "line": 40
          },
          "name": "VERSION",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "inheritdoc": "true"
            },
            "stability": "stable",
            "summary": "Unique identifier for this plugin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph-plugin-threat-composer/plugin.ts",
            "line": 43
          },
          "name": "id",
          "overrides": "@aws/pdk.cdk_graph.ICdkGraphPlugin",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "inheritdoc": "true"
            },
            "stability": "stable",
            "summary": "Plugin version."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph-plugin-threat-composer/plugin.ts",
            "line": 48
          },
          "name": "version",
          "overrides": "@aws/pdk.cdk_graph.ICdkGraphPlugin",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "inheritdoc": "true"
            },
            "stability": "stable",
            "summary": "List of plugins this plugin depends on, including optional semver version (eg: [\"foo\", \"bar@1.2\"])."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph-plugin-threat-composer/plugin.ts",
            "line": 61
          },
          "name": "dependencies",
          "optional": true,
          "overrides": "@aws/pdk.cdk_graph.ICdkGraphPlugin",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Retrieve the threat model artifact."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph-plugin-threat-composer/plugin.ts",
            "line": 55
          },
          "name": "threatModelArtifact",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.cdk_graph.CdkGraphArtifact"
          }
        },
        {
          "docs": {
            "custom": {
              "inheritdoc": "true"
            },
            "remarks": "Enables plugins to receive base configs.",
            "stability": "stable",
            "summary": "Binds the plugin to the CdkGraph instance."
          },
          "locationInModule": {
            "filename": "cdk-graph-plugin-threat-composer/plugin.ts",
            "line": 77
          },
          "name": "bind",
          "overrides": "@aws/pdk.cdk_graph.ICdkGraphPlugin",
          "type": {
            "fqn": "@aws/pdk.cdk_graph.IGraphPluginBindCallback"
          }
        },
        {
          "docs": {
            "custom": {
              "inheritdoc": "true"
            },
            "remarks": "This is not automatically called when synthesizing CDK.\nDeveloper must explicitly add `await graphInstance.report()` to the CDK bin or invoke this outside\nof the CDK synth. In either case, the plugin receives the in-memory graph interface when invoked, as the\nCdkGraph will deserialize the graph prior to invoking the plugin report.",
            "stability": "stable",
            "summary": "Generate asynchronous reports based on the graph."
          },
          "locationInModule": {
            "filename": "cdk-graph-plugin-threat-composer/plugin.ts",
            "line": 88
          },
          "name": "report",
          "optional": true,
          "overrides": "@aws/pdk.cdk_graph.ICdkGraphPlugin",
          "type": {
            "fqn": "@aws/pdk.cdk_graph.IGraphReportCallback"
          }
        }
      ],
      "symbolId": "cdk-graph-plugin-threat-composer/plugin:CdkGraphThreatComposerPlugin"
    },
    "@aws/pdk.cdk_graph_plugin_threat_composer.CdkGraphThreatComposerPluginOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for the Threat Composer CDK Graph plugin."
      },
      "fqn": "@aws/pdk.cdk_graph_plugin_threat_composer.CdkGraphThreatComposerPluginOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "cdk-graph-plugin-threat-composer/plugin.ts",
        "line": 19
      },
      "name": "CdkGraphThreatComposerPluginOptions",
      "namespace": "cdk_graph_plugin_threat_composer",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Details about the application to include in the threat model."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph-plugin-threat-composer/plugin.ts",
            "line": 23
          },
          "name": "applicationDetails",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.cdk_graph_plugin_threat_composer.ThreatComposerApplicationDetails"
          }
        }
      ],
      "symbolId": "cdk-graph-plugin-threat-composer/plugin:CdkGraphThreatComposerPluginOptions"
    },
    "@aws/pdk.cdk_graph_plugin_threat_composer.ThreatComposerApplicationDetails": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Details about the application to include in the threat model."
      },
      "fqn": "@aws/pdk.cdk_graph_plugin_threat_composer.ThreatComposerApplicationDetails",
      "kind": "interface",
      "locationInModule": {
        "filename": "cdk-graph-plugin-threat-composer/model-generator/types.ts",
        "line": 7
      },
      "name": "ThreatComposerApplicationDetails",
      "namespace": "cdk_graph_plugin_threat_composer",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "A description of the application."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph-plugin-threat-composer/model-generator/types.ts",
            "line": 16
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"My Application\"",
            "stability": "stable",
            "summary": "The name of the application."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cdk-graph-plugin-threat-composer/model-generator/types.ts",
            "line": 12
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "cdk-graph-plugin-threat-composer/model-generator/types:ThreatComposerApplicationDetails"
    },
    "@aws/pdk.cloudscape_react_ts_website.CloudscapeReactTsWebsiteProject": {
      "assembly": "@aws/pdk",
      "base": "projen.web.ReactTypeScriptProject",
      "docs": {
        "custom": {
          "pjid": "cloudscape-react-ts-website"
        },
        "stability": "stable",
        "summary": "Synthesizes a Cloudscape React Typescript Website Project."
      },
      "fqn": "@aws/pdk.cloudscape_react_ts_website.CloudscapeReactTsWebsiteProject",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "cloudscape-react-ts-website/cloudscape-react-ts-website-project.ts",
          "line": 69
        },
        "parameters": [
          {
            "name": "options",
            "type": {
              "fqn": "@aws/pdk.cloudscape_react_ts_website.CloudscapeReactTsWebsiteProjectOptions"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "cloudscape-react-ts-website/cloudscape-react-ts-website-project.ts",
        "line": 62
      },
      "name": "CloudscapeReactTsWebsiteProject",
      "namespace": "cloudscape_react_ts_website",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/cloudscape-react-ts-website-project.ts",
            "line": 64
          },
          "name": "allowSignup",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/cloudscape-react-ts-website-project.ts",
            "line": 63
          },
          "name": "applicationName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/cloudscape-react-ts-website-project.ts",
            "line": 65
          },
          "name": "publicDir",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/cloudscape-react-ts-website-project.ts",
            "line": 66
          },
          "name": "typeSafeApis",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.type_safe_api.TypeSafeApiProject"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/cloudscape-react-ts-website-project.ts",
            "line": 67
          },
          "name": "typeSafeWebSocketApis",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.type_safe_api.TypeSafeWebSocketApiProject"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "cloudscape-react-ts-website/cloudscape-react-ts-website-project:CloudscapeReactTsWebsiteProject"
    },
    "@aws/pdk.cloudscape_react_ts_website.CloudscapeReactTsWebsiteProjectOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Configuration options for the CloudscapeReactTsWebsiteProject."
      },
      "fqn": "@aws/pdk.cloudscape_react_ts_website.CloudscapeReactTsWebsiteProjectOptions",
      "interfaces": [
        "@aws/pdk.cloudscape_react_ts_website.ReactTypeScriptProjectOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "cloudscape-react-ts-website/cloudscape-react-ts-website-project.ts",
        "line": 18
      },
      "name": "CloudscapeReactTsWebsiteProjectOptions",
      "namespace": "cloudscape_react_ts_website",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Whether to enable self sign-up."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/cloudscape-react-ts-website-project.ts",
            "line": 38
          },
          "name": "allowSignup",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"Sample App\"",
            "stability": "stable",
            "summary": "Name of the application name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/cloudscape-react-ts-website-project.ts",
            "line": 25
          },
          "name": "applicationName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"public\"",
            "stability": "stable",
            "summary": "Public directory."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/cloudscape-react-ts-website-project.ts",
            "line": 31
          },
          "name": "publicDir",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "deprecated": "use typeSafeApis",
            "stability": "deprecated",
            "summary": "TypeSafeApi instance to use when setting up the initial project sample code."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/cloudscape-react-ts-website-project.ts",
            "line": 44
          },
          "name": "typeSafeApi",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.type_safe_api.TypeSafeApiProject"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "TypeSafeApi instances to use when setting up the initial project sample code."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/cloudscape-react-ts-website-project.ts",
            "line": 49
          },
          "name": "typeSafeApis",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.type_safe_api.TypeSafeApiProject"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "TypeSafeWebSocketApi instances to use when setting up the initial project sample code."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/cloudscape-react-ts-website-project.ts",
            "line": 54
          },
          "name": "typeSafeWebSocketApis",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.type_safe_api.TypeSafeWebSocketApiProject"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "cloudscape-react-ts-website/cloudscape-react-ts-website-project:CloudscapeReactTsWebsiteProjectOptions"
    },
    "@aws/pdk.cloudscape_react_ts_website.ReactTypeScriptProjectOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "ReactTypeScriptProjectOptions."
      },
      "fqn": "@aws/pdk.cloudscape_react_ts_website.ReactTypeScriptProjectOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
        "line": 7
      },
      "name": "ReactTypeScriptProjectOptions",
      "namespace": "cloudscape_react_ts_website",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 1005
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "This is normally only allowed for libraries. For apps, there's no meaning\nfor specifying these.",
            "stability": "experimental",
            "summary": "Allow the project to include `peerDependencies` and `bundledDependencies`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 819
          },
          "name": "allowLibraryDependencies",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"dist\"",
            "stability": "experimental",
            "summary": "A directory which will contain build artifacts."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 379
          },
          "name": "artifactsDirectory",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Author's e-mail."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 811
          },
          "name": "authorEmail",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Author's name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 806
          },
          "name": "authorName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Is the author an organization."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 801
          },
          "name": "authorOrganization",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Author's URL / Website."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 796
          },
          "name": "authorUrl",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- auto approve is disabled",
            "stability": "experimental",
            "summary": "Enable and configure the 'auto approve' workflow."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 935
          },
          "name": "autoApproveOptions",
          "optional": true,
          "type": {
            "fqn": "projen.github.AutoApproveOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- true",
            "remarks": "Throw if set to true but `autoApproveOptions` are not defined.",
            "stability": "experimental",
            "summary": "Automatically approve deps upgrade PRs, allowing them to be merged by mergify (if configued)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 373
          },
          "name": "autoApproveUpgrades",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Automatically add all executables under the `bin` directory to your `package.json` file under the `bin` section."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 791
          },
          "name": "autoDetectBin",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "Has no effect if `github.mergify`\nis set to false.",
            "stability": "experimental",
            "summary": "Enable automatic merging on GitHub."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 929
          },
          "name": "autoMerge",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- see defaults in `AutoMergeOptions`",
            "remarks": "Has no effect if\n`github.mergify` or `autoMerge` is set to false.",
            "stability": "experimental",
            "summary": "Configure options for automatic merging on GitHub."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 921
          },
          "name": "autoMergeOptions",
          "optional": true,
          "type": {
            "fqn": "projen.github.AutoMergeOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "You can use this option to add/customize how binaries are represented in\nyour `package.json`, but unless `autoDetectBin` is `false`, every\nexecutable file under `bin` will automatically be added to this section.",
            "stability": "experimental",
            "summary": "Binary programs vended with your module."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 785
          },
          "name": "bin",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The email address to which issues should be reported."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 777
          },
          "name": "bugsEmail",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The url to your project's issue tracker."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 772
          },
          "name": "bugsUrl",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- true if not a subproject",
            "stability": "experimental",
            "summary": "Define a GitHub workflow for building PRs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 366
          },
          "name": "buildWorkflow",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Options for PR build workflow."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 360
          },
          "name": "buildWorkflowOptions",
          "optional": true,
          "type": {
            "fqn": "projen.javascript.BuildWorkflowOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"{ pullRequest: {}, workflowDispatch: {} }\"",
            "deprecated": "- Use `buildWorkflowOptions.workflowTriggers`",
            "stability": "deprecated",
            "summary": "Build workflow triggers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 355
          },
          "name": "buildWorkflowTriggers",
          "optional": true,
          "type": {
            "fqn": "projen.github.workflows.Triggers"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "These modules will be\nadded both to the `dependencies` section and `bundledDependencies` section of\nyour `package.json`.\n\nThe recommendation is to only specify the module name here (e.g.\n`express`). This will behave similar to `yarn add` or `npm install` in the\nsense that it will add the module as a dependency to your `package.json`\nfile with the latest version (`^`). You can specify semver requirements in\nthe same syntax passed to `npm i` or `yarn add` (e.g. `express@^2`) and\nthis will be what you `package.json` will eventually include.",
            "stability": "experimental",
            "summary": "List of dependencies to bundle into this module."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 767
          },
          "name": "bundledDeps",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Options for `Bundler`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 348
          },
          "name": "bundlerOptions",
          "optional": true,
          "type": {
            "fqn": "projen.javascript.BundlerOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no license checks are run during the build and all licenses will be accepted",
            "remarks": "This setting will cause the build to fail, if any prohibited or not allowed licenses ares encountered.",
            "stability": "experimental",
            "summary": "Configure which licenses should be deemed acceptable for use by dependencies."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 343
          },
          "name": "checkLicenses",
          "optional": true,
          "type": {
            "fqn": "projen.javascript.LicenseCheckerOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- true, but false for subprojects",
            "stability": "experimental",
            "summary": "Add a `clobber` task which resets the repo to origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 913
          },
          "name": "clobber",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- undefined",
            "remarks": "This is required if publishing packages to, or installing scoped packages from AWS CodeArtifact",
            "stability": "experimental",
            "summary": "Options for npm packages using AWS CodeArtifact."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 752
          },
          "name": "codeArtifactOptions",
          "optional": true,
          "type": {
            "fqn": "projen.javascript.CodeArtifactOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Define a GitHub workflow step for sending code coverage metrics to https://codecov.io/ Uses codecov/codecov-action@v4 A secret is required for private repos. Configured with `@codeCovTokenSecret`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 336
          },
          "name": "codeCov",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- if this option is not specified, only public repositories are supported",
            "stability": "experimental",
            "summary": "Define the secret name for a specified https://codecov.io/ token A secret is required to send coverage for private repositories."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 330
          },
          "name": "codeCovTokenSecret",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Whether to commit the managed files by default."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 1004
          },
          "name": "commitGenerated",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- defaults to the value of authorName or \"\" if `authorName` is undefined.",
            "stability": "experimental",
            "summary": "License copyright owner."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 324
          },
          "name": "copyrightOwner",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- current year",
            "stability": "experimental",
            "summary": "The copyright years to put in the LICENSE file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 318
          },
          "name": "copyrightPeriod",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"main\"",
            "stability": "experimental",
            "summary": "The name of the main release branch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 385
          },
          "name": "defaultReleaseBranch",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "Cannot be used in conjunction with `depsUpgrade`.",
            "stability": "experimental",
            "summary": "Use dependabot to handle dependency upgrades."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 312
          },
          "name": "dependabot",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default options",
            "stability": "experimental",
            "summary": "Options for dependabot."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 305
          },
          "name": "dependabotOptions",
          "optional": true,
          "type": {
            "fqn": "projen.github.DependabotOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "featured": "true"
            },
            "default": "[]",
            "remarks": "The recommendation is to only specify the module name here (e.g.\n`express`). This will behave similar to `yarn add` or `npm install` in the\nsense that it will add the module as a dependency to your `package.json`\nfile with the latest version (`^`). You can specify semver requirements in\nthe same syntax passed to `npm i` or `yarn add` (e.g. `express@^2`) and\nthis will be what you `package.json` will eventually include.",
            "stability": "experimental",
            "summary": "Runtime dependencies of this module."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 745
          },
          "name": "deps",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "Cannot be used in conjunction with `dependabot`.",
            "stability": "experimental",
            "summary": "Use tasks and github workflows to handle dependency upgrades."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 299
          },
          "name": "depsUpgrade",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default options",
            "stability": "experimental",
            "summary": "Options for `UpgradeDependencies`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 292
          },
          "name": "depsUpgradeOptions",
          "optional": true,
          "type": {
            "fqn": "projen.javascript.UpgradeDependenciesOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "featured": "true"
            },
            "remarks": "It can be used when searching for packages in a package manager as well.\nSee https://classic.yarnpkg.com/en/docs/package-json/#toc-description",
            "stability": "experimental",
            "summary": "The description is just a string that helps people understand the purpose of the package."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 732
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Add a VSCode development environment (used for GitHub Codespaces)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 907
          },
          "name": "devContainer",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "featured": "true"
            },
            "default": "[]",
            "remarks": "These dependencies will only be\navailable in your build environment but will not be fetched when this\nmodule is consumed.\n\nThe recommendation is to only specify the module name here (e.g.\n`express`). This will behave similar to `yarn add` or `npm install` in the\nsense that it will add the module as a dependency to your `package.json`\nfile with the latest version (`^`). You can specify semver requirements in\nthe same syntax passed to `npm i` or `yarn add` (e.g. `express@^2`) and\nthis will be what you `package.json` will eventually include.",
            "stability": "experimental",
            "summary": "Build dependencies for this module."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 724
          },
          "name": "devDeps",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Do not generate a `tsconfig.json` file (used by jsii projects since tsconfig.json is generated by the jsii compiler)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 143
          },
          "name": "disableTsconfig",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Do not generate a `tsconfig.dev.json` file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 137
          },
          "name": "disableTsconfigDev",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Docgen by Typedoc."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 131
          },
          "name": "docgen",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"docs\"",
            "stability": "experimental",
            "summary": "Docs directory."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 125
          },
          "name": "docsDirectory",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"lib/index.js\"",
            "stability": "experimental",
            "summary": "Module entrypoint (`main` in `package.json`). Set to an empty string to not include `main` in your package.json."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 707
          },
          "name": "entrypoint",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- .d.ts file derived from the project's entrypoint (usually lib/index.d.ts)",
            "stability": "experimental",
            "summary": "The .d.ts file that includes the type declarations for this module."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 119
          },
          "name": "entrypointTypes",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Setup eslint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 113
          },
          "name": "eslint",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- opinionated default options",
            "stability": "experimental",
            "summary": "Eslint options."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 107
          },
          "name": "eslintOptions",
          "optional": true,
          "type": {
            "fqn": "projen.javascript.EslintOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "Enabled by default for root projects. Disabled for non-root projects.",
            "stability": "experimental",
            "summary": "Enable GitHub integration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 901
          },
          "name": "github",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- see GitHubOptions",
            "stability": "experimental",
            "summary": "Options for GitHub integration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 894
          },
          "name": "githubOptions",
          "optional": true,
          "type": {
            "fqn": "projen.github.GitHubOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Additional entries to .gitignore."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 286
          },
          "name": "gitignore",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Configuration options for .gitignore file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 998
          },
          "name": "gitIgnoreOptions",
          "optional": true,
          "type": {
            "fqn": "projen.IgnoreFileOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Configuration options for git."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 993
          },
          "name": "gitOptions",
          "optional": true,
          "type": {
            "fqn": "projen.GitOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Add a Gitpod development environment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 888
          },
          "name": "gitpod",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Package's Homepage / Website."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 700
          },
          "name": "homepage",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Setup jest unit tests."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 281
          },
          "name": "jest",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default options",
            "stability": "experimental",
            "summary": "Jest options."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 275
          },
          "name": "jestOptions",
          "optional": true,
          "type": {
            "fqn": "projen.javascript.JestOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"latest\"",
            "stability": "experimental",
            "summary": "Version requirement of `publib` which is used to publish modules to npm."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 544
          },
          "name": "jsiiReleaseVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Keywords to include in `package.json`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 695
          },
          "name": "keywords",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"lib\"",
            "stability": "experimental",
            "summary": "Typescript  artifacts output directory."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 101
          },
          "name": "libdir",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"Apache-2.0\"",
            "remarks": "See https://github.com/projen/projen/tree/main/license-text for a list of supported licenses.\nUse the `licensed` option if you want to no license to be specified.",
            "stability": "experimental",
            "summary": "License's SPDX identifier."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 690
          },
          "name": "license",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Indicates if a license should be added."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 682
          },
          "name": "licensed",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "{}",
            "stability": "experimental",
            "summary": "Configure logging options such as verbosity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 988
          },
          "name": "logging",
          "optional": true,
          "type": {
            "fqn": "projen.LoggerOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Major version is not enforced.",
            "remarks": "If this is specified, we bump the latest version of this major version line.\nIf not specified, we bump the global latest version.",
            "stability": "experimental",
            "summary": "Major version to release from the default branch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 538
          },
          "name": "majorVersion",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no max",
            "stability": "experimental",
            "summary": "Minimum node.js version to require via `engines` (inclusive)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 676
          },
          "name": "maxNodeVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "deprecated": "use `githubOptions.mergify` instead",
            "stability": "deprecated",
            "summary": "Whether mergify should be enabled on this repository or not."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 882
          },
          "name": "mergify",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default options",
            "deprecated": "use `githubOptions.mergifyOptions` instead",
            "stability": "deprecated",
            "summary": "Options for mergify."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 875
          },
          "name": "mergifyOptions",
          "optional": true,
          "type": {
            "fqn": "projen.github.MergifyOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No minimum version is being enforced",
            "remarks": "This can be useful to set to 1, as breaking changes before the 1.x major\nrelease are not incrementing the major version number.\n\nCan not be set together with `majorVersion`.",
            "stability": "experimental",
            "summary": "Minimal Major version to release."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 530
          },
          "name": "minMajorVersion",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no \"engines\" specified",
            "stability": "experimental",
            "summary": "Minimum Node.js version to require via package.json `engines` (inclusive)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 670
          },
          "name": "minNodeVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "deprecated": "- Use `buildWorkflowOptions.mutableBuild`",
            "remarks": "This means\nthat any files synthesized by projen or e.g. test snapshots will always be up-to-date\nbefore a PR is merged.\n\nImplies that PR builds do not have anti-tamper checks.",
            "stability": "deprecated",
            "summary": "Automatically update files modified during builds to pull-request branches."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 269
          },
          "name": "mutableBuild",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- for scoped packages (e.g. `foo@bar`), the default is\n`NpmAccess.RESTRICTED`, for non-scoped packages, the default is\n`NpmAccess.PUBLIC`.",
            "stability": "experimental",
            "summary": "Access level of the npm package."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 664
          },
          "name": "npmAccess",
          "optional": true,
          "type": {
            "fqn": "projen.javascript.NpmAccess"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"latest\"",
            "remarks": "To set the npm dist-tag for release branches, set the `npmDistTag` property\nfor each branch.",
            "stability": "experimental",
            "summary": "The npmDistTag to use when publishing from the default branch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 520
          },
          "name": "npmDistTag",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "deprecated": "- use `project.addPackageIgnore`",
            "stability": "deprecated",
            "summary": "Additional entries to .npmignore."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 257
          },
          "name": "npmignore",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Defines an .npmignore file. Normally this is only needed for libraries that are packaged as tarballs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 251
          },
          "name": "npmignoreEnabled",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Configuration options for .npmignore file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 245
          },
          "name": "npmIgnoreOptions",
          "optional": true,
          "type": {
            "fqn": "projen.IgnoreFileOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- true for public packages, false otherwise",
            "remarks": "A supported package manager is required to publish a package with npm provenance statements and\nyou will need to use a supported CI/CD provider.\n\nNote that the projen `Release` and `Publisher` components are using `publib` to publish packages,\nwhich is using npm internally and supports provenance statements independently of the package manager used.",
            "stability": "experimental",
            "summary": "Should provenance statements be generated when the package is published."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 656
          },
          "name": "npmProvenance",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "deprecated": "use `npmRegistryUrl` instead",
            "remarks": "Cannot be set together with `npmRegistryUrl`.",
            "stability": "deprecated",
            "summary": "The host name of the npm registry to publish to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 645
          },
          "name": "npmRegistry",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"https://registry.npmjs.org\"",
            "remarks": "Must be a URL (e.g. start with \"https://\" or \"http://\")",
            "stability": "experimental",
            "summary": "The base URL of the npm package registry."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 638
          },
          "name": "npmRegistryUrl",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"NPM_TOKEN\"",
            "stability": "experimental",
            "summary": "GitHub secret which contains the NPM token to use when publishing packages."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 631
          },
          "name": "npmTokenSecret",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\".\"",
            "remarks": "If this project has a parent, this directory is relative to the parent\ndirectory and it cannot be the same as the parent or any of it's other\nsubprojects.",
            "stability": "experimental",
            "summary": "The root directory of the project. Relative to this directory, all files are synthesized."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 982
          },
          "name": "outdir",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Defines a `package` task that will produce an npm tarball under the artifacts directory (e.g. `dist`)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 240
          },
          "name": "package",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "NodePackageManager.YARN_CLASSIC",
            "stability": "experimental",
            "summary": "The Node Package Manager used to execute scripts."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 625
          },
          "name": "packageManager",
          "optional": true,
          "type": {
            "fqn": "projen.javascript.NodePackageManager"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "featured": "true"
            },
            "default": "- defaults to project name",
            "stability": "experimental",
            "summary": "The \"name\" in package.json."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 619
          },
          "name": "packageName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The parent project, if this project is part of a bigger project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 971
          },
          "name": "parent",
          "optional": true,
          "type": {
            "fqn": "projen.Project"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Options for `peerDeps`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 612
          },
          "name": "peerDependencyOptions",
          "optional": true,
          "type": {
            "fqn": "projen.javascript.PeerDependencyOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "[]",
            "remarks": "Dependencies listed here are required to\nbe installed (and satisfied) by the _consumer_ of this library. Using peer\ndependencies allows you to ensure that only a single module of a certain\nlibrary exists in the `node_modules` tree of your consumers.\n\nNote that prior to npm@7, peer dependencies are _not_ automatically\ninstalled, which means that adding peer dependencies to a library will be a\nbreaking change for your customers.\n\nUnless `peerDependencyOptions.pinnedDevDependency` is disabled (it is\nenabled by default), projen will automatically add a dev dependency with a\npinned version for each peer dependency. This will ensure that you build &\ntest your module against the lowest peer version required.",
            "stability": "experimental",
            "summary": "Peer dependencies for this module."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 607
          },
          "name": "peerDeps",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"7\"",
            "stability": "experimental",
            "summary": "The version of PNPM to use if using PNPM as a package manager."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 588
          },
          "name": "pnpmVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "[]",
            "stability": "experimental",
            "summary": "Steps to execute after build as part of the release workflow."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 512
          },
          "name": "postBuildSteps",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "projen.github.workflows.JobStep"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- normal semantic versions",
            "stability": "experimental",
            "summary": "Bump versions from the default branch as pre-releases (e.g. \"beta\", \"alpha\", \"pre\")."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 506
          },
          "name": "prerelease",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Setup prettier."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 234
          },
          "name": "prettier",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default options",
            "stability": "experimental",
            "summary": "Prettier options."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 228
          },
          "name": "prettierOptions",
          "optional": true,
          "type": {
            "fqn": "projen.javascript.PrettierOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "ProjectType.UNKNOWN",
            "deprecated": "no longer supported at the base project level",
            "stability": "deprecated",
            "summary": "Which type of project this is (library/app)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 868
          },
          "name": "projectType",
          "optional": true,
          "type": {
            "fqn": "projen.ProjectType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"npx projen\"",
            "remarks": "Can be used to customize in special environments.",
            "stability": "experimental",
            "summary": "The shell command to use in order to run the projen CLI."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 966
          },
          "name": "projenCommand",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- use a personal access token named PROJEN_GITHUB_TOKEN",
            "stability": "experimental",
            "summary": "Choose a method of providing GitHub API access for projen workflows."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 861
          },
          "name": "projenCredentials",
          "optional": true,
          "type": {
            "fqn": "projen.github.GithubCredentials"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- true if not a subproject",
            "stability": "experimental",
            "summary": "Indicates of \"projen\" should be installed as a devDependency."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 222
          },
          "name": "projenDevDependency",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- true if projenrcJson is false",
            "stability": "experimental",
            "summary": "Generate (once) .projenrc.js (in JavaScript). Set to `false` in order to disable .projenrc.js generation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 216
          },
          "name": "projenrcJs",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Generate (once) .projenrc.json (in JSON). Set to `false` in order to disable .projenrc.json generation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 959
          },
          "name": "projenrcJson",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default options",
            "stability": "experimental",
            "summary": "Options for .projenrc.json."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 953
          },
          "name": "projenrcJsonOptions",
          "optional": true,
          "type": {
            "fqn": "projen.ProjenrcJsonOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default options",
            "stability": "experimental",
            "summary": "Options for .projenrc.js."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 210
          },
          "name": "projenrcJsOptions",
          "optional": true,
          "type": {
            "fqn": "projen.javascript.ProjenrcOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "pjnew": "true"
            },
            "default": "false",
            "stability": "experimental",
            "summary": "Use TypeScript for your projenrc file (`.projenrc.ts`)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 95
          },
          "name": "projenrcTs",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Options for .projenrc.ts."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 88
          },
          "name": "projenrcTsOptions",
          "optional": true,
          "type": {
            "fqn": "projen.typescript.ProjenrcOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"PROJEN_GITHUB_TOKEN\"",
            "deprecated": "use `projenCredentials`",
            "remarks": "This token needs to have the `repo`, `workflows`\nand `packages` scope.",
            "stability": "deprecated",
            "summary": "The name of a secret which includes a GitHub Personal Access Token to be used by projen workflows."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 855
          },
          "name": "projenTokenSecret",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Defaults to the latest version.",
            "stability": "experimental",
            "summary": "Version of projen to install."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 204
          },
          "name": "projenVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Instead of actually publishing to package managers, just print the publishing command."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 500
          },
          "name": "publishDryRun",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "Normally, publishing only happens within automated workflows. Enable this\nin order to create a publishing task for each publishing activity.",
            "stability": "experimental",
            "summary": "Define publishing tasks that can be executed manually as well as workflows."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 494
          },
          "name": "publishTasks",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Include a GitHub pull request template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 198
          },
          "name": "pullRequestTemplate",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default content",
            "stability": "experimental",
            "summary": "The contents of the pull request template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 192
          },
          "name": "pullRequestTemplateContents",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- { filename: 'README.md', contents: '# replace this' }",
            "stability": "experimental",
            "summary": "The README setup."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 846
          },
          "name": "readme",
          "optional": true,
          "type": {
            "fqn": "projen.SampleReadmeProps"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "ReleasableCommits.everyCommit()",
            "stability": "experimental",
            "summary": "Find commits that should be considered releasable Used to decide if a release is required."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 486
          },
          "name": "releasableCommits",
          "optional": true,
          "type": {
            "fqn": "projen.ReleasableCommits"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- true (false for subprojects)",
            "stability": "experimental",
            "summary": "Add release management to this project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 186
          },
          "name": "release",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no additional branches are used for release. you can use\n`addBranch()` to add additional branches.",
            "remarks": "A workflow will be created for each\nrelease branch which will publish releases from commits in this branch.\nEach release branch _must_ be assigned a major version number which is used\nto enforce that versions published from that branch always use that major\nversion. If multiple branches are used, the `majorVersion` field must also\nbe provided for the default branch.",
            "stability": "experimental",
            "summary": "Defines additional release branches."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 480
          },
          "name": "releaseBranches",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "projen.release.BranchOptions"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "deprecated": "Use `releaseTrigger: ReleaseTrigger.continuous()` instead",
            "stability": "deprecated",
            "summary": "Automatically release new versions every commit to one of branches in `releaseBranches`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 467
          },
          "name": "releaseEveryCommit",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Create a github issue on every failed publishing task."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 460
          },
          "name": "releaseFailureIssue",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"failed-release\"",
            "remarks": "Only applies if `releaseFailureIssue` is true.",
            "stability": "experimental",
            "summary": "The label to apply to issues indicating publish failures."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 454
          },
          "name": "releaseFailureIssueLabel",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no scheduled releases",
            "deprecated": "Use `releaseTrigger: ReleaseTrigger.scheduled()` instead",
            "stability": "deprecated",
            "summary": "CRON schedule to trigger new releases."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 447
          },
          "name": "releaseSchedule",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"v\"",
            "remarks": "Useful if you are releasing on multiple branches with overlapping version numbers.\nNote: this prefix is used to detect the latest tagged version\nwhen bumping, so if you change this on a project with an existing version\nhistory, you may need to manually tag your latest release\nwith the new prefix.",
            "stability": "experimental",
            "summary": "Automatically add the given prefix to release tags."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 440
          },
          "name": "releaseTagPrefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Automatically release to npm when new versions are introduced."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 180
          },
          "name": "releaseToNpm",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Continuous releases (`ReleaseTrigger.continuous()`)",
            "stability": "experimental",
            "summary": "The release trigger to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 430
          },
          "name": "releaseTrigger",
          "optional": true,
          "type": {
            "fqn": "projen.release.ReleaseTrigger"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- true if not a subproject",
            "deprecated": "see `release`.",
            "stability": "deprecated",
            "summary": "DEPRECATED: renamed to `release`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 174
          },
          "name": "releaseWorkflow",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"release\"",
            "stability": "experimental",
            "summary": "The name of the default release workflow."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 424
          },
          "name": "releaseWorkflowName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "A set of workflow steps to execute in order to setup the workflow container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 418
          },
          "name": "releaseWorkflowSetupSteps",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "projen.github.workflows.JobStep"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Use renovatebot to handle dependency upgrades."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 947
          },
          "name": "renovatebot",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default options",
            "stability": "experimental",
            "summary": "Options for renovatebot."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 941
          },
          "name": "renovatebotOptions",
          "optional": true,
          "type": {
            "fqn": "projen.RenovatebotOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "See https://classic.yarnpkg.com/en/docs/package-json/#toc-repository",
            "stability": "experimental",
            "summary": "The repository is the location where the actual code for your package lives."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 582
          },
          "name": "repository",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "If the package.json for your package is not in the root directory (for example if it is part of a monorepo), you can specify the directory in which it lives."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 576
          },
          "name": "repositoryDirectory",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No rewired config.",
            "remarks": "This property will create a `config-overrides.js` file in your root directory,\nwhich will contain the desired rewiring code.\n\nTo **override** the configuration, you can provide simple key value pairs.\nKeys take the form of js code directives that traverse to the desired property.\nValues should be JSON serializable objects.\n\nFor example, the following config:\n\n```json\nrewire: { \"module.unknownContextCritical\": false }\n```\n\nWill translate to the following `config-overrides.js` file:\n\n```js\nmodule.exports = function override(config, env) {\n  config.module.unknownContextCritical = false;\n}\n```",
            "stability": "experimental",
            "summary": "Rewire webpack configuration. Use this property to override webpack configuration properties provided by create-react-app, without needing to eject."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 36
          },
          "name": "rewire",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- fetch all scoped packages from the public npm registry",
            "stability": "experimental",
            "summary": "Options for privately hosted scoped packages."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 571
          },
          "name": "scopedPackagesOptions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "projen.javascript.ScopedPackagesOptions"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "{}",
            "deprecated": "use `project.addTask()` or `package.setScript()`",
            "remarks": "If a script has the same name as a standard script,\nthe standard script will be overwritten.\nAlso adds the script as a task.",
            "stability": "deprecated",
            "summary": "npm scripts to include."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 565
          },
          "name": "scripts",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"src\"",
            "stability": "experimental",
            "summary": "Typescript sources directory."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 83
          },
          "name": "srcdir",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Package's Stability."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 555
          },
          "name": "stability",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "See `staleOptions` for options.",
            "stability": "experimental",
            "summary": "Auto-close of stale issues and pull request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 840
          },
          "name": "stale",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- see defaults in `StaleOptions`",
            "remarks": "To disable set `stale` to `false`.",
            "stability": "experimental",
            "summary": "Auto-close stale issues and pull requests."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 833
          },
          "name": "staleOptions",
          "optional": true,
          "type": {
            "fqn": "projen.github.StaleOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"test\"",
            "remarks": "Tests files should be named `xxx.test.ts`.\nIf this directory is under `srcdir` (e.g. `src/test`, `src/__tests__`),\nthen tests are going to be compiled into `lib/` and executed as javascript.\nIf the test directory is outside of `src`, then we configure jest to\ncompile the code in-memory.",
            "stability": "experimental",
            "summary": "Jest tests directory."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 77
          },
          "name": "testdir",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default options",
            "stability": "experimental",
            "summary": "Custom TSConfig."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 67
          },
          "name": "tsconfig",
          "optional": true,
          "type": {
            "fqn": "projen.javascript.TypescriptConfigOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- use the production tsconfig options",
            "stability": "experimental",
            "summary": "Custom tsconfig options for the development tsconfig.json file (used for testing)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 61
          },
          "name": "tsconfigDev",
          "optional": true,
          "type": {
            "fqn": "projen.javascript.TypescriptConfigOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"tsconfig.dev.json\"",
            "stability": "experimental",
            "summary": "The name of the development tsconfig.json file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 55
          },
          "name": "tsconfigDevFile",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Options for ts-jest."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 49
          },
          "name": "tsJestOptions",
          "optional": true,
          "type": {
            "fqn": "projen.typescript.TsJestOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"latest\"",
            "remarks": "NOTE: Typescript is not semantically versioned and should remain on the\nsame minor, so we recommend using a `~` dependency (e.g. `~1.2.3`).",
            "stability": "experimental",
            "summary": "TypeScript version to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 44
          },
          "name": "typescriptVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- standard configuration applicable for GitHub repositories",
            "remarks": "Given values either append to default configuration or overwrite values in it.",
            "stability": "experimental",
            "summary": "Custom configuration used when creating changelog with standard-version package."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 413
          },
          "name": "versionrcOptions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "Enabled by default for root projects. Disabled for non-root projects.",
            "stability": "experimental",
            "summary": "Enable VSCode integration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 826
          },
          "name": "vscode",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"yarn install --frozen-lockfile && yarn projen\"",
            "stability": "experimental",
            "summary": "Workflow steps to use in order to bootstrap this repo."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 167
          },
          "name": "workflowBootstrapSteps",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "projen.github.workflows.JobStep"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default image",
            "stability": "experimental",
            "summary": "Container image to use for GitHub workflows."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 406
          },
          "name": "workflowContainerImage",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- GitHub Actions",
            "stability": "experimental",
            "summary": "The git identity to use in workflows."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 161
          },
          "name": "workflowGitIdentity",
          "optional": true,
          "type": {
            "fqn": "projen.github.GitIdentity"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- same as `minNodeVersion`",
            "stability": "experimental",
            "summary": "The node version to use in GitHub workflows."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 155
          },
          "name": "workflowNodeVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Enable Node.js package cache in GitHub workflows."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 149
          },
          "name": "workflowPackageCache",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "description": "Defines a target Runner by labels",
              "throws": "{Error} if both `runsOn` and `runsOnGroup` are specified"
            },
            "default": "[\"ubuntu-latest\"]",
            "stability": "experimental",
            "summary": "Github Runner selection labels."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 400
          },
          "name": "workflowRunsOn",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "description": "Defines a target Runner Group by name and/or labels",
              "throws": "{Error} if both `runsOn` and `runsOnGroup` are specified"
            },
            "stability": "experimental",
            "summary": "Github Runner Group selection options."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 392
          },
          "name": "workflowRunsOnGroup",
          "optional": true,
          "type": {
            "fqn": "projen.GroupRunnerOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Yarn Berry v4 with all default options",
            "stability": "experimental",
            "summary": "Options for Yarn Berry."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "cloudscape-react-ts-website/react-ts-project-options.ts",
            "line": 550
          },
          "name": "yarnBerryOptions",
          "optional": true,
          "type": {
            "fqn": "projen.javascript.YarnBerryOptions"
          }
        }
      ],
      "symbolId": "cloudscape-react-ts-website/react-ts-project-options:ReactTypeScriptProjectOptions"
    },
    "@aws/pdk.identity.UserIdentity": {
      "assembly": "@aws/pdk",
      "base": "constructs.Construct",
      "docs": {
        "stability": "stable",
        "summary": "Creates a UserPool and Identity Pool with sane defaults configured intended for usage from a web client."
      },
      "fqn": "@aws/pdk.identity.UserIdentity",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "identity/user-identity.ts",
          "line": 48
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws/pdk.identity.UserIdentityProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "identity/user-identity.ts",
        "line": 43
      },
      "name": "UserIdentity",
      "namespace": "identity",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "identity/user-identity.ts",
            "line": 44
          },
          "name": "identityPool",
          "type": {
            "fqn": "@aws-cdk/aws-cognito-identitypool-alpha.IdentityPool"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "identity/user-identity.ts",
            "line": 45
          },
          "name": "userPool",
          "type": {
            "fqn": "aws-cdk-lib.aws_cognito.UserPool"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "identity/user-identity.ts",
            "line": 46
          },
          "name": "userPoolClient",
          "type": {
            "fqn": "aws-cdk-lib.aws_cognito.UserPoolClient"
          }
        }
      ],
      "symbolId": "identity/user-identity:UserIdentity"
    },
    "@aws/pdk.identity.UserIdentityProps": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties which configures the Identity Pool."
      },
      "fqn": "@aws/pdk.identity.UserIdentityProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "identity/user-identity.ts",
        "line": 19
      },
      "name": "UserIdentityProps",
      "namespace": "identity",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- false",
            "stability": "stable",
            "summary": "Allow self sign up."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "identity/user-identity.ts",
            "line": 25
          },
          "name": "allowSignup",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Configuration for the Identity Pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "identity/user-identity.ts",
            "line": 37
          },
          "name": "identityPoolOptions",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito-identitypool-alpha.IdentityPoolProps"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- a userpool with mfa will be created.",
            "stability": "stable",
            "summary": "User provided Cognito UserPool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "identity/user-identity.ts",
            "line": 32
          },
          "name": "userPool",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_cognito.UserPool"
          }
        }
      ],
      "symbolId": "identity/user-identity:UserIdentityProps"
    },
    "@aws/pdk.identity.UserPoolWithMfa": {
      "assembly": "@aws/pdk",
      "base": "aws-cdk-lib.aws_cognito.UserPool",
      "docs": {
        "stability": "stable",
        "summary": "Configures a UserPool with MFA across SMS/TOTP using sane defaults."
      },
      "fqn": "@aws/pdk.identity.UserPoolWithMfa",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "identity/userpool-with-mfa.ts",
          "line": 88
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws/pdk.identity.UserPoolWithMfaProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "identity/userpool-with-mfa.ts",
        "line": 87
      },
      "name": "UserPoolWithMfa",
      "namespace": "identity",
      "symbolId": "identity/userpool-with-mfa:UserPoolWithMfa"
    },
    "@aws/pdk.identity.UserPoolWithMfaProps": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "UserPoolWithMfa props."
      },
      "fqn": "@aws/pdk.identity.UserPoolWithMfaProps",
      "interfaces": [
        "aws-cdk-lib.aws_cognito.UserPoolProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "identity/userpool-with-mfa.ts",
        "line": 82
      },
      "name": "UserPoolWithMfaProps",
      "namespace": "identity",
      "symbolId": "identity/userpool-with-mfa:UserPoolWithMfaProps"
    },
    "@aws/pdk.infrastructure.AwsCdkJavaAppOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "AwsCdkJavaAppOptions."
      },
      "fqn": "@aws/pdk.infrastructure.AwsCdkJavaAppOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "infrastructure/projects/java/aws-cdk-java-app-options.ts",
        "line": 7
      },
      "name": "AwsCdkJavaAppOptions",
      "namespace": "infrastructure",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "$BASEDIR",
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/java/aws-cdk-java-app-options.ts",
            "line": 460
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "featured": "true"
            },
            "default": "\"my-app\"",
            "remarks": "Although\nthe groupId is important, people within the group will rarely mention the\ngroupId in discussion (they are often all be the same ID, such as the\nMojoHaus project groupId: org.codehaus.mojo). It, along with the groupId,\ncreates a key that separates this project from every other project in the\nworld (at least, it should :) ). Along with the groupId, the artifactId\nfully defines the artifact's living quarters within the repository. In the\ncase of the above project, my-project lives in\n$M2_REPO/org/codehaus/mojo/my-project.",
            "stability": "experimental",
            "summary": "The artifactId is generally the name that the project is known by."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/java/aws-cdk-java-app-options.ts",
            "line": 271
          },
          "name": "artifactId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- auto approve is disabled",
            "stability": "experimental",
            "summary": "Enable and configure the 'auto approve' workflow."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/java/aws-cdk-java-app-options.ts",
            "line": 387
          },
          "name": "autoApproveOptions",
          "optional": true,
          "type": {
            "fqn": "projen.github.AutoApproveOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "Has no effect if `github.mergify`\nis set to false.",
            "stability": "experimental",
            "summary": "Enable automatic merging on GitHub."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/java/aws-cdk-java-app-options.ts",
            "line": 381
          },
          "name": "autoMerge",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- see defaults in `AutoMergeOptions`",
            "remarks": "Has no effect if\n`github.mergify` or `autoMerge` is set to false.",
            "stability": "experimental",
            "summary": "Configure options for automatic merging on GitHub."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/java/aws-cdk-java-app-options.ts",
            "line": 373
          },
          "name": "autoMergeOptions",
          "optional": true,
          "type": {
            "fqn": "projen.github.AutoMergeOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no build command",
            "remarks": "This command will be called when\nrunning `cdk synth` or when `cdk watch` identifies a change in your source\ncode before redeployment.",
            "stability": "experimental",
            "summary": "A command to execute before synthesis."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/java/aws-cdk-java-app-options.ts",
            "line": 114
          },
          "name": "buildCommand",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "aws-cdk": "/assertions (in V1) and included in `aws-cdk-lib` for V2."
            },
            "default": "- will be included by default for AWS CDK >= 1.0.0 < 2.0.0",
            "deprecated": "The",
            "remarks": "Install the",
            "stability": "deprecated",
            "summary": "Warning: NodeJS only."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/java/aws-cdk-java-app-options.ts",
            "line": 63
          },
          "name": "cdkAssert",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- will be included by default for AWS CDK >= 1.111.0 < 2.0.0",
            "remarks": "Only needed for CDK 1.x. If using CDK 2.x then\nassertions is already included in 'aws-cdk-lib'",
            "stability": "experimental",
            "summary": "Install the assertions library?"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/java/aws-cdk-java-app-options.ts",
            "line": 54
          },
          "name": "cdkAssertions",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "deprecated": "For CDK 2.x use \"deps\" instead. (or \"peerDeps\" if you're building a library)",
            "stability": "deprecated",
            "summary": "Which AWS CDKv1 modules this project requires."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/java/aws-cdk-java-app-options.ts",
            "line": 46
          },
          "name": "cdkDependencies",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "deprecated": "Not supported in CDK v2.",
            "remarks": "This is to ensure that downstream consumers actually have your CDK dependencies installed\nwhen using npm < 7 or yarn, where peer dependencies are not automatically installed.\nIf this is disabled, `cdkDependencies` will be added to `devDependencies` to ensure\nthey are present during development.\n\nNote: this setting only applies to construct library projects",
            "stability": "deprecated",
            "summary": "If this is enabled (default), all modules declared in `cdkDependencies` will be also added as normal `dependencies` (as well as `peerDependencies`)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/java/aws-cdk-java-app-options.ts",
            "line": 40
          },
          "name": "cdkDependenciesAsDeps",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"cdk.out\"",
            "stability": "experimental",
            "summary": "cdk.out directory."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/java/aws-cdk-java-app-options.ts",
            "line": 105
          },
          "name": "cdkout",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "deprecated": "For CDK 2.x use 'devDeps' (in node.js projects) or 'testDeps' (in java projects) instead",
            "stability": "deprecated",
            "summary": "AWS CDK modules required for testing."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/java/aws-cdk-java-app-options.ts",
            "line": 27
          },
          "name": "cdkTestDependencies",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"2.1.0\"",
            "stability": "experimental",
            "summary": "Minimum version of the AWS CDK to depend on."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/java/aws-cdk-java-app-options.ts",
            "line": 69
          },
          "name": "cdkVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "You can use this to prevent mixed versions for your CDK dependencies and to prevent auto-updates.\nIf you use experimental features this will let you define the moment you include breaking changes.",
            "stability": "experimental",
            "summary": "Use pinned version instead of caret version for CDK."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/java/aws-cdk-java-app-options.ts",
            "line": 21
          },
          "name": "cdkVersionPinning",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- true, but false for subprojects",
            "stability": "experimental",
            "summary": "Add a `clobber` task which resets the repo to origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/java/aws-cdk-java-app-options.ts",
            "line": 365
          },
          "name": "clobber",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Whether to commit the managed files by default."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/java/aws-cdk-java-app-options.ts",
            "line": 456
          },
          "name": "commitGenerated",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- defaults",
            "stability": "experimental",
            "summary": "Compile options."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/java/aws-cdk-java-app-options.ts",
            "line": 190
          },
          "name": "compileOptions",
          "optional": true,
          "type": {
            "fqn": "projen.java.MavenCompileOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- for CDK 1.x the default is \"3.2.27\", for CDK 2.x the default is\n\"10.0.5\".",
            "stability": "experimental",
            "summary": "Minimum version of the `constructs` library to depend on."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/java/aws-cdk-java-app-options.ts",
            "line": 14
          },
          "name": "constructsVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no additional context",
            "stability": "experimental",
            "summary": "Additional context to include in `cdk.json`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/java/aws-cdk-java-app-options.ts",
            "line": 99
          },
          "name": "context",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "featured": "true"
            },
            "default": "[]",
            "remarks": "Additional dependencies can be added via `project.addDependency()`.",
            "stability": "experimental",
            "summary": "List of runtime dependencies for this project. Dependencies use the format: `<groupId>/<artifactId>@<semver>`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/java/aws-cdk-java-app-options.ts",
            "line": 184
          },
          "name": "deps",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "featured": "true"
            },
            "default": "undefined",
            "remarks": "Although this should not replace\nformal documentation, a quick comment to any readers of the POM is always\nhelpful.",
            "stability": "experimental",
            "summary": "Description of a project is always good."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/java/aws-cdk-java-app-options.ts",
            "line": 222
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Add a VSCode development environment (used for GitHub Codespaces)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/java/aws-cdk-java-app-options.ts",
            "line": 359
          },
          "name": "devContainer",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"dist/java\"",
            "stability": "experimental",
            "summary": "Final artifact output directory."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/java/aws-cdk-java-app-options.ts",
            "line": 174
          },
          "name": "distdir",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Include all feature flags in cdk.json."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/java/aws-cdk-java-app-options.ts",
            "line": 93
          },
          "name": "featureFlags",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "Enabled by default for root projects. Disabled for non-root projects.",
            "stability": "experimental",
            "summary": "Enable GitHub integration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/java/aws-cdk-java-app-options.ts",
            "line": 353
          },
          "name": "github",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- see GitHubOptions",
            "stability": "experimental",
            "summary": "Options for GitHub integration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/java/aws-cdk-java-app-options.ts",
            "line": 346
          },
          "name": "githubOptions",
          "optional": true,
          "type": {
            "fqn": "projen.github.GitHubOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Configuration options for .gitignore file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/java/aws-cdk-java-app-options.ts",
            "line": 450
          },
          "name": "gitIgnoreOptions",
          "optional": true,
          "type": {
            "fqn": "projen.IgnoreFileOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Configuration options for git."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/java/aws-cdk-java-app-options.ts",
            "line": 445
          },
          "name": "gitOptions",
          "optional": true,
          "type": {
            "fqn": "projen.GitOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Add a Gitpod development environment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/java/aws-cdk-java-app-options.ts",
            "line": 340
          },
          "name": "gitpod",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "featured": "true"
            },
            "default": "\"org.acme\"",
            "remarks": "For example,\nall core Maven artifacts do (well, should) live under the groupId\norg.apache.maven. Group ID's do not necessarily use the dot notation, for\nexample, the junit project. Note that the dot-notated groupId does not have\nto correspond to the package structure that the project contains. It is,\nhowever, a good practice to follow. When stored within a repository, the\ngroup acts much like the Java packaging structure does in an operating\nsystem. The dots are replaced by OS specific directory separators (such as\n'/' in Unix) which becomes a relative directory structure from the base\nrepository. In the example given, the org.codehaus.mojo group lives within\nthe directory $M2_REPO/org/codehaus/mojo.",
            "stability": "experimental",
            "summary": "This is generally unique amongst an organization or a project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/java/aws-cdk-java-app-options.ts",
            "line": 255
          },
          "name": "groupId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Include junit tests."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/java/aws-cdk-java-app-options.ts",
            "line": 168
          },
          "name": "junit",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- defaults",
            "stability": "experimental",
            "summary": "junit options."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/java/aws-cdk-java-app-options.ts",
            "line": 162
          },
          "name": "junitOptions",
          "optional": true,
          "type": {
            "fqn": "projen.java.JunitOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "{}",
            "stability": "experimental",
            "summary": "Configure logging options such as verbosity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/java/aws-cdk-java-app-options.ts",
            "line": 440
          },
          "name": "logging",
          "optional": true,
          "type": {
            "fqn": "projen.LoggerOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "deprecated": "use `githubOptions.mergify` instead",
            "stability": "deprecated",
            "summary": "Whether mergify should be enabled on this repository or not."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/java/aws-cdk-java-app-options.ts",
            "line": 334
          },
          "name": "mergify",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default options",
            "deprecated": "use `githubOptions.mergifyOptions` instead",
            "stability": "deprecated",
            "summary": "Options for mergify."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/java/aws-cdk-java-app-options.ts",
            "line": 327
          },
          "name": "mergifyOptions",
          "optional": true,
          "type": {
            "fqn": "projen.github.MergifyOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\".\"",
            "remarks": "If this project has a parent, this directory is relative to the parent\ndirectory and it cannot be the same as the parent or any of it's other\nsubprojects.",
            "stability": "experimental",
            "summary": "The root directory of the project. Relative to this directory, all files are synthesized."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/java/aws-cdk-java-app-options.ts",
            "line": 434
          },
          "name": "outdir",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"jar\"",
            "stability": "experimental",
            "summary": "Project packaging format."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/java/aws-cdk-java-app-options.ts",
            "line": 212
          },
          "name": "packaging",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- defaults",
            "stability": "experimental",
            "summary": "Packaging options."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/java/aws-cdk-java-app-options.ts",
            "line": 156
          },
          "name": "packagingOptions",
          "optional": true,
          "type": {
            "fqn": "projen.java.MavenPackagingOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The parent project, if this project is part of a bigger project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/java/aws-cdk-java-app-options.ts",
            "line": 423
          },
          "name": "parent",
          "optional": true,
          "type": {
            "fqn": "projen.Project"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "featured": "true"
            },
            "default": "undefined",
            "stability": "experimental",
            "summary": "A Parent Pom can be used to have a child project inherit properties/plugins/ect in order to reduce duplication and keep standards across a large amount of repos."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/java/aws-cdk-java-app-options.ts",
            "line": 206
          },
          "name": "parentPom",
          "optional": true,
          "type": {
            "fqn": "projen.java.ParentPom"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "ProjectType.UNKNOWN",
            "deprecated": "no longer supported at the base project level",
            "stability": "deprecated",
            "summary": "Which type of project this is (library/app)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/java/aws-cdk-java-app-options.ts",
            "line": 320
          },
          "name": "projectType",
          "optional": true,
          "type": {
            "fqn": "projen.ProjectType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"npx projen\"",
            "remarks": "Can be used to customize in special environments.",
            "stability": "experimental",
            "summary": "The shell command to use in order to run the projen CLI."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/java/aws-cdk-java-app-options.ts",
            "line": 418
          },
          "name": "projenCommand",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- use a personal access token named PROJEN_GITHUB_TOKEN",
            "stability": "experimental",
            "summary": "Choose a method of providing GitHub API access for projen workflows."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/java/aws-cdk-java-app-options.ts",
            "line": 313
          },
          "name": "projenCredentials",
          "optional": true,
          "type": {
            "fqn": "projen.github.GithubCredentials"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "This will install `projen` as a java dependency and will add a `synth` task which\nwill compile & execute `main()` from `src/main/java/projenrc.java`.",
            "stability": "experimental",
            "summary": "Use projenrc in java."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/java/aws-cdk-java-app-options.ts",
            "line": 150
          },
          "name": "projenrcJava",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default options",
            "stability": "experimental",
            "summary": "Options related to projenrc in java."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/java/aws-cdk-java-app-options.ts",
            "line": 142
          },
          "name": "projenrcJavaOptions",
          "optional": true,
          "type": {
            "fqn": "projen.java.ProjenrcOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Generate (once) .projenrc.json (in JSON). Set to `false` in order to disable .projenrc.json generation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/java/aws-cdk-java-app-options.ts",
            "line": 411
          },
          "name": "projenrcJson",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default options",
            "stability": "experimental",
            "summary": "Options for .projenrc.json."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/java/aws-cdk-java-app-options.ts",
            "line": 405
          },
          "name": "projenrcJsonOptions",
          "optional": true,
          "type": {
            "fqn": "projen.ProjenrcJsonOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"PROJEN_GITHUB_TOKEN\"",
            "deprecated": "use `projenCredentials`",
            "remarks": "This token needs to have the `repo`, `workflows`\nand `packages` scope.",
            "stability": "deprecated",
            "summary": "The name of a secret which includes a GitHub Personal Access Token to be used by projen workflows."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/java/aws-cdk-java-app-options.ts",
            "line": 307
          },
          "name": "projenTokenSecret",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- { filename: 'README.md', contents: '# replace this' }",
            "stability": "experimental",
            "summary": "The README setup."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/java/aws-cdk-java-app-options.ts",
            "line": 298
          },
          "name": "readme",
          "optional": true,
          "type": {
            "fqn": "projen.SampleReadmeProps"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Use renovatebot to handle dependency upgrades."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/java/aws-cdk-java-app-options.ts",
            "line": 399
          },
          "name": "renovatebot",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default options",
            "stability": "experimental",
            "summary": "Options for renovatebot."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/java/aws-cdk-java-app-options.ts",
            "line": 393
          },
          "name": "renovatebotOptions",
          "optional": true,
          "type": {
            "fqn": "projen.RenovatebotOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "ApprovalLevel.BROADENING",
            "stability": "experimental",
            "summary": "To protect you against unintended changes that affect your security posture, the AWS CDK Toolkit prompts you to approve security-related changes before deploying them."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/java/aws-cdk-java-app-options.ts",
            "line": 87
          },
          "name": "requireApproval",
          "optional": true,
          "type": {
            "fqn": "projen.awscdk.ApprovalLevel"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Include sample code and test if the relevant directories don't exist."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/java/aws-cdk-java-app-options.ts",
            "line": 126
          },
          "name": "sample",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"org.acme\"",
            "stability": "experimental",
            "summary": "The java package to use for the code sample."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/java/aws-cdk-java-app-options.ts",
            "line": 120
          },
          "name": "sampleJavaPackage",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "See `staleOptions` for options.",
            "stability": "experimental",
            "summary": "Auto-close of stale issues and pull request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/java/aws-cdk-java-app-options.ts",
            "line": 292
          },
          "name": "stale",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- see defaults in `StaleOptions`",
            "remarks": "To disable set `stale` to `false`.",
            "stability": "experimental",
            "summary": "Auto-close stale issues and pull requests."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/java/aws-cdk-java-app-options.ts",
            "line": 285
          },
          "name": "staleOptions",
          "optional": true,
          "type": {
            "fqn": "projen.github.StaleOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "featured": "true"
            },
            "default": "[]",
            "remarks": "Additional dependencies can be added via `project.addTestDependency()`.",
            "stability": "experimental",
            "summary": "List of test dependencies for this project. Dependencies use the format: `<groupId>/<artifactId>@<semver>`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/java/aws-cdk-java-app-options.ts",
            "line": 136
          },
          "name": "testDeps",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "featured": "true"
            },
            "default": "undefined",
            "remarks": "This is a nice gesture for\nprojects users, however, so that they know where the project lives.",
            "stability": "experimental",
            "summary": "The URL, like the name, is not required."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/java/aws-cdk-java-app-options.ts",
            "line": 199
          },
          "name": "url",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "featured": "true"
            },
            "default": "\"0.1.0\"",
            "remarks": "groupId:artifactId denotes a\nsingle project but they cannot delineate which incarnation of that project\nwe are talking about. Do we want the junit:junit of 2018 (version 4.12), or\nof 2007 (version 3.8.2)? In short: code changes, those changes should be\nversioned, and this element keeps those versions in line. It is also used\nwithin an artifact's repository to separate versions from each other.\nmy-project version 1.0 files live in the directory structure\n$M2_REPO/org/codehaus/mojo/my-project/1.0.",
            "stability": "experimental",
            "summary": "This is the last piece of the naming puzzle."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/java/aws-cdk-java-app-options.ts",
            "line": 237
          },
          "name": "version",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "Enabled by default for root projects. Disabled for non-root projects.",
            "stability": "experimental",
            "summary": "Enable VSCode integration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/java/aws-cdk-java-app-options.ts",
            "line": 278
          },
          "name": "vscode",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "[]",
            "stability": "experimental",
            "summary": "Glob patterns to exclude from `cdk watch`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/java/aws-cdk-java-app-options.ts",
            "line": 81
          },
          "name": "watchExcludes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "[]",
            "stability": "experimental",
            "summary": "Glob patterns to include in `cdk watch`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/java/aws-cdk-java-app-options.ts",
            "line": 75
          },
          "name": "watchIncludes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "infrastructure/projects/java/aws-cdk-java-app-options:AwsCdkJavaAppOptions"
    },
    "@aws/pdk.infrastructure.AwsCdkPythonAppOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "AwsCdkPythonAppOptions."
      },
      "fqn": "@aws/pdk.infrastructure.AwsCdkPythonAppOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "infrastructure/projects/python/aws-cdk-py-app-options.ts",
        "line": 7
      },
      "name": "AwsCdkPythonAppOptions",
      "namespace": "infrastructure",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "$BASEDIR",
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/aws-cdk-py-app-options.ts",
            "line": 429
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "$GIT_USER_EMAIL",
            "stability": "experimental",
            "summary": "Author's e-mail."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/aws-cdk-py-app-options.ts",
            "line": 240
          },
          "name": "authorEmail",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "$GIT_USER_NAME",
            "stability": "experimental",
            "summary": "Author's name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/aws-cdk-py-app-options.ts",
            "line": 234
          },
          "name": "authorName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- auto approve is disabled",
            "stability": "experimental",
            "summary": "Enable and configure the 'auto approve' workflow."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/aws-cdk-py-app-options.ts",
            "line": 356
          },
          "name": "autoApproveOptions",
          "optional": true,
          "type": {
            "fqn": "projen.github.AutoApproveOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "Has no effect if `github.mergify`\nis set to false.",
            "stability": "experimental",
            "summary": "Enable automatic merging on GitHub."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/aws-cdk-py-app-options.ts",
            "line": 350
          },
          "name": "autoMerge",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- see defaults in `AutoMergeOptions`",
            "remarks": "Has no effect if\n`github.mergify` or `autoMerge` is set to false.",
            "stability": "experimental",
            "summary": "Configure options for automatic merging on GitHub."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/aws-cdk-py-app-options.ts",
            "line": 342
          },
          "name": "autoMergeOptions",
          "optional": true,
          "type": {
            "fqn": "projen.github.AutoMergeOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no build command",
            "remarks": "This command will be called when\nrunning `cdk synth` or when `cdk watch` identifies a change in your source\ncode before redeployment.",
            "stability": "experimental",
            "summary": "A command to execute before synthesis."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/aws-cdk-py-app-options.ts",
            "line": 120
          },
          "name": "buildCommand",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "aws-cdk": "/assertions (in V1) and included in `aws-cdk-lib` for V2."
            },
            "default": "- will be included by default for AWS CDK >= 1.0.0 < 2.0.0",
            "deprecated": "The",
            "remarks": "Install the",
            "stability": "deprecated",
            "summary": "Warning: NodeJS only."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/aws-cdk-py-app-options.ts",
            "line": 69
          },
          "name": "cdkAssert",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- will be included by default for AWS CDK >= 1.111.0 < 2.0.0",
            "remarks": "Only needed for CDK 1.x. If using CDK 2.x then\nassertions is already included in 'aws-cdk-lib'",
            "stability": "experimental",
            "summary": "Install the assertions library?"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/aws-cdk-py-app-options.ts",
            "line": 60
          },
          "name": "cdkAssertions",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "deprecated": "For CDK 2.x use \"deps\" instead. (or \"peerDeps\" if you're building a library)",
            "stability": "deprecated",
            "summary": "Which AWS CDKv1 modules this project requires."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/aws-cdk-py-app-options.ts",
            "line": 52
          },
          "name": "cdkDependencies",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "deprecated": "Not supported in CDK v2.",
            "remarks": "This is to ensure that downstream consumers actually have your CDK dependencies installed\nwhen using npm < 7 or yarn, where peer dependencies are not automatically installed.\nIf this is disabled, `cdkDependencies` will be added to `devDependencies` to ensure\nthey are present during development.\n\nNote: this setting only applies to construct library projects",
            "stability": "deprecated",
            "summary": "If this is enabled (default), all modules declared in `cdkDependencies` will be also added as normal `dependencies` (as well as `peerDependencies`)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/aws-cdk-py-app-options.ts",
            "line": 46
          },
          "name": "cdkDependenciesAsDeps",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"cdk.out\"",
            "stability": "experimental",
            "summary": "cdk.out directory."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/aws-cdk-py-app-options.ts",
            "line": 111
          },
          "name": "cdkout",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "deprecated": "For CDK 2.x use 'devDeps' (in node.js projects) or 'testDeps' (in java projects) instead",
            "stability": "deprecated",
            "summary": "AWS CDK modules required for testing."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/aws-cdk-py-app-options.ts",
            "line": 33
          },
          "name": "cdkTestDependencies",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"2.1.0\"",
            "stability": "experimental",
            "summary": "Minimum version of the AWS CDK to depend on."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/aws-cdk-py-app-options.ts",
            "line": 75
          },
          "name": "cdkVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "You can use this to prevent mixed versions for your CDK dependencies and to prevent auto-updates.\nIf you use experimental features this will let you define the moment you include breaking changes.",
            "stability": "experimental",
            "summary": "Use pinned version instead of caret version for CDK."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/aws-cdk-py-app-options.ts",
            "line": 27
          },
          "name": "cdkVersionPinning",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "A list of PyPI trove classifiers that describe the project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/aws-cdk-py-app-options.ts",
            "line": 221
          },
          "name": "classifiers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- true, but false for subprojects",
            "stability": "experimental",
            "summary": "Add a `clobber` task which resets the repo to origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/aws-cdk-py-app-options.ts",
            "line": 334
          },
          "name": "clobber",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Whether to commit the managed files by default."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/aws-cdk-py-app-options.ts",
            "line": 425
          },
          "name": "commitGenerated",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- for CDK 1.x the default is \"3.2.27\", for CDK 2.x the default is\n\"10.0.5\".",
            "stability": "experimental",
            "summary": "Minimum version of the `constructs` library to depend on."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/aws-cdk-py-app-options.ts",
            "line": 20
          },
          "name": "constructsVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no additional context",
            "stability": "experimental",
            "summary": "Additional context to include in `cdk.json`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/aws-cdk-py-app-options.ts",
            "line": 105
          },
          "name": "context",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "featured": "true"
            },
            "default": "[]",
            "remarks": "Additional dependencies can be added via `project.addDependency()`.",
            "stability": "experimental",
            "summary": "List of runtime dependencies for this project. Dependencies use the format: `<module>@<semver>`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/aws-cdk-py-app-options.ts",
            "line": 172
          },
          "name": "deps",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "featured": "true"
            },
            "stability": "experimental",
            "summary": "A short description of the package."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/aws-cdk-py-app-options.ts",
            "line": 216
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Add a VSCode development environment (used for GitHub Codespaces)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/aws-cdk-py-app-options.ts",
            "line": 328
          },
          "name": "devContainer",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "featured": "true"
            },
            "default": "[]",
            "remarks": "Additional dependencies can be added via `project.addDevDependency()`.",
            "stability": "experimental",
            "summary": "List of dev dependencies for this project. Dependencies use the format: `<module>@<semver>`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/aws-cdk-py-app-options.ts",
            "line": 162
          },
          "name": "devDeps",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Include all feature flags in cdk.json."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/aws-cdk-py-app-options.ts",
            "line": 99
          },
          "name": "featureFlags",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "Enabled by default for root projects. Disabled for non-root projects.",
            "stability": "experimental",
            "summary": "Enable GitHub integration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/aws-cdk-py-app-options.ts",
            "line": 322
          },
          "name": "github",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- see GitHubOptions",
            "stability": "experimental",
            "summary": "Options for GitHub integration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/aws-cdk-py-app-options.ts",
            "line": 315
          },
          "name": "githubOptions",
          "optional": true,
          "type": {
            "fqn": "projen.github.GitHubOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Configuration options for .gitignore file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/aws-cdk-py-app-options.ts",
            "line": 419
          },
          "name": "gitIgnoreOptions",
          "optional": true,
          "type": {
            "fqn": "projen.IgnoreFileOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Configuration options for git."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/aws-cdk-py-app-options.ts",
            "line": 414
          },
          "name": "gitOptions",
          "optional": true,
          "type": {
            "fqn": "projen.GitOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Add a Gitpod development environment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/aws-cdk-py-app-options.ts",
            "line": 309
          },
          "name": "gitpod",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "A URL to the website of the project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/aws-cdk-py-app-options.ts",
            "line": 210
          },
          "name": "homepage",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "License of this package as an SPDX identifier."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/aws-cdk-py-app-options.ts",
            "line": 205
          },
          "name": "license",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "{}",
            "stability": "experimental",
            "summary": "Configure logging options such as verbosity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/aws-cdk-py-app-options.ts",
            "line": 409
          },
          "name": "logging",
          "optional": true,
          "type": {
            "fqn": "projen.LoggerOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "deprecated": "use `githubOptions.mergify` instead",
            "stability": "deprecated",
            "summary": "Whether mergify should be enabled on this repository or not."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/aws-cdk-py-app-options.ts",
            "line": 303
          },
          "name": "mergify",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default options",
            "deprecated": "use `githubOptions.mergifyOptions` instead",
            "stability": "deprecated",
            "summary": "Options for mergify."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/aws-cdk-py-app-options.ts",
            "line": 296
          },
          "name": "mergifyOptions",
          "optional": true,
          "type": {
            "fqn": "projen.github.MergifyOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "$PYTHON_MODULE_NAME",
            "remarks": "Must only consist of alphanumeric characters and underscores.",
            "stability": "experimental",
            "summary": "Name of the python package as used in imports and filenames."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/aws-cdk-py-app-options.ts",
            "line": 179
          },
          "name": "moduleName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\".\"",
            "remarks": "If this project has a parent, this directory is relative to the parent\ndirectory and it cannot be the same as the parent or any of it's other\nsubprojects.",
            "stability": "experimental",
            "summary": "The root directory of the project. Relative to this directory, all files are synthesized."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/aws-cdk-py-app-options.ts",
            "line": 403
          },
          "name": "outdir",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Package name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/aws-cdk-py-app-options.ts",
            "line": 200
          },
          "name": "packageName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The parent project, if this project is part of a bigger project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/aws-cdk-py-app-options.ts",
            "line": 392
          },
          "name": "parent",
          "optional": true,
          "type": {
            "fqn": "projen.Project"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Additional options to set for poetry if using poetry."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/aws-cdk-py-app-options.ts",
            "line": 195
          },
          "name": "poetryOptions",
          "optional": true,
          "type": {
            "fqn": "projen.python.PoetryPyprojectOptionsWithoutDeps"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "ProjectType.UNKNOWN",
            "deprecated": "no longer supported at the base project level",
            "stability": "deprecated",
            "summary": "Which type of project this is (library/app)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/aws-cdk-py-app-options.ts",
            "line": 289
          },
          "name": "projectType",
          "optional": true,
          "type": {
            "fqn": "projen.ProjectType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"npx projen\"",
            "remarks": "Can be used to customize in special environments.",
            "stability": "experimental",
            "summary": "The shell command to use in order to run the projen CLI."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/aws-cdk-py-app-options.ts",
            "line": 387
          },
          "name": "projenCommand",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- use a personal access token named PROJEN_GITHUB_TOKEN",
            "stability": "experimental",
            "summary": "Choose a method of providing GitHub API access for projen workflows."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/aws-cdk-py-app-options.ts",
            "line": 282
          },
          "name": "projenCredentials",
          "optional": true,
          "type": {
            "fqn": "projen.github.GithubCredentials"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Generate (once) .projenrc.json (in JSON). Set to `false` in order to disable .projenrc.json generation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/aws-cdk-py-app-options.ts",
            "line": 380
          },
          "name": "projenrcJson",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default options",
            "stability": "experimental",
            "summary": "Options for .projenrc.json."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/aws-cdk-py-app-options.ts",
            "line": 374
          },
          "name": "projenrcJsonOptions",
          "optional": true,
          "type": {
            "fqn": "projen.ProjenrcJsonOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default options",
            "stability": "experimental",
            "summary": "Options related to projenrc in python."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/aws-cdk-py-app-options.ts",
            "line": 152
          },
          "name": "projenrcPythonOptions",
          "optional": true,
          "type": {
            "fqn": "projen.python.ProjenrcOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"PROJEN_GITHUB_TOKEN\"",
            "deprecated": "use `projenCredentials`",
            "remarks": "This token needs to have the `repo`, `workflows`\nand `packages` scope.",
            "stability": "deprecated",
            "summary": "The name of a secret which includes a GitHub Personal Access Token to be used by projen workflows."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/aws-cdk-py-app-options.ts",
            "line": 276
          },
          "name": "projenTokenSecret",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "featured": "true"
            },
            "default": "true",
            "stability": "experimental",
            "summary": "Include pytest tests."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/aws-cdk-py-app-options.ts",
            "line": 146
          },
          "name": "pytest",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- defaults",
            "stability": "experimental",
            "summary": "pytest options."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/aws-cdk-py-app-options.ts",
            "line": 139
          },
          "name": "pytestOptions",
          "optional": true,
          "type": {
            "fqn": "projen.python.PytestOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"python\"",
            "stability": "experimental",
            "summary": "Path to the python executable to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/aws-cdk-py-app-options.ts",
            "line": 185
          },
          "name": "pythonExec",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- { filename: 'README.md', contents: '# replace this' }",
            "stability": "experimental",
            "summary": "The README setup."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/aws-cdk-py-app-options.ts",
            "line": 267
          },
          "name": "readme",
          "optional": true,
          "type": {
            "fqn": "projen.SampleReadmeProps"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Use renovatebot to handle dependency upgrades."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/aws-cdk-py-app-options.ts",
            "line": 368
          },
          "name": "renovatebot",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default options",
            "stability": "experimental",
            "summary": "Options for renovatebot."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/aws-cdk-py-app-options.ts",
            "line": 362
          },
          "name": "renovatebotOptions",
          "optional": true,
          "type": {
            "fqn": "projen.RenovatebotOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "ApprovalLevel.BROADENING",
            "stability": "experimental",
            "summary": "To protect you against unintended changes that affect your security posture, the AWS CDK Toolkit prompts you to approve security-related changes before deploying them."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/aws-cdk-py-app-options.ts",
            "line": 93
          },
          "name": "requireApproval",
          "optional": true,
          "type": {
            "fqn": "projen.awscdk.ApprovalLevel"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Include sample code and test if the relevant directories don't exist."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/aws-cdk-py-app-options.ts",
            "line": 133
          },
          "name": "sample",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Additional fields to pass in the setup() function if using setuptools."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/aws-cdk-py-app-options.ts",
            "line": 190
          },
          "name": "setupConfig",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "featured": "true"
            },
            "default": "- true, unless poetry is true, then false",
            "stability": "experimental",
            "summary": "Use setuptools with a setup.py script for packaging and publishing."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/aws-cdk-py-app-options.ts",
            "line": 127
          },
          "name": "setuptools",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "See `staleOptions` for options.",
            "stability": "experimental",
            "summary": "Auto-close of stale issues and pull request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/aws-cdk-py-app-options.ts",
            "line": 261
          },
          "name": "stale",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- see defaults in `StaleOptions`",
            "remarks": "To disable set `stale` to `false`.",
            "stability": "experimental",
            "summary": "Auto-close stale issues and pull requests."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/aws-cdk-py-app-options.ts",
            "line": 254
          },
          "name": "staleOptions",
          "optional": true,
          "type": {
            "fqn": "projen.github.StaleOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"tests\"",
            "stability": "experimental",
            "summary": "Python sources directory."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/aws-cdk-py-app-options.ts",
            "line": 13
          },
          "name": "testdir",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "featured": "true"
            },
            "default": "\"0.1.0\"",
            "stability": "experimental",
            "summary": "Version of the package."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/aws-cdk-py-app-options.ts",
            "line": 228
          },
          "name": "version",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "Enabled by default for root projects. Disabled for non-root projects.",
            "stability": "experimental",
            "summary": "Enable VSCode integration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/aws-cdk-py-app-options.ts",
            "line": 247
          },
          "name": "vscode",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "[]",
            "stability": "experimental",
            "summary": "Glob patterns to exclude from `cdk watch`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/aws-cdk-py-app-options.ts",
            "line": 87
          },
          "name": "watchExcludes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "[]",
            "stability": "experimental",
            "summary": "Glob patterns to include in `cdk watch`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/aws-cdk-py-app-options.ts",
            "line": 81
          },
          "name": "watchIncludes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "infrastructure/projects/python/aws-cdk-py-app-options:AwsCdkPythonAppOptions"
    },
    "@aws/pdk.infrastructure.AwsCdkTypeScriptAppOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "AwsCdkTypeScriptAppOptions."
      },
      "fqn": "@aws/pdk.infrastructure.AwsCdkTypeScriptAppOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
        "line": 7
      },
      "name": "AwsCdkTypeScriptAppOptions",
      "namespace": "infrastructure",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "$BASEDIR",
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 1134
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "This is normally only allowed for libraries. For apps, there's no meaning\nfor specifying these.",
            "stability": "experimental",
            "summary": "Allow the project to include `peerDependencies` and `bundledDependencies`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 945
          },
          "name": "allowLibraryDependencies",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"main.ts\"",
            "stability": "experimental",
            "summary": "The CDK app's entrypoint (relative to the source directory, which is \"src\" by default)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 49
          },
          "name": "appEntrypoint",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"dist\"",
            "stability": "experimental",
            "summary": "A directory which will contain build artifacts."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 505
          },
          "name": "artifactsDirectory",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Author's e-mail."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 937
          },
          "name": "authorEmail",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Author's name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 932
          },
          "name": "authorName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Is the author an organization."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 927
          },
          "name": "authorOrganization",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Author's URL / Website."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 922
          },
          "name": "authorUrl",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- auto approve is disabled",
            "stability": "experimental",
            "summary": "Enable and configure the 'auto approve' workflow."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 1061
          },
          "name": "autoApproveOptions",
          "optional": true,
          "type": {
            "fqn": "projen.github.AutoApproveOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- true",
            "remarks": "Throw if set to true but `autoApproveOptions` are not defined.",
            "stability": "experimental",
            "summary": "Automatically approve deps upgrade PRs, allowing them to be merged by mergify (if configued)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 499
          },
          "name": "autoApproveUpgrades",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Automatically add all executables under the `bin` directory to your `package.json` file under the `bin` section."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 917
          },
          "name": "autoDetectBin",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "Has no effect if `github.mergify`\nis set to false.",
            "stability": "experimental",
            "summary": "Enable automatic merging on GitHub."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 1055
          },
          "name": "autoMerge",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- see defaults in `AutoMergeOptions`",
            "remarks": "Has no effect if\n`github.mergify` or `autoMerge` is set to false.",
            "stability": "experimental",
            "summary": "Configure options for automatic merging on GitHub."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 1047
          },
          "name": "autoMergeOptions",
          "optional": true,
          "type": {
            "fqn": "projen.github.AutoMergeOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "You can use this option to add/customize how binaries are represented in\nyour `package.json`, but unless `autoDetectBin` is `false`, every\nexecutable file under `bin` will automatically be added to this section.",
            "stability": "experimental",
            "summary": "Binary programs vended with your module."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 911
          },
          "name": "bin",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The email address to which issues should be reported."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 903
          },
          "name": "bugsEmail",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The url to your project's issue tracker."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 898
          },
          "name": "bugsUrl",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no build command",
            "remarks": "This command will be called when\nrunning `cdk synth` or when `cdk watch` identifies a change in your source\ncode before redeployment.",
            "stability": "experimental",
            "summary": "A command to execute before synthesis."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 156
          },
          "name": "buildCommand",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- true if not a subproject",
            "stability": "experimental",
            "summary": "Define a GitHub workflow for building PRs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 492
          },
          "name": "buildWorkflow",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Options for PR build workflow."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 486
          },
          "name": "buildWorkflowOptions",
          "optional": true,
          "type": {
            "fqn": "projen.javascript.BuildWorkflowOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"{ pullRequest: {}, workflowDispatch: {} }\"",
            "deprecated": "- Use `buildWorkflowOptions.workflowTriggers`",
            "stability": "deprecated",
            "summary": "Build workflow triggers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 481
          },
          "name": "buildWorkflowTriggers",
          "optional": true,
          "type": {
            "fqn": "projen.github.workflows.Triggers"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "These modules will be\nadded both to the `dependencies` section and `bundledDependencies` section of\nyour `package.json`.\n\nThe recommendation is to only specify the module name here (e.g.\n`express`). This will behave similar to `yarn add` or `npm install` in the\nsense that it will add the module as a dependency to your `package.json`\nfile with the latest version (`^`). You can specify semver requirements in\nthe same syntax passed to `npm i` or `yarn add` (e.g. `express@^2`) and\nthis will be what you `package.json` will eventually include.",
            "stability": "experimental",
            "summary": "List of dependencies to bundle into this module."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 893
          },
          "name": "bundledDeps",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Options for `Bundler`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 474
          },
          "name": "bundlerOptions",
          "optional": true,
          "type": {
            "fqn": "projen.javascript.BundlerOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "aws-cdk": "/assertions (in V1) and included in `aws-cdk-lib` for V2."
            },
            "default": "- will be included by default for AWS CDK >= 1.0.0 < 2.0.0",
            "deprecated": "The",
            "remarks": "Install the",
            "stability": "deprecated",
            "summary": "Warning: NodeJS only."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 105
          },
          "name": "cdkAssert",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- will be included by default for AWS CDK >= 1.111.0 < 2.0.0",
            "remarks": "Only needed for CDK 1.x. If using CDK 2.x then\nassertions is already included in 'aws-cdk-lib'",
            "stability": "experimental",
            "summary": "Install the assertions library?"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 96
          },
          "name": "cdkAssertions",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "deprecated": "For CDK 2.x use \"deps\" instead. (or \"peerDeps\" if you're building a library)",
            "stability": "deprecated",
            "summary": "Which AWS CDKv1 modules this project requires."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 88
          },
          "name": "cdkDependencies",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "deprecated": "Not supported in CDK v2.",
            "remarks": "This is to ensure that downstream consumers actually have your CDK dependencies installed\nwhen using npm < 7 or yarn, where peer dependencies are not automatically installed.\nIf this is disabled, `cdkDependencies` will be added to `devDependencies` to ensure\nthey are present during development.\n\nNote: this setting only applies to construct library projects",
            "stability": "deprecated",
            "summary": "If this is enabled (default), all modules declared in `cdkDependencies` will be also added as normal `dependencies` (as well as `peerDependencies`)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 82
          },
          "name": "cdkDependenciesAsDeps",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"cdk.out\"",
            "stability": "experimental",
            "summary": "cdk.out directory."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 147
          },
          "name": "cdkout",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "deprecated": "For CDK 2.x use 'devDeps' (in node.js projects) or 'testDeps' (in java projects) instead",
            "stability": "deprecated",
            "summary": "AWS CDK modules required for testing."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 69
          },
          "name": "cdkTestDependencies",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"2.1.0\"",
            "stability": "experimental",
            "summary": "Minimum version of the AWS CDK to depend on."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 111
          },
          "name": "cdkVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "You can use this to prevent mixed versions for your CDK dependencies and to prevent auto-updates.\nIf you use experimental features this will let you define the moment you include breaking changes.",
            "stability": "experimental",
            "summary": "Use pinned version instead of caret version for CDK."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 63
          },
          "name": "cdkVersionPinning",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no license checks are run during the build and all licenses will be accepted",
            "remarks": "This setting will cause the build to fail, if any prohibited or not allowed licenses ares encountered.",
            "stability": "experimental",
            "summary": "Configure which licenses should be deemed acceptable for use by dependencies."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 469
          },
          "name": "checkLicenses",
          "optional": true,
          "type": {
            "fqn": "projen.javascript.LicenseCheckerOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- true, but false for subprojects",
            "stability": "experimental",
            "summary": "Add a `clobber` task which resets the repo to origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 1039
          },
          "name": "clobber",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- undefined",
            "remarks": "This is required if publishing packages to, or installing scoped packages from AWS CodeArtifact",
            "stability": "experimental",
            "summary": "Options for npm packages using AWS CodeArtifact."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 878
          },
          "name": "codeArtifactOptions",
          "optional": true,
          "type": {
            "fqn": "projen.javascript.CodeArtifactOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Define a GitHub workflow step for sending code coverage metrics to https://codecov.io/ Uses codecov/codecov-action@v4 A secret is required for private repos. Configured with `@codeCovTokenSecret`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 462
          },
          "name": "codeCov",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- if this option is not specified, only public repositories are supported",
            "stability": "experimental",
            "summary": "Define the secret name for a specified https://codecov.io/ token A secret is required to send coverage for private repositories."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 456
          },
          "name": "codeCovTokenSecret",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Whether to commit the managed files by default."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 1130
          },
          "name": "commitGenerated",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- for CDK 1.x the default is \"3.2.27\", for CDK 2.x the default is\n\"10.0.5\".",
            "stability": "experimental",
            "summary": "Minimum version of the `constructs` library to depend on."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 56
          },
          "name": "constructsVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no additional context",
            "stability": "experimental",
            "summary": "Additional context to include in `cdk.json`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 141
          },
          "name": "context",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- defaults to the value of authorName or \"\" if `authorName` is undefined.",
            "stability": "experimental",
            "summary": "License copyright owner."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 450
          },
          "name": "copyrightOwner",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- current year",
            "stability": "experimental",
            "summary": "The copyright years to put in the LICENSE file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 444
          },
          "name": "copyrightPeriod",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"main\"",
            "stability": "experimental",
            "summary": "The name of the main release branch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 511
          },
          "name": "defaultReleaseBranch",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "Cannot be used in conjunction with `depsUpgrade`.",
            "stability": "experimental",
            "summary": "Use dependabot to handle dependency upgrades."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 438
          },
          "name": "dependabot",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default options",
            "stability": "experimental",
            "summary": "Options for dependabot."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 431
          },
          "name": "dependabotOptions",
          "optional": true,
          "type": {
            "fqn": "projen.github.DependabotOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "featured": "true"
            },
            "default": "[]",
            "remarks": "The recommendation is to only specify the module name here (e.g.\n`express`). This will behave similar to `yarn add` or `npm install` in the\nsense that it will add the module as a dependency to your `package.json`\nfile with the latest version (`^`). You can specify semver requirements in\nthe same syntax passed to `npm i` or `yarn add` (e.g. `express@^2`) and\nthis will be what you `package.json` will eventually include.",
            "stability": "experimental",
            "summary": "Runtime dependencies of this module."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 871
          },
          "name": "deps",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "Cannot be used in conjunction with `dependabot`.",
            "stability": "experimental",
            "summary": "Use tasks and github workflows to handle dependency upgrades."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 425
          },
          "name": "depsUpgrade",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default options",
            "stability": "experimental",
            "summary": "Options for `UpgradeDependencies`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 418
          },
          "name": "depsUpgradeOptions",
          "optional": true,
          "type": {
            "fqn": "projen.javascript.UpgradeDependenciesOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "featured": "true"
            },
            "remarks": "It can be used when searching for packages in a package manager as well.\nSee https://classic.yarnpkg.com/en/docs/package-json/#toc-description",
            "stability": "experimental",
            "summary": "The description is just a string that helps people understand the purpose of the package."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 858
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Add a VSCode development environment (used for GitHub Codespaces)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 1033
          },
          "name": "devContainer",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "featured": "true"
            },
            "default": "[]",
            "remarks": "These dependencies will only be\navailable in your build environment but will not be fetched when this\nmodule is consumed.\n\nThe recommendation is to only specify the module name here (e.g.\n`express`). This will behave similar to `yarn add` or `npm install` in the\nsense that it will add the module as a dependency to your `package.json`\nfile with the latest version (`^`). You can specify semver requirements in\nthe same syntax passed to `npm i` or `yarn add` (e.g. `express@^2`) and\nthis will be what you `package.json` will eventually include.",
            "stability": "experimental",
            "summary": "Build dependencies for this module."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 850
          },
          "name": "devDeps",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Do not generate a `tsconfig.json` file (used by jsii projects since tsconfig.json is generated by the jsii compiler)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 269
          },
          "name": "disableTsconfig",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Do not generate a `tsconfig.dev.json` file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 263
          },
          "name": "disableTsconfigDev",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Docgen by Typedoc."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 257
          },
          "name": "docgen",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"docs\"",
            "stability": "experimental",
            "summary": "Docs directory."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 251
          },
          "name": "docsDirectory",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Automatically adds an `cloudfront.experimental.EdgeFunction` for each `.edge-lambda.ts` handler in your source tree. If this is disabled, you can manually add an `awscdk.AutoDiscover` component to your project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 43
          },
          "name": "edgeLambdaAutoDiscover",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"lib/index.js\"",
            "stability": "experimental",
            "summary": "Module entrypoint (`main` in `package.json`). Set to an empty string to not include `main` in your package.json."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 833
          },
          "name": "entrypoint",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- .d.ts file derived from the project's entrypoint (usually lib/index.d.ts)",
            "stability": "experimental",
            "summary": "The .d.ts file that includes the type declarations for this module."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 245
          },
          "name": "entrypointTypes",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Setup eslint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 239
          },
          "name": "eslint",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- opinionated default options",
            "stability": "experimental",
            "summary": "Eslint options."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 233
          },
          "name": "eslintOptions",
          "optional": true,
          "type": {
            "fqn": "projen.javascript.EslintOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Enable experimental support for the AWS CDK integ-runner."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 37
          },
          "name": "experimentalIntegRunner",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Include all feature flags in cdk.json."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 135
          },
          "name": "featureFlags",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "Enabled by default for root projects. Disabled for non-root projects.",
            "stability": "experimental",
            "summary": "Enable GitHub integration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 1027
          },
          "name": "github",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- see GitHubOptions",
            "stability": "experimental",
            "summary": "Options for GitHub integration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 1020
          },
          "name": "githubOptions",
          "optional": true,
          "type": {
            "fqn": "projen.github.GitHubOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Additional entries to .gitignore."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 412
          },
          "name": "gitignore",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Configuration options for .gitignore file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 1124
          },
          "name": "gitIgnoreOptions",
          "optional": true,
          "type": {
            "fqn": "projen.IgnoreFileOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Configuration options for git."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 1119
          },
          "name": "gitOptions",
          "optional": true,
          "type": {
            "fqn": "projen.GitOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Add a Gitpod development environment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 1014
          },
          "name": "gitpod",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Package's Homepage / Website."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 826
          },
          "name": "homepage",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Automatically discovers and creates integration tests for each `.integ.ts` file in under your test directory."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 31
          },
          "name": "integrationTestAutoDiscover",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Setup jest unit tests."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 407
          },
          "name": "jest",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default options",
            "stability": "experimental",
            "summary": "Jest options."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 401
          },
          "name": "jestOptions",
          "optional": true,
          "type": {
            "fqn": "projen.javascript.JestOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"latest\"",
            "stability": "experimental",
            "summary": "Version requirement of `publib` which is used to publish modules to npm."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 670
          },
          "name": "jsiiReleaseVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Keywords to include in `package.json`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 821
          },
          "name": "keywords",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Automatically adds an `awscdk.LambdaFunction` for each `.lambda.ts` handler in your source tree. If this is disabled, you can manually add an `awscdk.AutoDiscover` component to your project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 25
          },
          "name": "lambdaAutoDiscover",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Automatically adds an `awscdk.LambdaExtension` for each `.lambda-extension.ts` entrypoint in your source tree. If this is disabled, you can manually add an `awscdk.AutoDiscover` component to your project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 19
          },
          "name": "lambdaExtensionAutoDiscover",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default options",
            "stability": "experimental",
            "summary": "Common options for all AWS Lambda functions."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 13
          },
          "name": "lambdaOptions",
          "optional": true,
          "type": {
            "fqn": "projen.awscdk.LambdaFunctionCommonOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"lib\"",
            "stability": "experimental",
            "summary": "Typescript  artifacts output directory."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 227
          },
          "name": "libdir",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"Apache-2.0\"",
            "remarks": "See https://github.com/projen/projen/tree/main/license-text for a list of supported licenses.\nUse the `licensed` option if you want to no license to be specified.",
            "stability": "experimental",
            "summary": "License's SPDX identifier."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 816
          },
          "name": "license",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Indicates if a license should be added."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 808
          },
          "name": "licensed",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "{}",
            "stability": "experimental",
            "summary": "Configure logging options such as verbosity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 1114
          },
          "name": "logging",
          "optional": true,
          "type": {
            "fqn": "projen.LoggerOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Major version is not enforced.",
            "remarks": "If this is specified, we bump the latest version of this major version line.\nIf not specified, we bump the global latest version.",
            "stability": "experimental",
            "summary": "Major version to release from the default branch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 664
          },
          "name": "majorVersion",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no max",
            "stability": "experimental",
            "summary": "Minimum node.js version to require via `engines` (inclusive)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 802
          },
          "name": "maxNodeVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "deprecated": "use `githubOptions.mergify` instead",
            "stability": "deprecated",
            "summary": "Whether mergify should be enabled on this repository or not."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 1008
          },
          "name": "mergify",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default options",
            "deprecated": "use `githubOptions.mergifyOptions` instead",
            "stability": "deprecated",
            "summary": "Options for mergify."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 1001
          },
          "name": "mergifyOptions",
          "optional": true,
          "type": {
            "fqn": "projen.github.MergifyOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No minimum version is being enforced",
            "remarks": "This can be useful to set to 1, as breaking changes before the 1.x major\nrelease are not incrementing the major version number.\n\nCan not be set together with `majorVersion`.",
            "stability": "experimental",
            "summary": "Minimal Major version to release."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 656
          },
          "name": "minMajorVersion",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no \"engines\" specified",
            "stability": "experimental",
            "summary": "Minimum Node.js version to require via package.json `engines` (inclusive)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 796
          },
          "name": "minNodeVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "deprecated": "- Use `buildWorkflowOptions.mutableBuild`",
            "remarks": "This means\nthat any files synthesized by projen or e.g. test snapshots will always be up-to-date\nbefore a PR is merged.\n\nImplies that PR builds do not have anti-tamper checks.",
            "stability": "deprecated",
            "summary": "Automatically update files modified during builds to pull-request branches."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 395
          },
          "name": "mutableBuild",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- for scoped packages (e.g. `foo@bar`), the default is\n`NpmAccess.RESTRICTED`, for non-scoped packages, the default is\n`NpmAccess.PUBLIC`.",
            "stability": "experimental",
            "summary": "Access level of the npm package."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 790
          },
          "name": "npmAccess",
          "optional": true,
          "type": {
            "fqn": "projen.javascript.NpmAccess"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"latest\"",
            "remarks": "To set the npm dist-tag for release branches, set the `npmDistTag` property\nfor each branch.",
            "stability": "experimental",
            "summary": "The npmDistTag to use when publishing from the default branch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 646
          },
          "name": "npmDistTag",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "deprecated": "- use `project.addPackageIgnore`",
            "stability": "deprecated",
            "summary": "Additional entries to .npmignore."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 383
          },
          "name": "npmignore",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Defines an .npmignore file. Normally this is only needed for libraries that are packaged as tarballs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 377
          },
          "name": "npmignoreEnabled",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Configuration options for .npmignore file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 371
          },
          "name": "npmIgnoreOptions",
          "optional": true,
          "type": {
            "fqn": "projen.IgnoreFileOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- true for public packages, false otherwise",
            "remarks": "A supported package manager is required to publish a package with npm provenance statements and\nyou will need to use a supported CI/CD provider.\n\nNote that the projen `Release` and `Publisher` components are using `publib` to publish packages,\nwhich is using npm internally and supports provenance statements independently of the package manager used.",
            "stability": "experimental",
            "summary": "Should provenance statements be generated when the package is published."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 782
          },
          "name": "npmProvenance",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "deprecated": "use `npmRegistryUrl` instead",
            "remarks": "Cannot be set together with `npmRegistryUrl`.",
            "stability": "deprecated",
            "summary": "The host name of the npm registry to publish to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 771
          },
          "name": "npmRegistry",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"https://registry.npmjs.org\"",
            "remarks": "Must be a URL (e.g. start with \"https://\" or \"http://\")",
            "stability": "experimental",
            "summary": "The base URL of the npm package registry."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 764
          },
          "name": "npmRegistryUrl",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"NPM_TOKEN\"",
            "stability": "experimental",
            "summary": "GitHub secret which contains the NPM token to use when publishing packages."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 757
          },
          "name": "npmTokenSecret",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\".\"",
            "remarks": "If this project has a parent, this directory is relative to the parent\ndirectory and it cannot be the same as the parent or any of it's other\nsubprojects.",
            "stability": "experimental",
            "summary": "The root directory of the project. Relative to this directory, all files are synthesized."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 1108
          },
          "name": "outdir",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Defines a `package` task that will produce an npm tarball under the artifacts directory (e.g. `dist`)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 366
          },
          "name": "package",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "NodePackageManager.YARN_CLASSIC",
            "stability": "experimental",
            "summary": "The Node Package Manager used to execute scripts."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 751
          },
          "name": "packageManager",
          "optional": true,
          "type": {
            "fqn": "projen.javascript.NodePackageManager"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "featured": "true"
            },
            "default": "- defaults to project name",
            "stability": "experimental",
            "summary": "The \"name\" in package.json."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 745
          },
          "name": "packageName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The parent project, if this project is part of a bigger project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 1097
          },
          "name": "parent",
          "optional": true,
          "type": {
            "fqn": "projen.Project"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Options for `peerDeps`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 738
          },
          "name": "peerDependencyOptions",
          "optional": true,
          "type": {
            "fqn": "projen.javascript.PeerDependencyOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "[]",
            "remarks": "Dependencies listed here are required to\nbe installed (and satisfied) by the _consumer_ of this library. Using peer\ndependencies allows you to ensure that only a single module of a certain\nlibrary exists in the `node_modules` tree of your consumers.\n\nNote that prior to npm@7, peer dependencies are _not_ automatically\ninstalled, which means that adding peer dependencies to a library will be a\nbreaking change for your customers.\n\nUnless `peerDependencyOptions.pinnedDevDependency` is disabled (it is\nenabled by default), projen will automatically add a dev dependency with a\npinned version for each peer dependency. This will ensure that you build &\ntest your module against the lowest peer version required.",
            "stability": "experimental",
            "summary": "Peer dependencies for this module."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 733
          },
          "name": "peerDeps",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"7\"",
            "stability": "experimental",
            "summary": "The version of PNPM to use if using PNPM as a package manager."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 714
          },
          "name": "pnpmVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "[]",
            "stability": "experimental",
            "summary": "Steps to execute after build as part of the release workflow."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 638
          },
          "name": "postBuildSteps",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "projen.github.workflows.JobStep"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- normal semantic versions",
            "stability": "experimental",
            "summary": "Bump versions from the default branch as pre-releases (e.g. \"beta\", \"alpha\", \"pre\")."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 632
          },
          "name": "prerelease",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Setup prettier."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 360
          },
          "name": "prettier",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default options",
            "stability": "experimental",
            "summary": "Prettier options."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 354
          },
          "name": "prettierOptions",
          "optional": true,
          "type": {
            "fqn": "projen.javascript.PrettierOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "ProjectType.UNKNOWN",
            "deprecated": "no longer supported at the base project level",
            "stability": "deprecated",
            "summary": "Which type of project this is (library/app)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 994
          },
          "name": "projectType",
          "optional": true,
          "type": {
            "fqn": "projen.ProjectType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"npx projen\"",
            "remarks": "Can be used to customize in special environments.",
            "stability": "experimental",
            "summary": "The shell command to use in order to run the projen CLI."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 1092
          },
          "name": "projenCommand",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- use a personal access token named PROJEN_GITHUB_TOKEN",
            "stability": "experimental",
            "summary": "Choose a method of providing GitHub API access for projen workflows."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 987
          },
          "name": "projenCredentials",
          "optional": true,
          "type": {
            "fqn": "projen.github.GithubCredentials"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- true if not a subproject",
            "stability": "experimental",
            "summary": "Indicates of \"projen\" should be installed as a devDependency."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 348
          },
          "name": "projenDevDependency",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- true if projenrcJson is false",
            "stability": "experimental",
            "summary": "Generate (once) .projenrc.js (in JavaScript). Set to `false` in order to disable .projenrc.js generation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 342
          },
          "name": "projenrcJs",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Generate (once) .projenrc.json (in JSON). Set to `false` in order to disable .projenrc.json generation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 1085
          },
          "name": "projenrcJson",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default options",
            "stability": "experimental",
            "summary": "Options for .projenrc.json."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 1079
          },
          "name": "projenrcJsonOptions",
          "optional": true,
          "type": {
            "fqn": "projen.ProjenrcJsonOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default options",
            "stability": "experimental",
            "summary": "Options for .projenrc.js."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 336
          },
          "name": "projenrcJsOptions",
          "optional": true,
          "type": {
            "fqn": "projen.javascript.ProjenrcOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "pjnew": "true"
            },
            "default": "false",
            "stability": "experimental",
            "summary": "Use TypeScript for your projenrc file (`.projenrc.ts`)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 221
          },
          "name": "projenrcTs",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Options for .projenrc.ts."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 214
          },
          "name": "projenrcTsOptions",
          "optional": true,
          "type": {
            "fqn": "projen.typescript.ProjenrcOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"PROJEN_GITHUB_TOKEN\"",
            "deprecated": "use `projenCredentials`",
            "remarks": "This token needs to have the `repo`, `workflows`\nand `packages` scope.",
            "stability": "deprecated",
            "summary": "The name of a secret which includes a GitHub Personal Access Token to be used by projen workflows."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 981
          },
          "name": "projenTokenSecret",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Defaults to the latest version.",
            "stability": "experimental",
            "summary": "Version of projen to install."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 330
          },
          "name": "projenVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Instead of actually publishing to package managers, just print the publishing command."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 626
          },
          "name": "publishDryRun",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "Normally, publishing only happens within automated workflows. Enable this\nin order to create a publishing task for each publishing activity.",
            "stability": "experimental",
            "summary": "Define publishing tasks that can be executed manually as well as workflows."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 620
          },
          "name": "publishTasks",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Include a GitHub pull request template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 324
          },
          "name": "pullRequestTemplate",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default content",
            "stability": "experimental",
            "summary": "The contents of the pull request template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 318
          },
          "name": "pullRequestTemplateContents",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- { filename: 'README.md', contents: '# replace this' }",
            "stability": "experimental",
            "summary": "The README setup."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 972
          },
          "name": "readme",
          "optional": true,
          "type": {
            "fqn": "projen.SampleReadmeProps"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "ReleasableCommits.everyCommit()",
            "stability": "experimental",
            "summary": "Find commits that should be considered releasable Used to decide if a release is required."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 612
          },
          "name": "releasableCommits",
          "optional": true,
          "type": {
            "fqn": "projen.ReleasableCommits"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- true (false for subprojects)",
            "stability": "experimental",
            "summary": "Add release management to this project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 312
          },
          "name": "release",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no additional branches are used for release. you can use\n`addBranch()` to add additional branches.",
            "remarks": "A workflow will be created for each\nrelease branch which will publish releases from commits in this branch.\nEach release branch _must_ be assigned a major version number which is used\nto enforce that versions published from that branch always use that major\nversion. If multiple branches are used, the `majorVersion` field must also\nbe provided for the default branch.",
            "stability": "experimental",
            "summary": "Defines additional release branches."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 606
          },
          "name": "releaseBranches",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "projen.release.BranchOptions"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "deprecated": "Use `releaseTrigger: ReleaseTrigger.continuous()` instead",
            "stability": "deprecated",
            "summary": "Automatically release new versions every commit to one of branches in `releaseBranches`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 593
          },
          "name": "releaseEveryCommit",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Create a github issue on every failed publishing task."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 586
          },
          "name": "releaseFailureIssue",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"failed-release\"",
            "remarks": "Only applies if `releaseFailureIssue` is true.",
            "stability": "experimental",
            "summary": "The label to apply to issues indicating publish failures."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 580
          },
          "name": "releaseFailureIssueLabel",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no scheduled releases",
            "deprecated": "Use `releaseTrigger: ReleaseTrigger.scheduled()` instead",
            "stability": "deprecated",
            "summary": "CRON schedule to trigger new releases."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 573
          },
          "name": "releaseSchedule",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"v\"",
            "remarks": "Useful if you are releasing on multiple branches with overlapping version numbers.\nNote: this prefix is used to detect the latest tagged version\nwhen bumping, so if you change this on a project with an existing version\nhistory, you may need to manually tag your latest release\nwith the new prefix.",
            "stability": "experimental",
            "summary": "Automatically add the given prefix to release tags."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 566
          },
          "name": "releaseTagPrefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Automatically release to npm when new versions are introduced."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 306
          },
          "name": "releaseToNpm",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Continuous releases (`ReleaseTrigger.continuous()`)",
            "stability": "experimental",
            "summary": "The release trigger to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 556
          },
          "name": "releaseTrigger",
          "optional": true,
          "type": {
            "fqn": "projen.release.ReleaseTrigger"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- true if not a subproject",
            "deprecated": "see `release`.",
            "stability": "deprecated",
            "summary": "DEPRECATED: renamed to `release`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 300
          },
          "name": "releaseWorkflow",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"release\"",
            "stability": "experimental",
            "summary": "The name of the default release workflow."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 550
          },
          "name": "releaseWorkflowName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "A set of workflow steps to execute in order to setup the workflow container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 544
          },
          "name": "releaseWorkflowSetupSteps",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "projen.github.workflows.JobStep"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Use renovatebot to handle dependency upgrades."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 1073
          },
          "name": "renovatebot",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default options",
            "stability": "experimental",
            "summary": "Options for renovatebot."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 1067
          },
          "name": "renovatebotOptions",
          "optional": true,
          "type": {
            "fqn": "projen.RenovatebotOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "See https://classic.yarnpkg.com/en/docs/package-json/#toc-repository",
            "stability": "experimental",
            "summary": "The repository is the location where the actual code for your package lives."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 708
          },
          "name": "repository",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "If the package.json for your package is not in the root directory (for example if it is part of a monorepo), you can specify the directory in which it lives."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 702
          },
          "name": "repositoryDirectory",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "ApprovalLevel.BROADENING",
            "stability": "experimental",
            "summary": "To protect you against unintended changes that affect your security posture, the AWS CDK Toolkit prompts you to approve security-related changes before deploying them."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 129
          },
          "name": "requireApproval",
          "optional": true,
          "type": {
            "fqn": "projen.awscdk.ApprovalLevel"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Generate one-time sample in `src/` and `test/` if there are no files there."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 209
          },
          "name": "sampleCode",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- fetch all scoped packages from the public npm registry",
            "stability": "experimental",
            "summary": "Options for privately hosted scoped packages."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 697
          },
          "name": "scopedPackagesOptions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "projen.javascript.ScopedPackagesOptions"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "{}",
            "deprecated": "use `project.addTask()` or `package.setScript()`",
            "remarks": "If a script has the same name as a standard script,\nthe standard script will be overwritten.\nAlso adds the script as a task.",
            "stability": "deprecated",
            "summary": "npm scripts to include."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 691
          },
          "name": "scripts",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"src\"",
            "stability": "experimental",
            "summary": "Typescript sources directory."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 203
          },
          "name": "srcdir",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Package's Stability."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 681
          },
          "name": "stability",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "See `staleOptions` for options.",
            "stability": "experimental",
            "summary": "Auto-close of stale issues and pull request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 966
          },
          "name": "stale",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- see defaults in `StaleOptions`",
            "remarks": "To disable set `stale` to `false`.",
            "stability": "experimental",
            "summary": "Auto-close stale issues and pull requests."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 959
          },
          "name": "staleOptions",
          "optional": true,
          "type": {
            "fqn": "projen.github.StaleOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"test\"",
            "remarks": "Tests files should be named `xxx.test.ts`.\nIf this directory is under `srcdir` (e.g. `src/test`, `src/__tests__`),\nthen tests are going to be compiled into `lib/` and executed as javascript.\nIf the test directory is outside of `src`, then we configure jest to\ncompile the code in-memory.",
            "stability": "experimental",
            "summary": "Jest tests directory."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 197
          },
          "name": "testdir",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default options",
            "stability": "experimental",
            "summary": "Custom TSConfig."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 187
          },
          "name": "tsconfig",
          "optional": true,
          "type": {
            "fqn": "projen.javascript.TypescriptConfigOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- use the production tsconfig options",
            "stability": "experimental",
            "summary": "Custom tsconfig options for the development tsconfig.json file (used for testing)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 181
          },
          "name": "tsconfigDev",
          "optional": true,
          "type": {
            "fqn": "projen.javascript.TypescriptConfigOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"tsconfig.dev.json\"",
            "stability": "experimental",
            "summary": "The name of the development tsconfig.json file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 175
          },
          "name": "tsconfigDevFile",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Options for ts-jest."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 169
          },
          "name": "tsJestOptions",
          "optional": true,
          "type": {
            "fqn": "projen.typescript.TsJestOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"latest\"",
            "remarks": "NOTE: Typescript is not semantically versioned and should remain on the\nsame minor, so we recommend using a `~` dependency (e.g. `~1.2.3`).",
            "stability": "experimental",
            "summary": "TypeScript version to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 164
          },
          "name": "typescriptVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- standard configuration applicable for GitHub repositories",
            "remarks": "Given values either append to default configuration or overwrite values in it.",
            "stability": "experimental",
            "summary": "Custom configuration used when creating changelog with standard-version package."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 539
          },
          "name": "versionrcOptions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "Enabled by default for root projects. Disabled for non-root projects.",
            "stability": "experimental",
            "summary": "Enable VSCode integration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 952
          },
          "name": "vscode",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "[]",
            "stability": "experimental",
            "summary": "Glob patterns to exclude from `cdk watch`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 123
          },
          "name": "watchExcludes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "[]",
            "stability": "experimental",
            "summary": "Glob patterns to include in `cdk watch`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 117
          },
          "name": "watchIncludes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"yarn install --frozen-lockfile && yarn projen\"",
            "stability": "experimental",
            "summary": "Workflow steps to use in order to bootstrap this repo."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 293
          },
          "name": "workflowBootstrapSteps",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "projen.github.workflows.JobStep"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default image",
            "stability": "experimental",
            "summary": "Container image to use for GitHub workflows."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 532
          },
          "name": "workflowContainerImage",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- GitHub Actions",
            "stability": "experimental",
            "summary": "The git identity to use in workflows."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 287
          },
          "name": "workflowGitIdentity",
          "optional": true,
          "type": {
            "fqn": "projen.github.GitIdentity"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- same as `minNodeVersion`",
            "stability": "experimental",
            "summary": "The node version to use in GitHub workflows."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 281
          },
          "name": "workflowNodeVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Enable Node.js package cache in GitHub workflows."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 275
          },
          "name": "workflowPackageCache",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "description": "Defines a target Runner by labels",
              "throws": "{Error} if both `runsOn` and `runsOnGroup` are specified"
            },
            "default": "[\"ubuntu-latest\"]",
            "stability": "experimental",
            "summary": "Github Runner selection labels."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 526
          },
          "name": "workflowRunsOn",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "description": "Defines a target Runner Group by name and/or labels",
              "throws": "{Error} if both `runsOn` and `runsOnGroup` are specified"
            },
            "stability": "experimental",
            "summary": "Github Runner Group selection options."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 518
          },
          "name": "workflowRunsOnGroup",
          "optional": true,
          "type": {
            "fqn": "projen.GroupRunnerOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Yarn Berry v4 with all default options",
            "stability": "experimental",
            "summary": "Options for Yarn Berry."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/aws-cdk-ts-app-options.ts",
            "line": 676
          },
          "name": "yarnBerryOptions",
          "optional": true,
          "type": {
            "fqn": "projen.javascript.YarnBerryOptions"
          }
        }
      ],
      "symbolId": "infrastructure/projects/typescript/aws-cdk-ts-app-options:AwsCdkTypeScriptAppOptions"
    },
    "@aws/pdk.infrastructure.DeploymentStage": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws/pdk.infrastructure.DeploymentStage",
      "kind": "interface",
      "locationInModule": {
        "filename": "infrastructure/components/deployment-stage.ts",
        "line": 3
      },
      "name": "DeploymentStage",
      "namespace": "infrastructure",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Account to deploy into."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/components/deployment-stage.ts",
            "line": 12
          },
          "name": "account",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "AWS region to deploy into."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/components/deployment-stage.ts",
            "line": 17
          },
          "name": "region",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Stage name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/components/deployment-stage.ts",
            "line": 7
          },
          "name": "stageName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "infrastructure/components/deployment-stage:DeploymentStage"
    },
    "@aws/pdk.infrastructure.InfrastructureJavaProject": {
      "assembly": "@aws/pdk",
      "base": "projen.awscdk.AwsCdkJavaApp",
      "docs": {
        "stability": "stable",
        "summary": "Synthesizes a Infrastructure Java Project."
      },
      "fqn": "@aws/pdk.infrastructure.InfrastructureJavaProject",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "infrastructure/projects/java/infrastructure-java-project.ts",
          "line": 66
        },
        "parameters": [
          {
            "name": "options",
            "type": {
              "fqn": "@aws/pdk.infrastructure.InfrastructureJavaProjectOptions"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "infrastructure/projects/java/infrastructure-java-project.ts",
        "line": 65
      },
      "name": "InfrastructureJavaProject",
      "namespace": "infrastructure",
      "symbolId": "infrastructure/projects/java/infrastructure-java-project:InfrastructureJavaProject"
    },
    "@aws/pdk.infrastructure.InfrastructureJavaProjectOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Configuration options for the InfrastructureJavaProject."
      },
      "fqn": "@aws/pdk.infrastructure.InfrastructureJavaProjectOptions",
      "interfaces": [
        "@aws/pdk.infrastructure.AwsCdkJavaAppOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "infrastructure/projects/java/infrastructure-java-project.ts",
        "line": 19
      },
      "name": "InfrastructureJavaProjectOptions",
      "namespace": "infrastructure",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- false",
            "stability": "stable",
            "summary": "Allow self sign up for the UserIdentity construct."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/java/infrastructure-java-project.ts",
            "line": 37
          },
          "name": "allowSignup",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "deprecated": "use cloudscapeReactTsWebsites",
            "stability": "deprecated",
            "summary": "CloudscapeReactTsWebsiteProject instance to use when setting up the initial project sample code."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/java/infrastructure-java-project.ts",
            "line": 49
          },
          "name": "cloudscapeReactTsWebsite",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.cloudscape_react_ts_website.CloudscapeReactTsWebsiteProject"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "CloudscapeReactTsWebsiteProject instances to use when setting up the initial project sample code."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/java/infrastructure-java-project.ts",
            "line": 59
          },
          "name": "cloudscapeReactTsWebsites",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.cloudscape_react_ts_website.CloudscapeReactTsWebsiteProject"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "infra-dev",
            "stability": "stable",
            "summary": "Stack name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/java/infrastructure-java-project.ts",
            "line": 25
          },
          "name": "stackName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "List of deployment stages."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/java/infrastructure-java-project.ts",
            "line": 30
          },
          "name": "stages",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.infrastructure.DeploymentStage"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "deprecated": "use typeSafeApis",
            "stability": "deprecated",
            "summary": "TypeSafeApi instance to use when setting up the initial project sample code."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/java/infrastructure-java-project.ts",
            "line": 43
          },
          "name": "typeSafeApi",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.type_safe_api.TypeSafeApiProject"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "TypeSafeApi instances to use when setting up the initial project sample code."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/java/infrastructure-java-project.ts",
            "line": 54
          },
          "name": "typeSafeApis",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.type_safe_api.TypeSafeApiProject"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "infrastructure/projects/java/infrastructure-java-project:InfrastructureJavaProjectOptions"
    },
    "@aws/pdk.infrastructure.InfrastructurePyProject": {
      "assembly": "@aws/pdk",
      "base": "projen.awscdk.AwsCdkPythonApp",
      "docs": {
        "stability": "stable",
        "summary": "Synthesizes a Infrastructure Python Project."
      },
      "fqn": "@aws/pdk.infrastructure.InfrastructurePyProject",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "infrastructure/projects/python/infrastructure-py-project.ts",
          "line": 66
        },
        "parameters": [
          {
            "name": "options",
            "type": {
              "fqn": "@aws/pdk.infrastructure.InfrastructurePyProjectOptions"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "infrastructure/projects/python/infrastructure-py-project.ts",
        "line": 65
      },
      "name": "InfrastructurePyProject",
      "namespace": "infrastructure",
      "symbolId": "infrastructure/projects/python/infrastructure-py-project:InfrastructurePyProject"
    },
    "@aws/pdk.infrastructure.InfrastructurePyProjectOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Configuration options for the InfrastructurePyProject."
      },
      "fqn": "@aws/pdk.infrastructure.InfrastructurePyProjectOptions",
      "interfaces": [
        "@aws/pdk.infrastructure.AwsCdkPythonAppOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "infrastructure/projects/python/infrastructure-py-project.ts",
        "line": 19
      },
      "name": "InfrastructurePyProjectOptions",
      "namespace": "infrastructure",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- false",
            "stability": "stable",
            "summary": "Allow self sign up for the UserIdentity construct."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/infrastructure-py-project.ts",
            "line": 37
          },
          "name": "allowSignup",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "deprecated": "use cloudscapeReactTsWebsites",
            "stability": "deprecated",
            "summary": "CloudscapeReactTsWebsiteProject instance to use when setting up the initial project sample code."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/infrastructure-py-project.ts",
            "line": 49
          },
          "name": "cloudscapeReactTsWebsite",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.cloudscape_react_ts_website.CloudscapeReactTsWebsiteProject"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "CloudscapeReactTsWebsiteProject instances to use when setting up the initial project sample code."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/infrastructure-py-project.ts",
            "line": 59
          },
          "name": "cloudscapeReactTsWebsites",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.cloudscape_react_ts_website.CloudscapeReactTsWebsiteProject"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "infra-dev",
            "stability": "stable",
            "summary": "Stack name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/infrastructure-py-project.ts",
            "line": 25
          },
          "name": "stackName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "List of deployment stages."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/infrastructure-py-project.ts",
            "line": 30
          },
          "name": "stages",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.infrastructure.DeploymentStage"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "deprecated": "use typeSafeApis",
            "stability": "deprecated",
            "summary": "TypeSafeApi instance to use when setting up the initial project sample code."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/infrastructure-py-project.ts",
            "line": 43
          },
          "name": "typeSafeApi",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.type_safe_api.TypeSafeApiProject"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "TypeSafeApi instances to use when setting up the initial project sample code."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/python/infrastructure-py-project.ts",
            "line": 54
          },
          "name": "typeSafeApis",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.type_safe_api.TypeSafeApiProject"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "infrastructure/projects/python/infrastructure-py-project:InfrastructurePyProjectOptions"
    },
    "@aws/pdk.infrastructure.InfrastructureTsProject": {
      "assembly": "@aws/pdk",
      "base": "projen.awscdk.AwsCdkTypeScriptApp",
      "docs": {
        "stability": "stable",
        "summary": "Synthesizes a Infrastructure Typescript Project."
      },
      "fqn": "@aws/pdk.infrastructure.InfrastructureTsProject",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "infrastructure/projects/typescript/infrastructure-ts-project.ts",
          "line": 76
        },
        "parameters": [
          {
            "name": "options",
            "type": {
              "fqn": "@aws/pdk.infrastructure.InfrastructureTsProjectOptions"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "infrastructure/projects/typescript/infrastructure-ts-project.ts",
        "line": 75
      },
      "name": "InfrastructureTsProject",
      "namespace": "infrastructure",
      "symbolId": "infrastructure/projects/typescript/infrastructure-ts-project:InfrastructureTsProject"
    },
    "@aws/pdk.infrastructure.InfrastructureTsProjectOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Configuration options for the InfrastructureTsProject."
      },
      "fqn": "@aws/pdk.infrastructure.InfrastructureTsProjectOptions",
      "interfaces": [
        "@aws/pdk.infrastructure.AwsCdkTypeScriptAppOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "infrastructure/projects/typescript/infrastructure-ts-project.ts",
        "line": 23
      },
      "name": "InfrastructureTsProjectOptions",
      "namespace": "infrastructure",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- false",
            "stability": "stable",
            "summary": "Allow self sign up for the UserIdentity construct."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/infrastructure-ts-project.ts",
            "line": 42
          },
          "name": "allowSignup",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "deprecated": "use cloudscapeReactTsWebsites",
            "stability": "deprecated",
            "summary": "CloudscapeReactTsWebsiteProject instance to use when setting up the initial project sample code."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/infrastructure-ts-project.ts",
            "line": 54
          },
          "name": "cloudscapeReactTsWebsite",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.cloudscape_react_ts_website.CloudscapeReactTsWebsiteProject"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "CloudscapeReactTsWebsiteProject instances to use when setting up the initial project sample code."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/infrastructure-ts-project.ts",
            "line": 69
          },
          "name": "cloudscapeReactTsWebsites",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.cloudscape_react_ts_website.CloudscapeReactTsWebsiteProject"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "infra-dev",
            "stability": "stable",
            "summary": "Stack name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/infrastructure-ts-project.ts",
            "line": 30
          },
          "name": "stackName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "List of deployment stages."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/infrastructure-ts-project.ts",
            "line": 35
          },
          "name": "stages",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.infrastructure.DeploymentStage"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "deprecated": "use typeSafeApis",
            "stability": "deprecated",
            "summary": "TypeSafeApi instance to use when setting up the initial project sample code."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/infrastructure-ts-project.ts",
            "line": 48
          },
          "name": "typeSafeApi",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.type_safe_api.TypeSafeApiProject"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "TypeSafeApi instances to use when setting up the initial project sample code."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/infrastructure-ts-project.ts",
            "line": 59
          },
          "name": "typeSafeApis",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.type_safe_api.TypeSafeApiProject"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "TypeSafeWebSocketApi instances to use when setting up the initial project sample code."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "infrastructure/projects/typescript/infrastructure-ts-project.ts",
            "line": 64
          },
          "name": "typeSafeWebSocketApis",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.type_safe_api.TypeSafeWebSocketApiProject"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "infrastructure/projects/typescript/infrastructure-ts-project:InfrastructureTsProjectOptions"
    },
    "@aws/pdk.monorepo.INxProjectCore": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "Interface that all NXProject implementations should implement."
      },
      "fqn": "@aws/pdk.monorepo.INxProjectCore",
      "kind": "interface",
      "locationInModule": {
        "filename": "monorepo/components/nx-configurator.ts",
        "line": 44
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "throws": "error if this is called on a dependent which does not have a NXProject component attached."
            },
            "remarks": "This is typically\nused in polygot repos where a Typescript project wants a build dependency\non a Python project as an example.",
            "stability": "stable",
            "summary": "Create an implicit dependency between two Projects."
          },
          "locationInModule": {
            "filename": "monorepo/components/nx-configurator.ts",
            "line": 79
          },
          "name": "addImplicitDependency",
          "parameters": [
            {
              "docs": {
                "summary": "project you want to have the dependency."
              },
              "name": "dependent",
              "type": {
                "fqn": "projen.Project"
              }
            },
            {
              "docs": {
                "summary": "project you wish to depend on."
              },
              "name": "dependee",
              "type": {
                "union": {
                  "types": [
                    {
                      "primitive": "string"
                    },
                    {
                      "fqn": "projen.Project"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Adds a dependency between two Java Projects in the monorepo."
          },
          "locationInModule": {
            "filename": "monorepo/components/nx-configurator.ts",
            "line": 86
          },
          "name": "addJavaDependency",
          "parameters": [
            {
              "docs": {
                "summary": "project you want to have the dependency."
              },
              "name": "dependent",
              "type": {
                "fqn": "projen.java.JavaProject"
              }
            },
            {
              "docs": {
                "summary": "project you wish to depend on."
              },
              "name": "dependee",
              "type": {
                "fqn": "projen.java.JavaProject"
              }
            }
          ]
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Add project task that executes `npx nx run-many ...` style command."
          },
          "locationInModule": {
            "filename": "monorepo/components/nx-configurator.ts",
            "line": 68
          },
          "name": "addNxRunManyTask",
          "parameters": [
            {
              "docs": {
                "summary": "task name."
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "options."
              },
              "name": "options",
              "type": {
                "fqn": "@aws/pdk.monorepo.Nx.RunManyOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "projen.Task"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "throws": "error if the dependent does not have Poetry enabled"
            },
            "remarks": "The dependent must have Poetry enabled.",
            "stability": "stable",
            "summary": "Adds a dependency between two Python Projects in the monorepo."
          },
          "locationInModule": {
            "filename": "monorepo/components/nx-configurator.ts",
            "line": 94
          },
          "name": "addPythonPoetryDependency",
          "parameters": [
            {
              "docs": {
                "summary": "project you want to have the dependency (must be a Poetry Python Project)."
              },
              "name": "dependent",
              "type": {
                "fqn": "projen.python.PythonProject"
              }
            },
            {
              "docs": {
                "summary": "project you wish to depend on."
              },
              "name": "dependee",
              "type": {
                "fqn": "projen.python.PythonProject"
              }
            }
          ]
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Helper to format `npx nx run-many ...` style command."
          },
          "locationInModule": {
            "filename": "monorepo/components/nx-configurator.ts",
            "line": 60
          },
          "name": "composeNxRunManyCommand",
          "parameters": [
            {
              "name": "options",
              "type": {
                "fqn": "@aws/pdk.monorepo.Nx.RunManyOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Helper to format `npx nx run-many ...` style command execution in package manager."
          },
          "locationInModule": {
            "filename": "monorepo/components/nx-configurator.ts",
            "line": 54
          },
          "name": "execNxRunManyCommand",
          "parameters": [
            {
              "name": "options",
              "type": {
                "fqn": "@aws/pdk.monorepo.Nx.RunManyOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "INxProjectCore",
      "namespace": "monorepo",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "This should be implemented using a getter.",
            "stability": "stable",
            "summary": "Return the NxWorkspace instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/components/nx-configurator.ts",
            "line": 48
          },
          "name": "nx",
          "type": {
            "fqn": "@aws/pdk.monorepo.NxWorkspace"
          }
        }
      ],
      "symbolId": "monorepo/components/nx-configurator:INxProjectCore"
    },
    "@aws/pdk.monorepo.JavaProjectOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "JavaProjectOptions."
      },
      "fqn": "@aws/pdk.monorepo.JavaProjectOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "monorepo/projects/java/java-project-options.ts",
        "line": 7
      },
      "name": "JavaProjectOptions",
      "namespace": "monorepo",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "$BASEDIR",
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/java/java-project-options.ts",
            "line": 353
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "featured": "true"
            },
            "default": "\"my-app\"",
            "remarks": "Although\nthe groupId is important, people within the group will rarely mention the\ngroupId in discussion (they are often all be the same ID, such as the\nMojoHaus project groupId: org.codehaus.mojo). It, along with the groupId,\ncreates a key that separates this project from every other project in the\nworld (at least, it should :) ). Along with the groupId, the artifactId\nfully defines the artifact's living quarters within the repository. In the\ncase of the above project, my-project lives in\n$M2_REPO/org/codehaus/mojo/my-project.",
            "stability": "experimental",
            "summary": "The artifactId is generally the name that the project is known by."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/java/java-project-options.ts",
            "line": 164
          },
          "name": "artifactId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- auto approve is disabled",
            "stability": "experimental",
            "summary": "Enable and configure the 'auto approve' workflow."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/java/java-project-options.ts",
            "line": 280
          },
          "name": "autoApproveOptions",
          "optional": true,
          "type": {
            "fqn": "projen.github.AutoApproveOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "Has no effect if `github.mergify`\nis set to false.",
            "stability": "experimental",
            "summary": "Enable automatic merging on GitHub."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/java/java-project-options.ts",
            "line": 274
          },
          "name": "autoMerge",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- see defaults in `AutoMergeOptions`",
            "remarks": "Has no effect if\n`github.mergify` or `autoMerge` is set to false.",
            "stability": "experimental",
            "summary": "Configure options for automatic merging on GitHub."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/java/java-project-options.ts",
            "line": 266
          },
          "name": "autoMergeOptions",
          "optional": true,
          "type": {
            "fqn": "projen.github.AutoMergeOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- true, but false for subprojects",
            "stability": "experimental",
            "summary": "Add a `clobber` task which resets the repo to origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/java/java-project-options.ts",
            "line": 258
          },
          "name": "clobber",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Whether to commit the managed files by default."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/java/java-project-options.ts",
            "line": 349
          },
          "name": "commitGenerated",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- defaults",
            "stability": "experimental",
            "summary": "Compile options."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/java/java-project-options.ts",
            "line": 83
          },
          "name": "compileOptions",
          "optional": true,
          "type": {
            "fqn": "projen.java.MavenCompileOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "featured": "true"
            },
            "default": "[]",
            "remarks": "Additional dependencies can be added via `project.addDependency()`.",
            "stability": "experimental",
            "summary": "List of runtime dependencies for this project. Dependencies use the format: `<groupId>/<artifactId>@<semver>`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/java/java-project-options.ts",
            "line": 77
          },
          "name": "deps",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "featured": "true"
            },
            "default": "undefined",
            "remarks": "Although this should not replace\nformal documentation, a quick comment to any readers of the POM is always\nhelpful.",
            "stability": "experimental",
            "summary": "Description of a project is always good."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/java/java-project-options.ts",
            "line": 115
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Add a VSCode development environment (used for GitHub Codespaces)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/java/java-project-options.ts",
            "line": 252
          },
          "name": "devContainer",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"dist/java\"",
            "stability": "experimental",
            "summary": "Final artifact output directory."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/java/java-project-options.ts",
            "line": 67
          },
          "name": "distdir",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "Enabled by default for root projects. Disabled for non-root projects.",
            "stability": "experimental",
            "summary": "Enable GitHub integration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/java/java-project-options.ts",
            "line": 246
          },
          "name": "github",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- see GitHubOptions",
            "stability": "experimental",
            "summary": "Options for GitHub integration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/java/java-project-options.ts",
            "line": 239
          },
          "name": "githubOptions",
          "optional": true,
          "type": {
            "fqn": "projen.github.GitHubOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Configuration options for .gitignore file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/java/java-project-options.ts",
            "line": 343
          },
          "name": "gitIgnoreOptions",
          "optional": true,
          "type": {
            "fqn": "projen.IgnoreFileOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Configuration options for git."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/java/java-project-options.ts",
            "line": 338
          },
          "name": "gitOptions",
          "optional": true,
          "type": {
            "fqn": "projen.GitOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Add a Gitpod development environment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/java/java-project-options.ts",
            "line": 233
          },
          "name": "gitpod",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "featured": "true"
            },
            "default": "\"org.acme\"",
            "remarks": "For example,\nall core Maven artifacts do (well, should) live under the groupId\norg.apache.maven. Group ID's do not necessarily use the dot notation, for\nexample, the junit project. Note that the dot-notated groupId does not have\nto correspond to the package structure that the project contains. It is,\nhowever, a good practice to follow. When stored within a repository, the\ngroup acts much like the Java packaging structure does in an operating\nsystem. The dots are replaced by OS specific directory separators (such as\n'/' in Unix) which becomes a relative directory structure from the base\nrepository. In the example given, the org.codehaus.mojo group lives within\nthe directory $M2_REPO/org/codehaus/mojo.",
            "stability": "experimental",
            "summary": "This is generally unique amongst an organization or a project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/java/java-project-options.ts",
            "line": 148
          },
          "name": "groupId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Include junit tests."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/java/java-project-options.ts",
            "line": 61
          },
          "name": "junit",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- defaults",
            "stability": "experimental",
            "summary": "junit options."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/java/java-project-options.ts",
            "line": 55
          },
          "name": "junitOptions",
          "optional": true,
          "type": {
            "fqn": "projen.java.JunitOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "{}",
            "stability": "experimental",
            "summary": "Configure logging options such as verbosity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/java/java-project-options.ts",
            "line": 333
          },
          "name": "logging",
          "optional": true,
          "type": {
            "fqn": "projen.LoggerOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "deprecated": "use `githubOptions.mergify` instead",
            "stability": "deprecated",
            "summary": "Whether mergify should be enabled on this repository or not."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/java/java-project-options.ts",
            "line": 227
          },
          "name": "mergify",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default options",
            "deprecated": "use `githubOptions.mergifyOptions` instead",
            "stability": "deprecated",
            "summary": "Options for mergify."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/java/java-project-options.ts",
            "line": 220
          },
          "name": "mergifyOptions",
          "optional": true,
          "type": {
            "fqn": "projen.github.MergifyOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\".\"",
            "remarks": "If this project has a parent, this directory is relative to the parent\ndirectory and it cannot be the same as the parent or any of it's other\nsubprojects.",
            "stability": "experimental",
            "summary": "The root directory of the project. Relative to this directory, all files are synthesized."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/java/java-project-options.ts",
            "line": 327
          },
          "name": "outdir",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"jar\"",
            "stability": "experimental",
            "summary": "Project packaging format."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/java/java-project-options.ts",
            "line": 105
          },
          "name": "packaging",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- defaults",
            "stability": "experimental",
            "summary": "Packaging options."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/java/java-project-options.ts",
            "line": 49
          },
          "name": "packagingOptions",
          "optional": true,
          "type": {
            "fqn": "projen.java.MavenPackagingOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The parent project, if this project is part of a bigger project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/java/java-project-options.ts",
            "line": 316
          },
          "name": "parent",
          "optional": true,
          "type": {
            "fqn": "projen.Project"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "featured": "true"
            },
            "default": "undefined",
            "stability": "experimental",
            "summary": "A Parent Pom can be used to have a child project inherit properties/plugins/ect in order to reduce duplication and keep standards across a large amount of repos."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/java/java-project-options.ts",
            "line": 99
          },
          "name": "parentPom",
          "optional": true,
          "type": {
            "fqn": "projen.java.ParentPom"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "ProjectType.UNKNOWN",
            "deprecated": "no longer supported at the base project level",
            "stability": "deprecated",
            "summary": "Which type of project this is (library/app)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/java/java-project-options.ts",
            "line": 213
          },
          "name": "projectType",
          "optional": true,
          "type": {
            "fqn": "projen.ProjectType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"npx projen\"",
            "remarks": "Can be used to customize in special environments.",
            "stability": "experimental",
            "summary": "The shell command to use in order to run the projen CLI."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/java/java-project-options.ts",
            "line": 311
          },
          "name": "projenCommand",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- use a personal access token named PROJEN_GITHUB_TOKEN",
            "stability": "experimental",
            "summary": "Choose a method of providing GitHub API access for projen workflows."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/java/java-project-options.ts",
            "line": 206
          },
          "name": "projenCredentials",
          "optional": true,
          "type": {
            "fqn": "projen.github.GithubCredentials"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "This will install `projen` as a java dependency and will add a `synth` task which\nwill compile & execute `main()` from `src/main/java/projenrc.java`.",
            "stability": "experimental",
            "summary": "Use projenrc in java."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/java/java-project-options.ts",
            "line": 43
          },
          "name": "projenrcJava",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default options",
            "stability": "experimental",
            "summary": "Options related to projenrc in java."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/java/java-project-options.ts",
            "line": 35
          },
          "name": "projenrcJavaOptions",
          "optional": true,
          "type": {
            "fqn": "projen.java.ProjenrcOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Generate (once) .projenrc.json (in JSON). Set to `false` in order to disable .projenrc.json generation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/java/java-project-options.ts",
            "line": 304
          },
          "name": "projenrcJson",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default options",
            "stability": "experimental",
            "summary": "Options for .projenrc.json."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/java/java-project-options.ts",
            "line": 298
          },
          "name": "projenrcJsonOptions",
          "optional": true,
          "type": {
            "fqn": "projen.ProjenrcJsonOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"PROJEN_GITHUB_TOKEN\"",
            "deprecated": "use `projenCredentials`",
            "remarks": "This token needs to have the `repo`, `workflows`\nand `packages` scope.",
            "stability": "deprecated",
            "summary": "The name of a secret which includes a GitHub Personal Access Token to be used by projen workflows."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/java/java-project-options.ts",
            "line": 200
          },
          "name": "projenTokenSecret",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- { filename: 'README.md', contents: '# replace this' }",
            "stability": "experimental",
            "summary": "The README setup."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/java/java-project-options.ts",
            "line": 191
          },
          "name": "readme",
          "optional": true,
          "type": {
            "fqn": "projen.SampleReadmeProps"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Use renovatebot to handle dependency upgrades."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/java/java-project-options.ts",
            "line": 292
          },
          "name": "renovatebot",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default options",
            "stability": "experimental",
            "summary": "Options for renovatebot."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/java/java-project-options.ts",
            "line": 286
          },
          "name": "renovatebotOptions",
          "optional": true,
          "type": {
            "fqn": "projen.RenovatebotOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Include sample code and test if the relevant directories don't exist."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/java/java-project-options.ts",
            "line": 19
          },
          "name": "sample",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"org.acme\"",
            "stability": "experimental",
            "summary": "The java package to use for the code sample."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/java/java-project-options.ts",
            "line": 13
          },
          "name": "sampleJavaPackage",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "See `staleOptions` for options.",
            "stability": "experimental",
            "summary": "Auto-close of stale issues and pull request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/java/java-project-options.ts",
            "line": 185
          },
          "name": "stale",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- see defaults in `StaleOptions`",
            "remarks": "To disable set `stale` to `false`.",
            "stability": "experimental",
            "summary": "Auto-close stale issues and pull requests."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/java/java-project-options.ts",
            "line": 178
          },
          "name": "staleOptions",
          "optional": true,
          "type": {
            "fqn": "projen.github.StaleOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "featured": "true"
            },
            "default": "[]",
            "remarks": "Additional dependencies can be added via `project.addTestDependency()`.",
            "stability": "experimental",
            "summary": "List of test dependencies for this project. Dependencies use the format: `<groupId>/<artifactId>@<semver>`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/java/java-project-options.ts",
            "line": 29
          },
          "name": "testDeps",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "featured": "true"
            },
            "default": "undefined",
            "remarks": "This is a nice gesture for\nprojects users, however, so that they know where the project lives.",
            "stability": "experimental",
            "summary": "The URL, like the name, is not required."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/java/java-project-options.ts",
            "line": 92
          },
          "name": "url",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "featured": "true"
            },
            "default": "\"0.1.0\"",
            "remarks": "groupId:artifactId denotes a\nsingle project but they cannot delineate which incarnation of that project\nwe are talking about. Do we want the junit:junit of 2018 (version 4.12), or\nof 2007 (version 3.8.2)? In short: code changes, those changes should be\nversioned, and this element keeps those versions in line. It is also used\nwithin an artifact's repository to separate versions from each other.\nmy-project version 1.0 files live in the directory structure\n$M2_REPO/org/codehaus/mojo/my-project/1.0.",
            "stability": "experimental",
            "summary": "This is the last piece of the naming puzzle."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/java/java-project-options.ts",
            "line": 130
          },
          "name": "version",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "Enabled by default for root projects. Disabled for non-root projects.",
            "stability": "experimental",
            "summary": "Enable VSCode integration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/java/java-project-options.ts",
            "line": 171
          },
          "name": "vscode",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "monorepo/projects/java/java-project-options:JavaProjectOptions"
    },
    "@aws/pdk.monorepo.LicenseOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "License options."
      },
      "fqn": "@aws/pdk.monorepo.LicenseOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "monorepo/components/nx-configurator.ts",
        "line": 104
      },
      "name": "LicenseOptions",
      "namespace": "monorepo",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "If the license text for the given spdx has $copyright_owner, this option must be specified.",
            "stability": "stable",
            "summary": "Copyright owner."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/components/nx-configurator.ts",
            "line": 117
          },
          "name": "copyrightOwner",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Whether to disable the generation of default licenses."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/components/nx-configurator.ts",
            "line": 129
          },
          "name": "disableDefaultLicenses",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Arbitrary license text."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/components/nx-configurator.ts",
            "line": 122
          },
          "name": "licenseText",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "https://github.com/projen/projen/tree/main/license-text for list of supported licenses",
            "stability": "stable",
            "summary": "License type (SPDX)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/components/nx-configurator.ts",
            "line": 110
          },
          "name": "spdx",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "monorepo/components/nx-configurator:LicenseOptions"
    },
    "@aws/pdk.monorepo.MonorepoJavaOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Configuration options for the NxMonorepoJavaProject."
      },
      "fqn": "@aws/pdk.monorepo.MonorepoJavaOptions",
      "interfaces": [
        "@aws/pdk.monorepo.JavaProjectOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "monorepo/projects/java/monorepo-java.ts",
        "line": 26
      },
      "name": "MonorepoJavaOptions",
      "namespace": "monorepo",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/java/monorepo-java.ts",
            "line": 27
          },
          "name": "defaultReleaseBranch",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Whether to disable the generation of default licenses."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/java/monorepo-java.ts",
            "line": 34
          },
          "name": "disableDefaultLicenses",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "monorepo/projects/java/monorepo-java:MonorepoJavaOptions"
    },
    "@aws/pdk.monorepo.MonorepoJavaProject": {
      "assembly": "@aws/pdk",
      "base": "projen.java.JavaProject",
      "docs": {
        "custom": {
          "pjid": "monorepo-java"
        },
        "stability": "stable",
        "summary": "This project type will bootstrap a NX based monorepo with support for polygot builds, build caching, dependency graph visualization and much more."
      },
      "fqn": "@aws/pdk.monorepo.MonorepoJavaProject",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "monorepo/projects/java/monorepo-java.ts",
          "line": 52
        },
        "parameters": [
          {
            "name": "options",
            "type": {
              "fqn": "@aws/pdk.monorepo.MonorepoJavaOptions"
            }
          }
        ]
      },
      "interfaces": [
        "@aws/pdk.monorepo.INxProjectCore"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "monorepo/projects/java/monorepo-java.ts",
        "line": 43
      },
      "methods": [
        {
          "docs": {
            "custom": {
              "inheritdoc": "true"
            },
            "remarks": "This is typically\nused in polygot repos where a Typescript project wants a build dependency\non a Python project as an example.",
            "stability": "stable",
            "summary": "Create an implicit dependency between two Projects."
          },
          "locationInModule": {
            "filename": "monorepo/projects/java/monorepo-java.ts",
            "line": 161
          },
          "name": "addImplicitDependency",
          "overrides": "@aws/pdk.monorepo.INxProjectCore",
          "parameters": [
            {
              "name": "dependent",
              "type": {
                "fqn": "projen.Project"
              }
            },
            {
              "name": "dependee",
              "type": {
                "union": {
                  "types": [
                    {
                      "primitive": "string"
                    },
                    {
                      "fqn": "projen.Project"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "docs": {
            "custom": {
              "inheritdoc": "true"
            },
            "stability": "stable",
            "summary": "Adds a dependency between two Java Projects in the monorepo."
          },
          "locationInModule": {
            "filename": "monorepo/projects/java/monorepo-java.ts",
            "line": 171
          },
          "name": "addJavaDependency",
          "overrides": "@aws/pdk.monorepo.INxProjectCore",
          "parameters": [
            {
              "name": "dependent",
              "type": {
                "fqn": "projen.java.JavaProject"
              }
            },
            {
              "name": "dependee",
              "type": {
                "fqn": "projen.java.JavaProject"
              }
            }
          ]
        },
        {
          "docs": {
            "custom": {
              "inheritdoc": "true"
            },
            "stability": "stable",
            "summary": "Add project task that executes `npx nx run-many ...` style command."
          },
          "locationInModule": {
            "filename": "monorepo/projects/java/monorepo-java.ts",
            "line": 154
          },
          "name": "addNxRunManyTask",
          "overrides": "@aws/pdk.monorepo.INxProjectCore",
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws/pdk.monorepo.Nx.RunManyOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "projen.Task"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "inheritdoc": "true"
            },
            "remarks": "The dependent must have Poetry enabled.",
            "stability": "stable",
            "summary": "Adds a dependency between two Python Projects in the monorepo."
          },
          "locationInModule": {
            "filename": "monorepo/projects/java/monorepo-java.ts",
            "line": 181
          },
          "name": "addPythonPoetryDependency",
          "overrides": "@aws/pdk.monorepo.INxProjectCore",
          "parameters": [
            {
              "name": "dependent",
              "type": {
                "fqn": "projen.python.PythonProject"
              }
            },
            {
              "name": "dependee",
              "type": {
                "fqn": "projen.python.PythonProject"
              }
            }
          ]
        },
        {
          "docs": {
            "custom": {
              "inheritdoc": "true"
            },
            "stability": "stable",
            "summary": "Helper to format `npx nx run-many ...` style command."
          },
          "locationInModule": {
            "filename": "monorepo/projects/java/monorepo-java.ts",
            "line": 147
          },
          "name": "composeNxRunManyCommand",
          "overrides": "@aws/pdk.monorepo.INxProjectCore",
          "parameters": [
            {
              "name": "options",
              "type": {
                "fqn": "@aws/pdk.monorepo.Nx.RunManyOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          }
        },
        {
          "docs": {
            "custom": {
              "inheritdoc": "true"
            },
            "stability": "stable",
            "summary": "Helper to format `npx nx run-many ...` style command execution in package manager."
          },
          "locationInModule": {
            "filename": "monorepo/projects/java/monorepo-java.ts",
            "line": 140
          },
          "name": "execNxRunManyCommand",
          "overrides": "@aws/pdk.monorepo.INxProjectCore",
          "parameters": [
            {
              "name": "options",
              "type": {
                "fqn": "@aws/pdk.monorepo.Nx.RunManyOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "docs": {
            "remarks": "Order is *not* guaranteed.",
            "stability": "stable",
            "summary": "Called after all components are synthesized."
          },
          "locationInModule": {
            "filename": "monorepo/projects/java/monorepo-java.ts",
            "line": 223
          },
          "name": "postSynthesize",
          "overrides": "projen.Project"
        },
        {
          "docs": {
            "custom": {
              "inheritdoc": "true"
            },
            "stability": "stable",
            "summary": "Called before all components are synthesized."
          },
          "locationInModule": {
            "filename": "monorepo/projects/java/monorepo-java.ts",
            "line": 204
          },
          "name": "preSynthesize",
          "overrides": "projen.Project"
        },
        {
          "docs": {
            "custom": {
              "inheritDoc": "true"
            },
            "remarks": "1. Call \"this.preSynthesize()\"\n2. Delete all generated files\n3. Synthesize all subprojects\n4. Synthesize all components of this project\n5. Call \"postSynthesize()\" for all components of this project\n6. Call \"this.postSynthesize()\"",
            "stability": "stable",
            "summary": "Synthesize all project files into `outdir`."
          },
          "locationInModule": {
            "filename": "monorepo/projects/java/monorepo-java.ts",
            "line": 218
          },
          "name": "synth",
          "overrides": "projen.Project"
        }
      ],
      "name": "MonorepoJavaProject",
      "namespace": "monorepo",
      "properties": [
        {
          "docs": {
            "custom": {
              "inheritdoc": "true"
            },
            "remarks": "This should be implemented using a getter.",
            "stability": "stable",
            "summary": "Return the NxWorkspace instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/java/monorepo-java.ts",
            "line": 133
          },
          "name": "nx",
          "overrides": "@aws/pdk.monorepo.INxProjectCore",
          "type": {
            "fqn": "@aws/pdk.monorepo.NxWorkspace"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/java/monorepo-java.ts",
            "line": 44
          },
          "name": "nxConfigurator",
          "type": {
            "fqn": "@aws/pdk.monorepo.NxConfigurator"
          }
        }
      ],
      "symbolId": "monorepo/projects/java/monorepo-java:MonorepoJavaProject"
    },
    "@aws/pdk.monorepo.MonorepoPythonProject": {
      "assembly": "@aws/pdk",
      "base": "projen.python.PythonProject",
      "docs": {
        "custom": {
          "pjid": "monorepo-py"
        },
        "stability": "stable",
        "summary": "This project type will bootstrap a NX based monorepo with support for polygot builds, build caching, dependency graph visualization and much more."
      },
      "fqn": "@aws/pdk.monorepo.MonorepoPythonProject",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "monorepo/projects/python/monorepo-py.ts",
          "line": 54
        },
        "parameters": [
          {
            "name": "options",
            "type": {
              "fqn": "@aws/pdk.monorepo.MonorepoPythonProjectOptions"
            }
          }
        ]
      },
      "interfaces": [
        "@aws/pdk.monorepo.INxProjectCore"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "monorepo/projects/python/monorepo-py.ts",
        "line": 42
      },
      "methods": [
        {
          "docs": {
            "custom": {
              "inheritdoc": "true"
            },
            "remarks": "This is typically\nused in polygot repos where a Typescript project wants a build dependency\non a Python project as an example.",
            "stability": "stable",
            "summary": "Create an implicit dependency between two Projects."
          },
          "locationInModule": {
            "filename": "monorepo/projects/python/monorepo-py.ts",
            "line": 149
          },
          "name": "addImplicitDependency",
          "overrides": "@aws/pdk.monorepo.INxProjectCore",
          "parameters": [
            {
              "name": "dependent",
              "type": {
                "fqn": "projen.Project"
              }
            },
            {
              "name": "dependee",
              "type": {
                "union": {
                  "types": [
                    {
                      "primitive": "string"
                    },
                    {
                      "fqn": "projen.Project"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "docs": {
            "custom": {
              "inheritdoc": "true"
            },
            "stability": "stable",
            "summary": "Adds a dependency between two Java Projects in the monorepo."
          },
          "locationInModule": {
            "filename": "monorepo/projects/python/monorepo-py.ts",
            "line": 159
          },
          "name": "addJavaDependency",
          "overrides": "@aws/pdk.monorepo.INxProjectCore",
          "parameters": [
            {
              "name": "dependent",
              "type": {
                "fqn": "projen.java.JavaProject"
              }
            },
            {
              "name": "dependee",
              "type": {
                "fqn": "projen.java.JavaProject"
              }
            }
          ]
        },
        {
          "docs": {
            "custom": {
              "inheritdoc": "true"
            },
            "stability": "stable",
            "summary": "Add project task that executes `npx nx run-many ...` style command."
          },
          "locationInModule": {
            "filename": "monorepo/projects/python/monorepo-py.ts",
            "line": 142
          },
          "name": "addNxRunManyTask",
          "overrides": "@aws/pdk.monorepo.INxProjectCore",
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws/pdk.monorepo.Nx.RunManyOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "projen.Task"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "inheritdoc": "true"
            },
            "remarks": "The dependent must have Poetry enabled.",
            "stability": "stable",
            "summary": "Adds a dependency between two Python Projects in the monorepo."
          },
          "locationInModule": {
            "filename": "monorepo/projects/python/monorepo-py.ts",
            "line": 169
          },
          "name": "addPythonPoetryDependency",
          "overrides": "@aws/pdk.monorepo.INxProjectCore",
          "parameters": [
            {
              "name": "dependent",
              "type": {
                "fqn": "projen.python.PythonProject"
              }
            },
            {
              "name": "dependee",
              "type": {
                "fqn": "projen.python.PythonProject"
              }
            }
          ]
        },
        {
          "docs": {
            "custom": {
              "inheritdoc": "true"
            },
            "stability": "stable",
            "summary": "Helper to format `npx nx run-many ...` style command."
          },
          "locationInModule": {
            "filename": "monorepo/projects/python/monorepo-py.ts",
            "line": 135
          },
          "name": "composeNxRunManyCommand",
          "overrides": "@aws/pdk.monorepo.INxProjectCore",
          "parameters": [
            {
              "name": "options",
              "type": {
                "fqn": "@aws/pdk.monorepo.Nx.RunManyOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          }
        },
        {
          "docs": {
            "custom": {
              "inheritdoc": "true"
            },
            "stability": "stable",
            "summary": "Helper to format `npx nx run-many ...` style command execution in package manager."
          },
          "locationInModule": {
            "filename": "monorepo/projects/python/monorepo-py.ts",
            "line": 128
          },
          "name": "execNxRunManyCommand",
          "overrides": "@aws/pdk.monorepo.INxProjectCore",
          "parameters": [
            {
              "name": "options",
              "type": {
                "fqn": "@aws/pdk.monorepo.Nx.RunManyOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "inheritdoc": "NOTE: Be sure to ensure the VIRTUAL_ENV is unset during postSynthesize as the individual poetry envs will only be created if a existing VIRTUAL_ENV cannot be found."
            },
            "remarks": "Order is *not* guaranteed.\nNOTE: Be sure to ensure the VIRTUAL_ENV is unset during postSynthesize as the individual poetry envs will only be created if a existing VIRTUAL_ENV cannot be found.",
            "stability": "stable",
            "summary": "Called after all components are synthesized."
          },
          "locationInModule": {
            "filename": "monorepo/projects/python/monorepo-py.ts",
            "line": 223
          },
          "name": "postSynthesize",
          "overrides": "projen.python.PythonProject"
        },
        {
          "docs": {
            "custom": {
              "inheritdoc": "true"
            },
            "stability": "stable",
            "summary": "Called before all components are synthesized."
          },
          "locationInModule": {
            "filename": "monorepo/projects/python/monorepo-py.ts",
            "line": 196
          },
          "name": "preSynthesize",
          "overrides": "projen.Project"
        },
        {
          "docs": {
            "custom": {
              "inheritDoc": "true"
            },
            "remarks": "1. Call \"this.preSynthesize()\"\n2. Delete all generated files\n3. Synthesize all subprojects\n4. Synthesize all components of this project\n5. Call \"postSynthesize()\" for all components of this project\n6. Call \"this.postSynthesize()\"",
            "stability": "stable",
            "summary": "Synthesize all project files into `outdir`."
          },
          "locationInModule": {
            "filename": "monorepo/projects/python/monorepo-py.ts",
            "line": 210
          },
          "name": "synth",
          "overrides": "projen.Project"
        }
      ],
      "name": "MonorepoPythonProject",
      "namespace": "monorepo",
      "properties": [
        {
          "docs": {
            "custom": {
              "inheritdoc": "true"
            },
            "remarks": "This should be implemented using a getter.",
            "stability": "stable",
            "summary": "Return the NxWorkspace instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/python/monorepo-py.ts",
            "line": 121
          },
          "name": "nx",
          "overrides": "@aws/pdk.monorepo.INxProjectCore",
          "type": {
            "fqn": "@aws/pdk.monorepo.NxWorkspace"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/python/monorepo-py.ts",
            "line": 46
          },
          "name": "nxConfigurator",
          "type": {
            "fqn": "@aws/pdk.monorepo.NxConfigurator"
          }
        }
      ],
      "symbolId": "monorepo/projects/python/monorepo-py:MonorepoPythonProject"
    },
    "@aws/pdk.monorepo.MonorepoPythonProjectOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Configuration options for the NxMonorepoPythonProject."
      },
      "fqn": "@aws/pdk.monorepo.MonorepoPythonProjectOptions",
      "interfaces": [
        "@aws/pdk.monorepo.PythonProjectOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "monorepo/projects/python/monorepo-py.ts",
        "line": 25
      },
      "name": "MonorepoPythonProjectOptions",
      "namespace": "monorepo",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/python/monorepo-py.ts",
            "line": 26
          },
          "name": "defaultReleaseBranch",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Apache-2.0",
            "stability": "stable",
            "summary": "Default license to apply to all PDK managed packages."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/python/monorepo-py.ts",
            "line": 33
          },
          "name": "licenseOptions",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.monorepo.LicenseOptions"
          }
        }
      ],
      "symbolId": "monorepo/projects/python/monorepo-py:MonorepoPythonProjectOptions"
    },
    "@aws/pdk.monorepo.MonorepoTsProject": {
      "assembly": "@aws/pdk",
      "base": "projen.typescript.TypeScriptProject",
      "docs": {
        "custom": {
          "pjid": "monorepo-ts"
        },
        "stability": "stable",
        "summary": "This project type will bootstrap a monorepo with support for polygot builds, build caching, dependency graph visualization and much more."
      },
      "fqn": "@aws/pdk.monorepo.MonorepoTsProject",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "monorepo/projects/typescript/monorepo-ts.ts",
          "line": 165
        },
        "parameters": [
          {
            "name": "options",
            "type": {
              "fqn": "@aws/pdk.monorepo.MonorepoTsProjectOptions"
            }
          }
        ]
      },
      "interfaces": [
        "@aws/pdk.monorepo.INxProjectCore"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "monorepo/projects/typescript/monorepo-ts.ts",
        "line": 146
      },
      "methods": [
        {
          "docs": {
            "custom": {
              "inheritdoc": "true"
            },
            "remarks": "This is typically\nused in polygot repos where a Typescript project wants a build dependency\non a Python project as an example.",
            "stability": "stable",
            "summary": "Create an implicit dependency between two Projects."
          },
          "locationInModule": {
            "filename": "monorepo/projects/typescript/monorepo-ts.ts",
            "line": 386
          },
          "name": "addImplicitDependency",
          "overrides": "@aws/pdk.monorepo.INxProjectCore",
          "parameters": [
            {
              "name": "dependent",
              "type": {
                "fqn": "projen.Project"
              }
            },
            {
              "name": "dependee",
              "type": {
                "union": {
                  "types": [
                    {
                      "primitive": "string"
                    },
                    {
                      "fqn": "projen.Project"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "docs": {
            "custom": {
              "inheritdoc": "true"
            },
            "stability": "stable",
            "summary": "Adds a dependency between two Java Projects in the monorepo."
          },
          "locationInModule": {
            "filename": "monorepo/projects/typescript/monorepo-ts.ts",
            "line": 396
          },
          "name": "addJavaDependency",
          "overrides": "@aws/pdk.monorepo.INxProjectCore",
          "parameters": [
            {
              "name": "dependent",
              "type": {
                "fqn": "projen.java.JavaProject"
              }
            },
            {
              "name": "dependee",
              "type": {
                "fqn": "projen.java.JavaProject"
              }
            }
          ]
        },
        {
          "docs": {
            "custom": {
              "inheritdoc": "true"
            },
            "stability": "stable",
            "summary": "Add project task that executes `npx nx run-many ...` style command."
          },
          "locationInModule": {
            "filename": "monorepo/projects/typescript/monorepo-ts.ts",
            "line": 379
          },
          "name": "addNxRunManyTask",
          "overrides": "@aws/pdk.monorepo.INxProjectCore",
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws/pdk.monorepo.Nx.RunManyOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "projen.Task"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "inheritdoc": "true"
            },
            "remarks": "The dependent must have Poetry enabled.",
            "stability": "stable",
            "summary": "Adds a dependency between two Python Projects in the monorepo."
          },
          "locationInModule": {
            "filename": "monorepo/projects/typescript/monorepo-ts.ts",
            "line": 406
          },
          "name": "addPythonPoetryDependency",
          "overrides": "@aws/pdk.monorepo.INxProjectCore",
          "parameters": [
            {
              "name": "dependent",
              "type": {
                "fqn": "projen.python.PythonProject"
              }
            },
            {
              "name": "dependee",
              "type": {
                "fqn": "projen.python.PythonProject"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Add one or more additional package globs to the workspace."
          },
          "locationInModule": {
            "filename": "monorepo/projects/typescript/monorepo-ts.ts",
            "line": 417
          },
          "name": "addWorkspacePackages",
          "parameters": [
            {
              "docs": {
                "summary": "paths to the package to include in the workspace (for example packages/my-package)."
              },
              "name": "packageGlobs",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "custom": {
              "inheritdoc": "true"
            },
            "stability": "stable",
            "summary": "Helper to format `npx nx run-many ...` style command."
          },
          "locationInModule": {
            "filename": "monorepo/projects/typescript/monorepo-ts.ts",
            "line": 372
          },
          "name": "composeNxRunManyCommand",
          "overrides": "@aws/pdk.monorepo.INxProjectCore",
          "parameters": [
            {
              "name": "options",
              "type": {
                "fqn": "@aws/pdk.monorepo.Nx.RunManyOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          }
        },
        {
          "docs": {
            "custom": {
              "inheritdoc": "true"
            },
            "stability": "stable",
            "summary": "Helper to format `npx nx run-many ...` style command execution in package manager."
          },
          "locationInModule": {
            "filename": "monorepo/projects/typescript/monorepo-ts.ts",
            "line": 365
          },
          "name": "execNxRunManyCommand",
          "overrides": "@aws/pdk.monorepo.INxProjectCore",
          "parameters": [
            {
              "name": "options",
              "type": {
                "fqn": "@aws/pdk.monorepo.Nx.RunManyOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "docs": {
            "remarks": "This enables the usage of bins the same\nway as consumers of the packages have when installing from the registry.",
            "stability": "stable",
            "summary": "Create symbolic links to all local workspace bins."
          },
          "locationInModule": {
            "filename": "monorepo/projects/typescript/monorepo-ts.ts",
            "line": 445
          },
          "name": "linkLocalWorkspaceBins",
          "protected": true
        },
        {
          "docs": {
            "custom": {
              "inheritDoc": "true"
            },
            "remarks": "Order is *not* guaranteed.",
            "stability": "stable",
            "summary": "Called after all components are synthesized."
          },
          "locationInModule": {
            "filename": "monorepo/projects/typescript/monorepo-ts.ts",
            "line": 609
          },
          "name": "postSynthesize",
          "overrides": "projen.Project"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Called before all components are synthesized."
          },
          "locationInModule": {
            "filename": "monorepo/projects/typescript/monorepo-ts.ts",
            "line": 547
          },
          "name": "preSynthesize",
          "overrides": "projen.Project"
        },
        {
          "docs": {
            "custom": {
              "inheritDoc": "true"
            },
            "remarks": "1. Call \"this.preSynthesize()\"\n2. Delete all generated files\n3. Synthesize all subprojects\n4. Synthesize all components of this project\n5. Call \"postSynthesize()\" for all components of this project\n6. Call \"this.postSynthesize()\"",
            "stability": "stable",
            "summary": "Synthesize all project files into `outdir`."
          },
          "locationInModule": {
            "filename": "monorepo/projects/typescript/monorepo-ts.ts",
            "line": 572
          },
          "name": "synth",
          "overrides": "projen.Project"
        }
      ],
      "name": "MonorepoTsProject",
      "namespace": "monorepo",
      "properties": [
        {
          "docs": {
            "custom": {
              "inheritdoc": "true"
            },
            "remarks": "This should be implemented using a getter.",
            "stability": "stable",
            "summary": "Return the NxWorkspace instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/monorepo-ts.ts",
            "line": 358
          },
          "name": "nx",
          "overrides": "@aws/pdk.monorepo.INxProjectCore",
          "type": {
            "fqn": "@aws/pdk.monorepo.NxWorkspace"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/monorepo-ts.ts",
            "line": 159
          },
          "name": "nxConfigurator",
          "type": {
            "fqn": "@aws/pdk.monorepo.NxConfigurator"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Get consistently sorted list of subprojects."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/monorepo-ts.ts",
            "line": 435
          },
          "name": "sortedSubProjects",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "projen.Project"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "monorepo/projects/typescript/monorepo-ts:MonorepoTsProject"
    },
    "@aws/pdk.monorepo.MonorepoTsProjectOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Configuration options for the MonorepoTsProject."
      },
      "fqn": "@aws/pdk.monorepo.MonorepoTsProjectOptions",
      "interfaces": [
        "@aws/pdk.monorepo.TypeScriptProjectOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "monorepo/projects/typescript/monorepo-ts.ts",
        "line": 104
      },
      "name": "MonorepoTsProjectOptions",
      "namespace": "monorepo",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Disable node warnings from being emitted during build tasks."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/monorepo-ts.ts",
            "line": 130
          },
          "name": "disableNodeWarnings",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Apache-2.0",
            "stability": "stable",
            "summary": "Default license to apply to all PDK managed packages."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/monorepo-ts.ts",
            "line": 137
          },
          "name": "licenseOptions",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.monorepo.LicenseOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "stable",
            "summary": "Whether to include an upgrade-deps task at the root of the monorepo which will upgrade all dependencies."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/monorepo-ts.ts",
            "line": 115
          },
          "name": "monorepoUpgradeDeps",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "undefined",
            "remarks": "This is only used if monorepoUpgradeDeps is true.",
            "stability": "stable",
            "summary": "Monorepo Upgrade Deps options."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/monorepo-ts.ts",
            "line": 124
          },
          "name": "monorepoUpgradeDepsOptions",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.monorepo.MonorepoUpgradeDepsOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Configuration for workspace."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/monorepo-ts.ts",
            "line": 108
          },
          "name": "workspaceConfig",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.monorepo.WorkspaceConfig"
          }
        }
      ],
      "symbolId": "monorepo/projects/typescript/monorepo-ts:MonorepoTsProjectOptions"
    },
    "@aws/pdk.monorepo.MonorepoUpgradeDepsOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Configuration for Monorepo Upgrade Deps task."
      },
      "fqn": "@aws/pdk.monorepo.MonorepoUpgradeDepsOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "monorepo/projects/typescript/monorepo-ts.ts",
        "line": 83
      },
      "name": "MonorepoUpgradeDepsOptions",
      "namespace": "monorepo",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "Syncpack.DEFAULT_CONFIG",
            "remarks": "No merging is performed and as such a complete syncpackConfig is required if supplied.",
            "stability": "stable",
            "summary": "Syncpack configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/monorepo-ts.ts",
            "line": 98
          },
          "name": "syncpackConfig",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.monorepo.Syncpack.SyncpackConfig"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "upgrade-deps",
            "stability": "stable",
            "summary": "Name of the task to create."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/monorepo-ts.ts",
            "line": 89
          },
          "name": "taskName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "monorepo/projects/typescript/monorepo-ts:MonorepoUpgradeDepsOptions"
    },
    "@aws/pdk.monorepo.Nx.IInput": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws/pdk.monorepo.Nx.IInput",
      "kind": "interface",
      "locationInModule": {
        "filename": "monorepo/nx-types.ts",
        "line": 17
      },
      "name": "IInput",
      "namespace": "monorepo.Nx",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "monorepo/nx-types.ts",
            "line": 20
          },
          "name": "env",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "monorepo/nx-types.ts",
            "line": 18
          },
          "name": "fileset",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "monorepo/nx-types.ts",
            "line": 19
          },
          "name": "runtime",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "monorepo/nx-types:Nx.IInput"
    },
    "@aws/pdk.monorepo.Nx.INxAffectedConfig": {
      "assembly": "@aws/pdk",
      "docs": {
        "see": "https://github.com/nrwl/nx/blob/065477610605d5799babc3ba78f26cdfe8737250/packages/nx/src/config/nx-json.ts#L16",
        "stability": "stable",
        "summary": "Default options for `nx affected`."
      },
      "fqn": "@aws/pdk.monorepo.Nx.INxAffectedConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "monorepo/nx-types.ts",
        "line": 113
      },
      "name": "INxAffectedConfig",
      "namespace": "monorepo.Nx",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Default based branch used by affected commands."
          },
          "locationInModule": {
            "filename": "monorepo/nx-types.ts",
            "line": 115
          },
          "name": "defaultBase",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "monorepo/nx-types:Nx.INxAffectedConfig"
    },
    "@aws/pdk.monorepo.Nx.IProjectTarget": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "Project Target."
      },
      "fqn": "@aws/pdk.monorepo.Nx.IProjectTarget",
      "kind": "interface",
      "locationInModule": {
        "filename": "monorepo/nx-types.ts",
        "line": 32
      },
      "name": "IProjectTarget",
      "namespace": "monorepo.Nx",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "List of Target Dependencies."
          },
          "locationInModule": {
            "filename": "monorepo/nx-types.ts",
            "line": 49
          },
          "name": "dependsOn",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "union": {
                  "types": [
                    {
                      "primitive": "string"
                    },
                    {
                      "fqn": "@aws/pdk.monorepo.Nx.ITargetDependency"
                    }
                  ]
                }
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The function that Nx will invoke when you run this target."
          },
          "locationInModule": {
            "filename": "monorepo/nx-types.ts",
            "line": 54
          },
          "name": "executor",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "note: must start with leading /",
            "stability": "stable",
            "summary": "List of inputs to hash for cache key, relative to the root of the monorepo."
          },
          "locationInModule": {
            "filename": "monorepo/nx-types.ts",
            "line": 38
          },
          "name": "inputs",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "union": {
                  "types": [
                    {
                      "primitive": "string"
                    },
                    {
                      "fqn": "@aws/pdk.monorepo.Nx.IInput"
                    }
                  ]
                }
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Contains whatever configuration properties the executor needs to run."
          },
          "locationInModule": {
            "filename": "monorepo/nx-types.ts",
            "line": 59
          },
          "name": "options",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "note: must start with leading /",
            "stability": "stable",
            "summary": "List of outputs to cache, relative to the root of the monorepo."
          },
          "locationInModule": {
            "filename": "monorepo/nx-types.ts",
            "line": 44
          },
          "name": "outputs",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "monorepo/nx-types:Nx.IProjectTarget"
    },
    "@aws/pdk.monorepo.Nx.ITargetDependency": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "Represents an NX Target Dependency."
      },
      "fqn": "@aws/pdk.monorepo.Nx.ITargetDependency",
      "kind": "interface",
      "locationInModule": {
        "filename": "monorepo/nx-types.ts",
        "line": 85
      },
      "name": "ITargetDependency",
      "namespace": "monorepo.Nx",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Target dependencies."
          },
          "locationInModule": {
            "filename": "monorepo/nx-types.ts",
            "line": 94
          },
          "name": "projects",
          "type": {
            "fqn": "@aws/pdk.monorepo.Nx.TargetDependencyProject"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Projen target i.e: build, test, etc."
          },
          "locationInModule": {
            "filename": "monorepo/nx-types.ts",
            "line": 89
          },
          "name": "target",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "monorepo/nx-types:Nx.ITargetDependency"
    },
    "@aws/pdk.monorepo.Nx.IWorkspaceLayout": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "Where new apps + libs should be placed."
      },
      "fqn": "@aws/pdk.monorepo.Nx.IWorkspaceLayout",
      "kind": "interface",
      "locationInModule": {
        "filename": "monorepo/nx-types.ts",
        "line": 121
      },
      "name": "IWorkspaceLayout",
      "namespace": "monorepo.Nx",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "monorepo/nx-types.ts",
            "line": 123
          },
          "name": "appsDir",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "monorepo/nx-types.ts",
            "line": 122
          },
          "name": "libsDir",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "monorepo/nx-types:Nx.IWorkspaceLayout"
    },
    "@aws/pdk.monorepo.Nx.NxJsonConfiguration": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "see": "https://github.com/nrwl/nx/blob/master/packages/nx/src/config/nx-json.ts",
        "stability": "stable"
      },
      "fqn": "@aws/pdk.monorepo.Nx.NxJsonConfiguration",
      "kind": "interface",
      "locationInModule": {
        "filename": "monorepo/nx-types.ts",
        "line": 130
      },
      "name": "NxJsonConfiguration",
      "namespace": "monorepo.Nx",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Default options for `nx affected`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/nx-types.ts",
            "line": 154
          },
          "name": "affected",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.monorepo.Nx.INxAffectedConfig"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "When project isn't provided, the default project\nwill be used. Convenient for small workspaces with one main application.",
            "stability": "stable",
            "summary": "Default project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/nx-types.ts",
            "line": 187
          },
          "name": "defaultProject",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"nx/presets/npm.json\"",
            "remarks": "The json file specified in the extends property is located in your node_modules folder.\nThe Nx preset files are specified in the nx package.",
            "stability": "stable",
            "summary": "Some presets use the extends property to hide some default options in a separate json file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/nx-types.ts",
            "line": 138
          },
          "name": "extends",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "https://nx.dev/reference/nx-json#inputs-&-namedinputs",
            "stability": "stable",
            "summary": "Named inputs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/nx-types.ts",
            "line": 149
          },
          "name": "namedInputs",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Tells Nx what prefix to use when generating library imports."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/nx-types.ts",
            "line": 143
          },
          "name": "npmScope",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Plugins for extending the project graph."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/nx-types.ts",
            "line": 176
          },
          "name": "plugins",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Configuration for Nx Plugins."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/nx-types.ts",
            "line": 181
          },
          "name": "pluginsConfig",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "https://nx.dev/reference/nx-json#target-defaults",
            "stability": "stable",
            "summary": "Dependencies between different target names across all projects."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/nx-types.ts",
            "line": 161
          },
          "name": "targetDefaults",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.monorepo.Nx.IProjectTarget"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Available Task Runners."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/nx-types.ts",
            "line": 171
          },
          "name": "tasksRunnerOptions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Where new apps + libs should be placed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/nx-types.ts",
            "line": 166
          },
          "name": "workspaceLayout",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.monorepo.Nx.IWorkspaceLayout"
          }
        }
      ],
      "symbolId": "monorepo/nx-types:Nx.NxJsonConfiguration"
    },
    "@aws/pdk.monorepo.Nx.ProjectConfig": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "see": "https://github.com/nrwl/nx/blob/master/packages/nx/schemas/project-schema.json",
        "stability": "stable"
      },
      "fqn": "@aws/pdk.monorepo.Nx.ProjectConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "monorepo/nx-types.ts",
        "line": 232
      },
      "name": "ProjectConfig",
      "namespace": "monorepo.Nx",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "https://nx.dev/reference/project-configuration#implicitdependencies",
            "stability": "stable",
            "summary": "Implicit dependencies."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/nx-types.ts",
            "line": 262
          },
          "name": "implicitDependencies",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "https://nx.dev/reference/project-configuration#ignoring-package.json-scripts",
            "stability": "stable",
            "summary": "Explicit list of scripts for Nx to include."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/nx-types.ts",
            "line": 268
          },
          "name": "includedScripts",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Name of project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/nx-types.ts",
            "line": 234
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "https://nx.dev/reference/nx-json#inputs-&-namedinputs",
            "stability": "stable",
            "summary": "Named inputs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/nx-types.ts",
            "line": 242
          },
          "name": "namedInputs",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Project root dir path relative to workspace."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/nx-types.ts",
            "line": 236
          },
          "name": "root",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "https://nx.dev/reference/project-configuration#tags",
            "stability": "stable",
            "summary": "Project tag annotations."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/nx-types.ts",
            "line": 255
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "https://nx.dev/reference/project-configuration",
            "stability": "stable",
            "summary": "Targets configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/nx-types.ts",
            "line": 248
          },
          "name": "targets",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.monorepo.Nx.IProjectTarget"
              },
              "kind": "map"
            }
          }
        }
      ],
      "symbolId": "monorepo/nx-types:Nx.ProjectConfig"
    },
    "@aws/pdk.monorepo.Nx.RunManyOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "see": "https://nx.dev/packages/nx/documents/run-many#options",
        "stability": "stable"
      },
      "fqn": "@aws/pdk.monorepo.Nx.RunManyOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "monorepo/nx-types.ts",
        "line": 275
      },
      "name": "RunManyOptions",
      "namespace": "monorepo.Nx",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Task to run for affected projects."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/nx-types.ts",
            "line": 277
          },
          "name": "target",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "This is the configuration to use when performing tasks on projects."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/nx-types.ts",
            "line": 279
          },
          "name": "configuration",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Exclude certain projects from being processed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/nx-types.ts",
            "line": 281
          },
          "name": "exclude",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Ignore cycles in the task graph."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/nx-types.ts",
            "line": 307
          },
          "name": "ignoreCycles",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Do not stop command execution after the first failed task."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/nx-types.ts",
            "line": 285
          },
          "name": "noBail",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"stream\"",
            "stability": "stable",
            "summary": "Defines how Nx emits outputs tasks logs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/nx-types.ts",
            "line": 290
          },
          "name": "outputStyle",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "3",
            "stability": "stable",
            "summary": "Max number of parallel processes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/nx-types.ts",
            "line": 299
          },
          "name": "parallel",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Project to run as list project names and/or patterns."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/nx-types.ts",
            "line": 301
          },
          "name": "projects",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "This is the name of the tasks runner configuration in nx.json."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/nx-types.ts",
            "line": 303
          },
          "name": "runner",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Rerun the tasks even when the results are available in the cache."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/nx-types.ts",
            "line": 305
          },
          "name": "skipCache",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Prints additional information about the commands (e.g. stack traces)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/nx-types.ts",
            "line": 309
          },
          "name": "verbose",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "monorepo/nx-types:Nx.RunManyOptions"
    },
    "@aws/pdk.monorepo.Nx.TargetDependencyProject": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "Supported enums for a TargetDependency."
      },
      "fqn": "@aws/pdk.monorepo.Nx.TargetDependencyProject",
      "kind": "enum",
      "locationInModule": {
        "filename": "monorepo/nx-types.ts",
        "line": 65
      },
      "members": [
        {
          "docs": {
            "remarks": "This is usually done for test like targets where you only want to run unit\ntests on the target packages without testing all dependent packages.",
            "stability": "stable",
            "summary": "Only rely on the package where the target is called."
          },
          "name": "SELF"
        },
        {
          "docs": {
            "remarks": "This is usually done for build like targets where you want to build all\ndependant projects first.",
            "stability": "stable",
            "summary": "Target relies on executing the target against all dependencies first."
          },
          "name": "DEPENDENCIES"
        }
      ],
      "name": "TargetDependencyProject",
      "namespace": "monorepo.Nx",
      "symbolId": "monorepo/nx-types:Nx.TargetDependencyProject"
    },
    "@aws/pdk.monorepo.Nx.WorkspaceConfig": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "see": "https://nx.dev/configuration/packagejson",
        "stability": "stable",
        "summary": "NX workspace configurations."
      },
      "fqn": "@aws/pdk.monorepo.Nx.WorkspaceConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "monorepo/nx-types.ts",
        "line": 195
      },
      "name": "WorkspaceConfig",
      "namespace": "monorepo.Nx",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "[\"build\", \"test\"]",
            "see": "https://nx.dev/reference/nx-json#tasks-runner-options",
            "stability": "stable",
            "summary": "Defines the list of targets/operations that are cached by Nx."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/nx-types.ts",
            "line": 209
          },
          "name": "cacheableOperations",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/nx-types.ts",
            "line": 211
          },
          "name": "defaultBuildOutputs",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Sets `NX_NON_NATIVE_HASHER=true` environment variable on nx based tasks.",
            "see": "https://github.com/nrwl/nx/pull/15071",
            "stability": "stable",
            "summary": "Use non-native hasher for nx tasks."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/nx-types.ts",
            "line": 224
          },
          "name": "nonNativeHasher",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Read only access token if enabling nx cloud."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/nx-types.ts",
            "line": 216
          },
          "name": "nxCloudReadOnlyAccessToken",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "https://nx.dev/configuration/packagejson#nxignore",
            "stability": "stable",
            "summary": "List of patterns to include in the .nxignore file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/nx-types.ts",
            "line": 201
          },
          "name": "nxIgnore",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "monorepo/nx-types:Nx.WorkspaceConfig"
    },
    "@aws/pdk.monorepo.NxConfigurator": {
      "assembly": "@aws/pdk",
      "base": "projen.Component",
      "docs": {
        "stability": "stable",
        "summary": "Configues common NX related tasks and methods."
      },
      "fqn": "@aws/pdk.monorepo.NxConfigurator",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "monorepo/components/nx-configurator.ts",
          "line": 157
        },
        "parameters": [
          {
            "name": "project",
            "type": {
              "fqn": "projen.Project"
            }
          },
          {
            "name": "options",
            "optional": true,
            "type": {
              "fqn": "@aws/pdk.monorepo.NxConfiguratorOptions"
            }
          }
        ]
      },
      "interfaces": [
        "@aws/pdk.monorepo.INxProjectCore"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "monorepo/components/nx-configurator.ts",
        "line": 152
      },
      "methods": [
        {
          "docs": {
            "custom": {
              "throws": "error if this is called on a dependent which does not have a NXProject component attached."
            },
            "remarks": "This is typically\nused in polygot repos where a Typescript project wants a build dependency\non a Python project as an example.",
            "stability": "stable",
            "summary": "Create an implicit dependency between two Projects."
          },
          "locationInModule": {
            "filename": "monorepo/components/nx-configurator.ts",
            "line": 404
          },
          "name": "addImplicitDependency",
          "overrides": "@aws/pdk.monorepo.INxProjectCore",
          "parameters": [
            {
              "docs": {
                "summary": "project you want to have the dependency."
              },
              "name": "dependent",
              "type": {
                "fqn": "projen.Project"
              }
            },
            {
              "docs": {
                "summary": "project you wish to depend on."
              },
              "name": "dependee",
              "type": {
                "union": {
                  "types": [
                    {
                      "primitive": "string"
                    },
                    {
                      "fqn": "projen.Project"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a dependency between two Java Projects in the monorepo."
          },
          "locationInModule": {
            "filename": "monorepo/components/nx-configurator.ts",
            "line": 413
          },
          "name": "addJavaDependency",
          "overrides": "@aws/pdk.monorepo.INxProjectCore",
          "parameters": [
            {
              "docs": {
                "summary": "project you want to have the dependency."
              },
              "name": "dependent",
              "type": {
                "fqn": "projen.java.JavaProject"
              }
            },
            {
              "docs": {
                "summary": "project you wish to depend on."
              },
              "name": "dependee",
              "type": {
                "fqn": "projen.java.JavaProject"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Add project task that executes `npx nx run-many ...` style command."
          },
          "locationInModule": {
            "filename": "monorepo/components/nx-configurator.ts",
            "line": 388
          },
          "name": "addNxRunManyTask",
          "overrides": "@aws/pdk.monorepo.INxProjectCore",
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws/pdk.monorepo.Nx.RunManyOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "projen.Task"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "throws": "error if the dependent does not have Poetry enabled"
            },
            "remarks": "The dependent must have Poetry enabled.",
            "stability": "stable",
            "summary": "Adds a dependency between two Python Projects in the monorepo."
          },
          "locationInModule": {
            "filename": "monorepo/components/nx-configurator.ts",
            "line": 423
          },
          "name": "addPythonPoetryDependency",
          "overrides": "@aws/pdk.monorepo.INxProjectCore",
          "parameters": [
            {
              "docs": {
                "summary": "project you want to have the dependency (must be a Poetry Python Project)."
              },
              "name": "dependent",
              "type": {
                "fqn": "projen.python.PythonProject"
              }
            },
            {
              "docs": {
                "summary": "project you wish to depend on."
              },
              "name": "dependee",
              "type": {
                "fqn": "projen.python.PythonProject"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Helper to format `npx nx run-many ...` style command."
          },
          "locationInModule": {
            "filename": "monorepo/components/nx-configurator.ts",
            "line": 346
          },
          "name": "composeNxRunManyCommand",
          "overrides": "@aws/pdk.monorepo.INxProjectCore",
          "parameters": [
            {
              "name": "options",
              "type": {
                "fqn": "@aws/pdk.monorepo.Nx.RunManyOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          }
        },
        {
          "docs": {
            "remarks": "Note: this should only be called from non-node projects",
            "returns": "install task",
            "stability": "stable",
            "summary": "Returns the install task or creates one with nx installation command added."
          },
          "locationInModule": {
            "filename": "monorepo/components/nx-configurator.ts",
            "line": 313
          },
          "name": "ensureNxInstallTask",
          "parameters": [
            {
              "docs": {
                "summary": "additional plugins to install."
              },
              "name": "nxPlugins",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "projen.Task"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Helper to format `npx nx run-many ...` style command execution in package manager."
          },
          "locationInModule": {
            "filename": "monorepo/components/nx-configurator.ts",
            "line": 332
          },
          "name": "execNxRunManyCommand",
          "overrides": "@aws/pdk.monorepo.INxProjectCore",
          "parameters": [
            {
              "name": "options",
              "type": {
                "fqn": "@aws/pdk.monorepo.Nx.RunManyOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "monorepo/components/nx-configurator.ts",
            "line": 192
          },
          "name": "patchPoetryEnv",
          "parameters": [
            {
              "name": "project",
              "type": {
                "fqn": "projen.python.PythonProject"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "monorepo/components/nx-configurator.ts",
            "line": 234
          },
          "name": "patchPythonProjects",
          "parameters": [
            {
              "name": "projects",
              "type": {
                "collection": {
                  "elementtype": {
                    "fqn": "projen.Project"
                  },
                  "kind": "array"
                }
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Called before synthesis."
          },
          "locationInModule": {
            "filename": "monorepo/components/nx-configurator.ts",
            "line": 579
          },
          "name": "preSynthesize",
          "overrides": "projen.Component"
        },
        {
          "docs": {
            "custom": {
              "inheritDoc": "true"
            },
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "monorepo/components/nx-configurator.ts",
            "line": 590
          },
          "name": "synth"
        }
      ],
      "name": "NxConfigurator",
      "namespace": "monorepo",
      "properties": [
        {
          "docs": {
            "remarks": "This should be implemented using a getter.",
            "stability": "stable",
            "summary": "Return the NxWorkspace instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/components/nx-configurator.ts",
            "line": 153
          },
          "name": "nx",
          "overrides": "@aws/pdk.monorepo.INxProjectCore",
          "type": {
            "fqn": "@aws/pdk.monorepo.NxWorkspace"
          }
        }
      ],
      "symbolId": "monorepo/components/nx-configurator:NxConfigurator"
    },
    "@aws/pdk.monorepo.NxConfiguratorOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "NXConfigurator options."
      },
      "fqn": "@aws/pdk.monorepo.NxConfiguratorOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "monorepo/components/nx-configurator.ts",
        "line": 135
      },
      "name": "NxConfiguratorOptions",
      "namespace": "monorepo",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Branch that NX affected should run against."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/components/nx-configurator.ts",
            "line": 139
          },
          "name": "defaultReleaseBranch",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "If nothing is specified, all packages will default to Apache-2.0 (unless they have their own License component).",
            "stability": "stable",
            "summary": "Default package license config."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/components/nx-configurator.ts",
            "line": 146
          },
          "name": "licenseOptions",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.monorepo.LicenseOptions"
          }
        }
      ],
      "symbolId": "monorepo/components/nx-configurator:NxConfiguratorOptions"
    },
    "@aws/pdk.monorepo.NxProject": {
      "assembly": "@aws/pdk",
      "base": "projen.Component",
      "docs": {
        "stability": "experimental",
        "summary": "Component which manages the project specific NX Config and is added to all NXMonorepo subprojects."
      },
      "fqn": "@aws/pdk.monorepo.NxProject",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "monorepo/components/nx-project/index.ts",
          "line": 88
        },
        "parameters": [
          {
            "name": "project",
            "type": {
              "fqn": "projen.Project"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "monorepo/components/nx-project/index.ts",
        "line": 29
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Retrieves an instance of NXProject if one is associated to the given project, otherwise created a NXProject instance for the project."
          },
          "locationInModule": {
            "filename": "monorepo/components/nx-project/index.ts",
            "line": 46
          },
          "name": "ensure",
          "parameters": [
            {
              "docs": {
                "summary": "project instance."
              },
              "name": "project",
              "type": {
                "fqn": "projen.Project"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws/pdk.monorepo.NxProject"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Retrieves an instance of NXProject if one is associated to the given project."
          },
          "locationInModule": {
            "filename": "monorepo/components/nx-project/index.ts",
            "line": 35
          },
          "name": "of",
          "parameters": [
            {
              "docs": {
                "summary": "project instance."
              },
              "name": "project",
              "type": {
                "fqn": "projen.Project"
              }
            }
          ],
          "returns": {
            "optional": true,
            "type": {
              "fqn": "@aws/pdk.monorepo.NxProject"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Add input and output files to build target."
          },
          "locationInModule": {
            "filename": "monorepo/components/nx-project/index.ts",
            "line": 300
          },
          "name": "addBuildTargetFiles",
          "parameters": [
            {
              "docs": {
                "summary": "Input files."
              },
              "name": "inputs",
              "optional": true,
              "type": {
                "collection": {
                  "elementtype": {
                    "union": {
                      "types": [
                        {
                          "primitive": "string"
                        },
                        {
                          "fqn": "@aws/pdk.monorepo.Nx.IInput"
                        }
                      ]
                    }
                  },
                  "kind": "array"
                }
              }
            },
            {
              "docs": {
                "summary": "Output files."
              },
              "name": "outputs",
              "optional": true,
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Adds an implicit dependency between the dependant (this project) and dependee."
          },
          "locationInModule": {
            "filename": "monorepo/components/nx-project/index.ts",
            "line": 195
          },
          "name": "addImplicitDependency",
          "parameters": [
            {
              "docs": {
                "summary": "project to add the implicit dependency on."
              },
              "name": "dependee",
              "type": {
                "union": {
                  "types": [
                    {
                      "primitive": "string"
                    },
                    {
                      "fqn": "projen.Project"
                    }
                  ]
                }
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Adds a dependency between two Java Projects in the monorepo."
          },
          "locationInModule": {
            "filename": "monorepo/components/nx-project/index.ts",
            "line": 205
          },
          "name": "addJavaDependency",
          "parameters": [
            {
              "docs": {
                "summary": "project you wish to depend on."
              },
              "name": "dependee",
              "type": {
                "fqn": "projen.java.JavaProject"
              }
            }
          ]
        },
        {
          "docs": {
            "custom": {
              "throws": "error if the dependent does not have Poetry enabled"
            },
            "remarks": "The dependent must have Poetry enabled.",
            "stability": "experimental",
            "summary": "Adds a dependency between two Python Projects in the monorepo."
          },
          "locationInModule": {
            "filename": "monorepo/components/nx-project/index.ts",
            "line": 234
          },
          "name": "addPythonPoetryDependency",
          "parameters": [
            {
              "docs": {
                "summary": "project you wish to depend on."
              },
              "name": "dependee",
              "type": {
                "fqn": "projen.python.PythonProject"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Add tag."
          },
          "locationInModule": {
            "filename": "monorepo/components/nx-project/index.ts",
            "line": 186
          },
          "name": "addTag",
          "parameters": [
            {
              "name": "tags",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Automatically infer targets based on project type."
          },
          "locationInModule": {
            "filename": "monorepo/components/nx-project/index.ts",
            "line": 147
          },
          "name": "inferTargets"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Merge configuration into existing config."
          },
          "locationInModule": {
            "filename": "monorepo/components/nx-project/index.ts",
            "line": 155
          },
          "name": "merge",
          "parameters": [
            {
              "name": "config",
              "type": {
                "fqn": "@aws/pdk.monorepo.Nx.ProjectConfig"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Set `namedInputs` helper."
          },
          "locationInModule": {
            "filename": "monorepo/components/nx-project/index.ts",
            "line": 258
          },
          "name": "setNamedInput",
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "inputs",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Set `targets` helper."
          },
          "locationInModule": {
            "filename": "monorepo/components/nx-project/index.ts",
            "line": 268
          },
          "name": "setTarget",
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "target",
              "type": {
                "fqn": "@aws/pdk.monorepo.Nx.IProjectTarget"
              }
            },
            {
              "name": "includeDefaults",
              "optional": true,
              "type": {
                "union": {
                  "types": [
                    {
                      "primitive": "string"
                    },
                    {
                      "primitive": "boolean"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "docs": {
            "custom": {
              "interface": "true"
            },
            "stability": "experimental",
            "summary": "Synthesizes files to the project output directory."
          },
          "locationInModule": {
            "filename": "monorepo/components/nx-project/index.ts",
            "line": 315
          },
          "name": "synthesize",
          "overrides": "projen.Component"
        }
      ],
      "name": "NxProject",
      "namespace": "monorepo",
      "properties": [
        {
          "docs": {
            "custom": {
              "advanced": "true"
            },
            "remarks": "**Attention:** any overrides applied here will not be visible\nin the properties and only included in final synthesized output,\nand likely to override native handling.",
            "stability": "experimental",
            "summary": "Raw json file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/components/nx-project/index.ts",
            "line": 58
          },
          "name": "file",
          "type": {
            "fqn": "projen.JsonFile"
          }
        },
        {
          "docs": {
            "see": "https://nx.dev/reference/project-configuration#implicitdependencies",
            "stability": "experimental",
            "summary": "Implicit dependencies."
          },
          "locationInModule": {
            "filename": "monorepo/components/nx-project/index.ts",
            "line": 81
          },
          "name": "implicitDependencies",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "see": "https://nx.dev/reference/project-configuration#ignoring-package.json-scripts",
            "stability": "experimental",
            "summary": "Explicit list of scripts for Nx to include."
          },
          "locationInModule": {
            "filename": "monorepo/components/nx-project/index.ts",
            "line": 86
          },
          "name": "includedScripts",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "see": "https://nx.dev/reference/nx-json#inputs-&-namedinputs",
            "stability": "experimental",
            "summary": "Named inputs."
          },
          "locationInModule": {
            "filename": "monorepo/components/nx-project/index.ts",
            "line": 64
          },
          "name": "namedInputs",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "https://nx.dev/reference/project-configuration#tags",
            "stability": "experimental",
            "summary": "Project tag annotations."
          },
          "locationInModule": {
            "filename": "monorepo/components/nx-project/index.ts",
            "line": 75
          },
          "name": "tags",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "see": "https://nx.dev/reference/project-configuration",
            "stability": "experimental",
            "summary": "Targets configuration."
          },
          "locationInModule": {
            "filename": "monorepo/components/nx-project/index.ts",
            "line": 69
          },
          "name": "targets",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "symbolId": "monorepo/components/nx-project/index:NxProject"
    },
    "@aws/pdk.monorepo.NxWorkspace": {
      "assembly": "@aws/pdk",
      "base": "projen.Component",
      "docs": {
        "stability": "experimental",
        "summary": "Component which manages the workspace specific NX Config for the root monorepo."
      },
      "fqn": "@aws/pdk.monorepo.NxWorkspace",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "monorepo/components/nx-workspace.ts",
          "line": 158
        },
        "parameters": [
          {
            "name": "project",
            "type": {
              "fqn": "projen.Project"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "monorepo/components/nx-workspace.ts",
        "line": 34
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Retrieves the singleton instance associated with project root."
          },
          "locationInModule": {
            "filename": "monorepo/components/nx-workspace.ts",
            "line": 40
          },
          "name": "of",
          "parameters": [
            {
              "docs": {
                "summary": "project instance."
              },
              "name": "scope",
              "type": {
                "fqn": "projen.Project"
              }
            }
          ],
          "returns": {
            "optional": true,
            "type": {
              "fqn": "@aws/pdk.monorepo.NxWorkspace"
            }
          },
          "static": true
        },
        {
          "docs": {
            "custom": {
              "inheritdoc": "true"
            },
            "stability": "experimental",
            "summary": "Called before synthesis."
          },
          "locationInModule": {
            "filename": "monorepo/components/nx-workspace.ts",
            "line": 252
          },
          "name": "preSynthesize",
          "overrides": "projen.Component"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Set `namedInput` value helper."
          },
          "locationInModule": {
            "filename": "monorepo/components/nx-workspace.ts",
            "line": 216
          },
          "name": "setNamedInput",
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "inputs",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Set `targetDefaults` helper."
          },
          "locationInModule": {
            "filename": "monorepo/components/nx-workspace.ts",
            "line": 221
          },
          "name": "setTargetDefault",
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "target",
              "type": {
                "fqn": "@aws/pdk.monorepo.Nx.IProjectTarget"
              }
            },
            {
              "name": "merge",
              "optional": true,
              "type": {
                "primitive": "boolean"
              }
            }
          ]
        },
        {
          "docs": {
            "custom": {
              "inheritdoc": "true"
            },
            "stability": "experimental",
            "summary": "Synthesizes files to the project output directory."
          },
          "locationInModule": {
            "filename": "monorepo/components/nx-workspace.ts",
            "line": 277
          },
          "name": "synthesize",
          "overrides": "projen.Component"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Setup workspace to use nx-cloud."
          },
          "locationInModule": {
            "filename": "monorepo/components/nx-workspace.ts",
            "line": 200
          },
          "name": "useNxCloud",
          "parameters": [
            {
              "name": "readOnlyAccessToken",
              "type": {
                "primitive": "string"
              }
            }
          ]
        }
      ],
      "name": "NxWorkspace",
      "namespace": "monorepo",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": ".nxignore file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/components/nx-workspace.ts",
            "line": 59
          },
          "name": "nxIgnore",
          "type": {
            "fqn": "projen.IgnoreFile"
          }
        },
        {
          "docs": {
            "custom": {
              "advanced": "true"
            },
            "remarks": "**Attention:** any overrides applied here will not be visible\nin the properties and only included in final synthesized output,\nand likely to override native handling.",
            "stability": "experimental",
            "summary": "Raw nx.json file to support overrides that aren't handled directly."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/components/nx-workspace.ts",
            "line": 55
          },
          "name": "nxJson",
          "type": {
            "fqn": "projen.JsonFile"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Default options for `nx affected`."
          },
          "locationInModule": {
            "filename": "monorepo/components/nx-workspace.ts",
            "line": 112
          },
          "name": "affected",
          "type": {
            "fqn": "@aws/pdk.monorepo.Nx.INxAffectedConfig"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Automatically infer NxProject targets based on project type."
          },
          "locationInModule": {
            "filename": "monorepo/components/nx-workspace.ts",
            "line": 65
          },
          "name": "autoInferProjectTargets",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "List of cacheable operations."
          },
          "locationInModule": {
            "filename": "monorepo/components/nx-workspace.ts",
            "line": 83
          },
          "name": "cacheableOperations",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Default task runner."
          },
          "locationInModule": {
            "filename": "monorepo/components/nx-workspace.ts",
            "line": 138
          },
          "name": "defaultTaskRunner",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Default task runner options."
          },
          "locationInModule": {
            "filename": "monorepo/components/nx-workspace.ts",
            "line": 142
          },
          "name": "defaultTaskRunnerOptions",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "default": "\"nx/presets/npm.json\"",
            "remarks": "The json file specified in the extends property is located in your node_modules folder.\nThe Nx preset files are specified in the nx package.",
            "stability": "experimental",
            "summary": "Some presets use the extends property to hide some default options in a separate json file."
          },
          "locationInModule": {
            "filename": "monorepo/components/nx-workspace.ts",
            "line": 92
          },
          "name": "extends",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "https://nx.dev/reference/nx-json#inputs-&-namedinputs",
            "stability": "experimental",
            "summary": "Named inputs."
          },
          "locationInModule": {
            "filename": "monorepo/components/nx-workspace.ts",
            "line": 119
          },
          "name": "namedInputs",
          "type": {
            "collection": {
              "elementtype": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "remarks": "If true, the NX_NON_NATIVE_HASHER env var will be set\nto true for all project tasks.",
            "stability": "experimental",
            "summary": "Indicates if non-native nx hasher will be used."
          },
          "locationInModule": {
            "filename": "monorepo/components/nx-workspace.ts",
            "line": 79
          },
          "name": "nonNativeHasher",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Tells Nx what prefix to use when generating library imports."
          },
          "locationInModule": {
            "filename": "monorepo/components/nx-workspace.ts",
            "line": 96
          },
          "name": "npmScope",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Plugins for extending the project graph."
          },
          "locationInModule": {
            "filename": "monorepo/components/nx-workspace.ts",
            "line": 104
          },
          "name": "plugins",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Configuration for Nx Plugins."
          },
          "locationInModule": {
            "filename": "monorepo/components/nx-workspace.ts",
            "line": 108
          },
          "name": "pluginsConfig",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "https://nx.dev/reference/nx-json#target-defaults",
            "stability": "experimental",
            "summary": "Dependencies between different target names across all projects."
          },
          "locationInModule": {
            "filename": "monorepo/components/nx-workspace.ts",
            "line": 128
          },
          "name": "targetDefaults",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.monorepo.Nx.IProjectTarget"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Task runner options."
          },
          "locationInModule": {
            "filename": "monorepo/components/nx-workspace.ts",
            "line": 151
          },
          "name": "tasksRunnerOptions",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Override the default nx cacheDirectory."
          },
          "locationInModule": {
            "filename": "monorepo/components/nx-workspace.ts",
            "line": 71
          },
          "name": "cacheDirectory",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Where new apps + libs should be placed."
          },
          "locationInModule": {
            "filename": "monorepo/components/nx-workspace.ts",
            "line": 100
          },
          "name": "workspaceLayout",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.monorepo.Nx.IWorkspaceLayout"
          }
        }
      ],
      "symbolId": "monorepo/components/nx-workspace:NxWorkspace"
    },
    "@aws/pdk.monorepo.PythonProjectOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "PythonProjectOptions."
      },
      "fqn": "@aws/pdk.monorepo.PythonProjectOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "monorepo/projects/python/python-project-options.ts",
        "line": 7
      },
      "name": "PythonProjectOptions",
      "namespace": "monorepo",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "$PYTHON_MODULE_NAME",
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/python/python-project-options.ts",
            "line": 63
          },
          "name": "moduleName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "$BASEDIR",
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/python/python-project-options.ts",
            "line": 313
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "$GIT_USER_EMAIL",
            "stability": "experimental",
            "summary": "Author's e-mail."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/python/python-project-options.ts",
            "line": 124
          },
          "name": "authorEmail",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "$GIT_USER_NAME",
            "stability": "experimental",
            "summary": "Author's name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/python/python-project-options.ts",
            "line": 118
          },
          "name": "authorName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- auto approve is disabled",
            "stability": "experimental",
            "summary": "Enable and configure the 'auto approve' workflow."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/python/python-project-options.ts",
            "line": 240
          },
          "name": "autoApproveOptions",
          "optional": true,
          "type": {
            "fqn": "projen.github.AutoApproveOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "Has no effect if `github.mergify`\nis set to false.",
            "stability": "experimental",
            "summary": "Enable automatic merging on GitHub."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/python/python-project-options.ts",
            "line": 234
          },
          "name": "autoMerge",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- see defaults in `AutoMergeOptions`",
            "remarks": "Has no effect if\n`github.mergify` or `autoMerge` is set to false.",
            "stability": "experimental",
            "summary": "Configure options for automatic merging on GitHub."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/python/python-project-options.ts",
            "line": 226
          },
          "name": "autoMergeOptions",
          "optional": true,
          "type": {
            "fqn": "projen.github.AutoMergeOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "A list of PyPI trove classifiers that describe the project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/python/python-project-options.ts",
            "line": 105
          },
          "name": "classifiers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- true, but false for subprojects",
            "stability": "experimental",
            "summary": "Add a `clobber` task which resets the repo to origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/python/python-project-options.ts",
            "line": 218
          },
          "name": "clobber",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Whether to commit the managed files by default."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/python/python-project-options.ts",
            "line": 309
          },
          "name": "commitGenerated",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "featured": "true"
            },
            "default": "[]",
            "remarks": "Additional dependencies can be added via `project.addDependency()`.",
            "stability": "experimental",
            "summary": "List of runtime dependencies for this project. Dependencies use the format: `<module>@<semver>`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/python/python-project-options.ts",
            "line": 59
          },
          "name": "deps",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "featured": "true"
            },
            "stability": "experimental",
            "summary": "A short description of the package."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/python/python-project-options.ts",
            "line": 100
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Add a VSCode development environment (used for GitHub Codespaces)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/python/python-project-options.ts",
            "line": 212
          },
          "name": "devContainer",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "featured": "true"
            },
            "default": "[]",
            "remarks": "Additional dependencies can be added via `project.addDevDependency()`.",
            "stability": "experimental",
            "summary": "List of dev dependencies for this project. Dependencies use the format: `<module>@<semver>`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/python/python-project-options.ts",
            "line": 49
          },
          "name": "devDeps",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "Enabled by default for root projects. Disabled for non-root projects.",
            "stability": "experimental",
            "summary": "Enable GitHub integration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/python/python-project-options.ts",
            "line": 206
          },
          "name": "github",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- see GitHubOptions",
            "stability": "experimental",
            "summary": "Options for GitHub integration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/python/python-project-options.ts",
            "line": 199
          },
          "name": "githubOptions",
          "optional": true,
          "type": {
            "fqn": "projen.github.GitHubOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Configuration options for .gitignore file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/python/python-project-options.ts",
            "line": 303
          },
          "name": "gitIgnoreOptions",
          "optional": true,
          "type": {
            "fqn": "projen.IgnoreFileOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Configuration options for git."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/python/python-project-options.ts",
            "line": 298
          },
          "name": "gitOptions",
          "optional": true,
          "type": {
            "fqn": "projen.GitOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Add a Gitpod development environment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/python/python-project-options.ts",
            "line": 193
          },
          "name": "gitpod",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "A URL to the website of the project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/python/python-project-options.ts",
            "line": 94
          },
          "name": "homepage",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "License of this package as an SPDX identifier."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/python/python-project-options.ts",
            "line": 89
          },
          "name": "license",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "{}",
            "stability": "experimental",
            "summary": "Configure logging options such as verbosity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/python/python-project-options.ts",
            "line": 293
          },
          "name": "logging",
          "optional": true,
          "type": {
            "fqn": "projen.LoggerOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "deprecated": "use `githubOptions.mergify` instead",
            "stability": "deprecated",
            "summary": "Whether mergify should be enabled on this repository or not."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/python/python-project-options.ts",
            "line": 187
          },
          "name": "mergify",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default options",
            "deprecated": "use `githubOptions.mergifyOptions` instead",
            "stability": "deprecated",
            "summary": "Options for mergify."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/python/python-project-options.ts",
            "line": 180
          },
          "name": "mergifyOptions",
          "optional": true,
          "type": {
            "fqn": "projen.github.MergifyOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\".\"",
            "remarks": "If this project has a parent, this directory is relative to the parent\ndirectory and it cannot be the same as the parent or any of it's other\nsubprojects.",
            "stability": "experimental",
            "summary": "The root directory of the project. Relative to this directory, all files are synthesized."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/python/python-project-options.ts",
            "line": 287
          },
          "name": "outdir",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Package name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/python/python-project-options.ts",
            "line": 84
          },
          "name": "packageName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The parent project, if this project is part of a bigger project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/python/python-project-options.ts",
            "line": 276
          },
          "name": "parent",
          "optional": true,
          "type": {
            "fqn": "projen.Project"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Additional options to set for poetry if using poetry."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/python/python-project-options.ts",
            "line": 79
          },
          "name": "poetryOptions",
          "optional": true,
          "type": {
            "fqn": "projen.python.PoetryPyprojectOptionsWithoutDeps"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "ProjectType.UNKNOWN",
            "deprecated": "no longer supported at the base project level",
            "stability": "deprecated",
            "summary": "Which type of project this is (library/app)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/python/python-project-options.ts",
            "line": 173
          },
          "name": "projectType",
          "optional": true,
          "type": {
            "fqn": "projen.ProjectType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"npx projen\"",
            "remarks": "Can be used to customize in special environments.",
            "stability": "experimental",
            "summary": "The shell command to use in order to run the projen CLI."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/python/python-project-options.ts",
            "line": 271
          },
          "name": "projenCommand",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- use a personal access token named PROJEN_GITHUB_TOKEN",
            "stability": "experimental",
            "summary": "Choose a method of providing GitHub API access for projen workflows."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/python/python-project-options.ts",
            "line": 166
          },
          "name": "projenCredentials",
          "optional": true,
          "type": {
            "fqn": "projen.github.GithubCredentials"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Generate (once) .projenrc.json (in JSON). Set to `false` in order to disable .projenrc.json generation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/python/python-project-options.ts",
            "line": 264
          },
          "name": "projenrcJson",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default options",
            "stability": "experimental",
            "summary": "Options for .projenrc.json."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/python/python-project-options.ts",
            "line": 258
          },
          "name": "projenrcJsonOptions",
          "optional": true,
          "type": {
            "fqn": "projen.ProjenrcJsonOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default options",
            "stability": "experimental",
            "summary": "Options related to projenrc in python."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/python/python-project-options.ts",
            "line": 39
          },
          "name": "projenrcPythonOptions",
          "optional": true,
          "type": {
            "fqn": "projen.python.ProjenrcOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"PROJEN_GITHUB_TOKEN\"",
            "deprecated": "use `projenCredentials`",
            "remarks": "This token needs to have the `repo`, `workflows`\nand `packages` scope.",
            "stability": "deprecated",
            "summary": "The name of a secret which includes a GitHub Personal Access Token to be used by projen workflows."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/python/python-project-options.ts",
            "line": 160
          },
          "name": "projenTokenSecret",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "featured": "true"
            },
            "default": "true",
            "stability": "experimental",
            "summary": "Include pytest tests."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/python/python-project-options.ts",
            "line": 33
          },
          "name": "pytest",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- defaults",
            "stability": "experimental",
            "summary": "pytest options."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/python/python-project-options.ts",
            "line": 26
          },
          "name": "pytestOptions",
          "optional": true,
          "type": {
            "fqn": "projen.python.PytestOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"python\"",
            "stability": "experimental",
            "summary": "Path to the python executable to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/python/python-project-options.ts",
            "line": 69
          },
          "name": "pythonExec",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- { filename: 'README.md', contents: '# replace this' }",
            "stability": "experimental",
            "summary": "The README setup."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/python/python-project-options.ts",
            "line": 151
          },
          "name": "readme",
          "optional": true,
          "type": {
            "fqn": "projen.SampleReadmeProps"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Use renovatebot to handle dependency upgrades."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/python/python-project-options.ts",
            "line": 252
          },
          "name": "renovatebot",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default options",
            "stability": "experimental",
            "summary": "Options for renovatebot."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/python/python-project-options.ts",
            "line": 246
          },
          "name": "renovatebotOptions",
          "optional": true,
          "type": {
            "fqn": "projen.RenovatebotOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Include sample code and test if the relevant directories don't exist."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/python/python-project-options.ts",
            "line": 20
          },
          "name": "sample",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Additional fields to pass in the setup() function if using setuptools."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/python/python-project-options.ts",
            "line": 74
          },
          "name": "setupConfig",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "featured": "true"
            },
            "default": "- true, unless poetry is true, then false",
            "stability": "experimental",
            "summary": "Use setuptools with a setup.py script for packaging and publishing."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/python/python-project-options.ts",
            "line": 14
          },
          "name": "setuptools",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "See `staleOptions` for options.",
            "stability": "experimental",
            "summary": "Auto-close of stale issues and pull request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/python/python-project-options.ts",
            "line": 145
          },
          "name": "stale",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- see defaults in `StaleOptions`",
            "remarks": "To disable set `stale` to `false`.",
            "stability": "experimental",
            "summary": "Auto-close stale issues and pull requests."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/python/python-project-options.ts",
            "line": 138
          },
          "name": "staleOptions",
          "optional": true,
          "type": {
            "fqn": "projen.github.StaleOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "featured": "true"
            },
            "default": "\"0.1.0\"",
            "stability": "experimental",
            "summary": "Version of the package."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/python/python-project-options.ts",
            "line": 112
          },
          "name": "version",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "Enabled by default for root projects. Disabled for non-root projects.",
            "stability": "experimental",
            "summary": "Enable VSCode integration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/python/python-project-options.ts",
            "line": 131
          },
          "name": "vscode",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "monorepo/projects/python/python-project-options:PythonProjectOptions"
    },
    "@aws/pdk.monorepo.Syncpack.BaseGroupConfig.GroupConfig": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws/pdk.monorepo.Syncpack.BaseGroupConfig.GroupConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "monorepo/projects/typescript/syncpack-options.ts",
        "line": 93
      },
      "name": "GroupConfig",
      "namespace": "monorepo.Syncpack.BaseGroupConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/syncpack-options.ts",
            "line": 94
          },
          "name": "dependencies",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/syncpack-options.ts",
            "line": 95
          },
          "name": "dependencyTypes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/syncpack-options.ts",
            "line": 96
          },
          "name": "label",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/syncpack-options.ts",
            "line": 97
          },
          "name": "packages",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/syncpack-options.ts",
            "line": 98
          },
          "name": "specifierTypes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "monorepo/projects/typescript/syncpack-options:Syncpack.BaseGroupConfig.GroupConfig"
    },
    "@aws/pdk.monorepo.Syncpack.CliConfig": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws/pdk.monorepo.Syncpack.CliConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "monorepo/projects/typescript/syncpack-options.ts",
        "line": 185
      },
      "name": "CliConfig",
      "namespace": "monorepo.Syncpack",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/syncpack-options.ts",
            "line": 187
          },
          "name": "filter",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/syncpack-options.ts",
            "line": 188
          },
          "name": "indent",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/syncpack-options.ts",
            "line": 189
          },
          "name": "source",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/syncpack-options.ts",
            "line": 190
          },
          "name": "specs",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/syncpack-options.ts",
            "line": 191
          },
          "name": "types",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/syncpack-options.ts",
            "line": 186
          },
          "name": "configPath",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "monorepo/projects/typescript/syncpack-options:Syncpack.CliConfig"
    },
    "@aws/pdk.monorepo.Syncpack.CustomTypeConfig.NameAndVersionProps": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws/pdk.monorepo.Syncpack.CustomTypeConfig.NameAndVersionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "monorepo/projects/typescript/syncpack-options.ts",
        "line": 157
      },
      "name": "NameAndVersionProps",
      "namespace": "monorepo.Syncpack.CustomTypeConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/syncpack-options.ts",
            "line": 158
          },
          "name": "namePath",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/syncpack-options.ts",
            "line": 159
          },
          "name": "path",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/syncpack-options.ts",
            "line": 160
          },
          "name": "strategy",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "monorepo/projects/typescript/syncpack-options:Syncpack.CustomTypeConfig.NameAndVersionProps"
    },
    "@aws/pdk.monorepo.Syncpack.CustomTypeConfig.NamedVersionString": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws/pdk.monorepo.Syncpack.CustomTypeConfig.NamedVersionString",
      "kind": "interface",
      "locationInModule": {
        "filename": "monorepo/projects/typescript/syncpack-options.ts",
        "line": 163
      },
      "name": "NamedVersionString",
      "namespace": "monorepo.Syncpack.CustomTypeConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/syncpack-options.ts",
            "line": 164
          },
          "name": "path",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/syncpack-options.ts",
            "line": 165
          },
          "name": "strategy",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "monorepo/projects/typescript/syncpack-options:Syncpack.CustomTypeConfig.NamedVersionString"
    },
    "@aws/pdk.monorepo.Syncpack.CustomTypeConfig.UnnamedVersionString": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws/pdk.monorepo.Syncpack.CustomTypeConfig.UnnamedVersionString",
      "kind": "interface",
      "locationInModule": {
        "filename": "monorepo/projects/typescript/syncpack-options.ts",
        "line": 168
      },
      "name": "UnnamedVersionString",
      "namespace": "monorepo.Syncpack.CustomTypeConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/syncpack-options.ts",
            "line": 169
          },
          "name": "path",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/syncpack-options.ts",
            "line": 170
          },
          "name": "strategy",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "monorepo/projects/typescript/syncpack-options:Syncpack.CustomTypeConfig.UnnamedVersionString"
    },
    "@aws/pdk.monorepo.Syncpack.CustomTypeConfig.VersionsByName": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws/pdk.monorepo.Syncpack.CustomTypeConfig.VersionsByName",
      "kind": "interface",
      "locationInModule": {
        "filename": "monorepo/projects/typescript/syncpack-options.ts",
        "line": 173
      },
      "name": "VersionsByName",
      "namespace": "monorepo.Syncpack.CustomTypeConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/syncpack-options.ts",
            "line": 174
          },
          "name": "path",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/syncpack-options.ts",
            "line": 175
          },
          "name": "strategy",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "monorepo/projects/typescript/syncpack-options:Syncpack.CustomTypeConfig.VersionsByName"
    },
    "@aws/pdk.monorepo.Syncpack.SemverGroupConfig.Disabled": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws/pdk.monorepo.Syncpack.SemverGroupConfig.Disabled",
      "interfaces": [
        "@aws/pdk.monorepo.Syncpack.BaseGroupConfig.GroupConfig"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "monorepo/projects/typescript/syncpack-options.ts",
        "line": 103
      },
      "name": "Disabled",
      "namespace": "monorepo.Syncpack.SemverGroupConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/syncpack-options.ts",
            "line": 104
          },
          "name": "isDisabled",
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "monorepo/projects/typescript/syncpack-options:Syncpack.SemverGroupConfig.Disabled"
    },
    "@aws/pdk.monorepo.Syncpack.SemverGroupConfig.Ignored": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws/pdk.monorepo.Syncpack.SemverGroupConfig.Ignored",
      "interfaces": [
        "@aws/pdk.monorepo.Syncpack.BaseGroupConfig.GroupConfig"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "monorepo/projects/typescript/syncpack-options.ts",
        "line": 107
      },
      "name": "Ignored",
      "namespace": "monorepo.Syncpack.SemverGroupConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/syncpack-options.ts",
            "line": 108
          },
          "name": "isIgnored",
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "monorepo/projects/typescript/syncpack-options:Syncpack.SemverGroupConfig.Ignored"
    },
    "@aws/pdk.monorepo.Syncpack.SemverGroupConfig.WithRange": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws/pdk.monorepo.Syncpack.SemverGroupConfig.WithRange",
      "interfaces": [
        "@aws/pdk.monorepo.Syncpack.BaseGroupConfig.GroupConfig"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "monorepo/projects/typescript/syncpack-options.ts",
        "line": 111
      },
      "name": "WithRange",
      "namespace": "monorepo.Syncpack.SemverGroupConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/syncpack-options.ts",
            "line": 112
          },
          "name": "range",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "monorepo/projects/typescript/syncpack-options:Syncpack.SemverGroupConfig.WithRange"
    },
    "@aws/pdk.monorepo.Syncpack.SyncpackConfig": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "see": "https://jamiemason.github.io/syncpack",
        "stability": "stable",
        "summary": "Configuration for Syncpack."
      },
      "fqn": "@aws/pdk.monorepo.Syncpack.SyncpackConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "monorepo/projects/typescript/syncpack-options.ts",
        "line": 198
      },
      "name": "SyncpackConfig",
      "namespace": "monorepo.Syncpack",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "https://jamiemason.github.io/syncpack/config/custom-types",
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/syncpack-options.ts",
            "line": 200
          },
          "name": "customTypes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "union": {
                  "types": [
                    {
                      "fqn": "@aws/pdk.monorepo.Syncpack.CustomTypeConfig.NameAndVersionProps"
                    },
                    {
                      "fqn": "@aws/pdk.monorepo.Syncpack.CustomTypeConfig.NamedVersionString"
                    },
                    {
                      "fqn": "@aws/pdk.monorepo.Syncpack.CustomTypeConfig.UnnamedVersionString"
                    },
                    {
                      "fqn": "@aws/pdk.monorepo.Syncpack.CustomTypeConfig.VersionsByName"
                    }
                  ]
                }
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "https://jamiemason.github.io/syncpack/config/dependency-types",
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/syncpack-options.ts",
            "line": 202
          },
          "name": "dependencyTypes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "https://jamiemason.github.io/syncpack/config/filter",
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/syncpack-options.ts",
            "line": 204
          },
          "name": "filter",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "https://jamiemason.github.io/syncpack/config/format-bugs",
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/syncpack-options.ts",
            "line": 206
          },
          "name": "formatBugs",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "https://jamiemason.github.io/syncpack/config/format-repository",
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/syncpack-options.ts",
            "line": 208
          },
          "name": "formatRepository",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "https://jamiemason.github.io/syncpack/config/indent",
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/syncpack-options.ts",
            "line": 210
          },
          "name": "indent",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "https://jamiemason.github.io/syncpack/config/lint-formatting",
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/syncpack-options.ts",
            "line": 212
          },
          "name": "lintFormatting",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "https://jamiemason.github.io/syncpack/config/lint-semver-ranges",
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/syncpack-options.ts",
            "line": 214
          },
          "name": "lintSemverRanges",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "https://jamiemason.github.io/syncpack/config/lint-versions",
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/syncpack-options.ts",
            "line": 216
          },
          "name": "lintVersions",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "https://jamiemason.github.io/syncpack/config/semver-groups",
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/syncpack-options.ts",
            "line": 218
          },
          "name": "semverGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "union": {
                  "types": [
                    {
                      "fqn": "@aws/pdk.monorepo.Syncpack.SemverGroupConfig.Disabled"
                    },
                    {
                      "fqn": "@aws/pdk.monorepo.Syncpack.SemverGroupConfig.Ignored"
                    },
                    {
                      "fqn": "@aws/pdk.monorepo.Syncpack.SemverGroupConfig.WithRange"
                    }
                  ]
                }
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "https://jamiemason.github.io/syncpack/config/sort-az",
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/syncpack-options.ts",
            "line": 220
          },
          "name": "sortAz",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "https://jamiemason.github.io/syncpack/config/sort-exports",
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/syncpack-options.ts",
            "line": 222
          },
          "name": "sortExports",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "https://jamiemason.github.io/syncpack/config/sort-first",
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/syncpack-options.ts",
            "line": 224
          },
          "name": "sortFirst",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "https://jamiemason.github.io/syncpack/config/sort-packages",
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/syncpack-options.ts",
            "line": 226
          },
          "name": "sortPackages",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "https://jamiemason.github.io/syncpack/config/source",
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/syncpack-options.ts",
            "line": 228
          },
          "name": "source",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "https://jamiemason.github.io/syncpack/config/specifier-types",
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/syncpack-options.ts",
            "line": 230
          },
          "name": "specifierTypes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "https://jamiemason.github.io/syncpack/config/version-groups",
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/syncpack-options.ts",
            "line": 232
          },
          "name": "versionGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "union": {
                  "types": [
                    {
                      "fqn": "@aws/pdk.monorepo.Syncpack.VersionGroupConfig.Banned"
                    },
                    {
                      "fqn": "@aws/pdk.monorepo.Syncpack.VersionGroupConfig.Ignored"
                    },
                    {
                      "fqn": "@aws/pdk.monorepo.Syncpack.VersionGroupConfig.Pinned"
                    },
                    {
                      "fqn": "@aws/pdk.monorepo.Syncpack.VersionGroupConfig.SnappedTo"
                    },
                    {
                      "fqn": "@aws/pdk.monorepo.Syncpack.VersionGroupConfig.SameRange"
                    },
                    {
                      "fqn": "@aws/pdk.monorepo.Syncpack.VersionGroupConfig.Standard"
                    }
                  ]
                }
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "monorepo/projects/typescript/syncpack-options:Syncpack.SyncpackConfig"
    },
    "@aws/pdk.monorepo.Syncpack.VersionGroupConfig.Banned": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws/pdk.monorepo.Syncpack.VersionGroupConfig.Banned",
      "interfaces": [
        "@aws/pdk.monorepo.Syncpack.BaseGroupConfig.GroupConfig"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "monorepo/projects/typescript/syncpack-options.ts",
        "line": 119
      },
      "name": "Banned",
      "namespace": "monorepo.Syncpack.VersionGroupConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/syncpack-options.ts",
            "line": 120
          },
          "name": "isBanned",
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "monorepo/projects/typescript/syncpack-options:Syncpack.VersionGroupConfig.Banned"
    },
    "@aws/pdk.monorepo.Syncpack.VersionGroupConfig.Ignored": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws/pdk.monorepo.Syncpack.VersionGroupConfig.Ignored",
      "interfaces": [
        "@aws/pdk.monorepo.Syncpack.BaseGroupConfig.GroupConfig"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "monorepo/projects/typescript/syncpack-options.ts",
        "line": 123
      },
      "name": "Ignored",
      "namespace": "monorepo.Syncpack.VersionGroupConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/syncpack-options.ts",
            "line": 124
          },
          "name": "isIgnored",
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "monorepo/projects/typescript/syncpack-options:Syncpack.VersionGroupConfig.Ignored"
    },
    "@aws/pdk.monorepo.Syncpack.VersionGroupConfig.Pinned": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws/pdk.monorepo.Syncpack.VersionGroupConfig.Pinned",
      "interfaces": [
        "@aws/pdk.monorepo.Syncpack.BaseGroupConfig.GroupConfig"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "monorepo/projects/typescript/syncpack-options.ts",
        "line": 127
      },
      "name": "Pinned",
      "namespace": "monorepo.Syncpack.VersionGroupConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/syncpack-options.ts",
            "line": 128
          },
          "name": "pinVersion",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "monorepo/projects/typescript/syncpack-options:Syncpack.VersionGroupConfig.Pinned"
    },
    "@aws/pdk.monorepo.Syncpack.VersionGroupConfig.SameRange": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws/pdk.monorepo.Syncpack.VersionGroupConfig.SameRange",
      "interfaces": [
        "@aws/pdk.monorepo.Syncpack.BaseGroupConfig.GroupConfig"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "monorepo/projects/typescript/syncpack-options.ts",
        "line": 135
      },
      "name": "SameRange",
      "namespace": "monorepo.Syncpack.VersionGroupConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/syncpack-options.ts",
            "line": 136
          },
          "name": "policy",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "monorepo/projects/typescript/syncpack-options:Syncpack.VersionGroupConfig.SameRange"
    },
    "@aws/pdk.monorepo.Syncpack.VersionGroupConfig.SnappedTo": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws/pdk.monorepo.Syncpack.VersionGroupConfig.SnappedTo",
      "interfaces": [
        "@aws/pdk.monorepo.Syncpack.BaseGroupConfig.GroupConfig"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "monorepo/projects/typescript/syncpack-options.ts",
        "line": 131
      },
      "name": "SnappedTo",
      "namespace": "monorepo.Syncpack.VersionGroupConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/syncpack-options.ts",
            "line": 132
          },
          "name": "snapTo",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "monorepo/projects/typescript/syncpack-options:Syncpack.VersionGroupConfig.SnappedTo"
    },
    "@aws/pdk.monorepo.Syncpack.VersionGroupConfig.Standard": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws/pdk.monorepo.Syncpack.VersionGroupConfig.Standard",
      "interfaces": [
        "@aws/pdk.monorepo.Syncpack.BaseGroupConfig.GroupConfig"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "monorepo/projects/typescript/syncpack-options.ts",
        "line": 143
      },
      "name": "Standard",
      "namespace": "monorepo.Syncpack.VersionGroupConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/syncpack-options.ts",
            "line": 144
          },
          "name": "preferVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "monorepo/projects/typescript/syncpack-options:Syncpack.VersionGroupConfig.Standard"
    },
    "@aws/pdk.monorepo.TypeScriptProjectOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "TypeScriptProjectOptions."
      },
      "fqn": "@aws/pdk.monorepo.TypeScriptProjectOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "monorepo/projects/typescript/typescript-project-options.ts",
        "line": 7
      },
      "name": "TypeScriptProjectOptions",
      "namespace": "monorepo",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "$BASEDIR",
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 985
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "This is normally only allowed for libraries. For apps, there's no meaning\nfor specifying these.",
            "stability": "experimental",
            "summary": "Allow the project to include `peerDependencies` and `bundledDependencies`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 796
          },
          "name": "allowLibraryDependencies",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"dist\"",
            "stability": "experimental",
            "summary": "A directory which will contain build artifacts."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 356
          },
          "name": "artifactsDirectory",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Author's e-mail."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 788
          },
          "name": "authorEmail",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Author's name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 783
          },
          "name": "authorName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Is the author an organization."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 778
          },
          "name": "authorOrganization",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Author's URL / Website."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 773
          },
          "name": "authorUrl",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- auto approve is disabled",
            "stability": "experimental",
            "summary": "Enable and configure the 'auto approve' workflow."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 912
          },
          "name": "autoApproveOptions",
          "optional": true,
          "type": {
            "fqn": "projen.github.AutoApproveOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- true",
            "remarks": "Throw if set to true but `autoApproveOptions` are not defined.",
            "stability": "experimental",
            "summary": "Automatically approve deps upgrade PRs, allowing them to be merged by mergify (if configued)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 350
          },
          "name": "autoApproveUpgrades",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Automatically add all executables under the `bin` directory to your `package.json` file under the `bin` section."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 768
          },
          "name": "autoDetectBin",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "Has no effect if `github.mergify`\nis set to false.",
            "stability": "experimental",
            "summary": "Enable automatic merging on GitHub."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 906
          },
          "name": "autoMerge",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- see defaults in `AutoMergeOptions`",
            "remarks": "Has no effect if\n`github.mergify` or `autoMerge` is set to false.",
            "stability": "experimental",
            "summary": "Configure options for automatic merging on GitHub."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 898
          },
          "name": "autoMergeOptions",
          "optional": true,
          "type": {
            "fqn": "projen.github.AutoMergeOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "You can use this option to add/customize how binaries are represented in\nyour `package.json`, but unless `autoDetectBin` is `false`, every\nexecutable file under `bin` will automatically be added to this section.",
            "stability": "experimental",
            "summary": "Binary programs vended with your module."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 762
          },
          "name": "bin",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The email address to which issues should be reported."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 754
          },
          "name": "bugsEmail",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The url to your project's issue tracker."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 749
          },
          "name": "bugsUrl",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- true if not a subproject",
            "stability": "experimental",
            "summary": "Define a GitHub workflow for building PRs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 343
          },
          "name": "buildWorkflow",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Options for PR build workflow."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 337
          },
          "name": "buildWorkflowOptions",
          "optional": true,
          "type": {
            "fqn": "projen.javascript.BuildWorkflowOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"{ pullRequest: {}, workflowDispatch: {} }\"",
            "deprecated": "- Use `buildWorkflowOptions.workflowTriggers`",
            "stability": "deprecated",
            "summary": "Build workflow triggers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 332
          },
          "name": "buildWorkflowTriggers",
          "optional": true,
          "type": {
            "fqn": "projen.github.workflows.Triggers"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "These modules will be\nadded both to the `dependencies` section and `bundledDependencies` section of\nyour `package.json`.\n\nThe recommendation is to only specify the module name here (e.g.\n`express`). This will behave similar to `yarn add` or `npm install` in the\nsense that it will add the module as a dependency to your `package.json`\nfile with the latest version (`^`). You can specify semver requirements in\nthe same syntax passed to `npm i` or `yarn add` (e.g. `express@^2`) and\nthis will be what you `package.json` will eventually include.",
            "stability": "experimental",
            "summary": "List of dependencies to bundle into this module."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 744
          },
          "name": "bundledDeps",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Options for `Bundler`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 325
          },
          "name": "bundlerOptions",
          "optional": true,
          "type": {
            "fqn": "projen.javascript.BundlerOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no license checks are run during the build and all licenses will be accepted",
            "remarks": "This setting will cause the build to fail, if any prohibited or not allowed licenses ares encountered.",
            "stability": "experimental",
            "summary": "Configure which licenses should be deemed acceptable for use by dependencies."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 320
          },
          "name": "checkLicenses",
          "optional": true,
          "type": {
            "fqn": "projen.javascript.LicenseCheckerOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- true, but false for subprojects",
            "stability": "experimental",
            "summary": "Add a `clobber` task which resets the repo to origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 890
          },
          "name": "clobber",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- undefined",
            "remarks": "This is required if publishing packages to, or installing scoped packages from AWS CodeArtifact",
            "stability": "experimental",
            "summary": "Options for npm packages using AWS CodeArtifact."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 729
          },
          "name": "codeArtifactOptions",
          "optional": true,
          "type": {
            "fqn": "projen.javascript.CodeArtifactOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Define a GitHub workflow step for sending code coverage metrics to https://codecov.io/ Uses codecov/codecov-action@v4 A secret is required for private repos. Configured with `@codeCovTokenSecret`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 313
          },
          "name": "codeCov",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- if this option is not specified, only public repositories are supported",
            "stability": "experimental",
            "summary": "Define the secret name for a specified https://codecov.io/ token A secret is required to send coverage for private repositories."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 307
          },
          "name": "codeCovTokenSecret",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Whether to commit the managed files by default."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 981
          },
          "name": "commitGenerated",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- defaults to the value of authorName or \"\" if `authorName` is undefined.",
            "stability": "experimental",
            "summary": "License copyright owner."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 301
          },
          "name": "copyrightOwner",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- current year",
            "stability": "experimental",
            "summary": "The copyright years to put in the LICENSE file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 295
          },
          "name": "copyrightPeriod",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"main\"",
            "stability": "experimental",
            "summary": "The name of the main release branch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 362
          },
          "name": "defaultReleaseBranch",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "Cannot be used in conjunction with `depsUpgrade`.",
            "stability": "experimental",
            "summary": "Use dependabot to handle dependency upgrades."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 289
          },
          "name": "dependabot",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default options",
            "stability": "experimental",
            "summary": "Options for dependabot."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 282
          },
          "name": "dependabotOptions",
          "optional": true,
          "type": {
            "fqn": "projen.github.DependabotOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "featured": "false"
            },
            "default": "[]",
            "remarks": "The recommendation is to only specify the module name here (e.g.\n`express`). This will behave similar to `yarn add` or `npm install` in the\nsense that it will add the module as a dependency to your `package.json`\nfile with the latest version (`^`). You can specify semver requirements in\nthe same syntax passed to `npm i` or `yarn add` (e.g. `express@^2`) and\nthis will be what you `package.json` will eventually include.",
            "stability": "experimental",
            "summary": "Runtime dependencies of this module."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 722
          },
          "name": "deps",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "Cannot be used in conjunction with `dependabot`.",
            "stability": "experimental",
            "summary": "Use tasks and github workflows to handle dependency upgrades."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 276
          },
          "name": "depsUpgrade",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default options",
            "stability": "experimental",
            "summary": "Options for `UpgradeDependencies`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 269
          },
          "name": "depsUpgradeOptions",
          "optional": true,
          "type": {
            "fqn": "projen.javascript.UpgradeDependenciesOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "featured": "false"
            },
            "remarks": "It can be used when searching for packages in a package manager as well.\nSee https://classic.yarnpkg.com/en/docs/package-json/#toc-description",
            "stability": "experimental",
            "summary": "The description is just a string that helps people understand the purpose of the package."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 709
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Add a VSCode development environment (used for GitHub Codespaces)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 884
          },
          "name": "devContainer",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "featured": "true"
            },
            "default": "[]",
            "remarks": "These dependencies will only be\navailable in your build environment but will not be fetched when this\nmodule is consumed.\n\nThe recommendation is to only specify the module name here (e.g.\n`express`). This will behave similar to `yarn add` or `npm install` in the\nsense that it will add the module as a dependency to your `package.json`\nfile with the latest version (`^`). You can specify semver requirements in\nthe same syntax passed to `npm i` or `yarn add` (e.g. `express@^2`) and\nthis will be what you `package.json` will eventually include.",
            "stability": "experimental",
            "summary": "Build dependencies for this module."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 701
          },
          "name": "devDeps",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Do not generate a `tsconfig.json` file (used by jsii projects since tsconfig.json is generated by the jsii compiler)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 120
          },
          "name": "disableTsconfig",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Do not generate a `tsconfig.dev.json` file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 114
          },
          "name": "disableTsconfigDev",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Docgen by Typedoc."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 108
          },
          "name": "docgen",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"docs\"",
            "stability": "experimental",
            "summary": "Docs directory."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 102
          },
          "name": "docsDirectory",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"lib/index.js\"",
            "stability": "experimental",
            "summary": "Module entrypoint (`main` in `package.json`). Set to an empty string to not include `main` in your package.json."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 684
          },
          "name": "entrypoint",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- .d.ts file derived from the project's entrypoint (usually lib/index.d.ts)",
            "stability": "experimental",
            "summary": "The .d.ts file that includes the type declarations for this module."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 96
          },
          "name": "entrypointTypes",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Setup eslint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 90
          },
          "name": "eslint",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- opinionated default options",
            "stability": "experimental",
            "summary": "Eslint options."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 84
          },
          "name": "eslintOptions",
          "optional": true,
          "type": {
            "fqn": "projen.javascript.EslintOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "Enabled by default for root projects. Disabled for non-root projects.",
            "stability": "experimental",
            "summary": "Enable GitHub integration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 878
          },
          "name": "github",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- see GitHubOptions",
            "stability": "experimental",
            "summary": "Options for GitHub integration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 871
          },
          "name": "githubOptions",
          "optional": true,
          "type": {
            "fqn": "projen.github.GitHubOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Additional entries to .gitignore."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 263
          },
          "name": "gitignore",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Configuration options for .gitignore file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 975
          },
          "name": "gitIgnoreOptions",
          "optional": true,
          "type": {
            "fqn": "projen.IgnoreFileOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Configuration options for git."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 970
          },
          "name": "gitOptions",
          "optional": true,
          "type": {
            "fqn": "projen.GitOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Add a Gitpod development environment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 865
          },
          "name": "gitpod",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Package's Homepage / Website."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 677
          },
          "name": "homepage",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Setup jest unit tests."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 258
          },
          "name": "jest",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default options",
            "stability": "experimental",
            "summary": "Jest options."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 252
          },
          "name": "jestOptions",
          "optional": true,
          "type": {
            "fqn": "projen.javascript.JestOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"latest\"",
            "stability": "experimental",
            "summary": "Version requirement of `publib` which is used to publish modules to npm."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 521
          },
          "name": "jsiiReleaseVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Keywords to include in `package.json`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 672
          },
          "name": "keywords",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"lib\"",
            "stability": "experimental",
            "summary": "Typescript  artifacts output directory."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 78
          },
          "name": "libdir",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"Apache-2.0\"",
            "remarks": "See https://github.com/projen/projen/tree/main/license-text for a list of supported licenses.\nUse the `licensed` option if you want to no license to be specified.",
            "stability": "experimental",
            "summary": "License's SPDX identifier."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 667
          },
          "name": "license",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Indicates if a license should be added."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 659
          },
          "name": "licensed",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "{}",
            "stability": "experimental",
            "summary": "Configure logging options such as verbosity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 965
          },
          "name": "logging",
          "optional": true,
          "type": {
            "fqn": "projen.LoggerOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Major version is not enforced.",
            "remarks": "If this is specified, we bump the latest version of this major version line.\nIf not specified, we bump the global latest version.",
            "stability": "experimental",
            "summary": "Major version to release from the default branch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 515
          },
          "name": "majorVersion",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no max",
            "stability": "experimental",
            "summary": "Minimum node.js version to require via `engines` (inclusive)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 653
          },
          "name": "maxNodeVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "deprecated": "use `githubOptions.mergify` instead",
            "stability": "deprecated",
            "summary": "Whether mergify should be enabled on this repository or not."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 859
          },
          "name": "mergify",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default options",
            "deprecated": "use `githubOptions.mergifyOptions` instead",
            "stability": "deprecated",
            "summary": "Options for mergify."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 852
          },
          "name": "mergifyOptions",
          "optional": true,
          "type": {
            "fqn": "projen.github.MergifyOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No minimum version is being enforced",
            "remarks": "This can be useful to set to 1, as breaking changes before the 1.x major\nrelease are not incrementing the major version number.\n\nCan not be set together with `majorVersion`.",
            "stability": "experimental",
            "summary": "Minimal Major version to release."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 507
          },
          "name": "minMajorVersion",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no \"engines\" specified",
            "stability": "experimental",
            "summary": "Minimum Node.js version to require via package.json `engines` (inclusive)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 647
          },
          "name": "minNodeVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "deprecated": "- Use `buildWorkflowOptions.mutableBuild`",
            "remarks": "This means\nthat any files synthesized by projen or e.g. test snapshots will always be up-to-date\nbefore a PR is merged.\n\nImplies that PR builds do not have anti-tamper checks.",
            "stability": "deprecated",
            "summary": "Automatically update files modified during builds to pull-request branches."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 246
          },
          "name": "mutableBuild",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- for scoped packages (e.g. `foo@bar`), the default is\n`NpmAccess.RESTRICTED`, for non-scoped packages, the default is\n`NpmAccess.PUBLIC`.",
            "stability": "experimental",
            "summary": "Access level of the npm package."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 641
          },
          "name": "npmAccess",
          "optional": true,
          "type": {
            "fqn": "projen.javascript.NpmAccess"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"latest\"",
            "remarks": "To set the npm dist-tag for release branches, set the `npmDistTag` property\nfor each branch.",
            "stability": "experimental",
            "summary": "The npmDistTag to use when publishing from the default branch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 497
          },
          "name": "npmDistTag",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "deprecated": "- use `project.addPackageIgnore`",
            "stability": "deprecated",
            "summary": "Additional entries to .npmignore."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 234
          },
          "name": "npmignore",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Defines an .npmignore file. Normally this is only needed for libraries that are packaged as tarballs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 228
          },
          "name": "npmignoreEnabled",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Configuration options for .npmignore file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 222
          },
          "name": "npmIgnoreOptions",
          "optional": true,
          "type": {
            "fqn": "projen.IgnoreFileOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- true for public packages, false otherwise",
            "remarks": "A supported package manager is required to publish a package with npm provenance statements and\nyou will need to use a supported CI/CD provider.\n\nNote that the projen `Release` and `Publisher` components are using `publib` to publish packages,\nwhich is using npm internally and supports provenance statements independently of the package manager used.",
            "stability": "experimental",
            "summary": "Should provenance statements be generated when the package is published."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 633
          },
          "name": "npmProvenance",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "deprecated": "use `npmRegistryUrl` instead",
            "remarks": "Cannot be set together with `npmRegistryUrl`.",
            "stability": "deprecated",
            "summary": "The host name of the npm registry to publish to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 622
          },
          "name": "npmRegistry",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"https://registry.npmjs.org\"",
            "remarks": "Must be a URL (e.g. start with \"https://\" or \"http://\")",
            "stability": "experimental",
            "summary": "The base URL of the npm package registry."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 615
          },
          "name": "npmRegistryUrl",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"NPM_TOKEN\"",
            "stability": "experimental",
            "summary": "GitHub secret which contains the NPM token to use when publishing packages."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 608
          },
          "name": "npmTokenSecret",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\".\"",
            "remarks": "If this project has a parent, this directory is relative to the parent\ndirectory and it cannot be the same as the parent or any of it's other\nsubprojects.",
            "stability": "experimental",
            "summary": "The root directory of the project. Relative to this directory, all files are synthesized."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 959
          },
          "name": "outdir",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Defines a `package` task that will produce an npm tarball under the artifacts directory (e.g. `dist`)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 217
          },
          "name": "package",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "NodePackageManager.YARN_CLASSIC",
            "stability": "experimental",
            "summary": "The Node Package Manager used to execute scripts."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 602
          },
          "name": "packageManager",
          "optional": true,
          "type": {
            "fqn": "projen.javascript.NodePackageManager"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "featured": "false"
            },
            "default": "- defaults to project name",
            "stability": "experimental",
            "summary": "The \"name\" in package.json."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 596
          },
          "name": "packageName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The parent project, if this project is part of a bigger project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 948
          },
          "name": "parent",
          "optional": true,
          "type": {
            "fqn": "projen.Project"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Options for `peerDeps`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 589
          },
          "name": "peerDependencyOptions",
          "optional": true,
          "type": {
            "fqn": "projen.javascript.PeerDependencyOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "[]",
            "remarks": "Dependencies listed here are required to\nbe installed (and satisfied) by the _consumer_ of this library. Using peer\ndependencies allows you to ensure that only a single module of a certain\nlibrary exists in the `node_modules` tree of your consumers.\n\nNote that prior to npm@7, peer dependencies are _not_ automatically\ninstalled, which means that adding peer dependencies to a library will be a\nbreaking change for your customers.\n\nUnless `peerDependencyOptions.pinnedDevDependency` is disabled (it is\nenabled by default), projen will automatically add a dev dependency with a\npinned version for each peer dependency. This will ensure that you build &\ntest your module against the lowest peer version required.",
            "stability": "experimental",
            "summary": "Peer dependencies for this module."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 584
          },
          "name": "peerDeps",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"7\"",
            "stability": "experimental",
            "summary": "The version of PNPM to use if using PNPM as a package manager."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 565
          },
          "name": "pnpmVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "[]",
            "stability": "experimental",
            "summary": "Steps to execute after build as part of the release workflow."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 489
          },
          "name": "postBuildSteps",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "projen.github.workflows.JobStep"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- normal semantic versions",
            "stability": "experimental",
            "summary": "Bump versions from the default branch as pre-releases (e.g. \"beta\", \"alpha\", \"pre\")."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 483
          },
          "name": "prerelease",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Setup prettier."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 211
          },
          "name": "prettier",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default options",
            "stability": "experimental",
            "summary": "Prettier options."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 205
          },
          "name": "prettierOptions",
          "optional": true,
          "type": {
            "fqn": "projen.javascript.PrettierOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "ProjectType.UNKNOWN",
            "deprecated": "no longer supported at the base project level",
            "stability": "deprecated",
            "summary": "Which type of project this is (library/app)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 845
          },
          "name": "projectType",
          "optional": true,
          "type": {
            "fqn": "projen.ProjectType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"npx projen\"",
            "remarks": "Can be used to customize in special environments.",
            "stability": "experimental",
            "summary": "The shell command to use in order to run the projen CLI."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 943
          },
          "name": "projenCommand",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- use a personal access token named PROJEN_GITHUB_TOKEN",
            "stability": "experimental",
            "summary": "Choose a method of providing GitHub API access for projen workflows."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 838
          },
          "name": "projenCredentials",
          "optional": true,
          "type": {
            "fqn": "projen.github.GithubCredentials"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- true if not a subproject",
            "stability": "experimental",
            "summary": "Indicates of \"projen\" should be installed as a devDependency."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 199
          },
          "name": "projenDevDependency",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- true if projenrcJson is false",
            "stability": "experimental",
            "summary": "Generate (once) .projenrc.js (in JavaScript). Set to `false` in order to disable .projenrc.js generation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 193
          },
          "name": "projenrcJs",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Generate (once) .projenrc.json (in JSON). Set to `false` in order to disable .projenrc.json generation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 936
          },
          "name": "projenrcJson",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default options",
            "stability": "experimental",
            "summary": "Options for .projenrc.json."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 930
          },
          "name": "projenrcJsonOptions",
          "optional": true,
          "type": {
            "fqn": "projen.ProjenrcJsonOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default options",
            "stability": "experimental",
            "summary": "Options for .projenrc.js."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 187
          },
          "name": "projenrcJsOptions",
          "optional": true,
          "type": {
            "fqn": "projen.javascript.ProjenrcOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "pjnew": "true"
            },
            "default": "false",
            "stability": "experimental",
            "summary": "Use TypeScript for your projenrc file (`.projenrc.ts`)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 72
          },
          "name": "projenrcTs",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Options for .projenrc.ts."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 65
          },
          "name": "projenrcTsOptions",
          "optional": true,
          "type": {
            "fqn": "projen.typescript.ProjenrcOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"PROJEN_GITHUB_TOKEN\"",
            "deprecated": "use `projenCredentials`",
            "remarks": "This token needs to have the `repo`, `workflows`\nand `packages` scope.",
            "stability": "deprecated",
            "summary": "The name of a secret which includes a GitHub Personal Access Token to be used by projen workflows."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 832
          },
          "name": "projenTokenSecret",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Defaults to the latest version.",
            "stability": "experimental",
            "summary": "Version of projen to install."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 181
          },
          "name": "projenVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Instead of actually publishing to package managers, just print the publishing command."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 477
          },
          "name": "publishDryRun",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "Normally, publishing only happens within automated workflows. Enable this\nin order to create a publishing task for each publishing activity.",
            "stability": "experimental",
            "summary": "Define publishing tasks that can be executed manually as well as workflows."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 471
          },
          "name": "publishTasks",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Include a GitHub pull request template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 175
          },
          "name": "pullRequestTemplate",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default content",
            "stability": "experimental",
            "summary": "The contents of the pull request template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 169
          },
          "name": "pullRequestTemplateContents",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- { filename: 'README.md', contents: '# replace this' }",
            "stability": "experimental",
            "summary": "The README setup."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 823
          },
          "name": "readme",
          "optional": true,
          "type": {
            "fqn": "projen.SampleReadmeProps"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "ReleasableCommits.everyCommit()",
            "stability": "experimental",
            "summary": "Find commits that should be considered releasable Used to decide if a release is required."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 463
          },
          "name": "releasableCommits",
          "optional": true,
          "type": {
            "fqn": "projen.ReleasableCommits"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- true (false for subprojects)",
            "stability": "experimental",
            "summary": "Add release management to this project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 163
          },
          "name": "release",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no additional branches are used for release. you can use\n`addBranch()` to add additional branches.",
            "remarks": "A workflow will be created for each\nrelease branch which will publish releases from commits in this branch.\nEach release branch _must_ be assigned a major version number which is used\nto enforce that versions published from that branch always use that major\nversion. If multiple branches are used, the `majorVersion` field must also\nbe provided for the default branch.",
            "stability": "experimental",
            "summary": "Defines additional release branches."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 457
          },
          "name": "releaseBranches",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "projen.release.BranchOptions"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "deprecated": "Use `releaseTrigger: ReleaseTrigger.continuous()` instead",
            "stability": "deprecated",
            "summary": "Automatically release new versions every commit to one of branches in `releaseBranches`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 444
          },
          "name": "releaseEveryCommit",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Create a github issue on every failed publishing task."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 437
          },
          "name": "releaseFailureIssue",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"failed-release\"",
            "remarks": "Only applies if `releaseFailureIssue` is true.",
            "stability": "experimental",
            "summary": "The label to apply to issues indicating publish failures."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 431
          },
          "name": "releaseFailureIssueLabel",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no scheduled releases",
            "deprecated": "Use `releaseTrigger: ReleaseTrigger.scheduled()` instead",
            "stability": "deprecated",
            "summary": "CRON schedule to trigger new releases."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 424
          },
          "name": "releaseSchedule",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"v\"",
            "remarks": "Useful if you are releasing on multiple branches with overlapping version numbers.\nNote: this prefix is used to detect the latest tagged version\nwhen bumping, so if you change this on a project with an existing version\nhistory, you may need to manually tag your latest release\nwith the new prefix.",
            "stability": "experimental",
            "summary": "Automatically add the given prefix to release tags."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 417
          },
          "name": "releaseTagPrefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Automatically release to npm when new versions are introduced."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 157
          },
          "name": "releaseToNpm",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Continuous releases (`ReleaseTrigger.continuous()`)",
            "stability": "experimental",
            "summary": "The release trigger to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 407
          },
          "name": "releaseTrigger",
          "optional": true,
          "type": {
            "fqn": "projen.release.ReleaseTrigger"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- true if not a subproject",
            "deprecated": "see `release`.",
            "stability": "deprecated",
            "summary": "DEPRECATED: renamed to `release`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 151
          },
          "name": "releaseWorkflow",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"release\"",
            "stability": "experimental",
            "summary": "The name of the default release workflow."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 401
          },
          "name": "releaseWorkflowName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "A set of workflow steps to execute in order to setup the workflow container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 395
          },
          "name": "releaseWorkflowSetupSteps",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "projen.github.workflows.JobStep"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Use renovatebot to handle dependency upgrades."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 924
          },
          "name": "renovatebot",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default options",
            "stability": "experimental",
            "summary": "Options for renovatebot."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 918
          },
          "name": "renovatebotOptions",
          "optional": true,
          "type": {
            "fqn": "projen.RenovatebotOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "See https://classic.yarnpkg.com/en/docs/package-json/#toc-repository",
            "stability": "experimental",
            "summary": "The repository is the location where the actual code for your package lives."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 559
          },
          "name": "repository",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "If the package.json for your package is not in the root directory (for example if it is part of a monorepo), you can specify the directory in which it lives."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 553
          },
          "name": "repositoryDirectory",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Generate one-time sample in `src/` and `test/` if there are no files there."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 60
          },
          "name": "sampleCode",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- fetch all scoped packages from the public npm registry",
            "stability": "experimental",
            "summary": "Options for privately hosted scoped packages."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 548
          },
          "name": "scopedPackagesOptions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "projen.javascript.ScopedPackagesOptions"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "{}",
            "deprecated": "use `project.addTask()` or `package.setScript()`",
            "remarks": "If a script has the same name as a standard script,\nthe standard script will be overwritten.\nAlso adds the script as a task.",
            "stability": "deprecated",
            "summary": "npm scripts to include."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 542
          },
          "name": "scripts",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"src\"",
            "stability": "experimental",
            "summary": "Typescript sources directory."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 54
          },
          "name": "srcdir",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Package's Stability."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 532
          },
          "name": "stability",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "See `staleOptions` for options.",
            "stability": "experimental",
            "summary": "Auto-close of stale issues and pull request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 817
          },
          "name": "stale",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- see defaults in `StaleOptions`",
            "remarks": "To disable set `stale` to `false`.",
            "stability": "experimental",
            "summary": "Auto-close stale issues and pull requests."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 810
          },
          "name": "staleOptions",
          "optional": true,
          "type": {
            "fqn": "projen.github.StaleOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"test\"",
            "remarks": "Tests files should be named `xxx.test.ts`.\nIf this directory is under `srcdir` (e.g. `src/test`, `src/__tests__`),\nthen tests are going to be compiled into `lib/` and executed as javascript.\nIf the test directory is outside of `src`, then we configure jest to\ncompile the code in-memory.",
            "stability": "experimental",
            "summary": "Jest tests directory."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 48
          },
          "name": "testdir",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default options",
            "stability": "experimental",
            "summary": "Custom TSConfig."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 38
          },
          "name": "tsconfig",
          "optional": true,
          "type": {
            "fqn": "projen.javascript.TypescriptConfigOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- use the production tsconfig options",
            "stability": "experimental",
            "summary": "Custom tsconfig options for the development tsconfig.json file (used for testing)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 32
          },
          "name": "tsconfigDev",
          "optional": true,
          "type": {
            "fqn": "projen.javascript.TypescriptConfigOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"tsconfig.dev.json\"",
            "stability": "experimental",
            "summary": "The name of the development tsconfig.json file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 26
          },
          "name": "tsconfigDevFile",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Options for ts-jest."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 20
          },
          "name": "tsJestOptions",
          "optional": true,
          "type": {
            "fqn": "projen.typescript.TsJestOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"latest\"",
            "remarks": "NOTE: Typescript is not semantically versioned and should remain on the\nsame minor, so we recommend using a `~` dependency (e.g. `~1.2.3`).",
            "stability": "experimental",
            "summary": "TypeScript version to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 15
          },
          "name": "typescriptVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- standard configuration applicable for GitHub repositories",
            "remarks": "Given values either append to default configuration or overwrite values in it.",
            "stability": "experimental",
            "summary": "Custom configuration used when creating changelog with standard-version package."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 390
          },
          "name": "versionrcOptions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "Enabled by default for root projects. Disabled for non-root projects.",
            "stability": "experimental",
            "summary": "Enable VSCode integration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 803
          },
          "name": "vscode",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"yarn install --frozen-lockfile && yarn projen\"",
            "stability": "experimental",
            "summary": "Workflow steps to use in order to bootstrap this repo."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 144
          },
          "name": "workflowBootstrapSteps",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "projen.github.workflows.JobStep"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default image",
            "stability": "experimental",
            "summary": "Container image to use for GitHub workflows."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 383
          },
          "name": "workflowContainerImage",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- GitHub Actions",
            "stability": "experimental",
            "summary": "The git identity to use in workflows."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 138
          },
          "name": "workflowGitIdentity",
          "optional": true,
          "type": {
            "fqn": "projen.github.GitIdentity"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- same as `minNodeVersion`",
            "stability": "experimental",
            "summary": "The node version to use in GitHub workflows."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 132
          },
          "name": "workflowNodeVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Enable Node.js package cache in GitHub workflows."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 126
          },
          "name": "workflowPackageCache",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "description": "Defines a target Runner by labels",
              "throws": "{Error} if both `runsOn` and `runsOnGroup` are specified"
            },
            "default": "[\"ubuntu-latest\"]",
            "stability": "experimental",
            "summary": "Github Runner selection labels."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 377
          },
          "name": "workflowRunsOn",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "description": "Defines a target Runner Group by name and/or labels",
              "throws": "{Error} if both `runsOn` and `runsOnGroup` are specified"
            },
            "stability": "experimental",
            "summary": "Github Runner Group selection options."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 369
          },
          "name": "workflowRunsOnGroup",
          "optional": true,
          "type": {
            "fqn": "projen.GroupRunnerOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Yarn Berry v4 with all default options",
            "stability": "experimental",
            "summary": "Options for Yarn Berry."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/typescript-project-options.ts",
            "line": 527
          },
          "name": "yarnBerryOptions",
          "optional": true,
          "type": {
            "fqn": "projen.javascript.YarnBerryOptions"
          }
        }
      ],
      "symbolId": "monorepo/projects/typescript/typescript-project-options:TypeScriptProjectOptions"
    },
    "@aws/pdk.monorepo.WorkspaceConfig": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "see": "https://classic.yarnpkg.com/lang/en/docs/workspaces/",
        "stability": "stable",
        "summary": "Workspace configurations."
      },
      "fqn": "@aws/pdk.monorepo.WorkspaceConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "monorepo/projects/typescript/monorepo-ts.ts",
        "line": 37
      },
      "name": "WorkspaceConfig",
      "namespace": "monorepo",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "All packages which are parented by the monorepo are automatically added to the workspace, but you can use this\nproperty to specify any additional paths to packages which may not be managed by projen.",
            "stability": "stable",
            "summary": "List of additional package globs to include in the workspace."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/monorepo-ts.ts",
            "line": 58
          },
          "name": "additionalPackages",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Package bins are only linked when installed from the registry, however it is very useful\nfor monorepo development to also utilize these bin scripts. When enabled, this flag will\nrecursively link all bins from packages.json files to the root node_modules/.bin.",
            "stability": "stable",
            "summary": "Links all local workspace project bins so they can be used for local development."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/monorepo-ts.ts",
            "line": 50
          },
          "name": "linkLocalWorkspaceBins",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Yarn workspace config."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/monorepo-ts.ts",
            "line": 41
          },
          "name": "yarn",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.monorepo.YarnWorkspaceConfig"
          }
        }
      ],
      "symbolId": "monorepo/projects/typescript/monorepo-ts:WorkspaceConfig"
    },
    "@aws/pdk.monorepo.YarnWorkspaceConfig": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Yarn related workspace config."
      },
      "fqn": "@aws/pdk.monorepo.YarnWorkspaceConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "monorepo/projects/typescript/monorepo-ts.ts",
        "line": 64
      },
      "name": "YarnWorkspaceConfig",
      "namespace": "monorepo",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Disable automatically applying `noHoist` logic for all sub-project \"bundledDependencies\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/monorepo-ts.ts",
            "line": 77
          },
          "name": "disableNoHoistBundled",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "https://classic.yarnpkg.com/blog/2018/02/15/nohoist/",
            "stability": "stable",
            "summary": "List of package globs to exclude from hoisting in the workspace."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "monorepo/projects/typescript/monorepo-ts.ts",
            "line": 70
          },
          "name": "noHoist",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "monorepo/projects/typescript/monorepo-ts:YarnWorkspaceConfig"
    },
    "@aws/pdk.pdk_nag.AwsPrototypingChecks": {
      "assembly": "@aws/pdk",
      "base": "cdk-nag.NagPack",
      "docs": {
        "stability": "stable",
        "summary": "Check best practices for prototypes."
      },
      "fqn": "@aws/pdk.pdk_nag.AwsPrototypingChecks",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "pdk-nag/packs/aws-prototyping.ts",
          "line": 14
        },
        "parameters": [
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk-nag.NagPackProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "pdk-nag/packs/aws-prototyping.ts",
        "line": 13
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Check if CfnResource and apply rules."
          },
          "locationInModule": {
            "filename": "pdk-nag/packs/aws-prototyping.ts",
            "line": 21
          },
          "name": "visit",
          "overrides": "cdk-nag.NagPack",
          "parameters": [
            {
              "name": "node",
              "type": {
                "fqn": "constructs.IConstruct"
              }
            }
          ]
        }
      ],
      "name": "AwsPrototypingChecks",
      "namespace": "pdk_nag",
      "symbolId": "pdk-nag/packs/aws-prototyping:AwsPrototypingChecks"
    },
    "@aws/pdk.pdk_nag.ExtendedNagResult": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Represents the result of applying a CDK Nag rule to a resource."
      },
      "fqn": "@aws/pdk.pdk_nag.ExtendedNagResult",
      "kind": "interface",
      "locationInModule": {
        "filename": "pdk-nag/loggers/types.ts",
        "line": 39
      },
      "name": "ExtendedNagResult",
      "namespace": "pdk_nag",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Compliance status of the rule against the resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pdk-nag/loggers/types.ts",
            "line": 71
          },
          "name": "compliance",
          "type": {
            "fqn": "@aws/pdk.pdk_nag.NagResultCompliance"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the nag pack this rule is from."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pdk-nag/loggers/types.ts",
            "line": 43
          },
          "name": "nagPackName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The resource the rule was applied to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pdk-nag/loggers/types.ts",
            "line": 47
          },
          "name": "resource",
          "type": {
            "fqn": "aws-cdk-lib.CfnResource"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Why the rule exists."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pdk-nag/loggers/types.ts",
            "line": 63
          },
          "name": "ruleExplanation",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The ID of the rule in this nag pack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pdk-nag/loggers/types.ts",
            "line": 51
          },
          "name": "ruleId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Why the rule was triggered."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pdk-nag/loggers/types.ts",
            "line": 59
          },
          "name": "ruleInfo",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The severity level of the rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pdk-nag/loggers/types.ts",
            "line": 67
          },
          "name": "ruleLevel",
          "type": {
            "fqn": "cdk-nag.NagMessageLevel"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The original name of the rule (regardless of nag pack)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pdk-nag/loggers/types.ts",
            "line": 55
          },
          "name": "ruleOriginalName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The error that was thrown, only set for error results."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pdk-nag/loggers/types.ts",
            "line": 83
          },
          "name": "errorMessage",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The finding that was checked, only set for non-compliant results."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pdk-nag/loggers/types.ts",
            "line": 75
          },
          "name": "findingId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The reason the rule was suppressed, if any."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pdk-nag/loggers/types.ts",
            "line": 79
          },
          "name": "suppressionReason",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "pdk-nag/loggers/types:ExtendedNagResult"
    },
    "@aws/pdk.pdk_nag.Message": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Message instance."
      },
      "fqn": "@aws/pdk.pdk_nag.Message",
      "kind": "interface",
      "locationInModule": {
        "filename": "pdk-nag/pdk-nag.ts",
        "line": 39
      },
      "name": "Message",
      "namespace": "pdk_nag",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Message description."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pdk-nag/pdk-nag.ts",
            "line": 43
          },
          "name": "messageDescription",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Message type as returned from cdk-nag."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pdk-nag/pdk-nag.ts",
            "line": 48
          },
          "name": "messageType",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "pdk-nag/pdk-nag:Message"
    },
    "@aws/pdk.pdk_nag.NagResult": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Nag result."
      },
      "fqn": "@aws/pdk.pdk_nag.NagResult",
      "kind": "interface",
      "locationInModule": {
        "filename": "pdk-nag/pdk-nag.ts",
        "line": 54
      },
      "name": "NagResult",
      "namespace": "pdk_nag",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "List of messages."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pdk-nag/pdk-nag.ts",
            "line": 63
          },
          "name": "messages",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.pdk_nag.Message"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Resource which triggered the message."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pdk-nag/pdk-nag.ts",
            "line": 58
          },
          "name": "resource",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "pdk-nag/pdk-nag:NagResult"
    },
    "@aws/pdk.pdk_nag.NagResultCompliance": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "Possible statuses for nag rules."
      },
      "fqn": "@aws/pdk.pdk_nag.NagResultCompliance",
      "kind": "enum",
      "locationInModule": {
        "filename": "pdk-nag/loggers/types.ts",
        "line": 9
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Resource complies with the rule."
          },
          "name": "COMPLIANT"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Resource does not comply with the rule."
          },
          "name": "NON_COMPLIANT"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Resource does not comply with the rule, but the rule was suppressed."
          },
          "name": "NON_COMPLIANT_SUPPRESSED"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "An error occurred applying the rule."
          },
          "name": "ERROR"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "An error occurred applying the rule, but the rule was suppressed."
          },
          "name": "ERROR_SUPPRESSED"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The rule is not applicable to the resource."
          },
          "name": "NOT_APPLICABLE"
        }
      ],
      "name": "NagResultCompliance",
      "namespace": "pdk_nag",
      "symbolId": "pdk-nag/loggers/types:NagResultCompliance"
    },
    "@aws/pdk.pdk_nag.PDKNag": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "Helper for create a Nag Enabled App."
      },
      "fqn": "@aws/pdk.pdk_nag.PDKNag",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "pdk-nag/pdk-nag.ts",
        "line": 195
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Wrapper around NagSuppressions which does not throw."
          },
          "locationInModule": {
            "filename": "pdk-nag/pdk-nag.ts",
            "line": 213
          },
          "name": "addResourceSuppressionsByPathNoThrow",
          "parameters": [
            {
              "docs": {
                "summary": "stack instance."
              },
              "name": "stack",
              "type": {
                "fqn": "aws-cdk-lib.Stack"
              }
            },
            {
              "docs": {
                "summary": "resource path."
              },
              "name": "path",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "list of suppressions to apply."
              },
              "name": "suppressions",
              "type": {
                "collection": {
                  "elementtype": {
                    "fqn": "cdk-nag.NagPackSuppression"
                  },
                  "kind": "array"
                }
              }
            },
            {
              "docs": {
                "summary": "whether to apply to children."
              },
              "name": "applyToChildren",
              "optional": true,
              "type": {
                "primitive": "boolean"
              }
            }
          ],
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Returns an instance of an App with Nag enabled."
          },
          "locationInModule": {
            "filename": "pdk-nag/pdk-nag.ts",
            "line": 201
          },
          "name": "app",
          "parameters": [
            {
              "docs": {
                "summary": "props to initialize the app with."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws/pdk.pdk_nag.PDKNagAppProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws/pdk.pdk_nag.PDKNagApp"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Returns a stack account regex."
          },
          "locationInModule": {
            "filename": "pdk-nag/pdk-nag.ts",
            "line": 291
          },
          "name": "getStackAccountRegex",
          "parameters": [
            {
              "docs": {
                "summary": "stack instance."
              },
              "name": "stack",
              "type": {
                "fqn": "aws-cdk-lib.Stack"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Returns a stack partition regex."
          },
          "locationInModule": {
            "filename": "pdk-nag/pdk-nag.ts",
            "line": 261
          },
          "name": "getStackPartitionRegex",
          "parameters": [
            {
              "docs": {
                "summary": "stack instance."
              },
              "name": "stack",
              "type": {
                "fqn": "aws-cdk-lib.Stack"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "For example: StackA/NestedStackB/",
            "stability": "stable",
            "summary": "Returns a prefix comprising of a delimited set of Stack Ids."
          },
          "locationInModule": {
            "filename": "pdk-nag/pdk-nag.ts",
            "line": 238
          },
          "name": "getStackPrefix",
          "parameters": [
            {
              "docs": {
                "summary": "stack instance."
              },
              "name": "stack",
              "type": {
                "fqn": "aws-cdk-lib.Stack"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Returns a stack region regex."
          },
          "locationInModule": {
            "filename": "pdk-nag/pdk-nag.ts",
            "line": 276
          },
          "name": "getStackRegionRegex",
          "parameters": [
            {
              "docs": {
                "summary": "stack instance."
              },
              "name": "stack",
              "type": {
                "fqn": "aws-cdk-lib.Stack"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          },
          "static": true
        }
      ],
      "name": "PDKNag",
      "namespace": "pdk_nag",
      "symbolId": "pdk-nag/pdk-nag:PDKNag"
    },
    "@aws/pdk.pdk_nag.PDKNagApp": {
      "assembly": "@aws/pdk",
      "base": "aws-cdk-lib.App",
      "docs": {
        "custom": {
          "inheritDoc": "true"
        },
        "stability": "stable"
      },
      "fqn": "@aws/pdk.pdk_nag.PDKNagApp",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "pdk-nag/pdk-nag.ts",
          "line": 102
        },
        "parameters": [
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws/pdk.pdk_nag.PDKNagAppProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "pdk-nag/pdk-nag.ts",
        "line": 95
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "pdk-nag/pdk-nag.ts",
            "line": 145
          },
          "name": "addExtendedNagResults",
          "parameters": [
            {
              "name": "results",
              "type": {
                "fqn": "@aws/pdk.pdk_nag.ExtendedNagResult"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "pdk-nag/pdk-nag.ts",
            "line": 132
          },
          "name": "addNagResult",
          "parameters": [
            {
              "name": "result",
              "type": {
                "fqn": "@aws/pdk.pdk_nag.NagResult"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "Note: app.synth() must be called before this to retrieve results.",
            "stability": "stable",
            "summary": "Returns a list of ExtendedNagResult."
          },
          "locationInModule": {
            "filename": "pdk-nag/pdk-nag.ts",
            "line": 154
          },
          "name": "extendedNagResults",
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "fqn": "@aws/pdk.pdk_nag.ExtendedNagResult"
                },
                "kind": "array"
              }
            }
          }
        },
        {
          "docs": {
            "remarks": "Note: app.synth() must be called before this to retrieve results.",
            "stability": "stable",
            "summary": "Returns a list of NagResult."
          },
          "locationInModule": {
            "filename": "pdk-nag/pdk-nag.ts",
            "line": 141
          },
          "name": "nagResults",
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "fqn": "@aws/pdk.pdk_nag.NagResult"
                },
                "kind": "array"
              }
            }
          }
        },
        {
          "docs": {
            "remarks": "Once an assembly has been synthesized, it cannot be modified. Subsequent\ncalls will return the same assembly.",
            "stability": "stable",
            "summary": "Synthesize this stage into a cloud assembly."
          },
          "locationInModule": {
            "filename": "pdk-nag/pdk-nag.ts",
            "line": 112
          },
          "name": "synth",
          "overrides": "aws-cdk-lib.Stage",
          "parameters": [
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "aws-cdk-lib.StageSynthesisOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.cx_api.CloudAssembly"
            }
          }
        }
      ],
      "name": "PDKNagApp",
      "namespace": "pdk_nag",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pdk-nag/pdk-nag.ts",
            "line": 100
          },
          "name": "nagPacks",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk-nag.NagPack"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "pdk-nag/pdk-nag:PDKNagApp"
    },
    "@aws/pdk.pdk_nag.PDKNagAppProps": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "custom": {
          "inheritDoc": "true"
        },
        "stability": "stable"
      },
      "fqn": "@aws/pdk.pdk_nag.PDKNagAppProps",
      "interfaces": [
        "aws-cdk-lib.AppProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "pdk-nag/pdk-nag.ts",
        "line": 69
      },
      "name": "PDKNagAppProps",
      "namespace": "pdk_nag",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Determines whether any errors encountered should trigger a test failure."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pdk-nag/pdk-nag.ts",
            "line": 75
          },
          "name": "failOnError",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Determines whether any warnings encountered should trigger a test failure."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pdk-nag/pdk-nag.ts",
            "line": 82
          },
          "name": "failOnWarning",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "DEFAULT_NAG_PACKS",
            "stability": "stable",
            "summary": "Custom nag packs to execute."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pdk-nag/pdk-nag.ts",
            "line": 89
          },
          "name": "nagPacks",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk-nag.NagPack"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "pdk-nag/pdk-nag:PDKNagAppProps"
    },
    "@aws/pdk.pipeline.CodePipelineProps": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "CodePipelineProps."
      },
      "fqn": "@aws/pdk.pipeline.CodePipelineProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "pipeline/codepipeline-props.ts",
        "line": 7
      },
      "name": "CodePipelineProps",
      "namespace": "pipeline",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- A new S3 bucket will be created.",
            "stability": "stable",
            "summary": "An existing S3 Bucket to use for storing the pipeline's artifact."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pipeline/codepipeline-props.ts",
            "line": 190
          },
          "name": "artifactBucket",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_s3.IBucket"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Only `codeBuildDefaults` are applied",
            "stability": "stable",
            "summary": "Additional customizations to apply to the asset publishing CodeBuild projects."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pipeline/codepipeline-props.ts",
            "line": 184
          },
          "name": "assetPublishingCodeBuildDefaults",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.pipelines.CodeBuildOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Latest version",
            "remarks": "If you want to lock the CDK CLI version used in the pipeline, by steps\nthat are automatically generated for you, specify the version here.\n\nWe recommend you do not specify this value, as not specifying it always\nuses the latest CLI version which is backwards compatible with old versions.\n\nIf you do specify it, be aware that this version should always be equal to or higher than the\nversion of the CDK framework used by the CDK app, when the CDK commands are\nrun during your pipeline execution. When you change this version, the *next\ntime* the `SelfMutate` step runs it will still be using the CLI of the the\n*previous* version that was in this property: it will only start using the\nnew version after `SelfMutate` completes successfully. That means that if\nyou want to update both framework and CLI version, you should update the\nCLI version first, commit, push and deploy, and only then update the\nframework version.",
            "stability": "stable",
            "summary": "CDK CLI version to use in self-mutation and asset publishing steps."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pipeline/codepipeline-props.ts",
            "line": 178
          },
          "name": "cliVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- All projects run non-privileged build, SMALL instance, LinuxBuildImage.STANDARD_7_0",
            "stability": "stable",
            "summary": "Customize the CodeBuild projects created for this pipeline."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pipeline/codepipeline-props.ts",
            "line": 157
          },
          "name": "codeBuildDefaults",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.pipelines.CodeBuildOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- a new underlying pipeline is created.",
            "remarks": "[disable-awslint:ref-via-interface]",
            "stability": "stable",
            "summary": "An existing Pipeline to be reused and built upon."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pipeline/codepipeline-props.ts",
            "line": 151
          },
          "name": "codePipeline",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_codepipeline.Pipeline"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "The artifact buckets have to be encrypted to support deploying CDK apps to\nanother account, so if you want to do that or want to have your artifact\nbuckets encrypted, be sure to set this value to `true`.\n\nBe aware there is a cost associated with maintaining the KMS keys.",
            "stability": "stable",
            "summary": "Create KMS keys for the artifact buckets, allowing cross-account deployments."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pipeline/codepipeline-props.ts",
            "line": 144
          },
          "name": "crossAccountKeys",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no cross region replication buckets.",
            "remarks": "For every Action that you specify targeting a different region than the Pipeline itself,\nif you don't provide an explicit Bucket for that region using this property,\nthe construct will automatically create a Stack containing an S3 Bucket in that region.\nPassed directly through to the {@link cp.Pipeline }.",
            "stability": "stable",
            "summary": "A map of region to S3 bucket name used for cross-region CodePipeline."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pipeline/codepipeline-props.ts",
            "line": 133
          },
          "name": "crossRegionReplicationBuckets",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "aws-cdk-lib.aws_s3.IBucket"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "[]",
            "remarks": "Specify any credentials necessary within the pipeline to build, synth, update, or publish assets.",
            "stability": "stable",
            "summary": "A list of credentials used to authenticate to Docker registries."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pipeline/codepipeline-props.ts",
            "line": 123
          },
          "name": "dockerCredentials",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "aws-cdk-lib.pipelines.DockerCredential"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "Set this to true if the pipeline itself uses Docker container assets\n(for example, if you use `LinuxBuildImage.fromAsset()` as the build\nimage of a CodeBuild step in the pipeline).\n\nYou do not need to set it if you build Docker image assets in the\napplication Stages and Stacks that are *deployed* by this pipeline.\n\nConfigures privileged mode for the self-mutation CodeBuild action.\n\nIf you are about to turn this on in an already-deployed Pipeline,\nset the value to `true` first, commit and allow the pipeline to\nself-update, and only then use the Docker asset in the pipeline.",
            "stability": "stable",
            "summary": "Enable Docker for the self-mutate step."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pipeline/codepipeline-props.ts",
            "line": 116
          },
          "name": "dockerEnabledForSelfMutation",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "Set this to true if you are using file assets that require\n\"bundling\" anywhere in your application (meaning an asset\ncompilation step will be run with the tools provided by\na Docker image), both for the Pipeline stack as well as the\napplication stacks.\n\nA common way to use bundling assets in your application is by\nusing the `aws-cdk-lib/aws-lambda-nodejs` library.\n\nConfigures privileged mode for the synth CodeBuild action.\n\nIf you are about to turn this on in an already-deployed Pipeline,\nset the value to `true` first, commit and allow the pipeline to\nself-update, and only then use the bundled asset.",
            "stability": "stable",
            "summary": "Enable Docker for the 'synth' step."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pipeline/codepipeline-props.ts",
            "line": 98
          },
          "name": "dockerEnabledForSynth",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- false (key rotation is disabled)",
            "remarks": "By default KMS key rotation is disabled, but will add\nadditional costs when enabled.",
            "stability": "stable",
            "summary": "Enable KMS key rotation for the generated KMS keys."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pipeline/codepipeline-props.ts",
            "line": 78
          },
          "name": "enableKeyRotation",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Automatically generated",
            "stability": "stable",
            "summary": "The name of the CodePipeline pipeline."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pipeline/codepipeline-props.ts",
            "line": 70
          },
          "name": "pipelineName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "Publishing in parallel improves concurrency and may reduce publishing\nlatency, but may also increase overall provisioning time of the CodeBuild\nprojects.\n\nExperiment and see what value works best for you.",
            "stability": "stable",
            "summary": "Publish assets in multiple CodeBuild projects. If set to false, use one Project per type to publish all assets."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pipeline/codepipeline-props.ts",
            "line": 64
          },
          "name": "publishAssetsInParallel",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- true (Use the same support stack for all pipelines in App)",
            "stability": "stable",
            "summary": "Reuse the same cross region support stack for all pipelines in the App."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pipeline/codepipeline-props.ts",
            "line": 51
          },
          "name": "reuseCrossRegionSupportStacks",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- A new role is created",
            "stability": "stable",
            "summary": "The IAM role to be assumed by this Pipeline."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pipeline/codepipeline-props.ts",
            "line": 45
          },
          "name": "role",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_iam.IRole"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "This needs to be set to `true` to allow the pipeline to reconfigure\nitself when assets or stages are being added to it, and `true` is the\nrecommended setting.\n\nYou can temporarily set this to `false` while you are iterating\non the pipeline itself and prefer to deploy changes using `cdk deploy`.",
            "stability": "stable",
            "summary": "Whether the pipeline will update itself."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pipeline/codepipeline-props.ts",
            "line": 39
          },
          "name": "selfMutation",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Only `codeBuildDefaults` are applied",
            "stability": "stable",
            "summary": "Additional customizations to apply to the self mutation CodeBuild projects."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pipeline/codepipeline-props.ts",
            "line": 27
          },
          "name": "selfMutationCodeBuildDefaults",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.pipelines.CodeBuildOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "The primary output of this step needs to be the `cdk.out` directory\ngenerated by the `cdk synth` command.\n\nIf you use a `ShellStep` here and you don't configure an output directory,\nthe output directory will automatically be assumed to be `cdk.out`.",
            "stability": "stable",
            "summary": "The build step that produces the CDK Cloud Assembly."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pipeline/codepipeline-props.ts",
            "line": 200
          },
          "name": "synth",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.pipelines.IFileSetProducer"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Only `codeBuildDefaults` are applied",
            "stability": "stable",
            "summary": "Additional customizations to apply to the synthesize CodeBuild projects."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pipeline/codepipeline-props.ts",
            "line": 21
          },
          "name": "synthCodeBuildDefaults",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.pipelines.CodeBuildOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "When enabled, creates a \"Prepare\" and \"Execute\" action for each stack. Disable\nto deploy the stack in one pipeline action.",
            "stability": "stable",
            "summary": "Deploy every stack by creating a change set and executing it."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pipeline/codepipeline-props.ts",
            "line": 15
          },
          "name": "useChangeSets",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "pipeline/codepipeline-props:CodePipelineProps"
    },
    "@aws/pdk.pipeline.IsDefaultBranchProps": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties to help the isDefaultBranch function determine the default branch name."
      },
      "fqn": "@aws/pdk.pipeline.IsDefaultBranchProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "pipeline/pdk-pipeline.ts",
        "line": 221
      },
      "name": "IsDefaultBranchProps",
      "namespace": "pipeline",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Specify the default branch name without context."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pipeline/pdk-pipeline.ts",
            "line": 230
          },
          "name": "defaultBranchName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The current node to fetch defaultBranchName from context."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pipeline/pdk-pipeline.ts",
            "line": 225
          },
          "name": "node",
          "optional": true,
          "type": {
            "fqn": "constructs.Node"
          }
        }
      ],
      "symbolId": "pipeline/pdk-pipeline:IsDefaultBranchProps"
    },
    "@aws/pdk.pipeline.PDKPipeline": {
      "assembly": "@aws/pdk",
      "base": "constructs.Construct",
      "docs": {
        "remarks": "In addition to this, it also creates a CodeCommit repository with\nautomated PR builds and approvals.",
        "stability": "stable",
        "summary": "An extension to CodePipeline which configures same defaults for a NX Monorepo codebase."
      },
      "fqn": "@aws/pdk.pipeline.PDKPipeline",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "pipeline/pdk-pipeline.ts",
          "line": 557
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws/pdk.pipeline.PDKPipelineProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "pipeline/pdk-pipeline.ts",
        "line": 556
      },
      "methods": [
        {
          "docs": {
            "remarks": "The prefix is empty on the default branch.",
            "returns": "The branch prefix.",
            "stability": "stable",
            "summary": "A helper function to create a branch prefix."
          },
          "locationInModule": {
            "filename": "pipeline/pdk-pipeline.ts",
            "line": 293
          },
          "name": "getBranchPrefix",
          "parameters": [
            {
              "docs": {
                "summary": "? { defaultBranchName? Specify the default branch name without context. node? The current app to fetch defaultBranchName from context. }."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws/pdk.pipeline.IsDefaultBranchProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "If there is no BRANCH environment variable, then assume this is the default\nbranch. Otherwise, check that BRANCH matches the default branch name.\n\nThe default branch name is determined in the following priority:\n\n1. defaultBranchName property\n2. defaultBranchName context\n3. PDKPipeline.defaultBranchName constant",
            "returns": "True if the current branch is the default branch.",
            "stability": "stable",
            "summary": "A helper function to determine if the current branch is the default branch."
          },
          "locationInModule": {
            "filename": "pipeline/pdk-pipeline.ts",
            "line": 269
          },
          "name": "isDefaultBranch",
          "parameters": [
            {
              "docs": {
                "summary": "? { defaultBranchName? Specify the default branch name without context. node? The current app to fetch defaultBranchName from context. }."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws/pdk.pipeline.IsDefaultBranchProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          },
          "static": true
        },
        {
          "docs": {
            "returns": "The normalized branch name.",
            "stability": "stable",
            "summary": "A helper function to normalize the branch name with only alphanumeric characters and hypens ('-')."
          },
          "locationInModule": {
            "filename": "pipeline/pdk-pipeline.ts",
            "line": 247
          },
          "name": "normalizeBranchName",
          "parameters": [
            {
              "docs": {
                "summary": "The name of the branch to normalize."
              },
              "name": "branchName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          },
          "static": true
        },
        {
          "docs": {
            "custom": {
              "inheritDoc": "true"
            },
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "pipeline/pdk-pipeline.ts",
            "line": 486
          },
          "name": "addStage",
          "parameters": [
            {
              "name": "stage",
              "type": {
                "fqn": "aws-cdk-lib.Stage"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "aws-cdk-lib.pipelines.AddStageOpts"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.pipelines.StageDeployment"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "pipeline/pdk-pipeline.ts",
            "line": 504
          },
          "name": "buildPipeline"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "pipeline/pdk-pipeline.ts",
            "line": 519
          },
          "name": "suppressCDKViolations"
        }
      ],
      "name": "PDKPipeline",
      "namespace": "pipeline",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pipeline/pdk-pipeline.ts",
            "line": 239
          },
          "name": "ALL_BRANCHES",
          "static": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pipeline/pdk-pipeline.ts",
            "line": 240
          },
          "name": "defaultBranchName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pipeline/pdk-pipeline.ts",
            "line": 304
          },
          "name": "codePipeline",
          "type": {
            "fqn": "aws-cdk-lib.pipelines.CodePipeline"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pipeline/pdk-pipeline.ts",
            "line": 305
          },
          "name": "codeRepository",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_codecommit.IRepository"
          }
        }
      ],
      "symbolId": "pipeline/pdk-pipeline:PDKPipeline"
    },
    "@aws/pdk.pipeline.PDKPipelineProps": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "remarks": "Note: Due to limitations with JSII and generic support it should be noted that\nthe synth, synthShellStepPartialProps.input and\nsynthShellStepPartialProps.primaryOutputDirectory properties will be ignored\nif passed in to this construct.\n\nsynthShellStepPartialProps.commands is marked as a required field, however\nif you pass in [] the default commands of this construct will be retained.",
        "stability": "stable",
        "summary": "Properties to configure the PDKPipeline with CodeCommit as source."
      },
      "fqn": "@aws/pdk.pipeline.PDKPipelineProps",
      "interfaces": [
        "@aws/pdk.pipeline.CodePipelineProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "pipeline/pdk-pipeline.ts",
        "line": 153
      },
      "name": "PDKPipelineProps",
      "namespace": "pipeline",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Output directory for cdk synthesized artifacts i.e: packages/infra/cdk.out."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pipeline/pdk-pipeline.ts",
            "line": 47
          },
          "name": "primarySynthDirectory",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Name of the CodeCommit repository to create."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pipeline/pdk-pipeline.ts",
            "line": 161
          },
          "name": "repositoryName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "undefined",
            "example": "// Disables feature branches (default)\nnew PDKPipeline(this, 'PDKPipeline', {\n  repositoryName: 'my-repo',\n  branchNamePrefixes: [], // or simply exclude this line\n}",
            "stability": "stable",
            "summary": "Branch name prefixes Any branches created matching this list of prefixes will create a new pipeline and stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pipeline/pdk-pipeline.ts",
            "line": 191
          },
          "name": "branchNamePrefixes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "'npx cdk'",
            "remarks": "Override the command used to call cdk for synth and deploy.",
            "stability": "stable",
            "summary": "CDK command."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pipeline/pdk-pipeline.ts",
            "line": 85
          },
          "name": "cdkCommand",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "The parent directory of `primarySynthDirectory`",
            "stability": "stable",
            "summary": "The directory with `cdk.json` to run cdk synth from. Set this if you enabled feature branches and `cdk.json` is not located in the parent directory of `primarySynthDirectory`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pipeline/pdk-pipeline.ts",
            "line": 78
          },
          "name": "cdkSrcDir",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Possible values for a resource's Removal Policy The removal policy controls what happens to the resource if it stops being managed by CloudFormation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pipeline/pdk-pipeline.ts",
            "line": 166
          },
          "name": "codeCommitRemovalPolicy",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.RemovalPolicy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The repository to add the pipeline to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pipeline/pdk-pipeline.ts",
            "line": 157
          },
          "name": "codeCommitRepository",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_codecommit.IRepository"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "mainline",
            "stability": "stable",
            "summary": "Branch to trigger the pipeline execution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pipeline/pdk-pipeline.ts",
            "line": 62
          },
          "name": "defaultBranchName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "undefined",
            "stability": "stable",
            "summary": "Configuration for enabling Sonarqube code scanning on a successful synth."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pipeline/pdk-pipeline.ts",
            "line": 69
          },
          "name": "sonarCodeScannerConfig",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.pipeline.SonarCodeScannerConfig"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "To override these defaults\nand/or provide additional inputs, specify env settings, etc you can provide\na partial ShellStepProps.",
            "stability": "stable",
            "summary": "PDKPipeline by default assumes a NX Monorepo structure for it's codebase and uses sane defaults for the install and run commands."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pipeline/pdk-pipeline.ts",
            "line": 55
          },
          "name": "synthShellStepPartialProps",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.pipelines.ShellStepProps"
          }
        }
      ],
      "symbolId": "pipeline/pdk-pipeline:PDKPipelineProps"
    },
    "@aws/pdk.pipeline.PDKPipelineWithCodeConnection": {
      "assembly": "@aws/pdk",
      "base": "constructs.Construct",
      "docs": {
        "stability": "stable",
        "summary": "An extension to CodePipeline which configures same defaults for a NX Monorepo and using a AWS CodeConnections as source."
      },
      "fqn": "@aws/pdk.pipeline.PDKPipelineWithCodeConnection",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "pipeline/pdk-pipeline.ts",
          "line": 571
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws/pdk.pipeline.PDKPipelineWithCodeConnectionProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "pipeline/pdk-pipeline.ts",
        "line": 570
      },
      "methods": [
        {
          "docs": {
            "remarks": "The prefix is empty on the default branch.",
            "returns": "The branch prefix.",
            "stability": "stable",
            "summary": "A helper function to create a branch prefix."
          },
          "locationInModule": {
            "filename": "pipeline/pdk-pipeline.ts",
            "line": 293
          },
          "name": "getBranchPrefix",
          "parameters": [
            {
              "docs": {
                "summary": "? { defaultBranchName? Specify the default branch name without context. node? The current app to fetch defaultBranchName from context. }."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws/pdk.pipeline.IsDefaultBranchProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "If there is no BRANCH environment variable, then assume this is the default\nbranch. Otherwise, check that BRANCH matches the default branch name.\n\nThe default branch name is determined in the following priority:\n\n1. defaultBranchName property\n2. defaultBranchName context\n3. PDKPipeline.defaultBranchName constant",
            "returns": "True if the current branch is the default branch.",
            "stability": "stable",
            "summary": "A helper function to determine if the current branch is the default branch."
          },
          "locationInModule": {
            "filename": "pipeline/pdk-pipeline.ts",
            "line": 269
          },
          "name": "isDefaultBranch",
          "parameters": [
            {
              "docs": {
                "summary": "? { defaultBranchName? Specify the default branch name without context. node? The current app to fetch defaultBranchName from context. }."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws/pdk.pipeline.IsDefaultBranchProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          },
          "static": true
        },
        {
          "docs": {
            "returns": "The normalized branch name.",
            "stability": "stable",
            "summary": "A helper function to normalize the branch name with only alphanumeric characters and hypens ('-')."
          },
          "locationInModule": {
            "filename": "pipeline/pdk-pipeline.ts",
            "line": 247
          },
          "name": "normalizeBranchName",
          "parameters": [
            {
              "docs": {
                "summary": "The name of the branch to normalize."
              },
              "name": "branchName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          },
          "static": true
        },
        {
          "docs": {
            "custom": {
              "inheritDoc": "true"
            },
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "pipeline/pdk-pipeline.ts",
            "line": 486
          },
          "name": "addStage",
          "parameters": [
            {
              "name": "stage",
              "type": {
                "fqn": "aws-cdk-lib.Stage"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "aws-cdk-lib.pipelines.AddStageOpts"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.pipelines.StageDeployment"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "pipeline/pdk-pipeline.ts",
            "line": 504
          },
          "name": "buildPipeline"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "pipeline/pdk-pipeline.ts",
            "line": 519
          },
          "name": "suppressCDKViolations"
        }
      ],
      "name": "PDKPipelineWithCodeConnection",
      "namespace": "pipeline",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pipeline/pdk-pipeline.ts",
            "line": 239
          },
          "name": "ALL_BRANCHES",
          "static": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pipeline/pdk-pipeline.ts",
            "line": 240
          },
          "name": "defaultBranchName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pipeline/pdk-pipeline.ts",
            "line": 304
          },
          "name": "codePipeline",
          "type": {
            "fqn": "aws-cdk-lib.pipelines.CodePipeline"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pipeline/pdk-pipeline.ts",
            "line": 305
          },
          "name": "codeRepository",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_codecommit.IRepository"
          }
        }
      ],
      "symbolId": "pipeline/pdk-pipeline:PDKPipelineWithCodeConnection"
    },
    "@aws/pdk.pipeline.PDKPipelineWithCodeConnectionProps": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "remarks": "Note: Due to limitations with JSII and generic support it should be noted that\nthe synth, synthShellStepPartialProps.input and\nsynthShellStepPartialProps.primaryOutputDirectory properties will be ignored\nif passed in to this construct.\n\nsynthShellStepPartialProps.commands is marked as a required field, however\nif you pass in [] the default commands of this construct will be retained.",
        "stability": "stable",
        "summary": "Properties to configure the PDKPipeline with a CodeConnections as source."
      },
      "fqn": "@aws/pdk.pipeline.PDKPipelineWithCodeConnectionProps",
      "interfaces": [
        "@aws/pdk.pipeline.CodePipelineProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "pipeline/pdk-pipeline.ts",
        "line": 205
      },
      "name": "PDKPipelineWithCodeConnectionProps",
      "namespace": "pipeline",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The Arn of the CodeConnection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pipeline/pdk-pipeline.ts",
            "line": 210
          },
          "name": "codeConnectionArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Output directory for cdk synthesized artifacts i.e: packages/infra/cdk.out."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pipeline/pdk-pipeline.ts",
            "line": 47
          },
          "name": "primarySynthDirectory",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The Owner and Repository name for instance, user Bob with git repository ACME becomes \"Bob/ACME\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pipeline/pdk-pipeline.ts",
            "line": 215
          },
          "name": "repositoryOwnerAndName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "'npx cdk'",
            "remarks": "Override the command used to call cdk for synth and deploy.",
            "stability": "stable",
            "summary": "CDK command."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pipeline/pdk-pipeline.ts",
            "line": 85
          },
          "name": "cdkCommand",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "The parent directory of `primarySynthDirectory`",
            "stability": "stable",
            "summary": "The directory with `cdk.json` to run cdk synth from. Set this if you enabled feature branches and `cdk.json` is not located in the parent directory of `primarySynthDirectory`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pipeline/pdk-pipeline.ts",
            "line": 78
          },
          "name": "cdkSrcDir",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "mainline",
            "stability": "stable",
            "summary": "Branch to trigger the pipeline execution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pipeline/pdk-pipeline.ts",
            "line": 62
          },
          "name": "defaultBranchName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "undefined",
            "stability": "stable",
            "summary": "Configuration for enabling Sonarqube code scanning on a successful synth."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pipeline/pdk-pipeline.ts",
            "line": 69
          },
          "name": "sonarCodeScannerConfig",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.pipeline.SonarCodeScannerConfig"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "To override these defaults\nand/or provide additional inputs, specify env settings, etc you can provide\na partial ShellStepProps.",
            "stability": "stable",
            "summary": "PDKPipeline by default assumes a NX Monorepo structure for it's codebase and uses sane defaults for the install and run commands."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pipeline/pdk-pipeline.ts",
            "line": 55
          },
          "name": "synthShellStepPartialProps",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.pipelines.ShellStepProps"
          }
        }
      ],
      "symbolId": "pipeline/pdk-pipeline:PDKPipelineWithCodeConnectionProps"
    },
    "@aws/pdk.pipeline.SonarCodeScanner": {
      "assembly": "@aws/pdk",
      "base": "constructs.Construct",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws/pdk.pipeline.SonarCodeScanner",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "pipeline/code_scanner/sonar-code-scanner.ts",
          "line": 132
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws/pdk.pipeline.SonarCodeScannerProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "pipeline/code_scanner/sonar-code-scanner.ts",
        "line": 131
      },
      "name": "SonarCodeScanner",
      "namespace": "pipeline",
      "symbolId": "pipeline/code_scanner/sonar-code-scanner:SonarCodeScanner"
    },
    "@aws/pdk.pipeline.SonarCodeScannerConfig": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws/pdk.pipeline.SonarCodeScannerConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "pipeline/code_scanner/sonar-code-scanner.ts",
        "line": 23
      },
      "name": "SonarCodeScannerConfig",
      "namespace": "pipeline",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Group name in Sonarqube with access to administer this project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pipeline/code_scanner/sonar-code-scanner.ts",
            "line": 68
          },
          "name": "sonarqubeAuthorizedGroup",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Note: These need to be set up in Sonarqube manually.",
            "stability": "stable",
            "summary": "Default profile/gate name i.e: your org profile."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pipeline/code_scanner/sonar-code-scanner.ts",
            "line": 56
          },
          "name": "sonarqubeDefaultProfileOrGateName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Note: Ensure a trailing '/' is not included.",
            "stability": "stable",
            "summary": "endpoint of the sonarqube instance i.e: https://<your-sonarqube-endpoint>."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pipeline/code_scanner/sonar-code-scanner.ts",
            "line": 49
          },
          "name": "sonarqubeEndpoint",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Name of the project to create in Sonarqube."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pipeline/code_scanner/sonar-code-scanner.ts",
            "line": 73
          },
          "name": "sonarqubeProjectName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "directory containing the synthesized cdk resources."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pipeline/code_scanner/sonar-code-scanner.ts",
            "line": 32
          },
          "name": "cdkOutDir",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "path to a file containing the cfn nag suppression rules."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pipeline/code_scanner/sonar-code-scanner.ts",
            "line": 27
          },
          "name": "cfnNagIgnorePath",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "glob patterns to exclude from sonar scan."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pipeline/code_scanner/sonar-code-scanner.ts",
            "line": 37
          },
          "name": "excludeGlobsForScan",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "glob patterns to include from sonar scan."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pipeline/code_scanner/sonar-code-scanner.ts",
            "line": 42
          },
          "name": "includeGlobsForScan",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Hook which allows custom commands to be executed before the process commences the archival process."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pipeline/code_scanner/sonar-code-scanner.ts",
            "line": 83
          },
          "name": "preArchiveCommands",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Note: These need to be set up in Sonarqube manually.",
            "stability": "stable",
            "summary": "Specific profile/gate name i.e: language specific."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pipeline/code_scanner/sonar-code-scanner.ts",
            "line": 63
          },
          "name": "sonarqubeSpecificProfileOrGateName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Tags to associate with this project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pipeline/code_scanner/sonar-code-scanner.ts",
            "line": 78
          },
          "name": "sonarqubeTags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "pipeline/code_scanner/sonar-code-scanner:SonarCodeScannerConfig"
    },
    "@aws/pdk.pipeline.SonarCodeScannerProps": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "SonarCodeScanners properties."
      },
      "fqn": "@aws/pdk.pipeline.SonarCodeScannerProps",
      "interfaces": [
        "@aws/pdk.pipeline.SonarCodeScannerConfig"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "pipeline/code_scanner/sonar-code-scanner.ts",
        "line": 89
      },
      "name": "SonarCodeScannerProps",
      "namespace": "pipeline",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "S3 bucket ARN containing the built artifacts from the synth build."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pipeline/code_scanner/sonar-code-scanner.ts",
            "line": 98
          },
          "name": "artifactBucketArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "ARN for the CodeBuild task responsible for executing the synth command."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pipeline/code_scanner/sonar-code-scanner.ts",
            "line": 93
          },
          "name": "synthBuildArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Artifact bucket key ARN used to encrypt the artifacts."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "pipeline/code_scanner/sonar-code-scanner.ts",
            "line": 103
          },
          "name": "artifactBucketKeyArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "pipeline/code_scanner/sonar-code-scanner:SonarCodeScannerProps"
    },
    "@aws/pdk.static_website.BucketDeploymentProps": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "BucketDeploymentProps."
      },
      "fqn": "@aws/pdk.static_website.BucketDeploymentProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "static-website/bucket-deployment-props.ts",
        "line": 7
      },
      "name": "BucketDeploymentProps",
      "namespace": "static_website",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- Not set.",
            "stability": "stable",
            "summary": "System-defined x-amz-acl metadata to be set on all objects in the deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/bucket-deployment-props.ts",
            "line": 220
          },
          "name": "accessControl",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_s3.BucketAccessControl"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Not set.",
            "stability": "stable",
            "summary": "System-defined cache-control metadata to be set on all objects in the deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/bucket-deployment-props.ts",
            "line": 214
          },
          "name": "cacheControl",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "aws-cdk-lib.aws_s3_deployment.CacheControl"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Not set.",
            "stability": "stable",
            "summary": "System-defined cache-disposition metadata to be set on all objects in the deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/bucket-deployment-props.ts",
            "line": 208
          },
          "name": "contentDisposition",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Not set.",
            "stability": "stable",
            "summary": "System-defined content-encoding metadata to be set on all objects in the deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/bucket-deployment-props.ts",
            "line": 202
          },
          "name": "contentEncoding",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Not set.",
            "stability": "stable",
            "summary": "System-defined content-language metadata to be set on all objects in the deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/bucket-deployment-props.ts",
            "line": 196
          },
          "name": "contentLanguage",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Not set.",
            "stability": "stable",
            "summary": "System-defined content-type metadata to be set on all objects in the deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/bucket-deployment-props.ts",
            "line": 190
          },
          "name": "contentType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The S3 bucket to sync the contents of the zip file to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/bucket-deployment-props.ts",
            "line": 230
          },
          "name": "destinationBucket",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_s3.IBucket"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"/\" (unzip to root of the destination bucket)",
            "remarks": "Must be <=104 characters",
            "stability": "stable",
            "summary": "Key prefix in the destination bucket."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/bucket-deployment-props.ts",
            "line": 184
          },
          "name": "destinationKeyPrefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No invalidation occurs",
            "remarks": "Files in the distribution's edge caches will be invalidated after\nfiles are uploaded to the destination bucket.",
            "stability": "stable",
            "summary": "The CloudFront distribution using the destination bucket as an origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/bucket-deployment-props.ts",
            "line": 177
          },
          "name": "distribution",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_cloudfront.IDistribution"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- All files under the destination bucket key prefix will be invalidated.",
            "stability": "stable",
            "summary": "The file paths to invalidate in the CloudFront distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/bucket-deployment-props.ts",
            "line": 169
          },
          "name": "distributionPaths",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "512 MiB",
            "stability": "stable",
            "summary": "The size of the AWS Lambda function’s /tmp directory in MiB."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/bucket-deployment-props.ts",
            "line": 163
          },
          "name": "ephemeralStorageSize",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.Size"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No exclude filters are used",
            "remarks": "This can be used to exclude a file from being pruned in the destination bucket.\n\nIf you want to just exclude files from the deployment package (which excludes these files\nevaluated when invalidating the asset), you should leverage the `exclude` property of\n`AssetOptions` when defining your source.",
            "stability": "stable",
            "summary": "If this is set, matching files or objects will be excluded from the deployment's sync command."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/bucket-deployment-props.ts",
            "line": 157
          },
          "name": "exclude",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The objects in the distribution will not expire.",
            "stability": "stable",
            "summary": "System-defined expires metadata to be set on all objects in the deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/bucket-deployment-props.ts",
            "line": 146
          },
          "name": "expires",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.Expiration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "If false, the file will remain zipped in the destination bucket.",
            "stability": "stable",
            "summary": "If this is set, the zip file will be synced to the destination S3 bucket and extracted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/bucket-deployment-props.ts",
            "line": 140
          },
          "name": "extract",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No include filters are used and all files are included with the sync command",
            "remarks": "Since all files from the deployment package are included by default, this property\nis usually leveraged alongside an `exclude` filter.",
            "stability": "stable",
            "summary": "If this is set, matching files or objects will be included with the deployment's sync command."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/bucket-deployment-props.ts",
            "line": 133
          },
          "name": "include",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- a default log group created by AWS Lambda",
            "remarks": "Providing a user-controlled log group was rolled out to commercial regions on 2023-11-16.\nIf you are deploying to another type of region, please check regional availability first.",
            "stability": "stable",
            "summary": "The Log Group used for logging of events emitted by the custom resource's lambda function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/bucket-deployment-props.ts",
            "line": 125
          },
          "name": "logGroup",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_logs.ILogGroup"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "logs.RetentionDays.INFINITE",
            "remarks": "This is a legacy API and we strongly recommend you migrate to `logGroup` if you can.\n`logGroup` allows you to create a fully customizable log group and instruct the Lambda function to send logs to it.",
            "stability": "stable",
            "summary": "The number of days that the lambda function's log events are kept in CloudWatch Logs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/bucket-deployment-props.ts",
            "line": 117
          },
          "name": "logRetention",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_logs.RetentionDays"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "128",
            "remarks": "If you are deploying large files, you will need to increase this number\naccordingly.",
            "stability": "stable",
            "summary": "The amount of memory (in MiB) to allocate to the AWS Lambda function which replicates the files from the CDK bucket to the destination bucket."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/bucket-deployment-props.ts",
            "line": 109
          },
          "name": "memoryLimit",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No user metadata is set",
            "stability": "stable",
            "summary": "User-defined object metadata to be set on all objects in the deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/bucket-deployment-props.ts",
            "line": 101
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "This is useful when you are facing the error `Response object is too long`\n\nSee https://github.com/aws/aws-cdk/issues/28579",
            "stability": "stable",
            "summary": "If set to false, the custom resource will not send back the SourceObjectKeys."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/bucket-deployment-props.ts",
            "line": 95
          },
          "name": "outputObjectKeys",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "stable",
            "summary": "If this is set to false, files in the destination bucket that do not exist in the asset, will NOT be deleted during deployment (create/update)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/bucket-deployment-props.ts",
            "line": 86
          },
          "name": "prune",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true - when resource is deleted/updated, files are retained",
            "remarks": "NOTICE: Configuring this to \"false\" might have operational implications. Please\nvisit to the package documentation referred below to make sure you fully understand those implications.",
            "stability": "stable",
            "summary": "If this is set to \"false\", the destination files will be deleted when the resource is deleted or the destination is updated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/bucket-deployment-props.ts",
            "line": 80
          },
          "name": "retainOnDelete",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- A role is automatically created",
            "stability": "stable",
            "summary": "Execution role associated with this function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/bucket-deployment-props.ts",
            "line": 72
          },
          "name": "role",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_iam.IRole"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Server side encryption is not used.",
            "stability": "stable",
            "summary": "System-defined x-amz-server-side-encryption metadata to be set on all objects in the deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/bucket-deployment-props.ts",
            "line": 66
          },
          "name": "serverSideEncryption",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_s3_deployment.ServerSideEncryption"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Not set.",
            "stability": "stable",
            "summary": "System-defined x-amz-server-side-encryption-aws-kms-key-id metadata to be set on all objects in the deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/bucket-deployment-props.ts",
            "line": 60
          },
          "name": "serverSideEncryptionAwsKmsKeyId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Not set.",
            "remarks": "Warning: This is not a useful parameter until this bug is fixed: https://github.com/aws/aws-cdk/issues/6080",
            "stability": "stable",
            "summary": "System-defined x-amz-server-side-encryption-customer-algorithm metadata to be set on all objects in the deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/bucket-deployment-props.ts",
            "line": 54
          },
          "name": "serverSideEncryptionCustomerAlgorithm",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- `x-amz-content-sha256` will not be computed",
            "stability": "stable",
            "summary": "If set to true, uploads will precompute the value of `x-amz-content-sha256` and include it in the signed S3 request headers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/bucket-deployment-props.ts",
            "line": 47
          },
          "name": "signContent",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The sources from which to deploy the contents of this bucket."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/bucket-deployment-props.ts",
            "line": 225
          },
          "name": "sources",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "aws-cdk-lib.aws_s3_deployment.ISource"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Default storage-class for the bucket is used.",
            "stability": "stable",
            "summary": "System-defined x-amz-storage-class metadata to be set on all objects in the deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/bucket-deployment-props.ts",
            "line": 41
          },
          "name": "storageClass",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_s3_deployment.StorageClass"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No EFS. Lambda has access only to 512MB of disk space.",
            "remarks": "Enable this if your assets are large and you encounter disk space errors.\nEnabling this option will require a VPC to be specified.",
            "stability": "stable",
            "summary": "Mount an EFS file system."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/bucket-deployment-props.ts",
            "line": 35
          },
          "name": "useEfs",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "None",
            "remarks": "This is required if `useEfs` is set.",
            "stability": "stable",
            "summary": "The VPC network to place the deployment lambda handler in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/bucket-deployment-props.ts",
            "line": 27
          },
          "name": "vpc",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_ec2.IVpc"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- the Vpc default strategy if not specified",
            "remarks": "Only used if 'vpc' is supplied.",
            "stability": "stable",
            "summary": "Where in the VPC to place the deployment lambda handler."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/bucket-deployment-props.ts",
            "line": 20
          },
          "name": "vpcSubnets",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_ec2.SubnetSelection"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No website redirection.",
            "stability": "stable",
            "summary": "System-defined x-amz-website-redirect-location metadata to be set on all objects in the deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/bucket-deployment-props.ts",
            "line": 13
          },
          "name": "websiteRedirectLocation",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "static-website/bucket-deployment-props:BucketDeploymentProps"
    },
    "@aws/pdk.static_website.CidrAllowList": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Representation of a CIDR range."
      },
      "fqn": "@aws/pdk.static_website.CidrAllowList",
      "kind": "interface",
      "locationInModule": {
        "filename": "static-website/cloudfront-web-acl.ts",
        "line": 41
      },
      "name": "CidrAllowList",
      "namespace": "static_website",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "For example:\nTo configure AWS WAF to allow, block, or count requests that originated from the IP address 192.0.2.44, specify 192.0.2.44/32 .\nTo configure AWS WAF to allow, block, or count requests that originated from IP addresses from 192.0.2.0 to 192.0.2.255, specify 192.0.2.0/24 .\n\nFor more information about CIDR notation, see the Wikipedia entry Classless Inter-Domain Routing .\n\nSpecify an IPv6 address by using CIDR notation. For example:\nTo configure AWS WAF to allow, block, or count requests that originated from the IP address 1111:0000:0000:0000:0000:0000:0000:0111, specify 1111:0000:0000:0000:0000:0000:0000:0111/128 .\nTo configure AWS WAF to allow, block, or count requests that originated from IP addresses 1111:0000:0000:0000:0000:0000:0000:0000 to 1111:0000:0000:0000:ffff:ffff:ffff:ffff, specify 1111:0000:0000:0000:0000:0000:0000:0000/64 .",
            "stability": "stable",
            "summary": "Specify an IPv4 address by using CIDR notation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/cloudfront-web-acl.ts",
            "line": 58
          },
          "name": "cidrRanges",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Type of CIDR range."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/cloudfront-web-acl.ts",
            "line": 45
          },
          "name": "cidrType",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "static-website/cloudfront-web-acl:CidrAllowList"
    },
    "@aws/pdk.static_website.CloudFrontWebAclProps": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties to configure the web acl."
      },
      "fqn": "@aws/pdk.static_website.CloudFrontWebAclProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "static-website/cloudfront-web-acl.ts",
        "line": 64
      },
      "name": "CloudFrontWebAclProps",
      "namespace": "static_website",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- undefined",
            "stability": "stable",
            "summary": "List of cidr ranges to allow."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/cloudfront-web-acl.ts",
            "line": 77
          },
          "name": "cidrAllowList",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.static_website.CidrAllowList"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Set to true to prevent creation of a web acl for the static website."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/cloudfront-web-acl.ts",
            "line": 83
          },
          "name": "disable",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- [{ vendor: \"AWS\", name: \"AWSManagedRulesCommonRuleSet\" }]",
            "stability": "stable",
            "summary": "List of managed rules to apply to the web acl."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/cloudfront-web-acl.ts",
            "line": 70
          },
          "name": "managedRules",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.static_website.ManagedRule"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "static-website/cloudfront-web-acl:CloudFrontWebAclProps"
    },
    "@aws/pdk.static_website.CloudfrontWebAcl": {
      "assembly": "@aws/pdk",
      "base": "constructs.Construct",
      "docs": {
        "stability": "stable",
        "summary": "This construct creates a WAFv2 Web ACL for cloudfront in the us-east-1 region (required for cloudfront) no matter the region of the parent cdk stack."
      },
      "fqn": "@aws/pdk.static_website.CloudfrontWebAcl",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "static-website/cloudfront-web-acl.ts",
          "line": 94
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws/pdk.static_website.CloudFrontWebAclProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "static-website/cloudfront-web-acl.ts",
        "line": 90
      },
      "name": "CloudfrontWebAcl",
      "namespace": "static_website",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/cloudfront-web-acl.ts",
            "line": 92
          },
          "name": "webAclArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/cloudfront-web-acl.ts",
            "line": 91
          },
          "name": "webAclId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "static-website/cloudfront-web-acl:CloudfrontWebAcl"
    },
    "@aws/pdk.static_website.DistributionProps": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "DistributionProps."
      },
      "fqn": "@aws/pdk.static_website.DistributionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "static-website/distribution-props.ts",
        "line": 7
      },
      "name": "DistributionProps",
      "namespace": "static_website",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- no additional behaviors are added.",
            "stability": "stable",
            "summary": "Additional behaviors for the distribution, mapped by the pathPattern that specifies which requests to apply the behavior to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/distribution-props.ts",
            "line": 151
          },
          "name": "additionalBehaviors",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "aws-cdk-lib.aws_cloudfront.BehaviorOptions"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- the CloudFront wildcard certificate (*.cloudfront.net) will be used.",
            "remarks": "The certificate must be located in N. Virginia (us-east-1).",
            "stability": "stable",
            "summary": "A certificate to associate with the distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/distribution-props.ts",
            "line": 145
          },
          "name": "certificate",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_certificatemanager.ICertificate"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no comment",
            "stability": "stable",
            "summary": "Any comments you want to include about the distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/distribution-props.ts",
            "line": 138
          },
          "name": "comment",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The default behavior for the distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/distribution-props.ts",
            "line": 156
          },
          "name": "defaultBehavior",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_cloudfront.BehaviorOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no default root object",
            "stability": "stable",
            "summary": "The object that you want CloudFront to request from your origin (for example, index.html) when a viewer requests the root URL for your distribution. If no default object is set, the request goes to the origin's root (e.g., example.com/)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/distribution-props.ts",
            "line": 132
          },
          "name": "defaultRootObject",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The distribution will only support the default generated name (e.g., d111111abcdef8.cloudfront.net)",
            "remarks": "If you want to use your own domain name, such as www.example.com, instead of the cloudfront.net domain name,\nyou can add an alternate domain name to your distribution. If you attach a certificate to the distribution,\nyou should add (at least one of) the domain names of the certificate to this list.\n\nWhen you want to move a domain name between distributions, you can associate a certificate without specifying any domain names.\nFor more information, see the _Moving an alternate domain name to a different distribution_ section in the README.",
            "stability": "stable",
            "summary": "Alternative domain names for this distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/distribution-props.ts",
            "line": 126
          },
          "name": "domainNames",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "stable",
            "summary": "Enable or disable the distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/distribution-props.ts",
            "line": 114
          },
          "name": "enabled",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "If you specify false, CloudFront responds to IPv6 DNS requests with the DNS response code NOERROR and with no IP addresses.\nThis allows viewers to submit a second request, for an IPv4 address for your distribution.",
            "stability": "stable",
            "summary": "Whether CloudFront will respond to IPv6 DNS requests with an IPv6 address."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/distribution-props.ts",
            "line": 108
          },
          "name": "enableIpv6",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- false, unless `logBucket` is specified.",
            "stability": "stable",
            "summary": "Enable access logging for the distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/distribution-props.ts",
            "line": 100
          },
          "name": "enableLogging",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No custom error responses.",
            "stability": "stable",
            "summary": "How CloudFront should handle requests that are not successful (e.g., PageNotFound)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/distribution-props.ts",
            "line": 94
          },
          "name": "errorResponses",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "aws-cdk-lib.aws_cloudfront.ErrorResponse"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No geographic restrictions",
            "stability": "stable",
            "summary": "Controls the countries in which your content is distributed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/distribution-props.ts",
            "line": 88
          },
          "name": "geoRestriction",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_cloudfront.GeoRestriction"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "HttpVersion.HTTP2",
            "remarks": "For viewers and CloudFront to use HTTP/2, viewers must support TLS 1.2 or later, and must support server name identification (SNI).",
            "stability": "stable",
            "summary": "Specify the maximum HTTP version that you want viewers to use to communicate with CloudFront."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/distribution-props.ts",
            "line": 82
          },
          "name": "httpVersion",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_cloudfront.HttpVersion"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- A bucket is created if `enableLogging` is true",
            "remarks": "Make sure to set `objectOwnership` to `s3.ObjectOwnership.OBJECT_WRITER` in your custom bucket.",
            "stability": "stable",
            "summary": "The Amazon S3 bucket to store the access logs in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/distribution-props.ts",
            "line": 75
          },
          "name": "logBucket",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_s3.IBucket"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no prefix",
            "stability": "stable",
            "summary": "An optional string that you want CloudFront to prefix to the access log filenames for this distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/distribution-props.ts",
            "line": 68
          },
          "name": "logFilePrefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Specifies whether you want CloudFront to include cookies in access logs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/distribution-props.ts",
            "line": 62
          },
          "name": "logIncludesCookies",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- SecurityPolicyProtocol.TLS_V1_2_2021 if the '@aws-cdk/aws-cloudfront:defaultSecurityPolicyTLSv1.2_2021' feature flag is set; otherwise, SecurityPolicyProtocol.TLS_V1_2_2019.",
            "remarks": "CloudFront serves your objects only to browsers or devices that support at\nleast the SSL version that you specify.",
            "stability": "stable",
            "summary": "The minimum version of the SSL protocol that you want CloudFront to use for HTTPS connections."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/distribution-props.ts",
            "line": 56
          },
          "name": "minimumProtocolVersion",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_cloudfront.SecurityPolicyProtocol"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "PriceClass.PRICE_CLASS_ALL",
            "remarks": "If you specify PriceClass_All, CloudFront responds to requests for your objects from all CloudFront edge locations.\nIf you specify a price class other than PriceClass_All, CloudFront serves your objects from the CloudFront edge location\nthat has the lowest latency among the edge locations in your price class.",
            "stability": "stable",
            "summary": "The price class that corresponds with the maximum price that you want to pay for CloudFront service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/distribution-props.ts",
            "line": 48
          },
          "name": "priceClass",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_cloudfront.PriceClass"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Whether to enable additional CloudWatch metrics."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/distribution-props.ts",
            "line": 39
          },
          "name": "publishAdditionalMetrics",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "SSLMethod.SNI",
            "remarks": "Server Name Indication (SNI) - is an extension to the TLS computer networking protocol by which a client indicates\nwhich hostname it is attempting to connect to at the start of the handshaking process. This allows a server to present\nmultiple certificates on the same IP address and TCP port number and hence allows multiple secure (HTTPS) websites\n(or any other service over TLS) to be served by the same IP address without requiring all those sites to use the same certificate.\n\nCloudFront can use SNI to host multiple distributions on the same IP - which a large majority of clients will support.\n\nIf your clients cannot support SNI however - CloudFront can use dedicated IPs for your distribution - but there is a prorated monthly charge for\nusing this feature. By default, we use SNI - but you can optionally enable dedicated IPs (VIP).\n\nSee the CloudFront SSL for more details about pricing : https://aws.amazon.com/cloudfront/custom-ssl-domains/",
            "stability": "stable",
            "summary": "The SSL method CloudFront will use for your distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/distribution-props.ts",
            "line": 33
          },
          "name": "sslSupportMethod",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_cloudfront.SSLMethod"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No AWS Web Application Firewall web access control list (web ACL).",
            "remarks": "To specify a web ACL created using the latest version of AWS WAF, use the ACL ARN, for example\n`arn:aws:wafv2:us-east-1:123456789012:global/webacl/ExampleWebACL/473e64fd-f30b-4765-81a0-62ad96dd167a`.\nTo specify a web ACL created using AWS WAF Classic, use the ACL ID, for example `473e64fd-f30b-4765-81a0-62ad96dd167a`.",
            "stability": "stable",
            "summary": "Unique identifier that specifies the AWS WAF web ACL to associate with this CloudFront distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/distribution-props.ts",
            "line": 16
          },
          "name": "webAclId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "static-website/distribution-props:DistributionProps"
    },
    "@aws/pdk.static_website.ManagedRule": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Represents a WAF V2 managed rule."
      },
      "fqn": "@aws/pdk.static_website.ManagedRule",
      "kind": "interface",
      "locationInModule": {
        "filename": "static-website/cloudfront-web-acl.ts",
        "line": 21
      },
      "name": "ManagedRule",
      "namespace": "static_website",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "You use this, along with the vendor name, to identify the rule group.",
            "stability": "stable",
            "summary": "The name of the managed rule group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/cloudfront-web-acl.ts",
            "line": 30
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "You use this, along with the rule group name, to identify the rule group.",
            "stability": "stable",
            "summary": "The name of the managed rule group vendor."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/cloudfront-web-acl.ts",
            "line": 25
          },
          "name": "vendor",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "static-website/cloudfront-web-acl:ManagedRule"
    },
    "@aws/pdk.static_website.RuntimeOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "example": "// Will store a JSON file called runtime-config.json in the root of the StaticWebsite S3 bucket containing any\n// and all resolved values.\nconst runtimeConfig = {jsonPayload: {bucketArn: s3Bucket.bucketArn}};\nnew StaticWebsite(scope, 'StaticWebsite', {websiteContentPath: 'path/to/website', runtimeConfig});",
        "stability": "stable",
        "summary": "Dynamic configuration which gets resolved only during deployment."
      },
      "fqn": "@aws/pdk.static_website.RuntimeOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "static-website/static-website.ts",
        "line": 42
      },
      "name": "RuntimeOptions",
      "namespace": "static_website",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "example": "{ userPoolId: some.userPool.userPoolId, someResourceArn: some.resource.Arn }",
            "remarks": "Typically this contains resourceArns, etc which\nare only known at deploy time.",
            "stability": "stable",
            "summary": "Arbitrary JSON payload containing runtime values to deploy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/static-website.ts",
            "line": 58
          },
          "name": "jsonPayload",
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"runtime-config.json\"",
            "remarks": "Must follow pattern: '*.json'",
            "stability": "stable",
            "summary": "File name to store runtime configuration (jsonPayload)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/static-website.ts",
            "line": 50
          },
          "name": "jsonFileName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "static-website/static-website:RuntimeOptions"
    },
    "@aws/pdk.static_website.StaticWebsite": {
      "assembly": "@aws/pdk",
      "base": "constructs.Construct",
      "docs": {
        "remarks": "This construct configures a webAcl containing rules that are generally applicable to web applications. This\nprovides protection against exploitation of a wide range of vulnerabilities, including some of the high risk\nand commonly occurring vulnerabilities described in OWASP publications such as OWASP Top 10.",
        "stability": "stable",
        "summary": "Deploys a Static Website using by default a private S3 bucket as an origin and Cloudfront as the entrypoint."
      },
      "fqn": "@aws/pdk.static_website.StaticWebsite",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "static-website/static-website.ts",
          "line": 134
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws/pdk.static_website.StaticWebsiteProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "static-website/static-website.ts",
        "line": 129
      },
      "name": "StaticWebsite",
      "namespace": "static_website",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/static-website.ts",
            "line": 132
          },
          "name": "bucketDeployment",
          "type": {
            "fqn": "aws-cdk-lib.aws_s3_deployment.BucketDeployment"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/static-website.ts",
            "line": 131
          },
          "name": "cloudFrontDistribution",
          "type": {
            "fqn": "aws-cdk-lib.aws_cloudfront.Distribution"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/static-website.ts",
            "line": 130
          },
          "name": "websiteBucket",
          "type": {
            "fqn": "aws-cdk-lib.aws_s3.IBucket"
          }
        }
      ],
      "symbolId": "static-website/static-website:StaticWebsite"
    },
    "@aws/pdk.static_website.StaticWebsiteOrigin": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "If passing in distributionProps, the default behaviour.origin is a required parameter. An instance of this class can be passed in to make the compiler happy."
      },
      "fqn": "@aws/pdk.static_website.StaticWebsiteOrigin",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "interfaces": [
        "aws-cdk-lib.aws_cloudfront.IOrigin"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "static-website/static-website.ts",
        "line": 406
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The method called when a given Origin is added (for the first time) to a Distribution."
          },
          "locationInModule": {
            "filename": "static-website/static-website.ts",
            "line": 407
          },
          "name": "bind",
          "overrides": "aws-cdk-lib.aws_cloudfront.IOrigin",
          "parameters": [
            {
              "name": "_scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "_options",
              "type": {
                "fqn": "aws-cdk-lib.aws_cloudfront.OriginBindOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_cloudfront.OriginBindConfig"
            }
          }
        }
      ],
      "name": "StaticWebsiteOrigin",
      "namespace": "static_website",
      "symbolId": "static-website/static-website:StaticWebsiteOrigin"
    },
    "@aws/pdk.static_website.StaticWebsiteProps": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for configuring the StaticWebsite."
      },
      "fqn": "@aws/pdk.static_website.StaticWebsiteProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "static-website/static-website.ts",
        "line": 64
      },
      "name": "StaticWebsiteProps",
      "namespace": "static_website",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "This directory must contain an index.html file.",
            "stability": "stable",
            "summary": "Path to the directory containing the static website files and assets."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/static-website.ts",
            "line": 68
          },
          "name": "websiteContentPath",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "```",
            "stability": "stable",
            "summary": "Custom bucket deployment properties."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/static-website.ts",
            "line": 111
          },
          "name": "bucketDeploymentProps",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.static_website.BucketDeploymentProps"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- \"S3MANAGED\"",
            "remarks": "Supported options are KMS or S3MANAGED.\n\nNote: If planning to use KMS, ensure you associate a Lambda Edge function to sign requests to S3 as OAI does not currently support KMS encryption. Refer to {@link https://aws.amazon.com/blogs/networking-and-content-delivery/serving-sse-kms-encrypted-content-from-s3-using-cloudfront/}",
            "stability": "stable",
            "summary": "Bucket encryption to use for the default bucket."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/static-website.ts",
            "line": 84
          },
          "name": "defaultWebsiteBucketEncryption",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_s3.BucketEncryption"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Note: This is only used if the websiteBucket is left undefined, otherwise all settings from the provided websiteBucket will be used.",
            "stability": "stable",
            "summary": "A predefined KMS customer encryption key to use for the default bucket that gets created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/static-website.ts",
            "line": 91
          },
          "name": "defaultWebsiteBucketEncryptionKey",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_kms.Key"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Note: defaultBehaviour.origin is a required parameter, however it will not be used as this construct will wire it on your behalf.\nYou will need to pass in an instance of StaticWebsiteOrigin (NoOp) to keep the compiler happy.",
            "stability": "stable",
            "summary": "Custom distribution properties."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/static-website.ts",
            "line": 104
          },
          "name": "distributionProps",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.static_website.DistributionProps"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Dynamic configuration which gets resolved only during deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/static-website.ts",
            "line": 73
          },
          "name": "runtimeOptions",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.static_website.RuntimeOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "For more advanced settings, create your own ACL and pass in the webAclId as a param to distributionProps.\n\nNote: If pass in your own ACL, make sure the SCOPE is CLOUDFRONT and it is created in us-east-1.",
            "stability": "stable",
            "summary": "Limited configuration settings for the generated webAcl."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/static-website.ts",
            "line": 118
          },
          "name": "webAclProps",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.static_website.CloudFrontWebAclProps"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Predefined bucket to deploy the website into."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "static-website/static-website.ts",
            "line": 96
          },
          "name": "websiteBucket",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_s3.IBucket"
          }
        }
      ],
      "symbolId": "static-website/static-website:StaticWebsiteProps"
    },
    "@aws/pdk.type_safe_api.ApiGatewayIntegration": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "see": "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-swagger-extensions-integration.html",
        "stability": "stable",
        "summary": "Represents an api gateway integration."
      },
      "fqn": "@aws/pdk.type_safe_api.ApiGatewayIntegration",
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/construct/integrations/integration.ts",
        "line": 90
      },
      "name": "ApiGatewayIntegration",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "A list of request parameters whose values are to be cached."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/integrations/integration.ts",
            "line": 104
          },
          "name": "cacheKeyParameters",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "An API-specific tag group of related cached parameters."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/integrations/integration.ts",
            "line": 108
          },
          "name": "cacheNamespace",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/apigateway/latest/api/API_VpcLink.html",
            "stability": "stable",
            "summary": "The ID of a VpcLink for the private integration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/integrations/integration.ts",
            "line": 113
          },
          "name": "connectionId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "The valid value is \"VPC_LINK\" for private integration or \"INTERNET\", otherwise.",
            "stability": "stable",
            "summary": "The integration connection type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/integrations/integration.ts",
            "line": 117
          },
          "name": "connectionType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Valid values are 1) CONVERT_TO_TEXT, for converting a binary payload\ninto a base64-encoded string or converting a text payload into a utf-8-encoded string or passing through the text\npayload natively without modification, and 2) CONVERT_TO_BINARY, for converting a text payload into a\nbase64-decoded blob or passing through a binary payload natively without modification.",
            "stability": "stable",
            "summary": "Request payload encoding conversion types."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/integrations/integration.ts",
            "line": 133
          },
          "name": "contentHandling",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "If unspecified, credentials default\nto resource-based permissions that must be added manually to allow the API to access the resource. For more\ninformation, see Granting Permissions Using a Resource Policy.\n\nNote: When using IAM credentials, make sure that AWS STS Regional endpoints are enabled for the Region where this\nAPI is deployed for best performance.",
            "stability": "stable",
            "summary": "For AWS IAM role-based credentials, specify the ARN of an appropriate IAM role."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/integrations/integration.ts",
            "line": 126
          },
          "name": "credentials",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "For Lambda function invocations, the value must be POST.",
            "stability": "stable",
            "summary": "The HTTP method used in the integration request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/integrations/integration.ts",
            "line": 137
          },
          "name": "httpMethod",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Supported values are when_no_templates, when_no_match, and never.",
            "see": "https://docs.aws.amazon.com/apigateway/latest/api/API_Integration.html#passthroughBehavior",
            "stability": "stable",
            "summary": "Specifies how a request payload of unmapped content type is passed through the integration request without modification."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/integrations/integration.ts",
            "line": 143
          },
          "name": "passthroughBehavior",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Supported request parameters\nare querystring, path, header, and body.",
            "see": "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-swagger-extensions-integration-requestParameters.html",
            "stability": "stable",
            "summary": "Specifies mappings from method request parameters to integration request parameters."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/integrations/integration.ts",
            "line": 149
          },
          "name": "requestParameters",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-swagger-extensions-integration-requestTemplates.html",
            "stability": "stable",
            "summary": "Mapping templates for a request payload of specified MIME types."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/integrations/integration.ts",
            "line": 154
          },
          "name": "requestTemplates",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-swagger-extensions-integration-responses.html",
            "stability": "stable",
            "summary": "Defines the method's responses and specifies desired parameter mappings or payload mappings from integration responses to method responses."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/integrations/integration.ts",
            "line": 160
          },
          "name": "responses",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.type_safe_api.ApiGatewayIntegrationResponse"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "The default value is 29,000 milliseconds or 29 seconds.",
            "stability": "stable",
            "summary": "Custom timeout between 50 and 29,000 milliseconds."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/integrations/integration.ts",
            "line": 166
          },
          "name": "timeoutInMillis",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-extensions-integration-tls-config.html",
            "stability": "stable",
            "summary": "Specifies the TLS configuration for an integration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/integrations/integration.ts",
            "line": 171
          },
          "name": "tlsConfig",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.type_safe_api.ApiGatewayIntegrationTlsConfig"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/apigateway/latest/api/API_Integration.html#type",
            "stability": "stable",
            "summary": "The type of integration with the specified backend."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/integrations/integration.ts",
            "line": 95
          },
          "name": "type",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "For integrations of the aws type, this is an ARN value.\nFor the HTTP integration, this is the URL of the HTTP endpoint including the https or http scheme.",
            "stability": "stable",
            "summary": "The endpoint URI of the backend."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/integrations/integration.ts",
            "line": 100
          },
          "name": "uri",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "type-safe-api/construct/integrations/integration:ApiGatewayIntegration"
    },
    "@aws/pdk.type_safe_api.ApiGatewayIntegrationResponse": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "see": "https://docs.aws.amazon.com/apigateway/latest/api/API_Integration.html",
        "stability": "stable",
        "summary": "API Gateway integration response."
      },
      "fqn": "@aws/pdk.type_safe_api.ApiGatewayIntegrationResponse",
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/construct/integrations/integration.ts",
        "line": 49
      },
      "name": "ApiGatewayIntegrationResponse",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Specifies parameter mappings for the response."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/integrations/integration.ts",
            "line": 61
          },
          "name": "responseParameters",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Specifies MIME type-specific mapping templates for the response’s payload."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/integrations/integration.ts",
            "line": 57
          },
          "name": "responseTemplates",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "HTTP status code for the method response."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/integrations/integration.ts",
            "line": 53
          },
          "name": "statusCode",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Valid values are 1) CONVERT_TO_TEXT, for converting a binary payload\ninto a base64-encoded string or converting a text payload into a utf-8-encoded string or passing through the text\npayload natively without modification, and 2) CONVERT_TO_BINARY, for converting a text payload into a\nbase64-decoded blob or passing through a binary payload natively without modification.",
            "stability": "stable",
            "summary": "Response payload encoding conversion types."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/integrations/integration.ts",
            "line": 68
          },
          "name": "contentHandling",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "type-safe-api/construct/integrations/integration:ApiGatewayIntegrationResponse"
    },
    "@aws/pdk.type_safe_api.ApiGatewayIntegrationTlsConfig": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "see": "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-extensions-integration-tls-config.html",
        "stability": "stable",
        "summary": "Specifies the TLS configuration for an integration."
      },
      "fqn": "@aws/pdk.type_safe_api.ApiGatewayIntegrationTlsConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/construct/integrations/integration.ts",
        "line": 75
      },
      "name": "ApiGatewayIntegrationTlsConfig",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "This isn’t recommended, but it enables you to use certificates that are\nsigned by private certificate authorities, or certificates that are self-signed. If enabled, API Gateway still\nperforms basic certificate validation, which includes checking the certificate's expiration date, hostname, and\npresence of a root certificate authority. Supported only for HTTP and HTTP_PROXY integrations.",
            "stability": "stable",
            "summary": "Specifies whether or not API Gateway skips verification that the certificate for an integration endpoint is issued by a supported certificate authority."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/integrations/integration.ts",
            "line": 83
          },
          "name": "insecureSkipVerification",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "type-safe-api/construct/integrations/integration:ApiGatewayIntegrationTlsConfig"
    },
    "@aws/pdk.type_safe_api.ApiKeyOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for API keys."
      },
      "fqn": "@aws/pdk.type_safe_api.ApiKeyOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/construct/spec/api-gateway-integrations-types.ts",
        "line": 92
      },
      "name": "ApiKeyOptions",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Source type for an API key."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/spec/api-gateway-integrations-types.ts",
            "line": 96
          },
          "name": "source",
          "type": {
            "fqn": "aws-cdk-lib.aws_apigateway.ApiKeySourceType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Only applicable when the source is HEADER.",
            "stability": "stable",
            "summary": "Set to true to require an API key on all operations by default."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/spec/api-gateway-integrations-types.ts",
            "line": 101
          },
          "name": "requiredByDefault",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "type-safe-api/construct/spec/api-gateway-integrations-types:ApiKeyOptions"
    },
    "@aws/pdk.type_safe_api.Architecture": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "Represents an instruction set architecture."
      },
      "fqn": "@aws/pdk.type_safe_api.Architecture",
      "kind": "enum",
      "locationInModule": {
        "filename": "type-safe-api/project/types.ts",
        "line": 43
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "64-bit x86 architecture."
          },
          "name": "X86_64"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "64-bit ARM architecture."
          },
          "name": "ARM_64"
        }
      ],
      "name": "Architecture",
      "namespace": "type_safe_api",
      "symbolId": "type-safe-api/project/types:Architecture"
    },
    "@aws/pdk.type_safe_api.Authorizer": {
      "abstract": true,
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "An authorizer for authorizing API requests."
      },
      "fqn": "@aws/pdk.type_safe_api.Authorizer",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "type-safe-api/construct/authorizers/authorizers.ts",
          "line": 43
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws/pdk.type_safe_api.AuthorizerProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "type-safe-api/construct/authorizers/authorizers.ts",
        "line": 29
      },
      "name": "Authorizer",
      "namespace": "type_safe_api",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The type of the authorizer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/authorizers/authorizers.ts",
            "line": 37
          },
          "name": "authorizationType",
          "type": {
            "fqn": "aws-cdk-lib.aws_apigateway.AuthorizationType"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The unique identifier for the authorizer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/authorizers/authorizers.ts",
            "line": 33
          },
          "name": "authorizerId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Scopes for the authorizer, if any."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/authorizers/authorizers.ts",
            "line": 41
          },
          "name": "authorizationScopes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "type-safe-api/construct/authorizers/authorizers:Authorizer"
    },
    "@aws/pdk.type_safe_api.AuthorizerProps": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for an authorizer."
      },
      "fqn": "@aws/pdk.type_safe_api.AuthorizerProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/construct/authorizers/authorizers.ts",
        "line": 11
      },
      "name": "AuthorizerProps",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The type of the authorizer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/authorizers/authorizers.ts",
            "line": 19
          },
          "name": "authorizationType",
          "type": {
            "fqn": "aws-cdk-lib.aws_apigateway.AuthorizationType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The unique identifier for the authorizer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/authorizers/authorizers.ts",
            "line": 15
          },
          "name": "authorizerId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Scopes for the authorizer, if any."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/authorizers/authorizers.ts",
            "line": 23
          },
          "name": "authorizationScopes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "type-safe-api/construct/authorizers/authorizers:AuthorizerProps"
    },
    "@aws/pdk.type_safe_api.Authorizers": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "Class used to construct authorizers for use in the OpenApiGatewayLambdaApi construct."
      },
      "fqn": "@aws/pdk.type_safe_api.Authorizers",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "type-safe-api/construct/authorizers/authorizers.ts",
        "line": 218
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "A Cognito User Pools authorizer."
          },
          "locationInModule": {
            "filename": "type-safe-api/construct/authorizers/authorizers.ts",
            "line": 236
          },
          "name": "cognito",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws/pdk.type_safe_api.CognitoAuthorizerProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws/pdk.type_safe_api.CognitoAuthorizer"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "A custom authorizer."
          },
          "locationInModule": {
            "filename": "type-safe-api/construct/authorizers/authorizers.ts",
            "line": 243
          },
          "name": "custom",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws/pdk.type_safe_api.CustomAuthorizerProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws/pdk.type_safe_api.CustomAuthorizer"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "An IAM authorizer which uses AWS signature version 4 to authorize requests."
          },
          "locationInModule": {
            "filename": "type-safe-api/construct/authorizers/authorizers.ts",
            "line": 222
          },
          "name": "iam",
          "returns": {
            "type": {
              "fqn": "@aws/pdk.type_safe_api.IamAuthorizer"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "No authorizer."
          },
          "locationInModule": {
            "filename": "type-safe-api/construct/authorizers/authorizers.ts",
            "line": 229
          },
          "name": "none",
          "returns": {
            "type": {
              "fqn": "@aws/pdk.type_safe_api.NoneAuthorizer"
            }
          },
          "static": true
        }
      ],
      "name": "Authorizers",
      "namespace": "type_safe_api",
      "symbolId": "type-safe-api/construct/authorizers/authorizers:Authorizers"
    },
    "@aws/pdk.type_safe_api.CatchAllErrorIntegrationResponseSet": {
      "assembly": "@aws/pdk",
      "base": "@aws/pdk.type_safe_api.IntegrationResponseSet",
      "docs": {
        "stability": "stable",
        "summary": "An integration response set that catches all errors and returns a 500."
      },
      "fqn": "@aws/pdk.type_safe_api.CatchAllErrorIntegrationResponseSet",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "type-safe-api/construct/integrations/integration-response-set.ts",
        "line": 25
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Render the integration responses into the Integration."
          },
          "locationInModule": {
            "filename": "type-safe-api/construct/integrations/integration-response-set.ts",
            "line": 26
          },
          "name": "render",
          "overrides": "@aws/pdk.type_safe_api.IntegrationResponseSet",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws/pdk.type_safe_api.IntegrationRenderProps"
              }
            }
          ],
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "fqn": "@aws/pdk.type_safe_api.ApiGatewayIntegrationResponse"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CatchAllErrorIntegrationResponseSet",
      "namespace": "type_safe_api",
      "symbolId": "type-safe-api/construct/integrations/integration-response-set:CatchAllErrorIntegrationResponseSet"
    },
    "@aws/pdk.type_safe_api.CidrAllowList": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Representation of a CIDR range."
      },
      "fqn": "@aws/pdk.type_safe_api.CidrAllowList",
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/construct/waf/types.ts",
        "line": 40
      },
      "name": "CidrAllowList",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "For example:\nTo configure AWS WAF to allow, block, or count requests that originated from the IP address 192.0.2.44, specify 192.0.2.44/32 .\nTo configure AWS WAF to allow, block, or count requests that originated from IP addresses from 192.0.2.0 to 192.0.2.255, specify 192.0.2.0/24 .\n\nFor more information about CIDR notation, see the Wikipedia entry Classless Inter-Domain Routing .\n\nSpecify an IPv6 address by using CIDR notation. For example:\nTo configure AWS WAF to allow, block, or count requests that originated from the IP address 1111:0000:0000:0000:0000:0000:0000:0111, specify 1111:0000:0000:0000:0000:0000:0000:0111/128 .\nTo configure AWS WAF to allow, block, or count requests that originated from IP addresses 1111:0000:0000:0000:0000:0000:0000:0000 to 1111:0000:0000:0000:ffff:ffff:ffff:ffff, specify 1111:0000:0000:0000:0000:0000:0000:0000/64 .",
            "stability": "stable",
            "summary": "Specify an IPv4 address by using CIDR notation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/waf/types.ts",
            "line": 57
          },
          "name": "cidrRanges",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Type of CIDR range."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/waf/types.ts",
            "line": 44
          },
          "name": "cidrType",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "type-safe-api/construct/waf/types:CidrAllowList"
    },
    "@aws/pdk.type_safe_api.CodeGenerationSourceOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for the source files used for code generation."
      },
      "fqn": "@aws/pdk.type_safe_api.CodeGenerationSourceOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/types.ts",
        "line": 611
      },
      "name": "CodeGenerationSourceOptions",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Path to the OpenAPI specification."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/types.ts",
            "line": 615
          },
          "name": "specPath",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "type-safe-api/project/types:CodeGenerationSourceOptions"
    },
    "@aws/pdk.type_safe_api.CognitoAuthorizer": {
      "assembly": "@aws/pdk",
      "base": "@aws/pdk.type_safe_api.Authorizer",
      "docs": {
        "stability": "stable",
        "summary": "An authorizer that uses Cognito identity or access tokens."
      },
      "fqn": "@aws/pdk.type_safe_api.CognitoAuthorizer",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "type-safe-api/construct/authorizers/authorizers.ts",
          "line": 80
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws/pdk.type_safe_api.CognitoAuthorizerProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "type-safe-api/construct/authorizers/authorizers.ts",
        "line": 74
      },
      "methods": [
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html#cfn-apigateway-method-authorizationscopes",
            "stability": "stable",
            "summary": "Returns this authorizer with scopes applied, intended for usage in individual operations where scopes may differ on a per-operation basis."
          },
          "locationInModule": {
            "filename": "type-safe-api/construct/authorizers/authorizers.ts",
            "line": 95
          },
          "name": "withScopes",
          "parameters": [
            {
              "docs": {
                "summary": "the scopes to apply."
              },
              "name": "authorizationScopes",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws/pdk.type_safe_api.CognitoAuthorizer"
            }
          },
          "variadic": true
        }
      ],
      "name": "CognitoAuthorizer",
      "namespace": "type_safe_api",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The Cognito user pools associated with this authorizer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/authorizers/authorizers.ts",
            "line": 78
          },
          "name": "userPools",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "aws-cdk-lib.aws_cognito.IUserPool"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "type-safe-api/construct/authorizers/authorizers:CognitoAuthorizer"
    },
    "@aws/pdk.type_safe_api.CognitoAuthorizerProps": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties used to configure a cognito authorizer."
      },
      "fqn": "@aws/pdk.type_safe_api.CognitoAuthorizerProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/construct/authorizers/authorizers.ts",
        "line": 53
      },
      "name": "CognitoAuthorizerProps",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Unique identifier for this authorizer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/authorizers/authorizers.ts",
            "line": 57
          },
          "name": "authorizerId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The Cognito user pools associated with this authorizer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/authorizers/authorizers.ts",
            "line": 61
          },
          "name": "userPools",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "aws-cdk-lib.aws_cognito.IUserPool"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "[]",
            "remarks": "When used as the default authorizer, these scopes will be\napplied to all methods without an authorizer at the integration level.",
            "see": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html#cfn-apigateway-method-authorizationscopes",
            "stability": "stable",
            "summary": "A list of authorization scopes configured on the method."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/authorizers/authorizers.ts",
            "line": 68
          },
          "name": "authorizationScopes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "type-safe-api/construct/authorizers/authorizers:CognitoAuthorizerProps"
    },
    "@aws/pdk.type_safe_api.CompositeIntegrationResponseSet": {
      "assembly": "@aws/pdk",
      "base": "@aws/pdk.type_safe_api.IntegrationResponseSet",
      "docs": {
        "remarks": "Response sets are combined in order, so later responses will override previous ones for\noverlapping response status patterns.",
        "stability": "stable",
        "summary": "An integration response set which combines the provided integration response sets."
      },
      "fqn": "@aws/pdk.type_safe_api.CompositeIntegrationResponseSet",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "type-safe-api/construct/integrations/integration-response-set.ts",
          "line": 171
        },
        "parameters": [
          {
            "name": "responseSets",
            "type": {
              "fqn": "@aws/pdk.type_safe_api.IntegrationResponseSet"
            },
            "variadic": true
          }
        ],
        "variadic": true
      },
      "kind": "class",
      "locationInModule": {
        "filename": "type-safe-api/construct/integrations/integration-response-set.ts",
        "line": 168
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Render the integration responses into the Integration."
          },
          "locationInModule": {
            "filename": "type-safe-api/construct/integrations/integration-response-set.ts",
            "line": 176
          },
          "name": "render",
          "overrides": "@aws/pdk.type_safe_api.IntegrationResponseSet",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws/pdk.type_safe_api.IntegrationRenderProps"
              }
            }
          ],
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "fqn": "@aws/pdk.type_safe_api.ApiGatewayIntegrationResponse"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CompositeIntegrationResponseSet",
      "namespace": "type_safe_api",
      "symbolId": "type-safe-api/construct/integrations/integration-response-set:CompositeIntegrationResponseSet"
    },
    "@aws/pdk.type_safe_api.CustomAuthorizer": {
      "assembly": "@aws/pdk",
      "base": "@aws/pdk.type_safe_api.Authorizer",
      "docs": {
        "stability": "stable",
        "summary": "An authorizer that uses a lambda function to authorize requests."
      },
      "fqn": "@aws/pdk.type_safe_api.CustomAuthorizer",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "type-safe-api/construct/authorizers/authorizers.ts",
          "line": 176
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws/pdk.type_safe_api.CustomAuthorizerProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "type-safe-api/construct/authorizers/authorizers.ts",
        "line": 156
      },
      "name": "CustomAuthorizer",
      "namespace": "type_safe_api",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The number of seconds during which the authorizer result is cached."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/authorizers/authorizers.ts",
            "line": 174
          },
          "name": "authorizerResultTtlInSeconds",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The lambda function used to authorize requests."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/authorizers/authorizers.ts",
            "line": 160
          },
          "name": "function",
          "type": {
            "fqn": "aws-cdk-lib.aws_lambda.IFunction"
          }
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-authorizer.html#cfn-apigateway-authorizer-identitysource",
            "stability": "stable",
            "summary": "The source of the identity in an incoming request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/authorizers/authorizers.ts",
            "line": 170
          },
          "name": "identitySource",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-authorizer.html#cfn-apigateway-authorizer-type",
            "stability": "stable",
            "summary": "The type of custom authorizer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/authorizers/authorizers.ts",
            "line": 165
          },
          "name": "type",
          "type": {
            "fqn": "@aws/pdk.type_safe_api.CustomAuthorizerType"
          }
        }
      ],
      "symbolId": "type-safe-api/construct/authorizers/authorizers:CustomAuthorizer"
    },
    "@aws/pdk.type_safe_api.CustomAuthorizerProps": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties used to configure a custom authorizer."
      },
      "fqn": "@aws/pdk.type_safe_api.CustomAuthorizerProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/construct/authorizers/authorizers.ts",
        "line": 122
      },
      "name": "CustomAuthorizerProps",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Unique identifier for this authorizer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/authorizers/authorizers.ts",
            "line": 126
          },
          "name": "authorizerId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The lambda function used to authorize requests."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/authorizers/authorizers.ts",
            "line": 130
          },
          "name": "function",
          "type": {
            "fqn": "aws-cdk-lib.aws_lambda.IFunction"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "300",
            "stability": "stable",
            "summary": "The number of seconds during which the authorizer result is cached."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/authorizers/authorizers.ts",
            "line": 147
          },
          "name": "authorizerResultTtlInSeconds",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"method.request.header.Authorization\"",
            "see": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-authorizer.html#cfn-apigateway-authorizer-identitysource",
            "stability": "stable",
            "summary": "The source of the identity in an incoming request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/authorizers/authorizers.ts",
            "line": 142
          },
          "name": "identitySource",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "CustomAuthorizerType.TOKEN",
            "see": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-authorizer.html#cfn-apigateway-authorizer-type",
            "stability": "stable",
            "summary": "The type of custom authorizer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/authorizers/authorizers.ts",
            "line": 136
          },
          "name": "type",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.type_safe_api.CustomAuthorizerType"
          }
        }
      ],
      "symbolId": "type-safe-api/construct/authorizers/authorizers:CustomAuthorizerProps"
    },
    "@aws/pdk.type_safe_api.CustomAuthorizerType": {
      "assembly": "@aws/pdk",
      "docs": {
        "see": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-authorizer.html#cfn-apigateway-authorizer-type",
        "stability": "stable",
        "summary": "The type of custom authorizer."
      },
      "fqn": "@aws/pdk.type_safe_api.CustomAuthorizerType",
      "kind": "enum",
      "locationInModule": {
        "filename": "type-safe-api/construct/authorizers/authorizers.ts",
        "line": 108
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "A custom authorizer that uses a Lambda function."
          },
          "name": "TOKEN"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "An authorizer that uses a Lambda function using incoming request parameters."
          },
          "name": "REQUEST"
        }
      ],
      "name": "CustomAuthorizerType",
      "namespace": "type_safe_api",
      "symbolId": "type-safe-api/construct/authorizers/authorizers:CustomAuthorizerType"
    },
    "@aws/pdk.type_safe_api.CustomIntegrationResponseSet": {
      "assembly": "@aws/pdk",
      "base": "@aws/pdk.type_safe_api.IntegrationResponseSet",
      "docs": {
        "stability": "stable",
        "summary": "A custom integration response set where you can specify the responses as you wish."
      },
      "fqn": "@aws/pdk.type_safe_api.CustomIntegrationResponseSet",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "type-safe-api/construct/integrations/integration-response-set.ts",
          "line": 135
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws/pdk.type_safe_api.CustomIntegrationResponseSetProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "type-safe-api/construct/integrations/integration-response-set.ts",
        "line": 130
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Render the integration responses into the Integration."
          },
          "locationInModule": {
            "filename": "type-safe-api/construct/integrations/integration-response-set.ts",
            "line": 141
          },
          "name": "render",
          "overrides": "@aws/pdk.type_safe_api.IntegrationResponseSet",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws/pdk.type_safe_api.IntegrationRenderProps"
              }
            }
          ],
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "fqn": "@aws/pdk.type_safe_api.ApiGatewayIntegrationResponse"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CustomIntegrationResponseSet",
      "namespace": "type_safe_api",
      "symbolId": "type-safe-api/construct/integrations/integration-response-set:CustomIntegrationResponseSet"
    },
    "@aws/pdk.type_safe_api.CustomIntegrationResponseSetProps": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for a custom integration response set."
      },
      "fqn": "@aws/pdk.type_safe_api.CustomIntegrationResponseSetProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/construct/integrations/integration-response-set.ts",
        "line": 118
      },
      "name": "CustomIntegrationResponseSetProps",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The responses to add to the integration response."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/integrations/integration-response-set.ts",
            "line": 122
          },
          "name": "responses",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.type_safe_api.ApiGatewayIntegrationResponse"
              },
              "kind": "map"
            }
          }
        }
      ],
      "symbolId": "type-safe-api/construct/integrations/integration-response-set:CustomIntegrationResponseSetProps"
    },
    "@aws/pdk.type_safe_api.DefaultPassthroughIntegrationResponseSet": {
      "assembly": "@aws/pdk",
      "base": "@aws/pdk.type_safe_api.IntegrationResponseSet",
      "docs": {
        "stability": "stable",
        "summary": "An integration response set which adds a passthrough for the default response."
      },
      "fqn": "@aws/pdk.type_safe_api.DefaultPassthroughIntegrationResponseSet",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "type-safe-api/construct/integrations/integration-response-set.ts",
          "line": 58
        },
        "parameters": [
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws/pdk.type_safe_api.DefaultPassthroughIntegrationResponseSetProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "type-safe-api/construct/integrations/integration-response-set.ts",
        "line": 55
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Render the integration responses into the Integration."
          },
          "locationInModule": {
            "filename": "type-safe-api/construct/integrations/integration-response-set.ts",
            "line": 63
          },
          "name": "render",
          "overrides": "@aws/pdk.type_safe_api.IntegrationResponseSet",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws/pdk.type_safe_api.IntegrationRenderProps"
              }
            }
          ],
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "fqn": "@aws/pdk.type_safe_api.ApiGatewayIntegrationResponse"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "DefaultPassthroughIntegrationResponseSet",
      "namespace": "type_safe_api",
      "symbolId": "type-safe-api/construct/integrations/integration-response-set:DefaultPassthroughIntegrationResponseSet"
    },
    "@aws/pdk.type_safe_api.DefaultPassthroughIntegrationResponseSetProps": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for the DefaultPassthroughIntegrationResponseSet."
      },
      "fqn": "@aws/pdk.type_safe_api.DefaultPassthroughIntegrationResponseSetProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/construct/integrations/integration-response-set.ts",
        "line": 44
      },
      "name": "DefaultPassthroughIntegrationResponseSetProps",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "200",
            "stability": "stable",
            "summary": "Override the status code returned by the default integration response."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/integrations/integration-response-set.ts",
            "line": 49
          },
          "name": "statusCode",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "type-safe-api/construct/integrations/integration-response-set:DefaultPassthroughIntegrationResponseSetProps"
    },
    "@aws/pdk.type_safe_api.DocumentationConfiguration": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Configuration for generated documentation."
      },
      "fqn": "@aws/pdk.type_safe_api.DocumentationConfiguration",
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/type-safe-api-project.ts",
        "line": 109
      },
      "name": "DocumentationConfiguration",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Formats for generated documentation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/type-safe-api-project.ts",
            "line": 113
          },
          "name": "formats",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.type_safe_api.DocumentationFormat"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Note that only those provided for the specified formats will apply",
            "stability": "stable",
            "summary": "Options for the generated documentation projects."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/type-safe-api-project.ts",
            "line": 117
          },
          "name": "options",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.type_safe_api.GeneratedDocumentationOptions"
          }
        }
      ],
      "symbolId": "type-safe-api/project/type-safe-api-project:DocumentationConfiguration"
    },
    "@aws/pdk.type_safe_api.DocumentationFormat": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "Formats for documentation generation."
      },
      "fqn": "@aws/pdk.type_safe_api.DocumentationFormat",
      "kind": "enum",
      "locationInModule": {
        "filename": "type-safe-api/project/languages.ts",
        "line": 55
      },
      "members": [
        {
          "docs": {
            "see": "https://github.com/Redocly/redoc",
            "stability": "stable",
            "summary": "HTML Documentation generated by redoc."
          },
          "name": "HTML_REDOC"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Markdown documentation."
          },
          "name": "MARKDOWN"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "PlantUML schema diagrams."
          },
          "name": "PLANTUML"
        }
      ],
      "name": "DocumentationFormat",
      "namespace": "type_safe_api",
      "symbolId": "type-safe-api/project/languages:DocumentationFormat"
    },
    "@aws/pdk.type_safe_api.GeneratedAsyncApiHtmlDocumentationOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for the async api html documentation project."
      },
      "fqn": "@aws/pdk.type_safe_api.GeneratedAsyncApiHtmlDocumentationOptions",
      "interfaces": [
        "@aws/pdk.type_safe_api.GeneratedProjectOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/types.ts",
        "line": 521
      },
      "name": "GeneratedAsyncApiHtmlDocumentationOptions",
      "namespace": "type_safe_api",
      "symbolId": "type-safe-api/project/types:GeneratedAsyncApiHtmlDocumentationOptions"
    },
    "@aws/pdk.type_safe_api.GeneratedAsyncApiMarkdownDocumentationOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for the async api markdown documentation project."
      },
      "fqn": "@aws/pdk.type_safe_api.GeneratedAsyncApiMarkdownDocumentationOptions",
      "interfaces": [
        "@aws/pdk.type_safe_api.GeneratedProjectOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/types.ts",
        "line": 527
      },
      "name": "GeneratedAsyncApiMarkdownDocumentationOptions",
      "namespace": "type_safe_api",
      "symbolId": "type-safe-api/project/types:GeneratedAsyncApiMarkdownDocumentationOptions"
    },
    "@aws/pdk.type_safe_api.GeneratedCodeProjects": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Generated code projects."
      },
      "fqn": "@aws/pdk.type_safe_api.GeneratedCodeProjects",
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/types.ts",
        "line": 370
      },
      "name": "GeneratedCodeProjects",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Generated java project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/types.ts",
            "line": 382
          },
          "name": "java",
          "optional": true,
          "type": {
            "fqn": "projen.java.JavaProject"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Generated python project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/types.ts",
            "line": 378
          },
          "name": "python",
          "optional": true,
          "type": {
            "fqn": "projen.python.PythonProject"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Generated typescript project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/types.ts",
            "line": 374
          },
          "name": "typescript",
          "optional": true,
          "type": {
            "fqn": "projen.typescript.TypeScriptProject"
          }
        }
      ],
      "symbolId": "type-safe-api/project/types:GeneratedCodeProjects"
    },
    "@aws/pdk.type_safe_api.GeneratedDocumentationOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for generated documentation projects."
      },
      "fqn": "@aws/pdk.type_safe_api.GeneratedDocumentationOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/types.ts",
        "line": 533
      },
      "name": "GeneratedDocumentationOptions",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Generated html redoc documentation project options."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/types.ts",
            "line": 537
          },
          "name": "htmlRedoc",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.type_safe_api.GeneratedHtmlRedocDocumentationOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Generated markdown documentation project options."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/types.ts",
            "line": 541
          },
          "name": "markdown",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.type_safe_api.GeneratedMarkdownDocumentationOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Generated plantuml documentation project options."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/types.ts",
            "line": 545
          },
          "name": "plantuml",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.type_safe_api.GeneratedPlantumlDocumentationOptions"
          }
        }
      ],
      "symbolId": "type-safe-api/project/types:GeneratedDocumentationOptions"
    },
    "@aws/pdk.type_safe_api.GeneratedDocumentationProjects": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Generated documentation project references."
      },
      "fqn": "@aws/pdk.type_safe_api.GeneratedDocumentationProjects",
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/types.ts",
        "line": 565
      },
      "name": "GeneratedDocumentationProjects",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Generated html redoc documentation project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/types.ts",
            "line": 569
          },
          "name": "htmlRedoc",
          "optional": true,
          "type": {
            "fqn": "projen.Project"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Generated markdown documentation project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/types.ts",
            "line": 573
          },
          "name": "markdown",
          "optional": true,
          "type": {
            "fqn": "projen.Project"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Generated plantuml documentation project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/types.ts",
            "line": 577
          },
          "name": "plantuml",
          "optional": true,
          "type": {
            "fqn": "projen.Project"
          }
        }
      ],
      "symbolId": "type-safe-api/project/types:GeneratedDocumentationProjects"
    },
    "@aws/pdk.type_safe_api.GeneratedHandlersCodeOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for lambda handler projects for implementing API operations."
      },
      "fqn": "@aws/pdk.type_safe_api.GeneratedHandlersCodeOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/types.ts",
        "line": 318
      },
      "name": "GeneratedHandlersCodeOptions",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "These override the default inferred options.",
            "stability": "stable",
            "summary": "Options for the java handlers project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/types.ts",
            "line": 330
          },
          "name": "java",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.type_safe_api.GeneratedJavaHandlersOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "These override the default inferred options.",
            "stability": "stable",
            "summary": "Options for the python handlers project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/types.ts",
            "line": 326
          },
          "name": "python",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.type_safe_api.GeneratedPythonHandlersOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "These override the default inferred options.",
            "stability": "stable",
            "summary": "Options for the typescript handlers project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/types.ts",
            "line": 322
          },
          "name": "typescript",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.type_safe_api.GeneratedTypeScriptHandlersOptions"
          }
        }
      ],
      "symbolId": "type-safe-api/project/types:GeneratedHandlersCodeOptions"
    },
    "@aws/pdk.type_safe_api.GeneratedHtml2DocumentationOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for the html2 documentation project."
      },
      "fqn": "@aws/pdk.type_safe_api.GeneratedHtml2DocumentationOptions",
      "interfaces": [
        "@aws/pdk.type_safe_api.GeneratedProjectOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/types.ts",
        "line": 503
      },
      "name": "GeneratedHtml2DocumentationOptions",
      "namespace": "type_safe_api",
      "symbolId": "type-safe-api/project/types:GeneratedHtml2DocumentationOptions"
    },
    "@aws/pdk.type_safe_api.GeneratedHtmlRedocDocumentationOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for the html redoc documentation project."
      },
      "fqn": "@aws/pdk.type_safe_api.GeneratedHtmlRedocDocumentationOptions",
      "interfaces": [
        "@aws/pdk.type_safe_api.GeneratedProjectOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/types.ts",
        "line": 497
      },
      "name": "GeneratedHtmlRedocDocumentationOptions",
      "namespace": "type_safe_api",
      "symbolId": "type-safe-api/project/types:GeneratedHtmlRedocDocumentationOptions"
    },
    "@aws/pdk.type_safe_api.GeneratedInfrastructureCodeOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for generated infrastructure."
      },
      "fqn": "@aws/pdk.type_safe_api.GeneratedInfrastructureCodeOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/types.ts",
        "line": 300
      },
      "name": "GeneratedInfrastructureCodeOptions",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "These override the default inferred options.",
            "stability": "stable",
            "summary": "Options for the generated java infrastructure project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/types.ts",
            "line": 312
          },
          "name": "java",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.type_safe_api.GeneratedJavaInfrastructureOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "These override the default inferred options.",
            "stability": "stable",
            "summary": "Options for the generated python infrastructure project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/types.ts",
            "line": 308
          },
          "name": "python",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.type_safe_api.GeneratedPythonInfrastructureOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "These override the default inferred options.",
            "stability": "stable",
            "summary": "Options for the generated typescript infrastructure project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/types.ts",
            "line": 304
          },
          "name": "typescript",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.type_safe_api.GeneratedTypeScriptInfrastructureOptions"
          }
        }
      ],
      "symbolId": "type-safe-api/project/types:GeneratedInfrastructureCodeOptions"
    },
    "@aws/pdk.type_safe_api.GeneratedJavaHandlersOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for configuring a generated java handlers project."
      },
      "fqn": "@aws/pdk.type_safe_api.GeneratedJavaHandlersOptions",
      "interfaces": [
        "@aws/pdk.type_safe_api.JavaProjectOptions",
        "@aws/pdk.type_safe_api.GeneratedProjectOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/types.ts",
        "line": 242
      },
      "name": "GeneratedJavaHandlersOptions",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "JavaVersion.JAVA_17",
            "stability": "stable",
            "summary": "Runtime version to target for the handlers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/types.ts",
            "line": 249
          },
          "name": "runtimeVersion",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.type_safe_api.JavaVersion"
          }
        }
      ],
      "symbolId": "type-safe-api/project/types:GeneratedJavaHandlersOptions"
    },
    "@aws/pdk.type_safe_api.GeneratedJavaInfrastructureOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for configuring a generated java infrastructure project."
      },
      "fqn": "@aws/pdk.type_safe_api.GeneratedJavaInfrastructureOptions",
      "interfaces": [
        "@aws/pdk.type_safe_api.JavaProjectOptions",
        "@aws/pdk.type_safe_api.GeneratedProjectOptions",
        "@aws/pdk.type_safe_api.MockResponseGenerationOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/types.ts",
        "line": 194
      },
      "name": "GeneratedJavaInfrastructureOptions",
      "namespace": "type_safe_api",
      "symbolId": "type-safe-api/project/types:GeneratedJavaInfrastructureOptions"
    },
    "@aws/pdk.type_safe_api.GeneratedJavaRuntimeOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for configuring a generated java runtime project."
      },
      "fqn": "@aws/pdk.type_safe_api.GeneratedJavaRuntimeOptions",
      "interfaces": [
        "@aws/pdk.type_safe_api.JavaProjectOptions",
        "@aws/pdk.type_safe_api.GeneratedProjectOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/types.ts",
        "line": 134
      },
      "name": "GeneratedJavaRuntimeOptions",
      "namespace": "type_safe_api",
      "symbolId": "type-safe-api/project/types:GeneratedJavaRuntimeOptions"
    },
    "@aws/pdk.type_safe_api.GeneratedLibraryOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for generated libraries."
      },
      "fqn": "@aws/pdk.type_safe_api.GeneratedLibraryOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/types.ts",
        "line": 451
      },
      "name": "GeneratedLibraryOptions",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "These override the default inferred options.",
            "stability": "stable",
            "summary": "Options for the generated typescript react-query hooks library."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/types.ts",
            "line": 455
          },
          "name": "typescriptReactQueryHooks",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.type_safe_api.GeneratedTypeScriptReactQueryHooksOptions"
          }
        }
      ],
      "symbolId": "type-safe-api/project/types:GeneratedLibraryOptions"
    },
    "@aws/pdk.type_safe_api.GeneratedLibraryProjects": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Generated library projects."
      },
      "fqn": "@aws/pdk.type_safe_api.GeneratedLibraryProjects",
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/types.ts",
        "line": 472
      },
      "name": "GeneratedLibraryProjects",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Generated typescript react-query hooks project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/types.ts",
            "line": 476
          },
          "name": "typescriptReactQueryHooks",
          "optional": true,
          "type": {
            "fqn": "projen.typescript.TypeScriptProject"
          }
        }
      ],
      "symbolId": "type-safe-api/project/types:GeneratedLibraryProjects"
    },
    "@aws/pdk.type_safe_api.GeneratedMarkdownDocumentationOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for the markdown documentation project."
      },
      "fqn": "@aws/pdk.type_safe_api.GeneratedMarkdownDocumentationOptions",
      "interfaces": [
        "@aws/pdk.type_safe_api.GeneratedProjectOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/types.ts",
        "line": 509
      },
      "name": "GeneratedMarkdownDocumentationOptions",
      "namespace": "type_safe_api",
      "symbolId": "type-safe-api/project/types:GeneratedMarkdownDocumentationOptions"
    },
    "@aws/pdk.type_safe_api.GeneratedPlantumlDocumentationOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for the plantuml documentation project."
      },
      "fqn": "@aws/pdk.type_safe_api.GeneratedPlantumlDocumentationOptions",
      "interfaces": [
        "@aws/pdk.type_safe_api.GeneratedProjectOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/types.ts",
        "line": 515
      },
      "name": "GeneratedPlantumlDocumentationOptions",
      "namespace": "type_safe_api",
      "symbolId": "type-safe-api/project/types:GeneratedPlantumlDocumentationOptions"
    },
    "@aws/pdk.type_safe_api.GeneratedProjectOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for a code project generated with OpenAPI Generator."
      },
      "fqn": "@aws/pdk.type_safe_api.GeneratedProjectOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/types.ts",
        "line": 109
      },
      "name": "GeneratedProjectOptions",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Whether to commit the code generated by the OpenAPI Generator."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/types.ts",
            "line": 114
          },
          "name": "commitGeneratedCode",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "type-safe-api/project/types:GeneratedProjectOptions"
    },
    "@aws/pdk.type_safe_api.GeneratedPythonHandlersOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for configuring a generated python handlers project."
      },
      "fqn": "@aws/pdk.type_safe_api.GeneratedPythonHandlersOptions",
      "interfaces": [
        "@aws/pdk.type_safe_api.PythonProjectOptions",
        "@aws/pdk.type_safe_api.GeneratedProjectOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/types.ts",
        "line": 221
      },
      "name": "GeneratedPythonHandlersOptions",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "Architecture.X86_64",
            "remarks": "This determines the --platform argument passed to the pip install command used to build the lambda distributable.",
            "see": "https://docs.aws.amazon.com/lambda/latest/dg/python-package.html#python-package-native-libraries",
            "stability": "stable",
            "summary": "The architecture to target for python handlers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/types.ts",
            "line": 230
          },
          "name": "architecture",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.type_safe_api.Architecture"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "PythonVersion.PYTHON_3_13",
            "stability": "stable",
            "summary": "Runtime version to target for the handlers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/types.ts",
            "line": 236
          },
          "name": "runtimeVersion",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.type_safe_api.PythonVersion"
          }
        }
      ],
      "symbolId": "type-safe-api/project/types:GeneratedPythonHandlersOptions"
    },
    "@aws/pdk.type_safe_api.GeneratedPythonInfrastructureOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for configuring a generated python infrastructure project."
      },
      "fqn": "@aws/pdk.type_safe_api.GeneratedPythonInfrastructureOptions",
      "interfaces": [
        "@aws/pdk.type_safe_api.PythonProjectOptions",
        "@aws/pdk.type_safe_api.GeneratedProjectOptions",
        "@aws/pdk.type_safe_api.MockResponseGenerationOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/types.ts",
        "line": 186
      },
      "name": "GeneratedPythonInfrastructureOptions",
      "namespace": "type_safe_api",
      "symbolId": "type-safe-api/project/types:GeneratedPythonInfrastructureOptions"
    },
    "@aws/pdk.type_safe_api.GeneratedPythonRuntimeOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for configuring a generated python runtime project."
      },
      "fqn": "@aws/pdk.type_safe_api.GeneratedPythonRuntimeOptions",
      "interfaces": [
        "@aws/pdk.type_safe_api.PythonProjectOptions",
        "@aws/pdk.type_safe_api.GeneratedProjectOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/types.ts",
        "line": 127
      },
      "name": "GeneratedPythonRuntimeOptions",
      "namespace": "type_safe_api",
      "symbolId": "type-safe-api/project/types:GeneratedPythonRuntimeOptions"
    },
    "@aws/pdk.type_safe_api.GeneratedRuntimeCodeOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for generated runtimes."
      },
      "fqn": "@aws/pdk.type_safe_api.GeneratedRuntimeCodeOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/types.ts",
        "line": 282
      },
      "name": "GeneratedRuntimeCodeOptions",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "These override the default inferred options.",
            "stability": "stable",
            "summary": "Options for a generated java project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/types.ts",
            "line": 294
          },
          "name": "java",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.type_safe_api.GeneratedJavaRuntimeOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "These override the default inferred options.",
            "stability": "stable",
            "summary": "Options for a generated python project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/types.ts",
            "line": 290
          },
          "name": "python",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.type_safe_api.GeneratedPythonRuntimeOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "These override the default inferred options.",
            "stability": "stable",
            "summary": "Options for a generated typescript project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/types.ts",
            "line": 286
          },
          "name": "typescript",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.type_safe_api.GeneratedTypeScriptRuntimeOptions"
          }
        }
      ],
      "symbolId": "type-safe-api/project/types:GeneratedRuntimeCodeOptions"
    },
    "@aws/pdk.type_safe_api.GeneratedTypeScriptHandlersOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for configuring a generated typescript handlers project."
      },
      "fqn": "@aws/pdk.type_safe_api.GeneratedTypeScriptHandlersOptions",
      "interfaces": [
        "@aws/pdk.type_safe_api.TypeScriptProjectOptions",
        "@aws/pdk.type_safe_api.GeneratedProjectOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/types.ts",
        "line": 202
      },
      "name": "GeneratedTypeScriptHandlersOptions",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "src/*.ts - all files directly under the src directory",
            "stability": "stable",
            "summary": "Globs for lambda handler entry points, used by esbuild."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/types.ts",
            "line": 209
          },
          "name": "handlerEntryPoints",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "NodeVersion.NODE_22",
            "stability": "stable",
            "summary": "Runtime version to target for the handlers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/types.ts",
            "line": 215
          },
          "name": "runtimeVersion",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.type_safe_api.NodeVersion"
          }
        }
      ],
      "symbolId": "type-safe-api/project/types:GeneratedTypeScriptHandlersOptions"
    },
    "@aws/pdk.type_safe_api.GeneratedTypeScriptInfrastructureOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for configuring a generated typescript infrastructure project."
      },
      "fqn": "@aws/pdk.type_safe_api.GeneratedTypeScriptInfrastructureOptions",
      "interfaces": [
        "@aws/pdk.type_safe_api.TypeScriptProjectOptions",
        "@aws/pdk.type_safe_api.GeneratedProjectOptions",
        "@aws/pdk.type_safe_api.MockResponseGenerationOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/types.ts",
        "line": 178
      },
      "name": "GeneratedTypeScriptInfrastructureOptions",
      "namespace": "type_safe_api",
      "symbolId": "type-safe-api/project/types:GeneratedTypeScriptInfrastructureOptions"
    },
    "@aws/pdk.type_safe_api.GeneratedTypeScriptReactQueryHooksOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for configuring a generated typescript hooks library project."
      },
      "fqn": "@aws/pdk.type_safe_api.GeneratedTypeScriptReactQueryHooksOptions",
      "interfaces": [
        "@aws/pdk.type_safe_api.TypeScriptProjectOptions",
        "@aws/pdk.type_safe_api.GeneratedProjectOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/types.ts",
        "line": 255
      },
      "name": "GeneratedTypeScriptReactQueryHooksOptions",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "tanstack": "/react-query version 4.x is used"
            },
            "default": "false -",
            "stability": "stable",
            "summary": "Set to true to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/types.ts",
            "line": 262
          },
          "name": "useReactQueryV5",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "type-safe-api/project/types:GeneratedTypeScriptReactQueryHooksOptions"
    },
    "@aws/pdk.type_safe_api.GeneratedTypeScriptRuntimeOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for configuring a generated typescript runtime project."
      },
      "fqn": "@aws/pdk.type_safe_api.GeneratedTypeScriptRuntimeOptions",
      "interfaces": [
        "@aws/pdk.type_safe_api.TypeScriptProjectOptions",
        "@aws/pdk.type_safe_api.GeneratedProjectOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/types.ts",
        "line": 120
      },
      "name": "GeneratedTypeScriptRuntimeOptions",
      "namespace": "type_safe_api",
      "symbolId": "type-safe-api/project/types:GeneratedTypeScriptRuntimeOptions"
    },
    "@aws/pdk.type_safe_api.GeneratedTypeScriptWebSocketClientOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for configuring a generated typescript websocket client library project."
      },
      "fqn": "@aws/pdk.type_safe_api.GeneratedTypeScriptWebSocketClientOptions",
      "interfaces": [
        "@aws/pdk.type_safe_api.TypeScriptProjectOptions",
        "@aws/pdk.type_safe_api.GeneratedProjectOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/types.ts",
        "line": 268
      },
      "name": "GeneratedTypeScriptWebSocketClientOptions",
      "namespace": "type_safe_api",
      "symbolId": "type-safe-api/project/types:GeneratedTypeScriptWebSocketClientOptions"
    },
    "@aws/pdk.type_safe_api.GeneratedTypeScriptWebSocketHooksOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for configuring a generated typescript websocket client library project."
      },
      "fqn": "@aws/pdk.type_safe_api.GeneratedTypeScriptWebSocketHooksOptions",
      "interfaces": [
        "@aws/pdk.type_safe_api.TypeScriptProjectOptions",
        "@aws/pdk.type_safe_api.GeneratedProjectOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/types.ts",
        "line": 275
      },
      "name": "GeneratedTypeScriptWebSocketHooksOptions",
      "namespace": "type_safe_api",
      "symbolId": "type-safe-api/project/types:GeneratedTypeScriptWebSocketHooksOptions"
    },
    "@aws/pdk.type_safe_api.GeneratedWebSocketDocumentationOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for generated websocket documentation projects."
      },
      "fqn": "@aws/pdk.type_safe_api.GeneratedWebSocketDocumentationOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/types.ts",
        "line": 551
      },
      "name": "GeneratedWebSocketDocumentationOptions",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Generated AsyncAPI html documentation project options."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/types.ts",
            "line": 555
          },
          "name": "html",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.type_safe_api.GeneratedAsyncApiHtmlDocumentationOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Generated AsyncAPI markdown documentation project options."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/types.ts",
            "line": 559
          },
          "name": "markdown",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.type_safe_api.GeneratedAsyncApiMarkdownDocumentationOptions"
          }
        }
      ],
      "symbolId": "type-safe-api/project/types:GeneratedWebSocketDocumentationOptions"
    },
    "@aws/pdk.type_safe_api.GeneratedWebSocketDocumentationProjects": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws/pdk.type_safe_api.GeneratedWebSocketDocumentationProjects",
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/types.ts",
        "line": 580
      },
      "name": "GeneratedWebSocketDocumentationProjects",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Generated AsyncAPI html documentation project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/types.ts",
            "line": 584
          },
          "name": "html",
          "optional": true,
          "type": {
            "fqn": "projen.Project"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Generated AsyncAPI markdown documentation project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/types.ts",
            "line": 588
          },
          "name": "markdown",
          "optional": true,
          "type": {
            "fqn": "projen.Project"
          }
        }
      ],
      "symbolId": "type-safe-api/project/types:GeneratedWebSocketDocumentationProjects"
    },
    "@aws/pdk.type_safe_api.GeneratedWebSocketLibraryOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws/pdk.type_safe_api.GeneratedWebSocketLibraryOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/types.ts",
        "line": 458
      },
      "name": "GeneratedWebSocketLibraryOptions",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "These override the default inferred options.",
            "stability": "stable",
            "summary": "Options for the generated typescript websocket client library."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/types.ts",
            "line": 462
          },
          "name": "typescriptWebSocketClient",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.type_safe_api.GeneratedTypeScriptWebSocketClientOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "These override the default inferred options.",
            "stability": "stable",
            "summary": "Options for the generated typescript websocket hooks library."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/types.ts",
            "line": 466
          },
          "name": "typescriptWebSocketHooks",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.type_safe_api.GeneratedTypeScriptWebSocketHooksOptions"
          }
        }
      ],
      "symbolId": "type-safe-api/project/types:GeneratedWebSocketLibraryOptions"
    },
    "@aws/pdk.type_safe_api.GeneratedWebSocketLibraryProjects": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Generated websocket library projects."
      },
      "fqn": "@aws/pdk.type_safe_api.GeneratedWebSocketLibraryProjects",
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/types.ts",
        "line": 482
      },
      "name": "GeneratedWebSocketLibraryProjects",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Generated typescript websocket client project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/types.ts",
            "line": 486
          },
          "name": "typescriptWebSocketClient",
          "optional": true,
          "type": {
            "fqn": "projen.typescript.TypeScriptProject"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Generated typescript websocket hooks project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/types.ts",
            "line": 491
          },
          "name": "typescriptWebSocketHooks",
          "optional": true,
          "type": {
            "fqn": "projen.typescript.TypeScriptProject"
          }
        }
      ],
      "symbolId": "type-safe-api/project/types:GeneratedWebSocketLibraryProjects"
    },
    "@aws/pdk.type_safe_api.HandlersConfiguration": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Configuration for generated lambda handlers."
      },
      "fqn": "@aws/pdk.type_safe_api.HandlersConfiguration",
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/type-safe-api-project.ts",
        "line": 94
      },
      "name": "HandlersConfiguration",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Specify multiple languages if you wish to implement different operations\nas AWS Lambda functions in different languages.",
            "stability": "stable",
            "summary": "The languages lambda handlers are written in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/type-safe-api-project.ts",
            "line": 99
          },
          "name": "languages",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.type_safe_api.Language"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Note that only those provided for the specified language will apply.",
            "stability": "stable",
            "summary": "Options for the infrastructure package."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/type-safe-api-project.ts",
            "line": 103
          },
          "name": "options",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.type_safe_api.GeneratedHandlersCodeOptions"
          }
        }
      ],
      "symbolId": "type-safe-api/project/type-safe-api-project:HandlersConfiguration"
    },
    "@aws/pdk.type_safe_api.IamAuthorizer": {
      "assembly": "@aws/pdk",
      "base": "@aws/pdk.type_safe_api.Authorizer",
      "docs": {
        "stability": "stable",
        "summary": "An IAM authorizer."
      },
      "fqn": "@aws/pdk.type_safe_api.IamAuthorizer",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "type-safe-api/construct/authorizers/authorizers.ts",
          "line": 207
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "type-safe-api/construct/authorizers/authorizers.ts",
        "line": 206
      },
      "name": "IamAuthorizer",
      "namespace": "type_safe_api",
      "symbolId": "type-safe-api/construct/authorizers/authorizers:IamAuthorizer"
    },
    "@aws/pdk.type_safe_api.InfrastructureConfiguration": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Configuration for generated infrastructure."
      },
      "fqn": "@aws/pdk.type_safe_api.InfrastructureConfiguration",
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/type-safe-api-project.ts",
        "line": 80
      },
      "name": "InfrastructureConfiguration",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The language to generate the type-safe CDK infrastructure in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/type-safe-api-project.ts",
            "line": 84
          },
          "name": "language",
          "type": {
            "fqn": "@aws/pdk.type_safe_api.Language"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Note that only those provided for the specified language will apply.",
            "stability": "stable",
            "summary": "Options for the infrastructure package."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/type-safe-api-project.ts",
            "line": 88
          },
          "name": "options",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.type_safe_api.GeneratedInfrastructureCodeOptions"
          }
        }
      ],
      "symbolId": "type-safe-api/project/type-safe-api-project:InfrastructureConfiguration"
    },
    "@aws/pdk.type_safe_api.Integration": {
      "abstract": true,
      "assembly": "@aws/pdk",
      "docs": {
        "remarks": "You can extend this to implement your own integration if you like.",
        "stability": "stable",
        "summary": "An integration for an API operation."
      },
      "fqn": "@aws/pdk.type_safe_api.Integration",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "type-safe-api/construct/integrations/integration.ts",
        "line": 221
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Grant permissions for the API to invoke the integration."
          },
          "locationInModule": {
            "filename": "type-safe-api/construct/integrations/integration.ts",
            "line": 229
          },
          "name": "grant",
          "parameters": [
            {
              "name": "_props",
              "type": {
                "fqn": "@aws/pdk.type_safe_api.IntegrationGrantProps"
              }
            }
          ]
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Render the integration into an API Gateway OpenAPI extension."
          },
          "locationInModule": {
            "filename": "type-safe-api/construct/integrations/integration.ts",
            "line": 225
          },
          "name": "render",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws/pdk.type_safe_api.IntegrationRenderProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws/pdk.type_safe_api.ApiGatewayIntegration"
            }
          }
        }
      ],
      "name": "Integration",
      "namespace": "type_safe_api",
      "symbolId": "type-safe-api/construct/integrations/integration:Integration"
    },
    "@aws/pdk.type_safe_api.IntegrationGrantProps": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for granting the API access to invoke the operation."
      },
      "fqn": "@aws/pdk.type_safe_api.IntegrationGrantProps",
      "interfaces": [
        "@aws/pdk.type_safe_api.OperationDetails"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/construct/integrations/integration.ts",
        "line": 199
      },
      "name": "IntegrationGrantProps",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The api to grant permissions for."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/integrations/integration.ts",
            "line": 211
          },
          "name": "api",
          "type": {
            "fqn": "aws-cdk-lib.aws_apigateway.SpecRestApi"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The ID of the operation for which permissions are being granted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/integrations/integration.ts",
            "line": 203
          },
          "name": "operationId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Details about all operations in the API."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/integrations/integration.ts",
            "line": 215
          },
          "name": "operationLookup",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.type_safe_api.OperationDetails"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The scope in which permission resources can be created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/integrations/integration.ts",
            "line": 207
          },
          "name": "scope",
          "type": {
            "fqn": "constructs.Construct"
          }
        }
      ],
      "symbolId": "type-safe-api/construct/integrations/integration:IntegrationGrantProps"
    },
    "@aws/pdk.type_safe_api.IntegrationRenderProps": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for rendering an integration into an API Gateway OpenAPI extension."
      },
      "fqn": "@aws/pdk.type_safe_api.IntegrationRenderProps",
      "interfaces": [
        "@aws/pdk.type_safe_api.OperationDetails"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/construct/integrations/integration.ts",
        "line": 177
      },
      "name": "IntegrationRenderProps",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The ID of the operation being rendered."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/integrations/integration.ts",
            "line": 181
          },
          "name": "operationId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Details about all operations in the API."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/integrations/integration.ts",
            "line": 193
          },
          "name": "operationLookup",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.type_safe_api.OperationDetails"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The scope in which the integration is being rendered."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/integrations/integration.ts",
            "line": 185
          },
          "name": "scope",
          "type": {
            "fqn": "constructs.Construct"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Cross Origin Resource Sharing options for the API."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/integrations/integration.ts",
            "line": 189
          },
          "name": "corsOptions",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.type_safe_api.SerializedCorsOptions"
          }
        }
      ],
      "symbolId": "type-safe-api/construct/integrations/integration:IntegrationRenderProps"
    },
    "@aws/pdk.type_safe_api.IntegrationResponseSet": {
      "abstract": true,
      "assembly": "@aws/pdk",
      "docs": {
        "remarks": "You can extend this to implement your own integration response set",
        "stability": "stable",
        "summary": "A set of integration responses."
      },
      "fqn": "@aws/pdk.type_safe_api.IntegrationResponseSet",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "type-safe-api/construct/integrations/integration-response-set.ts",
        "line": 12
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Render the integration responses into the Integration."
          },
          "locationInModule": {
            "filename": "type-safe-api/construct/integrations/integration-response-set.ts",
            "line": 17
          },
          "name": "render",
          "parameters": [
            {
              "docs": {
                "summary": "the integration render props (same used in the Integration)."
              },
              "name": "props",
              "type": {
                "fqn": "@aws/pdk.type_safe_api.IntegrationRenderProps"
              }
            }
          ],
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "fqn": "@aws/pdk.type_safe_api.ApiGatewayIntegrationResponse"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "IntegrationResponseSet",
      "namespace": "type_safe_api",
      "symbolId": "type-safe-api/construct/integrations/integration-response-set:IntegrationResponseSet"
    },
    "@aws/pdk.type_safe_api.IntegrationResponseSets": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws/pdk.type_safe_api.IntegrationResponseSets",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "type-safe-api/construct/integrations/integration-response-sets.ts",
        "line": 14
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "An integration response set that catches all 4XX and 5XX errors and returns a 500."
          },
          "locationInModule": {
            "filename": "type-safe-api/construct/integrations/integration-response-sets.ts",
            "line": 35
          },
          "name": "catchAll",
          "returns": {
            "type": {
              "fqn": "@aws/pdk.type_safe_api.CatchAllErrorIntegrationResponseSet"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "Response sets are combined in order, so later responses will override previous ones for\noverlapping response status patterns.",
            "stability": "stable",
            "summary": "Combine the provided integration response sets."
          },
          "locationInModule": {
            "filename": "type-safe-api/construct/integrations/integration-response-sets.ts",
            "line": 54
          },
          "name": "composite",
          "parameters": [
            {
              "name": "responseSets",
              "type": {
                "fqn": "@aws/pdk.type_safe_api.IntegrationResponseSet"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws/pdk.type_safe_api.CompositeIntegrationResponseSet"
            }
          },
          "static": true,
          "variadic": true
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-integration-settings-integration-response.html",
            "stability": "stable",
            "summary": "A custom integration response set where you can specify the responses as you wish."
          },
          "locationInModule": {
            "filename": "type-safe-api/construct/integrations/integration-response-sets.ts",
            "line": 43
          },
          "name": "custom",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws/pdk.type_safe_api.CustomIntegrationResponseSetProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws/pdk.type_safe_api.CustomIntegrationResponseSet"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "An integration response set which adds a passthrough for the default response."
          },
          "locationInModule": {
            "filename": "type-safe-api/construct/integrations/integration-response-sets.ts",
            "line": 18
          },
          "name": "defaultPassthrough",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws/pdk.type_safe_api.DefaultPassthroughIntegrationResponseSetProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws/pdk.type_safe_api.DefaultPassthroughIntegrationResponseSet"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "An integration response set that returns the error message from S3 in a \"message\" property of a JSON object for 400, 403, 404 and 500 errors."
          },
          "locationInModule": {
            "filename": "type-safe-api/construct/integrations/integration-response-sets.ts",
            "line": 28
          },
          "name": "s3JsonErrorMessage",
          "returns": {
            "type": {
              "fqn": "@aws/pdk.type_safe_api.S3JsonErrorMessageIntegrationResponseSet"
            }
          },
          "static": true
        }
      ],
      "name": "IntegrationResponseSets",
      "namespace": "type_safe_api",
      "symbolId": "type-safe-api/construct/integrations/integration-response-sets:IntegrationResponseSets"
    },
    "@aws/pdk.type_safe_api.Integrations": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "A collection of integrations to connect API operations with a backend to service requests."
      },
      "fqn": "@aws/pdk.type_safe_api.Integrations",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "type-safe-api/construct/integrations/integrations.ts",
        "line": 11
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "An integration that invokes a lambda function to service the request."
          },
          "locationInModule": {
            "filename": "type-safe-api/construct/integrations/integrations.ts",
            "line": 16
          },
          "name": "lambda",
          "parameters": [
            {
              "docs": {
                "summary": "the function to invoke."
              },
              "name": "lambdaFunction",
              "type": {
                "fqn": "aws-cdk-lib.aws_lambda.IFunction"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws/pdk.type_safe_api.LambdaIntegration"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "An integration that returns a hardcoded response."
          },
          "locationInModule": {
            "filename": "type-safe-api/construct/integrations/integrations.ts",
            "line": 24
          },
          "name": "mock",
          "parameters": [
            {
              "docs": {
                "summary": "the response to return."
              },
              "name": "response",
              "type": {
                "fqn": "@aws/pdk.type_safe_api.MockIntegrationResponse"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws/pdk.type_safe_api.MockIntegration"
            }
          },
          "static": true
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/apigateway/latest/developerguide/integrating-api-with-aws-services-s3.html",
            "stability": "stable",
            "summary": "An integration that can read/write to an S3 bucket."
          },
          "locationInModule": {
            "filename": "type-safe-api/construct/integrations/integrations.ts",
            "line": 33
          },
          "name": "s3",
          "parameters": [
            {
              "docs": {
                "summary": "the integration props."
              },
              "name": "props",
              "type": {
                "fqn": "@aws/pdk.type_safe_api.S3IntegrationProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws/pdk.type_safe_api.S3Integration"
            }
          },
          "static": true
        }
      ],
      "name": "Integrations",
      "namespace": "type_safe_api",
      "symbolId": "type-safe-api/construct/integrations/integrations:Integrations"
    },
    "@aws/pdk.type_safe_api.JavaProjectOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "JavaProjectOptions."
      },
      "fqn": "@aws/pdk.type_safe_api.JavaProjectOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/java-project-options.ts",
        "line": 7
      },
      "name": "JavaProjectOptions",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "featured": "true"
            },
            "default": "\"my-app\"",
            "remarks": "Although\nthe groupId is important, people within the group will rarely mention the\ngroupId in discussion (they are often all be the same ID, such as the\nMojoHaus project groupId: org.codehaus.mojo). It, along with the groupId,\ncreates a key that separates this project from every other project in the\nworld (at least, it should :) ). Along with the groupId, the artifactId\nfully defines the artifact's living quarters within the repository. In the\ncase of the above project, my-project lives in\n$M2_REPO/org/codehaus/mojo/my-project.",
            "stability": "experimental",
            "summary": "The artifactId is generally the name that the project is known by."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/java-project-options.ts",
            "line": 164
          },
          "name": "artifactId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- auto approve is disabled",
            "stability": "experimental",
            "summary": "Enable and configure the 'auto approve' workflow."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/java-project-options.ts",
            "line": 280
          },
          "name": "autoApproveOptions",
          "optional": true,
          "type": {
            "fqn": "projen.github.AutoApproveOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "Has no effect if `github.mergify`\nis set to false.",
            "stability": "experimental",
            "summary": "Enable automatic merging on GitHub."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/java-project-options.ts",
            "line": 274
          },
          "name": "autoMerge",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- see defaults in `AutoMergeOptions`",
            "remarks": "Has no effect if\n`github.mergify` or `autoMerge` is set to false.",
            "stability": "experimental",
            "summary": "Configure options for automatic merging on GitHub."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/java-project-options.ts",
            "line": 266
          },
          "name": "autoMergeOptions",
          "optional": true,
          "type": {
            "fqn": "projen.github.AutoMergeOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- true, but false for subprojects",
            "stability": "experimental",
            "summary": "Add a `clobber` task which resets the repo to origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/java-project-options.ts",
            "line": 258
          },
          "name": "clobber",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Whether to commit the managed files by default."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/java-project-options.ts",
            "line": 349
          },
          "name": "commitGenerated",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- defaults",
            "stability": "experimental",
            "summary": "Compile options."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/java-project-options.ts",
            "line": 83
          },
          "name": "compileOptions",
          "optional": true,
          "type": {
            "fqn": "projen.java.MavenCompileOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "featured": "true"
            },
            "default": "[]",
            "remarks": "Additional dependencies can be added via `project.addDependency()`.",
            "stability": "experimental",
            "summary": "List of runtime dependencies for this project. Dependencies use the format: `<groupId>/<artifactId>@<semver>`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/java-project-options.ts",
            "line": 77
          },
          "name": "deps",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "featured": "true"
            },
            "default": "undefined",
            "remarks": "Although this should not replace\nformal documentation, a quick comment to any readers of the POM is always\nhelpful.",
            "stability": "experimental",
            "summary": "Description of a project is always good."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/java-project-options.ts",
            "line": 115
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Add a VSCode development environment (used for GitHub Codespaces)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/java-project-options.ts",
            "line": 252
          },
          "name": "devContainer",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"dist/java\"",
            "stability": "experimental",
            "summary": "Final artifact output directory."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/java-project-options.ts",
            "line": 67
          },
          "name": "distdir",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "Enabled by default for root projects. Disabled for non-root projects.",
            "stability": "experimental",
            "summary": "Enable GitHub integration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/java-project-options.ts",
            "line": 246
          },
          "name": "github",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- see GitHubOptions",
            "stability": "experimental",
            "summary": "Options for GitHub integration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/java-project-options.ts",
            "line": 239
          },
          "name": "githubOptions",
          "optional": true,
          "type": {
            "fqn": "projen.github.GitHubOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Configuration options for .gitignore file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/java-project-options.ts",
            "line": 343
          },
          "name": "gitIgnoreOptions",
          "optional": true,
          "type": {
            "fqn": "projen.IgnoreFileOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Configuration options for git."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/java-project-options.ts",
            "line": 338
          },
          "name": "gitOptions",
          "optional": true,
          "type": {
            "fqn": "projen.GitOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Add a Gitpod development environment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/java-project-options.ts",
            "line": 233
          },
          "name": "gitpod",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "featured": "true"
            },
            "default": "\"org.acme\"",
            "remarks": "For example,\nall core Maven artifacts do (well, should) live under the groupId\norg.apache.maven. Group ID's do not necessarily use the dot notation, for\nexample, the junit project. Note that the dot-notated groupId does not have\nto correspond to the package structure that the project contains. It is,\nhowever, a good practice to follow. When stored within a repository, the\ngroup acts much like the Java packaging structure does in an operating\nsystem. The dots are replaced by OS specific directory separators (such as\n'/' in Unix) which becomes a relative directory structure from the base\nrepository. In the example given, the org.codehaus.mojo group lives within\nthe directory $M2_REPO/org/codehaus/mojo.",
            "stability": "experimental",
            "summary": "This is generally unique amongst an organization or a project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/java-project-options.ts",
            "line": 148
          },
          "name": "groupId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Include junit tests."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/java-project-options.ts",
            "line": 61
          },
          "name": "junit",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- defaults",
            "stability": "experimental",
            "summary": "junit options."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/java-project-options.ts",
            "line": 55
          },
          "name": "junitOptions",
          "optional": true,
          "type": {
            "fqn": "projen.java.JunitOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "{}",
            "stability": "experimental",
            "summary": "Configure logging options such as verbosity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/java-project-options.ts",
            "line": 333
          },
          "name": "logging",
          "optional": true,
          "type": {
            "fqn": "projen.LoggerOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "deprecated": "use `githubOptions.mergify` instead",
            "stability": "deprecated",
            "summary": "Whether mergify should be enabled on this repository or not."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/java-project-options.ts",
            "line": 227
          },
          "name": "mergify",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default options",
            "deprecated": "use `githubOptions.mergifyOptions` instead",
            "stability": "deprecated",
            "summary": "Options for mergify."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/java-project-options.ts",
            "line": 220
          },
          "name": "mergifyOptions",
          "optional": true,
          "type": {
            "fqn": "projen.github.MergifyOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "featured": "true"
            },
            "default": "$BASEDIR",
            "stability": "experimental",
            "summary": "This is the name of your project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/java-project-options.ts",
            "line": 356
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\".\"",
            "remarks": "If this project has a parent, this directory is relative to the parent\ndirectory and it cannot be the same as the parent or any of it's other\nsubprojects.",
            "stability": "experimental",
            "summary": "The root directory of the project. Relative to this directory, all files are synthesized."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/java-project-options.ts",
            "line": 327
          },
          "name": "outdir",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"jar\"",
            "stability": "experimental",
            "summary": "Project packaging format."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/java-project-options.ts",
            "line": 105
          },
          "name": "packaging",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- defaults",
            "stability": "experimental",
            "summary": "Packaging options."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/java-project-options.ts",
            "line": 49
          },
          "name": "packagingOptions",
          "optional": true,
          "type": {
            "fqn": "projen.java.MavenPackagingOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The parent project, if this project is part of a bigger project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/java-project-options.ts",
            "line": 316
          },
          "name": "parent",
          "optional": true,
          "type": {
            "fqn": "projen.Project"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "featured": "true"
            },
            "default": "undefined",
            "stability": "experimental",
            "summary": "A Parent Pom can be used to have a child project inherit properties/plugins/ect in order to reduce duplication and keep standards across a large amount of repos."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/java-project-options.ts",
            "line": 99
          },
          "name": "parentPom",
          "optional": true,
          "type": {
            "fqn": "projen.java.ParentPom"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "ProjectType.UNKNOWN",
            "deprecated": "no longer supported at the base project level",
            "stability": "deprecated",
            "summary": "Which type of project this is (library/app)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/java-project-options.ts",
            "line": 213
          },
          "name": "projectType",
          "optional": true,
          "type": {
            "fqn": "projen.ProjectType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"npx projen\"",
            "remarks": "Can be used to customize in special environments.",
            "stability": "experimental",
            "summary": "The shell command to use in order to run the projen CLI."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/java-project-options.ts",
            "line": 311
          },
          "name": "projenCommand",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- use a personal access token named PROJEN_GITHUB_TOKEN",
            "stability": "experimental",
            "summary": "Choose a method of providing GitHub API access for projen workflows."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/java-project-options.ts",
            "line": 206
          },
          "name": "projenCredentials",
          "optional": true,
          "type": {
            "fqn": "projen.github.GithubCredentials"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "This will install `projen` as a java dependency and will add a `synth` task which\nwill compile & execute `main()` from `src/main/java/projenrc.java`.",
            "stability": "experimental",
            "summary": "Use projenrc in java."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/java-project-options.ts",
            "line": 43
          },
          "name": "projenrcJava",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default options",
            "stability": "experimental",
            "summary": "Options related to projenrc in java."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/java-project-options.ts",
            "line": 35
          },
          "name": "projenrcJavaOptions",
          "optional": true,
          "type": {
            "fqn": "projen.java.ProjenrcOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Generate (once) .projenrc.json (in JSON). Set to `false` in order to disable .projenrc.json generation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/java-project-options.ts",
            "line": 304
          },
          "name": "projenrcJson",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default options",
            "stability": "experimental",
            "summary": "Options for .projenrc.json."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/java-project-options.ts",
            "line": 298
          },
          "name": "projenrcJsonOptions",
          "optional": true,
          "type": {
            "fqn": "projen.ProjenrcJsonOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"PROJEN_GITHUB_TOKEN\"",
            "deprecated": "use `projenCredentials`",
            "remarks": "This token needs to have the `repo`, `workflows`\nand `packages` scope.",
            "stability": "deprecated",
            "summary": "The name of a secret which includes a GitHub Personal Access Token to be used by projen workflows."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/java-project-options.ts",
            "line": 200
          },
          "name": "projenTokenSecret",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- { filename: 'README.md', contents: '# replace this' }",
            "stability": "experimental",
            "summary": "The README setup."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/java-project-options.ts",
            "line": 191
          },
          "name": "readme",
          "optional": true,
          "type": {
            "fqn": "projen.SampleReadmeProps"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Use renovatebot to handle dependency upgrades."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/java-project-options.ts",
            "line": 292
          },
          "name": "renovatebot",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default options",
            "stability": "experimental",
            "summary": "Options for renovatebot."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/java-project-options.ts",
            "line": 286
          },
          "name": "renovatebotOptions",
          "optional": true,
          "type": {
            "fqn": "projen.RenovatebotOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Include sample code and test if the relevant directories don't exist."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/java-project-options.ts",
            "line": 19
          },
          "name": "sample",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"org.acme\"",
            "stability": "experimental",
            "summary": "The java package to use for the code sample."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/java-project-options.ts",
            "line": 13
          },
          "name": "sampleJavaPackage",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "See `staleOptions` for options.",
            "stability": "experimental",
            "summary": "Auto-close of stale issues and pull request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/java-project-options.ts",
            "line": 185
          },
          "name": "stale",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- see defaults in `StaleOptions`",
            "remarks": "To disable set `stale` to `false`.",
            "stability": "experimental",
            "summary": "Auto-close stale issues and pull requests."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/java-project-options.ts",
            "line": 178
          },
          "name": "staleOptions",
          "optional": true,
          "type": {
            "fqn": "projen.github.StaleOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "featured": "true"
            },
            "default": "[]",
            "remarks": "Additional dependencies can be added via `project.addTestDependency()`.",
            "stability": "experimental",
            "summary": "List of test dependencies for this project. Dependencies use the format: `<groupId>/<artifactId>@<semver>`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/java-project-options.ts",
            "line": 29
          },
          "name": "testDeps",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "featured": "true"
            },
            "default": "undefined",
            "remarks": "This is a nice gesture for\nprojects users, however, so that they know where the project lives.",
            "stability": "experimental",
            "summary": "The URL, like the name, is not required."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/java-project-options.ts",
            "line": 92
          },
          "name": "url",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "featured": "true"
            },
            "default": "\"0.1.0\"",
            "remarks": "groupId:artifactId denotes a\nsingle project but they cannot delineate which incarnation of that project\nwe are talking about. Do we want the junit:junit of 2018 (version 4.12), or\nof 2007 (version 3.8.2)? In short: code changes, those changes should be\nversioned, and this element keeps those versions in line. It is also used\nwithin an artifact's repository to separate versions from each other.\nmy-project version 1.0 files live in the directory structure\n$M2_REPO/org/codehaus/mojo/my-project/1.0.",
            "stability": "experimental",
            "summary": "This is the last piece of the naming puzzle."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/java-project-options.ts",
            "line": 130
          },
          "name": "version",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "Enabled by default for root projects. Disabled for non-root projects.",
            "stability": "experimental",
            "summary": "Enable VSCode integration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/java-project-options.ts",
            "line": 171
          },
          "name": "vscode",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "type-safe-api/project/java-project-options:JavaProjectOptions"
    },
    "@aws/pdk.type_safe_api.JavaVersion": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "Versions of java."
      },
      "fqn": "@aws/pdk.type_safe_api.JavaVersion",
      "kind": "enum",
      "locationInModule": {
        "filename": "type-safe-api/project/languages.ts",
        "line": 24
      },
      "members": [
        {
          "docs": {
            "stability": "stable"
          },
          "name": "JAVA_8"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "JAVA_11"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "JAVA_17"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "JAVA_21"
        }
      ],
      "name": "JavaVersion",
      "namespace": "type_safe_api",
      "symbolId": "type-safe-api/project/languages:JavaVersion"
    },
    "@aws/pdk.type_safe_api.LambdaIntegration": {
      "assembly": "@aws/pdk",
      "base": "@aws/pdk.type_safe_api.Integration",
      "docs": {
        "stability": "stable",
        "summary": "A lambda integration."
      },
      "fqn": "@aws/pdk.type_safe_api.LambdaIntegration",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "type-safe-api/construct/integrations/lambda.ts",
          "line": 20
        },
        "parameters": [
          {
            "name": "lambdaFunction",
            "type": {
              "fqn": "aws-cdk-lib.aws_lambda.IFunction"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "type-safe-api/construct/integrations/lambda.ts",
        "line": 17
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Grant API Gateway permissions to invoke the lambda."
          },
          "locationInModule": {
            "filename": "type-safe-api/construct/integrations/lambda.ts",
            "line": 49
          },
          "name": "grant",
          "overrides": "@aws/pdk.type_safe_api.Integration",
          "parameters": [
            {
              "name": "__0",
              "type": {
                "fqn": "@aws/pdk.type_safe_api.IntegrationGrantProps"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Render the lambda integration as a snippet of OpenAPI."
          },
          "locationInModule": {
            "filename": "type-safe-api/construct/integrations/lambda.ts",
            "line": 33
          },
          "name": "render",
          "overrides": "@aws/pdk.type_safe_api.Integration",
          "parameters": [
            {
              "name": "_props",
              "type": {
                "fqn": "@aws/pdk.type_safe_api.IntegrationRenderProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws/pdk.type_safe_api.ApiGatewayIntegration"
            }
          }
        }
      ],
      "name": "LambdaIntegration",
      "namespace": "type_safe_api",
      "symbolId": "type-safe-api/construct/integrations/lambda:LambdaIntegration"
    },
    "@aws/pdk.type_safe_api.Language": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "Supported languages for runtimes and infrastructure."
      },
      "fqn": "@aws/pdk.type_safe_api.Language",
      "kind": "enum",
      "locationInModule": {
        "filename": "type-safe-api/project/languages.ts",
        "line": 6
      },
      "members": [
        {
          "docs": {
            "stability": "stable"
          },
          "name": "TYPESCRIPT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "PYTHON"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "JAVA"
        }
      ],
      "name": "Language",
      "namespace": "type_safe_api",
      "symbolId": "type-safe-api/project/languages:Language"
    },
    "@aws/pdk.type_safe_api.Library": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "Supported libraries for code generation."
      },
      "fqn": "@aws/pdk.type_safe_api.Library",
      "kind": "enum",
      "locationInModule": {
        "filename": "type-safe-api/project/languages.ts",
        "line": 43
      },
      "members": [
        {
          "docs": {
            "stability": "stable"
          },
          "name": "TYPESCRIPT_REACT_QUERY_HOOKS"
        }
      ],
      "name": "Library",
      "namespace": "type_safe_api",
      "symbolId": "type-safe-api/project/languages:Library"
    },
    "@aws/pdk.type_safe_api.LibraryConfiguration": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Configuration for generated libraries."
      },
      "fqn": "@aws/pdk.type_safe_api.LibraryConfiguration",
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/type-safe-api-project.ts",
        "line": 123
      },
      "name": "LibraryConfiguration",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The library to generate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/type-safe-api-project.ts",
            "line": 127
          },
          "name": "libraries",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.type_safe_api.Library"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Note that only options for the specified libraries will apply",
            "stability": "stable",
            "summary": "Options for the generated library package."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/type-safe-api-project.ts",
            "line": 131
          },
          "name": "options",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.type_safe_api.GeneratedLibraryOptions"
          }
        }
      ],
      "symbolId": "type-safe-api/project/type-safe-api-project:LibraryConfiguration"
    },
    "@aws/pdk.type_safe_api.ManagedRule": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws/pdk.type_safe_api.ManagedRule",
      "interfaces": [
        "@aws/pdk.type_safe_api.PartialManagedRuleGroupStatementProperty"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/construct/waf/types.ts",
        "line": 13
      },
      "name": "ManagedRule",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "deprecated": "use the `vendorName` property instead. This property will be removed in the next major release.",
            "remarks": "You use this, along with the rule group name, to identify the rule group.",
            "stability": "deprecated",
            "summary": "The name of the managed rule group vendor."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/waf/types.ts",
            "line": 19
          },
          "name": "vendor",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "You use this, along with the rule group name, to identify a rule group.\n\nPreferred to the property `vendor`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-managedrulegroupstatement.html#cfn-wafv2-webacl-managedrulegroupstatement-vendorname",
            "stability": "stable",
            "summary": "The name of the managed rule group vendor."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/waf/types.ts",
            "line": 29
          },
          "name": "vendorName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "type-safe-api/construct/waf/types:ManagedRule"
    },
    "@aws/pdk.type_safe_api.MethodAndPath": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Structure to contain an API operation's method and path."
      },
      "fqn": "@aws/pdk.type_safe_api.MethodAndPath",
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/construct/spec/api-gateway-integrations-types.ts",
        "line": 60
      },
      "name": "MethodAndPath",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The http method of this operation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/spec/api-gateway-integrations-types.ts",
            "line": 68
          },
          "name": "method",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The path of this operation in the api."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/spec/api-gateway-integrations-types.ts",
            "line": 64
          },
          "name": "path",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "type-safe-api/construct/spec/api-gateway-integrations-types:MethodAndPath"
    },
    "@aws/pdk.type_safe_api.MockIntegration": {
      "assembly": "@aws/pdk",
      "base": "@aws/pdk.type_safe_api.Integration",
      "docs": {
        "see": "https://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-mock-integration.html",
        "stability": "stable",
        "summary": "A mock integration to return a hardcoded response."
      },
      "fqn": "@aws/pdk.type_safe_api.MockIntegration",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "type-safe-api/construct/integrations/mock.ts",
          "line": 29
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws/pdk.type_safe_api.MockIntegrationResponse"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "type-safe-api/construct/integrations/mock.ts",
        "line": 28
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Render the integration into an API Gateway OpenAPI extension."
          },
          "locationInModule": {
            "filename": "type-safe-api/construct/integrations/mock.ts",
            "line": 33
          },
          "name": "render",
          "overrides": "@aws/pdk.type_safe_api.Integration",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws/pdk.type_safe_api.IntegrationRenderProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws/pdk.type_safe_api.ApiGatewayIntegration"
            }
          }
        }
      ],
      "name": "MockIntegration",
      "namespace": "type_safe_api",
      "symbolId": "type-safe-api/construct/integrations/mock:MockIntegration"
    },
    "@aws/pdk.type_safe_api.MockIntegrationResponse": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for a mock integration response."
      },
      "fqn": "@aws/pdk.type_safe_api.MockIntegrationResponse",
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/construct/integrations/mock.ts",
        "line": 13
      },
      "name": "MockIntegrationResponse",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "HTTP response status code."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/integrations/mock.ts",
            "line": 17
          },
          "name": "statusCode",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Response body."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/integrations/mock.ts",
            "line": 21
          },
          "name": "body",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "type-safe-api/construct/integrations/mock:MockIntegrationResponse"
    },
    "@aws/pdk.type_safe_api.MockResponseDataGenerationOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for generating mock data."
      },
      "fqn": "@aws/pdk.type_safe_api.MockResponseDataGenerationOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/types.ts",
        "line": 141
      },
      "name": "MockResponseDataGenerationOptions",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Set to true to disable generating mock data."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/types.ts",
            "line": 146
          },
          "name": "disable",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "en",
            "see": "https://fakerjs.dev/guide/localization.html#available-locales",
            "stability": "stable",
            "summary": "Locale of generated data."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/types.ts",
            "line": 152
          },
          "name": "locale",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "3",
            "stability": "stable",
            "summary": "Maximum length of generated arrays."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/types.ts",
            "line": 157
          },
          "name": "maxArrayLength",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "1337",
            "stability": "stable",
            "summary": "Seed for faker to generate data with."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/types.ts",
            "line": 162
          },
          "name": "seed",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "type-safe-api/project/types:MockResponseDataGenerationOptions"
    },
    "@aws/pdk.type_safe_api.MockResponseGenerationOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for generating mock data."
      },
      "fqn": "@aws/pdk.type_safe_api.MockResponseGenerationOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/types.ts",
        "line": 168
      },
      "name": "MockResponseGenerationOptions",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Options for the generated mock response data."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/types.ts",
            "line": 172
          },
          "name": "mockDataOptions",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.type_safe_api.MockResponseDataGenerationOptions"
          }
        }
      ],
      "symbolId": "type-safe-api/project/types:MockResponseGenerationOptions"
    },
    "@aws/pdk.type_safe_api.ModelConfiguration": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Configuration for modelling the API."
      },
      "fqn": "@aws/pdk.type_safe_api.ModelConfiguration",
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/type-safe-api-project.ts",
        "line": 51
      },
      "name": "ModelConfiguration",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The language the API model is defined in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/type-safe-api-project.ts",
            "line": 55
          },
          "name": "language",
          "type": {
            "fqn": "@aws/pdk.type_safe_api.ModelLanguage"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Options for the API model."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/type-safe-api-project.ts",
            "line": 59
          },
          "name": "options",
          "type": {
            "fqn": "@aws/pdk.type_safe_api.ModelOptions"
          }
        }
      ],
      "symbolId": "type-safe-api/project/type-safe-api-project:ModelConfiguration"
    },
    "@aws/pdk.type_safe_api.ModelLanguage": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "The model definition language."
      },
      "fqn": "@aws/pdk.type_safe_api.ModelLanguage",
      "kind": "enum",
      "locationInModule": {
        "filename": "type-safe-api/project/types.ts",
        "line": 22
      },
      "members": [
        {
          "docs": {
            "see": "https://smithy.io/2.0/",
            "stability": "stable",
            "summary": "Smithy."
          },
          "name": "SMITHY"
        },
        {
          "docs": {
            "see": "https://www.openapis.org/",
            "stability": "stable",
            "summary": "OpenAPI."
          },
          "name": "OPENAPI"
        },
        {
          "docs": {
            "see": "https://typespec.io/",
            "stability": "stable",
            "summary": "TypeSpec."
          },
          "name": "TYPESPEC"
        }
      ],
      "name": "ModelLanguage",
      "namespace": "type_safe_api",
      "symbolId": "type-safe-api/project/types:ModelLanguage"
    },
    "@aws/pdk.type_safe_api.ModelOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for models."
      },
      "fqn": "@aws/pdk.type_safe_api.ModelOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/types.ts",
        "line": 89
      },
      "name": "ModelOptions",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Options for the OpenAPI model - required when model language is OPENAPI."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/types.ts",
            "line": 98
          },
          "name": "openapi",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.type_safe_api.OpenApiModelOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Options for the Smithy model - required when model language is SMITHY."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/types.ts",
            "line": 93
          },
          "name": "smithy",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.type_safe_api.SmithyModelOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Options for the TypeSpec model - required when the model language is TYPESPEC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/types.ts",
            "line": 103
          },
          "name": "typeSpec",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.type_safe_api.TypeSpecModelOptions"
          }
        }
      ],
      "symbolId": "type-safe-api/project/types:ModelOptions"
    },
    "@aws/pdk.type_safe_api.ModelProject": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Model project references."
      },
      "fqn": "@aws/pdk.type_safe_api.ModelProject",
      "interfaces": [
        "@aws/pdk.type_safe_api.ModelProjectDetails"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/types.ts",
        "line": 406
      },
      "name": "ModelProject",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Will be defined if the model language is OpenAPI",
            "stability": "stable",
            "summary": "Reference to the OpenAPI model project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/types.ts",
            "line": 415
          },
          "name": "openapi",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.type_safe_api.OpenApiModelProject"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Will be defined if the model language is Smithy",
            "stability": "stable",
            "summary": "Reference to the Smithy model project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/types.ts",
            "line": 410
          },
          "name": "smithy",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.type_safe_api.SmithyModelProject"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Will be defined if the model language is TypeSpec",
            "stability": "stable",
            "summary": "Reference to the TypeSpec model project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/types.ts",
            "line": 420
          },
          "name": "typeSpec",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.type_safe_api.TypeSpecModelProject"
          }
        }
      ],
      "symbolId": "type-safe-api/project/types:ModelProject"
    },
    "@aws/pdk.type_safe_api.ModelProjectDetails": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Common details for API model projects."
      },
      "fqn": "@aws/pdk.type_safe_api.ModelProjectDetails",
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/types.ts",
        "line": 388
      },
      "name": "ModelProjectDetails",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Name of the API."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/types.ts",
            "line": 392
          },
          "name": "apiName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Directory of the model project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/types.ts",
            "line": 400
          },
          "name": "outdir",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Name of the bundled OpenAPI specification file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/types.ts",
            "line": 396
          },
          "name": "parsedSpecFile",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "type-safe-api/project/types:ModelProjectDetails"
    },
    "@aws/pdk.type_safe_api.NodeVersion": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "Versions of node."
      },
      "fqn": "@aws/pdk.type_safe_api.NodeVersion",
      "kind": "enum",
      "locationInModule": {
        "filename": "type-safe-api/project/languages.ts",
        "line": 15
      },
      "members": [
        {
          "docs": {
            "stability": "stable"
          },
          "name": "NODE_18"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "NODE_20"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "NODE_22"
        }
      ],
      "name": "NodeVersion",
      "namespace": "type_safe_api",
      "symbolId": "type-safe-api/project/languages:NodeVersion"
    },
    "@aws/pdk.type_safe_api.NoneAuthorizer": {
      "assembly": "@aws/pdk",
      "base": "@aws/pdk.type_safe_api.Authorizer",
      "docs": {
        "stability": "stable",
        "summary": "No authorizer."
      },
      "fqn": "@aws/pdk.type_safe_api.NoneAuthorizer",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "type-safe-api/construct/authorizers/authorizers.ts",
          "line": 195
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "type-safe-api/construct/authorizers/authorizers.ts",
        "line": 194
      },
      "name": "NoneAuthorizer",
      "namespace": "type_safe_api",
      "symbolId": "type-safe-api/construct/authorizers/authorizers:NoneAuthorizer"
    },
    "@aws/pdk.type_safe_api.OpenApiAsyncDefinition": {
      "assembly": "@aws/pdk",
      "base": "@aws/pdk.type_safe_api.OpenApiProjectDefinition",
      "docs": {
        "stability": "stable",
        "summary": "The OpenAPI Spec."
      },
      "fqn": "@aws/pdk.type_safe_api.OpenApiAsyncDefinition",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "type-safe-api/project/model/openapi/open-api-async-definition.ts",
          "line": 19
        },
        "parameters": [
          {
            "name": "project",
            "type": {
              "fqn": "projen.Project"
            }
          },
          {
            "name": "options",
            "type": {
              "fqn": "@aws/pdk.type_safe_api.OpenApiAsyncDefinitionOptions"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "type-safe-api/project/model/openapi/open-api-async-definition.ts",
        "line": 18
      },
      "name": "OpenApiAsyncDefinition",
      "namespace": "type_safe_api",
      "symbolId": "type-safe-api/project/model/openapi/open-api-async-definition:OpenApiAsyncDefinition"
    },
    "@aws/pdk.type_safe_api.OpenApiAsyncDefinitionOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for the OpenAPI Spec."
      },
      "fqn": "@aws/pdk.type_safe_api.OpenApiAsyncDefinitionOptions",
      "interfaces": [
        "@aws/pdk.type_safe_api.OpenApiProjectDefinitionOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/model/openapi/open-api-async-definition.ts",
        "line": 12
      },
      "name": "OpenApiAsyncDefinitionOptions",
      "namespace": "type_safe_api",
      "symbolId": "type-safe-api/project/model/openapi/open-api-async-definition:OpenApiAsyncDefinitionOptions"
    },
    "@aws/pdk.type_safe_api.OpenApiAsyncModelProject": {
      "assembly": "@aws/pdk",
      "base": "projen.Project",
      "docs": {
        "stability": "stable",
        "summary": "Project for defining an OpenAPI model for a WebSocket API."
      },
      "fqn": "@aws/pdk.type_safe_api.OpenApiAsyncModelProject",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "type-safe-api/project/model/openapi/open-api-async-model-project.ts",
          "line": 42
        },
        "parameters": [
          {
            "name": "options",
            "type": {
              "fqn": "@aws/pdk.type_safe_api.OpenApiAsyncModelProjectOptions"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "type-safe-api/project/model/openapi/open-api-async-model-project.ts",
        "line": 32
      },
      "name": "OpenApiAsyncModelProject",
      "namespace": "type_safe_api",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Name of the API."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/model/openapi/open-api-async-model-project.ts",
            "line": 36
          },
          "name": "apiName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "OpenAPI specification component."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/model/openapi/open-api-async-model-project.ts",
            "line": 40
          },
          "name": "definition",
          "type": {
            "fqn": "@aws/pdk.type_safe_api.OpenApiAsyncDefinition"
          }
        }
      ],
      "symbolId": "type-safe-api/project/model/openapi/open-api-async-model-project:OpenApiAsyncModelProject"
    },
    "@aws/pdk.type_safe_api.OpenApiAsyncModelProjectOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for an OpenAPI WebSocket API model."
      },
      "fqn": "@aws/pdk.type_safe_api.OpenApiAsyncModelProjectOptions",
      "interfaces": [
        "projen.ProjectOptions",
        "@aws/pdk.type_safe_api.OpenApiAsyncDefinitionOptions",
        "@aws/pdk.type_safe_api.TypeSafeApiModelBuildOutputOptions",
        "@aws/pdk.type_safe_api.TypeSafeApiAsyncModelBuildOutputOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/model/openapi/open-api-async-model-project.ts",
        "line": 23
      },
      "name": "OpenApiAsyncModelProjectOptions",
      "namespace": "type_safe_api",
      "symbolId": "type-safe-api/project/model/openapi/open-api-async-model-project:OpenApiAsyncModelProjectOptions"
    },
    "@aws/pdk.type_safe_api.OpenApiDefinition": {
      "assembly": "@aws/pdk",
      "base": "@aws/pdk.type_safe_api.OpenApiProjectDefinition",
      "docs": {
        "stability": "stable",
        "summary": "The OpenAPI Spec."
      },
      "fqn": "@aws/pdk.type_safe_api.OpenApiDefinition",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "type-safe-api/project/model/openapi/open-api-definition.ts",
          "line": 19
        },
        "parameters": [
          {
            "name": "project",
            "type": {
              "fqn": "projen.Project"
            }
          },
          {
            "name": "options",
            "type": {
              "fqn": "@aws/pdk.type_safe_api.OpenApiDefinitionOptions"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "type-safe-api/project/model/openapi/open-api-definition.ts",
        "line": 18
      },
      "name": "OpenApiDefinition",
      "namespace": "type_safe_api",
      "symbolId": "type-safe-api/project/model/openapi/open-api-definition:OpenApiDefinition"
    },
    "@aws/pdk.type_safe_api.OpenApiDefinitionOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for the OpenAPI Spec."
      },
      "fqn": "@aws/pdk.type_safe_api.OpenApiDefinitionOptions",
      "interfaces": [
        "@aws/pdk.type_safe_api.OpenApiProjectDefinitionOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/model/openapi/open-api-definition.ts",
        "line": 12
      },
      "name": "OpenApiDefinitionOptions",
      "namespace": "type_safe_api",
      "symbolId": "type-safe-api/project/model/openapi/open-api-definition:OpenApiDefinitionOptions"
    },
    "@aws/pdk.type_safe_api.OpenApiModelOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for the OpenAPI model."
      },
      "fqn": "@aws/pdk.type_safe_api.OpenApiModelOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/types.ts",
        "line": 67
      },
      "name": "OpenApiModelOptions",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The title in the OpenAPI specification."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/types.ts",
            "line": 71
          },
          "name": "title",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "type-safe-api/project/types:OpenApiModelOptions"
    },
    "@aws/pdk.type_safe_api.OpenApiModelProject": {
      "assembly": "@aws/pdk",
      "base": "projen.Project",
      "docs": {
        "stability": "stable",
        "summary": "Project for defining an OpenAPI model for a REST API."
      },
      "fqn": "@aws/pdk.type_safe_api.OpenApiModelProject",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "type-safe-api/project/model/openapi/open-api-model-project.ts",
          "line": 35
        },
        "parameters": [
          {
            "name": "options",
            "type": {
              "fqn": "@aws/pdk.type_safe_api.OpenApiModelProjectOptions"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "type-safe-api/project/model/openapi/open-api-model-project.ts",
        "line": 24
      },
      "name": "OpenApiModelProject",
      "namespace": "type_safe_api",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Name of the API."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/model/openapi/open-api-model-project.ts",
            "line": 28
          },
          "name": "apiName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "OpenAPI specification component."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/model/openapi/open-api-model-project.ts",
            "line": 33
          },
          "name": "definition",
          "type": {
            "fqn": "@aws/pdk.type_safe_api.OpenApiDefinition"
          }
        }
      ],
      "symbolId": "type-safe-api/project/model/openapi/open-api-model-project:OpenApiModelProject"
    },
    "@aws/pdk.type_safe_api.OpenApiModelProjectOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws/pdk.type_safe_api.OpenApiModelProjectOptions",
      "interfaces": [
        "projen.ProjectOptions",
        "@aws/pdk.type_safe_api.OpenApiDefinitionOptions",
        "@aws/pdk.type_safe_api.TypeSafeApiModelBuildOutputOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/model/openapi/open-api-model-project.ts",
        "line": 16
      },
      "name": "OpenApiModelProjectOptions",
      "namespace": "type_safe_api",
      "symbolId": "type-safe-api/project/model/openapi/open-api-model-project:OpenApiModelProjectOptions"
    },
    "@aws/pdk.type_safe_api.OpenApiProjectDefinition": {
      "assembly": "@aws/pdk",
      "base": "projen.Component",
      "docs": {
        "stability": "stable",
        "summary": "The OpenAPI Spec."
      },
      "fqn": "@aws/pdk.type_safe_api.OpenApiProjectDefinition",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "type-safe-api/project/model/openapi/open-api-project-definition.ts",
          "line": 31
        },
        "parameters": [
          {
            "name": "project",
            "type": {
              "fqn": "projen.Project"
            }
          },
          {
            "name": "_options",
            "type": {
              "fqn": "@aws/pdk.type_safe_api.OpenApiProjectDefinitionOptions"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "type-safe-api/project/model/openapi/open-api-project-definition.ts",
        "line": 24
      },
      "name": "OpenApiProjectDefinition",
      "namespace": "type_safe_api",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Path to the root OpenAPI specification file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/model/openapi/open-api-project-definition.ts",
            "line": 28
          },
          "name": "openApiSpecificationPath",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "type-safe-api/project/model/openapi/open-api-project-definition:OpenApiProjectDefinition"
    },
    "@aws/pdk.type_safe_api.OpenApiProjectDefinitionOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for the OpenAPI Spec."
      },
      "fqn": "@aws/pdk.type_safe_api.OpenApiProjectDefinitionOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/model/openapi/open-api-project-definition.ts",
        "line": 10
      },
      "name": "OpenApiProjectDefinitionOptions",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Options for the openapi model."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/model/openapi/open-api-project-definition.ts",
            "line": 14
          },
          "name": "openApiOptions",
          "type": {
            "fqn": "@aws/pdk.type_safe_api.OpenApiModelOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The languages users have specified for handler projects (if any)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/model/openapi/open-api-project-definition.ts",
            "line": 18
          },
          "name": "handlerLanguages",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.type_safe_api.Language"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "type-safe-api/project/model/openapi/open-api-project-definition:OpenApiProjectDefinitionOptions"
    },
    "@aws/pdk.type_safe_api.OperationDetails": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Details about an API operation."
      },
      "fqn": "@aws/pdk.type_safe_api.OperationDetails",
      "interfaces": [
        "@aws/pdk.type_safe_api.MethodAndPath"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/construct/spec/api-gateway-integrations-types.ts",
        "line": 74
      },
      "name": "OperationDetails",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "application/json",
            "stability": "stable",
            "summary": "Content types accepted by this operation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/spec/api-gateway-integrations-types.ts",
            "line": 79
          },
          "name": "contentTypes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "type-safe-api/construct/spec/api-gateway-integrations-types:OperationDetails"
    },
    "@aws/pdk.type_safe_api.PartialManagedRuleGroupStatementProperty": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "PartialManagedRuleGroupStatementProperty."
      },
      "fqn": "@aws/pdk.type_safe_api.PartialManagedRuleGroupStatementProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/construct/waf/generated-types.ts",
        "line": 7
      },
      "name": "PartialManagedRuleGroupStatementProperty",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "You use this, along with the vendor name, to identify the rule group.",
            "stability": "external",
            "summary": "The name of the managed rule group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/waf/generated-types.ts",
            "line": 49
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "> Instead of this option, use `RuleActionOverrides` . It accepts any valid action setting, including `Count` .",
            "stability": "external",
            "summary": "Rules in the referenced rule group whose actions are set to `Count` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/waf/generated-types.ts",
            "line": 43
          },
          "name": "excludedRules",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "aws-cdk-lib.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "aws-cdk-lib.IResolvable"
                          },
                          {
                            "fqn": "aws-cdk-lib.aws_wafv2.CfnWebACL.ExcludedRuleProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Many managed rule groups don't require this.\nThe rule groups used for intelligent threat mitigation require additional configuration:\n\n- Use the `AWSManagedRulesACFPRuleSet` configuration object to configure the account creation fraud prevention managed rule group. The configuration includes the registration and sign-up pages of your application and the locations in the account creation request payload of data, such as the user email and phone number fields.\n- Use the `AWSManagedRulesATPRuleSet` configuration object to configure the account takeover prevention managed rule group. The configuration includes the sign-in page of your application and the locations in the login request payload of data such as the username and password.\n- Use the `AWSManagedRulesBotControlRuleSet` configuration object to configure the protection level that you want the Bot Control rule group to use.",
            "stability": "external",
            "summary": "Additional information that's used by a managed rule group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/waf/generated-types.ts",
            "line": 37
          },
          "name": "managedRuleGroupConfigs",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "aws-cdk-lib.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "aws-cdk-lib.IResolvable"
                          },
                          {
                            "fqn": "aws-cdk-lib.aws_wafv2.CfnWebACL.ManagedRuleGroupConfigProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "You specify one override for each rule whose action you want to change.\n\nYou can use overrides for testing, for example you can override all of rule actions to `Count` and then monitor the resulting count metrics to understand how the rule group would handle your web traffic. You can also permanently override some or all actions, to modify how the rule group manages your web traffic.",
            "stability": "external",
            "summary": "Action settings to use in the place of the rule actions that are configured inside the rule group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/waf/generated-types.ts",
            "line": 27
          },
          "name": "ruleActionOverrides",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "aws-cdk-lib.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "aws-cdk-lib.IResolvable"
                          },
                          {
                            "fqn": "aws-cdk-lib.aws_wafv2.CfnWebACL.RuleActionOverrideProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Requests are only evaluated by the rule group if they match the scope-down statement. You can use any nestable `Statement` in the scope-down statement, and you can nest statements at any level, the same as you can for a rule statement.",
            "stability": "external",
            "summary": "An optional nested statement that narrows the scope of the web requests that are evaluated by the managed rule group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/waf/generated-types.ts",
            "line": 19
          },
          "name": "scopeDownStatement",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "aws-cdk-lib.IResolvable"
                },
                {
                  "fqn": "aws-cdk-lib.aws_wafv2.CfnWebACL.StatementProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "If you specify this, the version setting is fixed until you change it. If you don't specify this, AWS WAF uses the vendor's default version, and then keeps the version at the vendor's default when the vendor updates the managed rule group settings.",
            "stability": "external",
            "summary": "The version of the managed rule group to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/waf/generated-types.ts",
            "line": 13
          },
          "name": "version",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "type-safe-api/construct/waf/generated-types:PartialManagedRuleGroupStatementProperty"
    },
    "@aws/pdk.type_safe_api.ProjectCollections": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Collections of projects managed by type-safe-api."
      },
      "fqn": "@aws/pdk.type_safe_api.ProjectCollections",
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/types.ts",
        "line": 336
      },
      "name": "ProjectCollections",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Array of all documentation projects."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/types.ts",
            "line": 360
          },
          "name": "documentation",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "projen.Project"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Array of all handler projects."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/types.ts",
            "line": 364
          },
          "name": "handlers",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "projen.Project"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Array of all infrastructure projects."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/types.ts",
            "line": 352
          },
          "name": "infrastructure",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "projen.Project"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Array of all library projects."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/types.ts",
            "line": 356
          },
          "name": "libraries",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "projen.Project"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Array of all model projects."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/types.ts",
            "line": 344
          },
          "name": "model",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "projen.Project"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Array of all projects managed by type-safe-api."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/types.ts",
            "line": 340
          },
          "name": "projects",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "projen.Project"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Array of all runtime projects."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/types.ts",
            "line": 348
          },
          "name": "runtimes",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "projen.Project"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "type-safe-api/project/types:ProjectCollections"
    },
    "@aws/pdk.type_safe_api.PythonProjectOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "PythonProjectOptions."
      },
      "fqn": "@aws/pdk.type_safe_api.PythonProjectOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/python-project-options.ts",
        "line": 7
      },
      "name": "PythonProjectOptions",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "$GIT_USER_EMAIL",
            "stability": "experimental",
            "summary": "Author's e-mail."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/python-project-options.ts",
            "line": 127
          },
          "name": "authorEmail",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "$GIT_USER_NAME",
            "stability": "experimental",
            "summary": "Author's name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/python-project-options.ts",
            "line": 121
          },
          "name": "authorName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- auto approve is disabled",
            "stability": "experimental",
            "summary": "Enable and configure the 'auto approve' workflow."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/python-project-options.ts",
            "line": 243
          },
          "name": "autoApproveOptions",
          "optional": true,
          "type": {
            "fqn": "projen.github.AutoApproveOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "Has no effect if `github.mergify`\nis set to false.",
            "stability": "experimental",
            "summary": "Enable automatic merging on GitHub."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/python-project-options.ts",
            "line": 237
          },
          "name": "autoMerge",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- see defaults in `AutoMergeOptions`",
            "remarks": "Has no effect if\n`github.mergify` or `autoMerge` is set to false.",
            "stability": "experimental",
            "summary": "Configure options for automatic merging on GitHub."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/python-project-options.ts",
            "line": 229
          },
          "name": "autoMergeOptions",
          "optional": true,
          "type": {
            "fqn": "projen.github.AutoMergeOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "A list of PyPI trove classifiers that describe the project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/python-project-options.ts",
            "line": 108
          },
          "name": "classifiers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- true, but false for subprojects",
            "stability": "experimental",
            "summary": "Add a `clobber` task which resets the repo to origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/python-project-options.ts",
            "line": 221
          },
          "name": "clobber",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Whether to commit the managed files by default."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/python-project-options.ts",
            "line": 312
          },
          "name": "commitGenerated",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "featured": "true"
            },
            "default": "[]",
            "remarks": "Additional dependencies can be added via `project.addDependency()`.",
            "stability": "experimental",
            "summary": "List of runtime dependencies for this project. Dependencies use the format: `<module>@<semver>`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/python-project-options.ts",
            "line": 59
          },
          "name": "deps",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "featured": "true"
            },
            "stability": "experimental",
            "summary": "A short description of the package."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/python-project-options.ts",
            "line": 103
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Add a VSCode development environment (used for GitHub Codespaces)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/python-project-options.ts",
            "line": 215
          },
          "name": "devContainer",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "featured": "true"
            },
            "default": "[]",
            "remarks": "Additional dependencies can be added via `project.addDevDependency()`.",
            "stability": "experimental",
            "summary": "List of dev dependencies for this project. Dependencies use the format: `<module>@<semver>`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/python-project-options.ts",
            "line": 49
          },
          "name": "devDeps",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "Enabled by default for root projects. Disabled for non-root projects.",
            "stability": "experimental",
            "summary": "Enable GitHub integration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/python-project-options.ts",
            "line": 209
          },
          "name": "github",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- see GitHubOptions",
            "stability": "experimental",
            "summary": "Options for GitHub integration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/python-project-options.ts",
            "line": 202
          },
          "name": "githubOptions",
          "optional": true,
          "type": {
            "fqn": "projen.github.GitHubOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Configuration options for .gitignore file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/python-project-options.ts",
            "line": 306
          },
          "name": "gitIgnoreOptions",
          "optional": true,
          "type": {
            "fqn": "projen.IgnoreFileOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Configuration options for git."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/python-project-options.ts",
            "line": 301
          },
          "name": "gitOptions",
          "optional": true,
          "type": {
            "fqn": "projen.GitOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Add a Gitpod development environment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/python-project-options.ts",
            "line": 196
          },
          "name": "gitpod",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "A URL to the website of the project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/python-project-options.ts",
            "line": 97
          },
          "name": "homepage",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "License of this package as an SPDX identifier."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/python-project-options.ts",
            "line": 92
          },
          "name": "license",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "{}",
            "stability": "experimental",
            "summary": "Configure logging options such as verbosity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/python-project-options.ts",
            "line": 296
          },
          "name": "logging",
          "optional": true,
          "type": {
            "fqn": "projen.LoggerOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "deprecated": "use `githubOptions.mergify` instead",
            "stability": "deprecated",
            "summary": "Whether mergify should be enabled on this repository or not."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/python-project-options.ts",
            "line": 190
          },
          "name": "mergify",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default options",
            "deprecated": "use `githubOptions.mergifyOptions` instead",
            "stability": "deprecated",
            "summary": "Options for mergify."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/python-project-options.ts",
            "line": 183
          },
          "name": "mergifyOptions",
          "optional": true,
          "type": {
            "fqn": "projen.github.MergifyOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "$PYTHON_MODULE_NAME",
            "remarks": "Must only consist of alphanumeric characters and underscores.",
            "stability": "experimental",
            "summary": "Name of the python package as used in imports and filenames."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/python-project-options.ts",
            "line": 66
          },
          "name": "moduleName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "featured": "true"
            },
            "default": "$BASEDIR",
            "stability": "experimental",
            "summary": "This is the name of your project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/python-project-options.ts",
            "line": 319
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\".\"",
            "remarks": "If this project has a parent, this directory is relative to the parent\ndirectory and it cannot be the same as the parent or any of it's other\nsubprojects.",
            "stability": "experimental",
            "summary": "The root directory of the project. Relative to this directory, all files are synthesized."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/python-project-options.ts",
            "line": 290
          },
          "name": "outdir",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Package name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/python-project-options.ts",
            "line": 87
          },
          "name": "packageName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The parent project, if this project is part of a bigger project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/python-project-options.ts",
            "line": 279
          },
          "name": "parent",
          "optional": true,
          "type": {
            "fqn": "projen.Project"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Additional options to set for poetry if using poetry."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/python-project-options.ts",
            "line": 82
          },
          "name": "poetryOptions",
          "optional": true,
          "type": {
            "fqn": "projen.python.PoetryPyprojectOptionsWithoutDeps"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "ProjectType.UNKNOWN",
            "deprecated": "no longer supported at the base project level",
            "stability": "deprecated",
            "summary": "Which type of project this is (library/app)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/python-project-options.ts",
            "line": 176
          },
          "name": "projectType",
          "optional": true,
          "type": {
            "fqn": "projen.ProjectType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"npx projen\"",
            "remarks": "Can be used to customize in special environments.",
            "stability": "experimental",
            "summary": "The shell command to use in order to run the projen CLI."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/python-project-options.ts",
            "line": 274
          },
          "name": "projenCommand",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- use a personal access token named PROJEN_GITHUB_TOKEN",
            "stability": "experimental",
            "summary": "Choose a method of providing GitHub API access for projen workflows."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/python-project-options.ts",
            "line": 169
          },
          "name": "projenCredentials",
          "optional": true,
          "type": {
            "fqn": "projen.github.GithubCredentials"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Generate (once) .projenrc.json (in JSON). Set to `false` in order to disable .projenrc.json generation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/python-project-options.ts",
            "line": 267
          },
          "name": "projenrcJson",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default options",
            "stability": "experimental",
            "summary": "Options for .projenrc.json."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/python-project-options.ts",
            "line": 261
          },
          "name": "projenrcJsonOptions",
          "optional": true,
          "type": {
            "fqn": "projen.ProjenrcJsonOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default options",
            "stability": "experimental",
            "summary": "Options related to projenrc in python."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/python-project-options.ts",
            "line": 39
          },
          "name": "projenrcPythonOptions",
          "optional": true,
          "type": {
            "fqn": "projen.python.ProjenrcOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"PROJEN_GITHUB_TOKEN\"",
            "deprecated": "use `projenCredentials`",
            "remarks": "This token needs to have the `repo`, `workflows`\nand `packages` scope.",
            "stability": "deprecated",
            "summary": "The name of a secret which includes a GitHub Personal Access Token to be used by projen workflows."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/python-project-options.ts",
            "line": 163
          },
          "name": "projenTokenSecret",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "featured": "true"
            },
            "default": "true",
            "stability": "experimental",
            "summary": "Include pytest tests."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/python-project-options.ts",
            "line": 33
          },
          "name": "pytest",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- defaults",
            "stability": "experimental",
            "summary": "pytest options."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/python-project-options.ts",
            "line": 26
          },
          "name": "pytestOptions",
          "optional": true,
          "type": {
            "fqn": "projen.python.PytestOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"python\"",
            "stability": "experimental",
            "summary": "Path to the python executable to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/python-project-options.ts",
            "line": 72
          },
          "name": "pythonExec",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- { filename: 'README.md', contents: '# replace this' }",
            "stability": "experimental",
            "summary": "The README setup."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/python-project-options.ts",
            "line": 154
          },
          "name": "readme",
          "optional": true,
          "type": {
            "fqn": "projen.SampleReadmeProps"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Use renovatebot to handle dependency upgrades."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/python-project-options.ts",
            "line": 255
          },
          "name": "renovatebot",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default options",
            "stability": "experimental",
            "summary": "Options for renovatebot."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/python-project-options.ts",
            "line": 249
          },
          "name": "renovatebotOptions",
          "optional": true,
          "type": {
            "fqn": "projen.RenovatebotOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Include sample code and test if the relevant directories don't exist."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/python-project-options.ts",
            "line": 20
          },
          "name": "sample",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Additional fields to pass in the setup() function if using setuptools."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/python-project-options.ts",
            "line": 77
          },
          "name": "setupConfig",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "featured": "true"
            },
            "default": "- true, unless poetry is true, then false",
            "stability": "experimental",
            "summary": "Use setuptools with a setup.py script for packaging and publishing."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/python-project-options.ts",
            "line": 14
          },
          "name": "setuptools",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "See `staleOptions` for options.",
            "stability": "experimental",
            "summary": "Auto-close of stale issues and pull request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/python-project-options.ts",
            "line": 148
          },
          "name": "stale",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- see defaults in `StaleOptions`",
            "remarks": "To disable set `stale` to `false`.",
            "stability": "experimental",
            "summary": "Auto-close stale issues and pull requests."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/python-project-options.ts",
            "line": 141
          },
          "name": "staleOptions",
          "optional": true,
          "type": {
            "fqn": "projen.github.StaleOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "featured": "true"
            },
            "default": "\"0.1.0\"",
            "stability": "experimental",
            "summary": "Version of the package."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/python-project-options.ts",
            "line": 115
          },
          "name": "version",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "Enabled by default for root projects. Disabled for non-root projects.",
            "stability": "experimental",
            "summary": "Enable VSCode integration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/python-project-options.ts",
            "line": 134
          },
          "name": "vscode",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "type-safe-api/project/python-project-options:PythonProjectOptions"
    },
    "@aws/pdk.type_safe_api.PythonVersion": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "Versions of python."
      },
      "fqn": "@aws/pdk.type_safe_api.PythonVersion",
      "kind": "enum",
      "locationInModule": {
        "filename": "type-safe-api/project/languages.ts",
        "line": 34
      },
      "members": [
        {
          "docs": {
            "stability": "stable"
          },
          "name": "PYTHON_3_11"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "PYTHON_3_12"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "PYTHON_3_13"
        }
      ],
      "name": "PythonVersion",
      "namespace": "type_safe_api",
      "symbolId": "type-safe-api/project/languages:PythonVersion"
    },
    "@aws/pdk.type_safe_api.RuntimeConfiguration": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Configuration for generated runtime projects."
      },
      "fqn": "@aws/pdk.type_safe_api.RuntimeConfiguration",
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/type-safe-api-project.ts",
        "line": 65
      },
      "name": "RuntimeConfiguration",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "These projects can be used to provide type safety for\nboth client and server projects.",
            "stability": "stable",
            "summary": "The languages that runtime projects will be generated in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/type-safe-api-project.ts",
            "line": 70
          },
          "name": "languages",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.type_safe_api.Language"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Note that only options provided for the specified languages will apply.",
            "stability": "stable",
            "summary": "Options for the generated runtimes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/type-safe-api-project.ts",
            "line": 74
          },
          "name": "options",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.type_safe_api.GeneratedRuntimeCodeOptions"
          }
        }
      ],
      "symbolId": "type-safe-api/project/type-safe-api-project:RuntimeConfiguration"
    },
    "@aws/pdk.type_safe_api.S3Integration": {
      "assembly": "@aws/pdk",
      "base": "@aws/pdk.type_safe_api.Integration",
      "docs": {
        "see": "https://docs.aws.amazon.com/apigateway/latest/developerguide/integrating-api-with-aws-services-s3.html",
        "stability": "stable",
        "summary": "An S3 integration."
      },
      "fqn": "@aws/pdk.type_safe_api.S3Integration",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "type-safe-api/construct/integrations/s3.ts",
          "line": 72
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws/pdk.type_safe_api.S3IntegrationProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "type-safe-api/construct/integrations/s3.ts",
        "line": 61
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Grant API Gateway permissions to invoke the S3 bucket."
          },
          "locationInModule": {
            "filename": "type-safe-api/construct/integrations/s3.ts",
            "line": 147
          },
          "name": "grant",
          "overrides": "@aws/pdk.type_safe_api.Integration",
          "parameters": [
            {
              "name": "__0",
              "type": {
                "fqn": "@aws/pdk.type_safe_api.IntegrationGrantProps"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Render the S3 integration as a snippet of OpenAPI."
          },
          "locationInModule": {
            "filename": "type-safe-api/construct/integrations/s3.ts",
            "line": 114
          },
          "name": "render",
          "overrides": "@aws/pdk.type_safe_api.Integration",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws/pdk.type_safe_api.IntegrationRenderProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws/pdk.type_safe_api.ApiGatewayIntegration"
            }
          }
        }
      ],
      "name": "S3Integration",
      "namespace": "type_safe_api",
      "symbolId": "type-safe-api/construct/integrations/s3:S3Integration"
    },
    "@aws/pdk.type_safe_api.S3IntegrationProps": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for S3Integration."
      },
      "fqn": "@aws/pdk.type_safe_api.S3IntegrationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/construct/integrations/s3.ts",
        "line": 20
      },
      "name": "S3IntegrationProps",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The S3 bucket to be invoked on integration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/integrations/s3.ts",
            "line": 24
          },
          "name": "bucket",
          "type": {
            "fqn": "aws-cdk-lib.aws_s3.IBucket"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no additional header request parameters",
            "stability": "stable",
            "summary": "Specifies additional header request parameters to be passed to the integration request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/integrations/s3.ts",
            "line": 54
          },
          "name": "headerRequestParameters",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- a combination of IntegrationResponseSets.defaultPassthrough() and IntegrationResponseSets.s3JsonErrorMessage()",
            "stability": "stable",
            "summary": "Override the integration response set for the S3 integration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/integrations/s3.ts",
            "line": 42
          },
          "name": "integrationResponseSet",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.type_safe_api.IntegrationResponseSet"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- integration method is used",
            "stability": "stable",
            "summary": "The HTTP method to use when invoking the S3 bucket."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/integrations/s3.ts",
            "line": 30
          },
          "name": "method",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- integration path is used",
            "stability": "stable",
            "summary": "The path override to use when invoking the S3 bucket."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/integrations/s3.ts",
            "line": 36
          },
          "name": "path",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no additional query string request parameters",
            "stability": "stable",
            "summary": "Specifies additional query string request parameters to be passed to the integration request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/integrations/s3.ts",
            "line": 48
          },
          "name": "queryStringRequestParameters",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "type-safe-api/construct/integrations/s3:S3IntegrationProps"
    },
    "@aws/pdk.type_safe_api.S3JsonErrorMessageIntegrationResponseSet": {
      "assembly": "@aws/pdk",
      "base": "@aws/pdk.type_safe_api.IntegrationResponseSet",
      "docs": {
        "stability": "stable",
        "summary": "An integration response set for S3 errors, that returns a JSON payload with the S3 error message."
      },
      "fqn": "@aws/pdk.type_safe_api.S3JsonErrorMessageIntegrationResponseSet",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "type-safe-api/construct/integrations/integration-response-set.ts",
        "line": 81
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Render the integration responses into the Integration."
          },
          "locationInModule": {
            "filename": "type-safe-api/construct/integrations/integration-response-set.ts",
            "line": 103
          },
          "name": "render",
          "overrides": "@aws/pdk.type_safe_api.IntegrationResponseSet",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws/pdk.type_safe_api.IntegrationRenderProps"
              }
            }
          ],
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "fqn": "@aws/pdk.type_safe_api.ApiGatewayIntegrationResponse"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "S3JsonErrorMessageIntegrationResponseSet",
      "namespace": "type_safe_api",
      "symbolId": "type-safe-api/construct/integrations/integration-response-set:S3JsonErrorMessageIntegrationResponseSet"
    },
    "@aws/pdk.type_safe_api.SerializedCorsOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Cross-origin resource sharing options."
      },
      "fqn": "@aws/pdk.type_safe_api.SerializedCorsOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/construct/spec/api-gateway-integrations-types.ts",
        "line": 138
      },
      "name": "SerializedCorsOptions",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Headers to allow."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/spec/api-gateway-integrations-types.ts",
            "line": 146
          },
          "name": "allowHeaders",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "HTTP methods to allow."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/spec/api-gateway-integrations-types.ts",
            "line": 142
          },
          "name": "allowMethods",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Origins to allow."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/spec/api-gateway-integrations-types.ts",
            "line": 150
          },
          "name": "allowOrigins",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "HTTP status code to be returned by preflight requests."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/spec/api-gateway-integrations-types.ts",
            "line": 154
          },
          "name": "statusCode",
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "type-safe-api/construct/spec/api-gateway-integrations-types:SerializedCorsOptions"
    },
    "@aws/pdk.type_safe_api.SmithyAsyncModelProject": {
      "assembly": "@aws/pdk",
      "base": "@aws/pdk.type_safe_api.SmithyBaseProject",
      "docs": {
        "stability": "stable",
        "summary": "Smithy model project for a WebSocket API."
      },
      "fqn": "@aws/pdk.type_safe_api.SmithyAsyncModelProject",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "type-safe-api/project/model/smithy/smithy-async-model-project.ts",
          "line": 53
        },
        "parameters": [
          {
            "name": "options",
            "type": {
              "fqn": "@aws/pdk.type_safe_api.SmithyAsyncModelProjectOptions"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "type-safe-api/project/model/smithy/smithy-async-model-project.ts",
        "line": 43
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Returns the smithy project definition."
          },
          "locationInModule": {
            "filename": "type-safe-api/project/model/smithy/smithy-async-model-project.ts",
            "line": 128
          },
          "name": "smithyProjectDefinition",
          "overrides": "@aws/pdk.type_safe_api.SmithyBaseProject",
          "returns": {
            "type": {
              "fqn": "@aws/pdk.type_safe_api.SmithyProjectDefinition"
            }
          }
        }
      ],
      "name": "SmithyAsyncModelProject",
      "namespace": "type_safe_api",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Name of the API."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/model/smithy/smithy-async-model-project.ts",
            "line": 47
          },
          "name": "apiName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Smithy model and build settings."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/model/smithy/smithy-async-model-project.ts",
            "line": 51
          },
          "name": "definition",
          "type": {
            "fqn": "@aws/pdk.type_safe_api.SmithyServiceProjectDefinition"
          }
        }
      ],
      "symbolId": "type-safe-api/project/model/smithy/smithy-async-model-project:SmithyAsyncModelProject"
    },
    "@aws/pdk.type_safe_api.SmithyAsyncModelProjectOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for the Smithy WebSocket API model project."
      },
      "fqn": "@aws/pdk.type_safe_api.SmithyAsyncModelProjectOptions",
      "interfaces": [
        "@aws/pdk.type_safe_api.SmithyBaseProjectOptions",
        "@aws/pdk.type_safe_api.SmithyServiceProjectDefinitionOptions",
        "@aws/pdk.type_safe_api.TypeSafeApiModelBuildOutputOptions",
        "@aws/pdk.type_safe_api.TypeSafeApiAsyncModelBuildOutputOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/model/smithy/smithy-async-model-project.ts",
        "line": 34
      },
      "name": "SmithyAsyncModelProjectOptions",
      "namespace": "type_safe_api",
      "symbolId": "type-safe-api/project/model/smithy/smithy-async-model-project:SmithyAsyncModelProjectOptions"
    },
    "@aws/pdk.type_safe_api.SmithyBaseProject": {
      "abstract": true,
      "assembly": "@aws/pdk",
      "base": "projen.Project",
      "docs": {
        "stability": "stable",
        "summary": "Base project for Smithy projects."
      },
      "fqn": "@aws/pdk.type_safe_api.SmithyBaseProject",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "type-safe-api/project/model/smithy/smithy-base-project.ts",
          "line": 24
        },
        "parameters": [
          {
            "name": "options",
            "type": {
              "fqn": "@aws/pdk.type_safe_api.SmithyBaseProjectOptions"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "type-safe-api/project/model/smithy/smithy-base-project.ts",
        "line": 21
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Add a dependency on other smithy projects."
          },
          "locationInModule": {
            "filename": "type-safe-api/project/model/smithy/smithy-base-project.ts",
            "line": 36
          },
          "name": "addSmithyDeps",
          "parameters": [
            {
              "name": "deps",
              "type": {
                "fqn": "@aws/pdk.type_safe_api.SmithyBaseProject"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the smithy project definition."
          },
          "locationInModule": {
            "filename": "type-safe-api/project/model/smithy/smithy-base-project.ts",
            "line": 31
          },
          "name": "smithyProjectDefinition",
          "returns": {
            "type": {
              "fqn": "@aws/pdk.type_safe_api.SmithyProjectDefinition"
            }
          }
        }
      ],
      "name": "SmithyBaseProject",
      "namespace": "type_safe_api",
      "symbolId": "type-safe-api/project/model/smithy/smithy-base-project:SmithyBaseProject"
    },
    "@aws/pdk.type_safe_api.SmithyBaseProjectOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for a Smithy project."
      },
      "fqn": "@aws/pdk.type_safe_api.SmithyBaseProjectOptions",
      "interfaces": [
        "projen.ProjectOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/model/smithy/smithy-base-project.ts",
        "line": 16
      },
      "name": "SmithyBaseProjectOptions",
      "namespace": "type_safe_api",
      "symbolId": "type-safe-api/project/model/smithy/smithy-base-project:SmithyBaseProjectOptions"
    },
    "@aws/pdk.type_safe_api.SmithyBuildOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for the smithy build files."
      },
      "fqn": "@aws/pdk.type_safe_api.SmithyBuildOptions",
      "interfaces": [
        "@aws/pdk.type_safe_api.SmithyCommon"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/model/smithy/types.ts",
        "line": 101
      },
      "name": "SmithyBuildOptions",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "The src/main/smithy directory is always included.\nPaths must be relative to the model project directory. Absolute paths will\nbe resolved as relative paths.",
            "stability": "stable",
            "summary": "Paths to any additional model files or directories to be used as sources for the smithy build."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/model/smithy/types.ts",
            "line": 128
          },
          "name": "additionalSources",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no ignoreMissingPlugins set in the smithy-build.json file",
            "remarks": "This setting can be set to true to allow the build to progress\neven if a plugin can't be found on the classpath.",
            "stability": "stable",
            "summary": "If a plugin can't be found, Smithy will by default fail the build."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/model/smithy/types.ts",
            "line": 115
          },
          "name": "ignoreMissingPlugins",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "the default configuration required for Smithy to OpenAPI conversion",
            "stability": "stable",
            "summary": "Maven configuration for the Smithy build project, used to specify dependencies and repositories in the build.gradle and smithy-build.json files."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/model/smithy/types.ts",
            "line": 121
          },
          "name": "maven",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.type_safe_api.SmithyMavenConfiguration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no projections",
            "stability": "stable",
            "summary": "Map of projections name to projection configurations https://awslabs.github.io/smithy/2.0/guides/building-models/build-config.html#projections."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/model/smithy/types.ts",
            "line": 107
          },
          "name": "projections",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.type_safe_api.SmithyProjection"
              },
              "kind": "map"
            }
          }
        }
      ],
      "symbolId": "type-safe-api/project/model/smithy/types:SmithyBuildOptions"
    },
    "@aws/pdk.type_safe_api.SmithyCommon": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties common to smithy plugins and the root smithy build."
      },
      "fqn": "@aws/pdk.type_safe_api.SmithyCommon",
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/model/smithy/types.ts",
        "line": 20
      },
      "name": "SmithyCommon",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "List of imports."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/model/smithy/types.ts",
            "line": 24
          },
          "name": "imports",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Plugins keyed by plugin id."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/model/smithy/types.ts",
            "line": 28
          },
          "name": "plugins",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              },
              "kind": "map"
            }
          }
        }
      ],
      "symbolId": "type-safe-api/project/model/smithy/types:SmithyCommon"
    },
    "@aws/pdk.type_safe_api.SmithyMavenConfiguration": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Configuration for smithy maven dependencies."
      },
      "fqn": "@aws/pdk.type_safe_api.SmithyMavenConfiguration",
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/model/smithy/types.ts",
        "line": 79
      },
      "name": "SmithyMavenConfiguration",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The dependencies used in the build.gradle and smithy-build.json files eg. software.amazon.smithy:smithy-validation-model:1.28.0 The following required dependencies are always added: - software.amazon.smithy:smithy-cli:1.28.0 - software.amazon.smithy:smithy-model:1.28.0 - software.amazon.smithy:smithy-openapi:1.28.0 - software.amazon.smithy:smithy-aws-traits:1.28.0 You can however override the version of these dependencies if required."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/model/smithy/types.ts",
            "line": 90
          },
          "name": "dependencies",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "maven central and maven local",
            "stability": "stable",
            "summary": "The repository urls used in the build.gradle and smithy-build.json files."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/model/smithy/types.ts",
            "line": 95
          },
          "name": "repositoryUrls",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "type-safe-api/project/model/smithy/types:SmithyMavenConfiguration"
    },
    "@aws/pdk.type_safe_api.SmithyModelOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for a Smithy model."
      },
      "fqn": "@aws/pdk.type_safe_api.SmithyModelOptions",
      "interfaces": [
        "@aws/pdk.type_safe_api.SmithyProjectDefinitionOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/types.ts",
        "line": 57
      },
      "name": "SmithyModelOptions",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Smithy service name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/types.ts",
            "line": 61
          },
          "name": "serviceName",
          "type": {
            "fqn": "@aws/pdk.type_safe_api.SmithyServiceName"
          }
        }
      ],
      "symbolId": "type-safe-api/project/types:SmithyModelOptions"
    },
    "@aws/pdk.type_safe_api.SmithyModelProject": {
      "assembly": "@aws/pdk",
      "base": "@aws/pdk.type_safe_api.SmithyBaseProject",
      "docs": {
        "stability": "stable",
        "summary": "Smithy model project for a REST API."
      },
      "fqn": "@aws/pdk.type_safe_api.SmithyModelProject",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "type-safe-api/project/model/smithy/smithy-model-project.ts",
          "line": 42
        },
        "parameters": [
          {
            "name": "options",
            "type": {
              "fqn": "@aws/pdk.type_safe_api.SmithyModelProjectOptions"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "type-safe-api/project/model/smithy/smithy-model-project.ts",
        "line": 32
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Returns the smithy project definition."
          },
          "locationInModule": {
            "filename": "type-safe-api/project/model/smithy/smithy-model-project.ts",
            "line": 73
          },
          "name": "smithyProjectDefinition",
          "overrides": "@aws/pdk.type_safe_api.SmithyBaseProject",
          "returns": {
            "type": {
              "fqn": "@aws/pdk.type_safe_api.SmithyProjectDefinition"
            }
          }
        }
      ],
      "name": "SmithyModelProject",
      "namespace": "type_safe_api",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Name of the API."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/model/smithy/smithy-model-project.ts",
            "line": 36
          },
          "name": "apiName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Smithy model and build settings."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/model/smithy/smithy-model-project.ts",
            "line": 40
          },
          "name": "definition",
          "type": {
            "fqn": "@aws/pdk.type_safe_api.SmithyServiceProjectDefinition"
          }
        }
      ],
      "symbolId": "type-safe-api/project/model/smithy/smithy-model-project:SmithyModelProject"
    },
    "@aws/pdk.type_safe_api.SmithyModelProjectOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for the Smithy REST API model."
      },
      "fqn": "@aws/pdk.type_safe_api.SmithyModelProjectOptions",
      "interfaces": [
        "@aws/pdk.type_safe_api.SmithyBaseProjectOptions",
        "@aws/pdk.type_safe_api.SmithyServiceProjectDefinitionOptions",
        "@aws/pdk.type_safe_api.TypeSafeApiModelBuildOutputOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/model/smithy/smithy-model-project.ts",
        "line": 24
      },
      "name": "SmithyModelProjectOptions",
      "namespace": "type_safe_api",
      "symbolId": "type-safe-api/project/model/smithy/smithy-model-project:SmithyModelProjectOptions"
    },
    "@aws/pdk.type_safe_api.SmithyProjectDefinition": {
      "assembly": "@aws/pdk",
      "base": "projen.Component",
      "docs": {
        "stability": "stable",
        "summary": "Definition for a Smithy project."
      },
      "fqn": "@aws/pdk.type_safe_api.SmithyProjectDefinition",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "type-safe-api/project/model/smithy/smithy-project-definition.ts",
          "line": 65
        },
        "parameters": [
          {
            "name": "project",
            "type": {
              "fqn": "projen.Project"
            }
          },
          {
            "name": "options",
            "type": {
              "fqn": "@aws/pdk.type_safe_api.SmithyProjectDefinitionOptions"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "type-safe-api/project/model/smithy/smithy-project-definition.ts",
        "line": 41
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Add maven-style or local file dependencies to the smithy model project."
          },
          "locationInModule": {
            "filename": "type-safe-api/project/model/smithy/smithy-project-definition.ts",
            "line": 163
          },
          "name": "addDeps",
          "parameters": [
            {
              "docs": {
                "summary": "dependencies to add, eg \"software.amazon.smithy:smithy-validation-model:1.27.2\" or \"file://../some/path/build/lib/my-shapes.jar."
              },
              "name": "deps",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Add dependencies on other smithy models, such that their shapes can be imported in this project."
          },
          "locationInModule": {
            "filename": "type-safe-api/project/model/smithy/smithy-project-definition.ts",
            "line": 178
          },
          "name": "addSmithyDeps",
          "parameters": [
            {
              "docs": {
                "summary": "smithy definitions to depend on."
              },
              "name": "deps",
              "type": {
                "fqn": "@aws/pdk.type_safe_api.SmithyProjectDefinition"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "remarks": "Paths should be relative to the project outdir. Any absolute paths will be\nresolved as relative paths.",
            "stability": "stable",
            "summary": "Add additional paths to model source files or directories."
          },
          "locationInModule": {
            "filename": "type-safe-api/project/model/smithy/smithy-project-definition.ts",
            "line": 197
          },
          "name": "addSources",
          "parameters": [
            {
              "name": "sources",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "variadic": true
        }
      ],
      "name": "SmithyProjectDefinition",
      "namespace": "type_safe_api",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Name of the gradle project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/model/smithy/smithy-project-definition.ts",
            "line": 45
          },
          "name": "gradleProjectName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Directory of model source code."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/model/smithy/smithy-project-definition.ts",
            "line": 59
          },
          "name": "modelDir",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "type-safe-api/project/model/smithy/smithy-project-definition:SmithyProjectDefinition"
    },
    "@aws/pdk.type_safe_api.SmithyProjectDefinitionOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for a smithy project definition."
      },
      "fqn": "@aws/pdk.type_safe_api.SmithyProjectDefinitionOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/model/smithy/smithy-project-definition.ts",
        "line": 19
      },
      "name": "SmithyProjectDefinitionOptions",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "Do so if you would like to use a different version\nof gradle to the one provided by default",
            "stability": "stable",
            "summary": "Set to false if you would like to check in your gradle wrapper."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/model/smithy/smithy-project-definition.ts",
            "line": 35
          },
          "name": "ignoreGradleWrapper",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "stable",
            "summary": "Set to false if you would like to check in your smithy build output or have more fine-grained control over what is checked in, eg if you add other projections to the smithy-build.json file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/model/smithy/smithy-project-definition.ts",
            "line": 29
          },
          "name": "ignoreSmithyBuildOutput",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Smithy build options."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/model/smithy/smithy-project-definition.ts",
            "line": 23
          },
          "name": "smithyBuildOptions",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.type_safe_api.SmithyBuildOptions"
          }
        }
      ],
      "symbolId": "type-safe-api/project/model/smithy/smithy-project-definition:SmithyProjectDefinitionOptions"
    },
    "@aws/pdk.type_safe_api.SmithyProjection": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "A smithy build projection."
      },
      "fqn": "@aws/pdk.type_safe_api.SmithyProjection",
      "interfaces": [
        "@aws/pdk.type_safe_api.SmithyCommon"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/model/smithy/types.ts",
        "line": 48
      },
      "name": "SmithyProjection",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Whether or not the projection is abstract."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/model/smithy/types.ts",
            "line": 52
          },
          "name": "abstract",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Transforms to apply to the projection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/model/smithy/types.ts",
            "line": 56
          },
          "name": "transforms",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.type_safe_api.SmithyTransform"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "type-safe-api/project/model/smithy/types:SmithyProjection"
    },
    "@aws/pdk.type_safe_api.SmithyServiceName": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "see": "https://awslabs.github.io/smithy/2.0/spec/service-types.html",
        "stability": "stable",
        "summary": "Represents a fully qualified name of a Smithy service."
      },
      "fqn": "@aws/pdk.type_safe_api.SmithyServiceName",
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/types.ts",
        "line": 595
      },
      "name": "SmithyServiceName",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Nested namespaces are separated by '.', for example com.company",
            "see": "https://awslabs.github.io/smithy/2.0/spec/model.html#shape-id",
            "stability": "stable",
            "summary": "The service namespace."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/types.ts",
            "line": 600
          },
          "name": "namespace",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Should be PascalCase, for example HelloService",
            "see": "https://awslabs.github.io/smithy/2.0/spec/model.html#shape-id",
            "stability": "stable",
            "summary": "The service name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/types.ts",
            "line": 605
          },
          "name": "serviceName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "type-safe-api/project/types:SmithyServiceName"
    },
    "@aws/pdk.type_safe_api.SmithyServiceProjectDefinition": {
      "assembly": "@aws/pdk",
      "base": "@aws/pdk.type_safe_api.SmithyProjectDefinition",
      "docs": {
        "stability": "stable",
        "summary": "Creates a project which defines a Smithy service, and transforms the Smithy model to OpenAPI."
      },
      "fqn": "@aws/pdk.type_safe_api.SmithyServiceProjectDefinition",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "type-safe-api/project/model/smithy/smithy-service-project-definition.ts",
          "line": 44
        },
        "parameters": [
          {
            "name": "project",
            "type": {
              "fqn": "projen.Project"
            }
          },
          {
            "name": "options",
            "type": {
              "fqn": "@aws/pdk.type_safe_api.SmithyServiceProjectDefinitionOptions"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "type-safe-api/project/model/smithy/smithy-service-project-definition.ts",
        "line": 28
      },
      "name": "SmithyServiceProjectDefinition",
      "namespace": "type_safe_api",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Directory of generated model source code."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/model/smithy/smithy-service-project-definition.ts",
            "line": 42
          },
          "name": "generatedModelDir",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Path to the generated OpenAPI specification, relative to the project outdir."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/model/smithy/smithy-service-project-definition.ts",
            "line": 32
          },
          "name": "openApiSpecificationPath",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Path to the json Smithy model, relative to the project outdir."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/model/smithy/smithy-service-project-definition.ts",
            "line": 37
          },
          "name": "smithyJsonModelPath",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "type-safe-api/project/model/smithy/smithy-service-project-definition:SmithyServiceProjectDefinition"
    },
    "@aws/pdk.type_safe_api.SmithyServiceProjectDefinitionOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for a smithy service project definition."
      },
      "fqn": "@aws/pdk.type_safe_api.SmithyServiceProjectDefinitionOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/model/smithy/smithy-service-project-definition.ts",
        "line": 14
      },
      "name": "SmithyServiceProjectDefinitionOptions",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Smithy engine options."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/model/smithy/smithy-service-project-definition.ts",
            "line": 18
          },
          "name": "smithyOptions",
          "type": {
            "fqn": "@aws/pdk.type_safe_api.SmithyModelOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The languages users have specified for handler projects (if any)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/model/smithy/smithy-service-project-definition.ts",
            "line": 22
          },
          "name": "handlerLanguages",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.type_safe_api.Language"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "type-safe-api/project/model/smithy/smithy-service-project-definition:SmithyServiceProjectDefinitionOptions"
    },
    "@aws/pdk.type_safe_api.SmithyShapeLibraryProject": {
      "assembly": "@aws/pdk",
      "base": "@aws/pdk.type_safe_api.SmithyBaseProject",
      "docs": {
        "stability": "stable",
        "summary": "A project for defining a library of Smithy shapes which can be consumed by other projects."
      },
      "fqn": "@aws/pdk.type_safe_api.SmithyShapeLibraryProject",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "type-safe-api/project/model/smithy/smithy-shape-library-project.ts",
          "line": 31
        },
        "parameters": [
          {
            "name": "options",
            "type": {
              "fqn": "@aws/pdk.type_safe_api.SmithyShapeLibraryProjectOptions"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "type-safe-api/project/model/smithy/smithy-shape-library-project.ts",
        "line": 25
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Returns the smithy project definition."
          },
          "locationInModule": {
            "filename": "type-safe-api/project/model/smithy/smithy-shape-library-project.ts",
            "line": 46
          },
          "name": "smithyProjectDefinition",
          "overrides": "@aws/pdk.type_safe_api.SmithyBaseProject",
          "returns": {
            "type": {
              "fqn": "@aws/pdk.type_safe_api.SmithyProjectDefinition"
            }
          }
        }
      ],
      "name": "SmithyShapeLibraryProject",
      "namespace": "type_safe_api",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Smithy model and build settings."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/model/smithy/smithy-shape-library-project.ts",
            "line": 29
          },
          "name": "definition",
          "type": {
            "fqn": "@aws/pdk.type_safe_api.SmithyProjectDefinition"
          }
        }
      ],
      "symbolId": "type-safe-api/project/model/smithy/smithy-shape-library-project:SmithyShapeLibraryProject"
    },
    "@aws/pdk.type_safe_api.SmithyShapeLibraryProjectOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for the Smithy shape library."
      },
      "fqn": "@aws/pdk.type_safe_api.SmithyShapeLibraryProjectOptions",
      "interfaces": [
        "@aws/pdk.type_safe_api.SmithyBaseProjectOptions",
        "@aws/pdk.type_safe_api.SmithyProjectDefinitionOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/model/smithy/smithy-shape-library-project.ts",
        "line": 18
      },
      "name": "SmithyShapeLibraryProjectOptions",
      "namespace": "type_safe_api",
      "symbolId": "type-safe-api/project/model/smithy/smithy-shape-library-project:SmithyShapeLibraryProjectOptions"
    },
    "@aws/pdk.type_safe_api.SmithyTransform": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "A smithy build transform."
      },
      "fqn": "@aws/pdk.type_safe_api.SmithyTransform",
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/model/smithy/types.ts",
        "line": 6
      },
      "name": "SmithyTransform",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Arguments for the transform."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/model/smithy/types.ts",
            "line": 14
          },
          "name": "args",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Name of the transform."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/model/smithy/types.ts",
            "line": 10
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "type-safe-api/project/model/smithy/types:SmithyTransform"
    },
    "@aws/pdk.type_safe_api.SnapStartFunction": {
      "assembly": "@aws/pdk",
      "base": "aws-cdk-lib.aws_lambda.Function",
      "docs": {
        "stability": "stable",
        "summary": "A lambda function which enables SnapStart on published versions by default."
      },
      "fqn": "@aws/pdk.type_safe_api.SnapStartFunction",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "type-safe-api/construct/functions/snap-start-java-function.ts",
          "line": 21
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws/pdk.type_safe_api.SnapStartFunctionProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "type-safe-api/construct/functions/snap-start-java-function.ts",
        "line": 20
      },
      "name": "SnapStartFunction",
      "namespace": "type_safe_api",
      "symbolId": "type-safe-api/construct/functions/snap-start-java-function:SnapStartFunction"
    },
    "@aws/pdk.type_safe_api.SnapStartFunctionProps": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for the SnapStartFunction construct."
      },
      "fqn": "@aws/pdk.type_safe_api.SnapStartFunctionProps",
      "interfaces": [
        "aws-cdk-lib.aws_lambda.FunctionProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/construct/functions/snap-start-java-function.ts",
        "line": 9
      },
      "name": "SnapStartFunctionProps",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "When true, disable snap start."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/functions/snap-start-java-function.ts",
            "line": 14
          },
          "name": "disableSnapStart",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "type-safe-api/construct/functions/snap-start-java-function:SnapStartFunctionProps"
    },
    "@aws/pdk.type_safe_api.TypeSafeApiAsyncModelBuild": {
      "assembly": "@aws/pdk",
      "base": "projen.Component",
      "docs": {
        "stability": "stable",
        "summary": "Adds a task to convert the OpenAPI specification into an AsyncAPI specification, which can be used for documentation generation."
      },
      "fqn": "@aws/pdk.type_safe_api.TypeSafeApiAsyncModelBuild",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "type-safe-api/project/model/type-safe-api-async-model-build.ts",
          "line": 33
        },
        "parameters": [
          {
            "name": "project",
            "type": {
              "fqn": "projen.Project"
            }
          },
          {
            "name": "options",
            "type": {
              "fqn": "@aws/pdk.type_safe_api.TypeSafeApiAsyncModelBuildOptions"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "type-safe-api/project/model/type-safe-api-async-model-build.ts",
        "line": 32
      },
      "name": "TypeSafeApiAsyncModelBuild",
      "namespace": "type_safe_api",
      "symbolId": "type-safe-api/project/model/type-safe-api-async-model-build:TypeSafeApiAsyncModelBuild"
    },
    "@aws/pdk.type_safe_api.TypeSafeApiAsyncModelBuildOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for converting OpenAPI to AsyncAPI."
      },
      "fqn": "@aws/pdk.type_safe_api.TypeSafeApiAsyncModelBuildOptions",
      "interfaces": [
        "@aws/pdk.type_safe_api.TypeSafeApiAsyncModelBuildOutputOptions",
        "@aws/pdk.type_safe_api.TypeSafeApiModelBuildOutputOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/model/type-safe-api-async-model-build.ts",
        "line": 24
      },
      "name": "TypeSafeApiAsyncModelBuildOptions",
      "namespace": "type_safe_api",
      "symbolId": "type-safe-api/project/model/type-safe-api-async-model-build:TypeSafeApiAsyncModelBuildOptions"
    },
    "@aws/pdk.type_safe_api.TypeSafeApiAsyncModelBuildOutputOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Output of the OpenAPI to AsyncAPI task."
      },
      "fqn": "@aws/pdk.type_safe_api.TypeSafeApiAsyncModelBuildOutputOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/model/type-safe-api-async-model-build.ts",
        "line": 14
      },
      "name": "TypeSafeApiAsyncModelBuildOutputOptions",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Path to the generated AsyncAPI specification (relative to the project root)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/model/type-safe-api-async-model-build.ts",
            "line": 18
          },
          "name": "asyncApiSpecFile",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "type-safe-api/project/model/type-safe-api-async-model-build:TypeSafeApiAsyncModelBuildOutputOptions"
    },
    "@aws/pdk.type_safe_api.TypeSafeApiIntegration": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Defines an integration for an individual API operation."
      },
      "fqn": "@aws/pdk.type_safe_api.TypeSafeApiIntegration",
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/construct/spec/api-gateway-integrations-types.ts",
        "line": 22
      },
      "name": "TypeSafeApiIntegration",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The integration to service the api operation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/spec/api-gateway-integrations-types.ts",
            "line": 26
          },
          "name": "integration",
          "type": {
            "fqn": "@aws/pdk.type_safe_api.Integration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The authorizer to use for this api operation (overrides the default)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/spec/api-gateway-integrations-types.ts",
            "line": 30
          },
          "name": "authorizer",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.type_safe_api.Authorizer"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Options for the integration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/spec/api-gateway-integrations-types.ts",
            "line": 34
          },
          "name": "options",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.type_safe_api.TypeSafeApiIntegrationOptions"
          }
        }
      ],
      "symbolId": "type-safe-api/construct/spec/api-gateway-integrations-types:TypeSafeApiIntegration"
    },
    "@aws/pdk.type_safe_api.TypeSafeApiIntegrationOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for an integration."
      },
      "fqn": "@aws/pdk.type_safe_api.TypeSafeApiIntegrationOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/construct/spec/api-gateway-integrations-types.ts",
        "line": 10
      },
      "name": "TypeSafeApiIntegrationOptions",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "Overrides the default setting if present.\nThis is only applicable when the API key source is HEADER.",
            "stability": "stable",
            "summary": "Require an API key to invoke this operation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/spec/api-gateway-integrations-types.ts",
            "line": 16
          },
          "name": "apiKeyRequired",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "type-safe-api/construct/spec/api-gateway-integrations-types:TypeSafeApiIntegrationOptions"
    },
    "@aws/pdk.type_safe_api.TypeSafeApiModelBuild": {
      "assembly": "@aws/pdk",
      "base": "projen.Component",
      "docs": {
        "stability": "stable",
        "summary": "Adds the build task for parsing/bundling an OpenAPI spec ready for use by code generation projects."
      },
      "fqn": "@aws/pdk.type_safe_api.TypeSafeApiModelBuild",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "type-safe-api/project/model/type-safe-api-model-build.ts",
          "line": 39
        },
        "parameters": [
          {
            "name": "project",
            "type": {
              "fqn": "projen.Project"
            }
          },
          {
            "name": "options",
            "type": {
              "fqn": "@aws/pdk.type_safe_api.TypeSafeApiModelBuildOptions"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "type-safe-api/project/model/type-safe-api-model-build.ts",
        "line": 38
      },
      "name": "TypeSafeApiModelBuild",
      "namespace": "type_safe_api",
      "symbolId": "type-safe-api/project/model/type-safe-api-model-build:TypeSafeApiModelBuild"
    },
    "@aws/pdk.type_safe_api.TypeSafeApiModelBuildOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for configuring the OpenAPI parse/bundle task."
      },
      "fqn": "@aws/pdk.type_safe_api.TypeSafeApiModelBuildOptions",
      "interfaces": [
        "@aws/pdk.type_safe_api.TypeSafeApiModelBuildOutputOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/model/type-safe-api-model-build.ts",
        "line": 23
      },
      "name": "TypeSafeApiModelBuildOptions",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Path to the OpenAPI specification."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/model/type-safe-api-model-build.ts",
            "line": 28
          },
          "name": "openApiSpecificationPath",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Optional path to the Smithy JSON model (for Smithy projects only)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/model/type-safe-api-model-build.ts",
            "line": 32
          },
          "name": "smithyJsonModelPath",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "type-safe-api/project/model/type-safe-api-model-build:TypeSafeApiModelBuildOptions"
    },
    "@aws/pdk.type_safe_api.TypeSafeApiModelBuildOutputOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Output for the OpenAPI parse/bundle task."
      },
      "fqn": "@aws/pdk.type_safe_api.TypeSafeApiModelBuildOutputOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/model/type-safe-api-model-build.ts",
        "line": 13
      },
      "name": "TypeSafeApiModelBuildOutputOptions",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Path of the parsed/bundled OpenAPI specification (relative to the project root)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/model/type-safe-api-model-build.ts",
            "line": 17
          },
          "name": "parsedSpecFile",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "type-safe-api/project/model/type-safe-api-model-build:TypeSafeApiModelBuildOutputOptions"
    },
    "@aws/pdk.type_safe_api.TypeSafeApiModelProjectOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws/pdk.type_safe_api.TypeSafeApiModelProjectOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/model/type-safe-api-model-project.ts",
        "line": 6
      },
      "name": "TypeSafeApiModelProjectOptions",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Language the model is defined in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/model/type-safe-api-model-project.ts",
            "line": 10
          },
          "name": "modelLanguage",
          "type": {
            "fqn": "@aws/pdk.type_safe_api.ModelLanguage"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Options for the model."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/model/type-safe-api-model-project.ts",
            "line": 14
          },
          "name": "modelOptions",
          "type": {
            "fqn": "@aws/pdk.type_safe_api.ModelOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The languages users have specified for handler projects (if any)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/model/type-safe-api-model-project.ts",
            "line": 18
          },
          "name": "handlerLanguages",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.type_safe_api.Language"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "type-safe-api/project/model/type-safe-api-model-project:TypeSafeApiModelProjectOptions"
    },
    "@aws/pdk.type_safe_api.TypeSafeApiOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options required alongside an Open API specification to create API Gateway resources."
      },
      "fqn": "@aws/pdk.type_safe_api.TypeSafeApiOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/construct/spec/api-gateway-integrations-types.ts",
        "line": 107
      },
      "name": "TypeSafeApiOptions",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "A mapping of API operation to its integration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/spec/api-gateway-integrations-types.ts",
            "line": 111
          },
          "name": "integrations",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.type_safe_api.TypeSafeApiIntegration"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Details about each operation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/spec/api-gateway-integrations-types.ts",
            "line": 115
          },
          "name": "operationLookup",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.type_safe_api.OperationDetails"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Options for API keys."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/spec/api-gateway-integrations-types.ts",
            "line": 128
          },
          "name": "apiKeyOptions",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.type_safe_api.ApiKeyOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Cross Origin Resource Sharing options for the API."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/spec/api-gateway-integrations-types.ts",
            "line": 124
          },
          "name": "corsOptions",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_apigateway.CorsOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "When omitted, no default authorizer is used.\nAuthorizers specified at the integration level will override this for that operation.",
            "stability": "stable",
            "summary": "The default authorizer to use for your api."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/spec/api-gateway-integrations-types.ts",
            "line": 120
          },
          "name": "defaultAuthorizer",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.type_safe_api.Authorizer"
          }
        }
      ],
      "symbolId": "type-safe-api/construct/spec/api-gateway-integrations-types:TypeSafeApiOptions"
    },
    "@aws/pdk.type_safe_api.TypeSafeApiProject": {
      "assembly": "@aws/pdk",
      "base": "projen.Project",
      "docs": {
        "custom": {
          "pjid": "type-safe-api"
        },
        "remarks": "Generates a CDK construct to deploy your API, as well as client and server code to help build your API quickly.",
        "stability": "stable",
        "summary": "Project for a type-safe API, defined using Smithy or OpenAPI."
      },
      "fqn": "@aws/pdk.type_safe_api.TypeSafeApiProject",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "type-safe-api/project/type-safe-api-project.ts",
          "line": 208
        },
        "parameters": [
          {
            "name": "options",
            "type": {
              "fqn": "@aws/pdk.type_safe_api.TypeSafeApiProjectOptions"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "type-safe-api/project/type-safe-api-project.ts",
        "line": 177
      },
      "methods": [
        {
          "docs": {
            "custom": {
              "inheritDoc": "true"
            },
            "remarks": "Order is *not* guaranteed.",
            "stability": "stable",
            "summary": "Called after all components are synthesized."
          },
          "locationInModule": {
            "filename": "type-safe-api/project/type-safe-api-project.ts",
            "line": 643
          },
          "name": "postSynthesize",
          "overrides": "projen.Project"
        }
      ],
      "name": "TypeSafeApiProject",
      "namespace": "type_safe_api",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Collections of all sub-projects managed by this project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/type-safe-api-project.ts",
            "line": 206
          },
          "name": "all",
          "type": {
            "fqn": "@aws/pdk.type_safe_api.ProjectCollections"
          }
        },
        {
          "docs": {
            "remarks": "Only the properties corresponding to specified `documentation.formats` will be defined.",
            "stability": "stable",
            "summary": "Generated documentation projects."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/type-safe-api-project.ts",
            "line": 202
          },
          "name": "documentation",
          "type": {
            "fqn": "@aws/pdk.type_safe_api.GeneratedDocumentationProjects"
          }
        },
        {
          "docs": {
            "remarks": "Only the properties corresponding to `handlers.languages` will be defined.",
            "stability": "stable",
            "summary": "Lambda handlers projects."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/type-safe-api-project.ts",
            "line": 194
          },
          "name": "handlers",
          "type": {
            "fqn": "@aws/pdk.type_safe_api.GeneratedCodeProjects"
          }
        },
        {
          "docs": {
            "remarks": "Only the property corresponding to `infrastructure.language` will be defined.",
            "stability": "stable",
            "summary": "Generated infrastructure projects."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/type-safe-api-project.ts",
            "line": 190
          },
          "name": "infrastructure",
          "type": {
            "fqn": "@aws/pdk.type_safe_api.GeneratedCodeProjects"
          }
        },
        {
          "docs": {
            "remarks": "Only the properties corresponding to specified `library.libraries` will be defined.",
            "stability": "stable",
            "summary": "Generated library projects."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/type-safe-api-project.ts",
            "line": 198
          },
          "name": "library",
          "type": {
            "fqn": "@aws/pdk.type_safe_api.GeneratedLibraryProjects"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Project for the api model."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/type-safe-api-project.ts",
            "line": 181
          },
          "name": "model",
          "type": {
            "fqn": "@aws/pdk.type_safe_api.ModelProject"
          }
        },
        {
          "docs": {
            "remarks": "When `runtime.languages` includes the corresponding language, the project can be\nassumed to be defined.",
            "stability": "stable",
            "summary": "Generated runtime projects."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/type-safe-api-project.ts",
            "line": 186
          },
          "name": "runtime",
          "type": {
            "fqn": "@aws/pdk.type_safe_api.GeneratedCodeProjects"
          }
        }
      ],
      "symbolId": "type-safe-api/project/type-safe-api-project:TypeSafeApiProject"
    },
    "@aws/pdk.type_safe_api.TypeSafeApiProjectOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for the TypeSafeApiProject."
      },
      "fqn": "@aws/pdk.type_safe_api.TypeSafeApiProjectOptions",
      "interfaces": [
        "projen.ProjectOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/type-safe-api-project.ts",
        "line": 137
      },
      "name": "TypeSafeApiProjectOptions",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Configuration for generated infrastructure."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/type-safe-api-project.ts",
            "line": 149
          },
          "name": "infrastructure",
          "type": {
            "fqn": "@aws/pdk.type_safe_api.InfrastructureConfiguration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Configuration for the API model."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/type-safe-api-project.ts",
            "line": 141
          },
          "name": "model",
          "type": {
            "fqn": "@aws/pdk.type_safe_api.ModelConfiguration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Whether to commit the code generated by the OpenAPI Generator."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/type-safe-api-project.ts",
            "line": 167
          },
          "name": "commitGeneratedCode",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Configuration for generated documentation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/type-safe-api-project.ts",
            "line": 157
          },
          "name": "documentation",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.type_safe_api.DocumentationConfiguration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Configuration for lambda handlers for implementing the API."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/type-safe-api-project.ts",
            "line": 153
          },
          "name": "handlers",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.type_safe_api.HandlersConfiguration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Libraries are projects which are generated from your model, but are not\nfully-fledged runtimes, for example react hooks or clients in languages that aren't supported as runtimes.",
            "stability": "stable",
            "summary": "Configuration for generated libraries."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/type-safe-api-project.ts",
            "line": 162
          },
          "name": "library",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.type_safe_api.LibraryConfiguration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Configuration for generated runtime projects (containing types, clients and server code)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/type-safe-api-project.ts",
            "line": 145
          },
          "name": "runtime",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.type_safe_api.RuntimeConfiguration"
          }
        }
      ],
      "symbolId": "type-safe-api/project/type-safe-api-project:TypeSafeApiProjectOptions"
    },
    "@aws/pdk.type_safe_api.TypeSafeApiWebAclOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Configuration for the Web ACL associated with the API."
      },
      "fqn": "@aws/pdk.type_safe_api.TypeSafeApiWebAclOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/construct/waf/types.ts",
        "line": 63
      },
      "name": "TypeSafeApiWebAclOptions",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- undefined",
            "stability": "stable",
            "summary": "List of cidr ranges to allow."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/waf/types.ts",
            "line": 83
          },
          "name": "cidrAllowList",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.type_safe_api.CidrAllowList"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "You can also use this option if you would like to create\nyour own WebACL and associate it yourself.",
            "stability": "stable",
            "summary": "If set to true, no WebACL will be associated with the API."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/waf/types.ts",
            "line": 69
          },
          "name": "disable",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- [{ vendor: \"AWS\", name: \"AWSManagedRulesCommonRuleSet\" }]",
            "stability": "stable",
            "summary": "List of managed rules to apply to the web acl."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/waf/types.ts",
            "line": 76
          },
          "name": "managedRules",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.type_safe_api.ManagedRule"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "type-safe-api/construct/waf/types:TypeSafeApiWebAclOptions"
    },
    "@aws/pdk.type_safe_api.TypeSafeRestApi": {
      "assembly": "@aws/pdk",
      "base": "constructs.Construct",
      "docs": {
        "stability": "stable",
        "summary": "A construct for creating an api gateway rest api based on the definition in the OpenAPI spec."
      },
      "fqn": "@aws/pdk.type_safe_api.TypeSafeRestApi",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "type-safe-api/construct/type-safe-rest-api.ts",
          "line": 127
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws/pdk.type_safe_api.TypeSafeRestApiProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "type-safe-api/construct/type-safe-rest-api.ts",
        "line": 105
      },
      "name": "TypeSafeRestApi",
      "namespace": "type_safe_api",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Underlying API Gateway API construct."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/type-safe-rest-api.ts",
            "line": 109
          },
          "name": "api",
          "type": {
            "fqn": "aws-cdk-lib.aws_apigateway.SpecRestApi"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The OpenAPI specification with applied API gateway extensions."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/type-safe-rest-api.ts",
            "line": 113
          },
          "name": "extendedApiSpecification",
          "type": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Reference to the IP set if created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/type-safe-rest-api.ts",
            "line": 121
          },
          "name": "ipSet",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_wafv2.CfnIPSet"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Reference to the webacl, if created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/type-safe-rest-api.ts",
            "line": 117
          },
          "name": "webAcl",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_wafv2.CfnWebACL"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Reference to the web acl association if created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/type-safe-rest-api.ts",
            "line": 125
          },
          "name": "webAclAssociation",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_wafv2.CfnWebACLAssociation"
          }
        }
      ],
      "symbolId": "type-safe-api/construct/type-safe-rest-api:TypeSafeRestApi"
    },
    "@aws/pdk.type_safe_api.TypeSafeRestApiProps": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Configuration for the TypeSafeRestApi construct."
      },
      "fqn": "@aws/pdk.type_safe_api.TypeSafeRestApiProps",
      "interfaces": [
        "aws-cdk-lib.aws_apigateway.RestApiBaseProps",
        "@aws/pdk.type_safe_api.TypeSafeApiOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/construct/type-safe-rest-api.ts",
        "line": 59
      },
      "name": "TypeSafeRestApiProps",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Path to the JSON open api spec."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/type-safe-rest-api.ts",
            "line": 65
          },
          "name": "specPath",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Note that Type Safe API automatically configures request validation for you, and defines a\ndefault BAD_REQUEST_BODY gateway response which returns the validation error message. You can\nuse this property to override this gateway response if desired.",
            "see": "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-gatewayResponse-definition.html",
            "stability": "stable",
            "summary": "Optional gateway responses for the API."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/type-safe-rest-api.ts",
            "line": 99
          },
          "name": "gatewayResponses",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "aws-cdk-lib.aws_apigateway.GatewayResponseOptions"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Compression is disabled.",
            "remarks": "When compression is enabled, compression or\ndecompression is not applied on the payload if the payload size is\nsmaller than this value. Setting it to zero allows compression for any\npayload size.",
            "stability": "stable",
            "summary": "A Size(in bytes, kibibytes, mebibytes etc) that is used to enable compression (with non-negative between 0 and 10485760 (10M) bytes, inclusive) or disable compression (when undefined) on an API."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/type-safe-rest-api.ts",
            "line": 82
          },
          "name": "minCompressionSize",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.Size"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "If this is undesired,\nuse this option to specify the output bucket.",
            "stability": "stable",
            "summary": "By default, the spec is prepared and outputted into the CDK assets bucket."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/type-safe-rest-api.ts",
            "line": 88
          },
          "name": "outputSpecBucket",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_s3.IBucket"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "By default, a Web ACL with the AWS default managed\nrule set will be associated with the API. These options may disable or override the defaults.",
            "stability": "stable",
            "summary": "Options for the AWS WAF v2 WebACL associated with the api."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/type-safe-rest-api.ts",
            "line": 70
          },
          "name": "webAclOptions",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.type_safe_api.TypeSafeApiWebAclOptions"
          }
        }
      ],
      "symbolId": "type-safe-api/construct/type-safe-rest-api:TypeSafeRestApiProps"
    },
    "@aws/pdk.type_safe_api.TypeSafeWebSocketApiModelConfiguration": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws/pdk.type_safe_api.TypeSafeWebSocketApiModelConfiguration",
      "interfaces": [
        "@aws/pdk.type_safe_api.ModelConfiguration"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/type-safe-websocket-api-project.ts",
        "line": 122
      },
      "name": "TypeSafeWebSocketApiModelConfiguration",
      "namespace": "type_safe_api",
      "symbolId": "type-safe-api/project/type-safe-websocket-api-project:TypeSafeWebSocketApiModelConfiguration"
    },
    "@aws/pdk.type_safe_api.TypeSafeWebSocketApiModelProjectOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws/pdk.type_safe_api.TypeSafeWebSocketApiModelProjectOptions",
      "interfaces": [
        "@aws/pdk.type_safe_api.TypeSafeApiModelProjectOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/model/type-safe-websocket-api-model-project.ts",
        "line": 5
      },
      "name": "TypeSafeWebSocketApiModelProjectOptions",
      "namespace": "type_safe_api",
      "symbolId": "type-safe-api/project/model/type-safe-websocket-api-model-project:TypeSafeWebSocketApiModelProjectOptions"
    },
    "@aws/pdk.type_safe_api.TypeSafeWebSocketApiProject": {
      "assembly": "@aws/pdk",
      "base": "projen.Project",
      "docs": {
        "custom": {
          "pjid": "type-safe-ws-api"
        },
        "remarks": "Generates a CDK construct to deploy your API, as well as client and server code to help build your API quickly.",
        "stability": "experimental",
        "summary": "Project for a Type Safe WebSocket API, defined using Smithy or OpenAPI."
      },
      "fqn": "@aws/pdk.type_safe_api.TypeSafeWebSocketApiProject",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "type-safe-api/project/type-safe-websocket-api-project.ts",
          "line": 194
        },
        "parameters": [
          {
            "name": "options",
            "type": {
              "fqn": "@aws/pdk.type_safe_api.TypeSafeWebSocketApiProjectOptions"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "type-safe-api/project/type-safe-websocket-api-project.ts",
        "line": 163
      },
      "name": "TypeSafeWebSocketApiProject",
      "namespace": "type_safe_api",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Collections of all sub-projects managed by this project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/type-safe-websocket-api-project.ts",
            "line": 192
          },
          "name": "all",
          "type": {
            "fqn": "@aws/pdk.type_safe_api.ProjectCollections"
          }
        },
        {
          "docs": {
            "remarks": "Only the properties corresponding to specified `documentation.formats` will be defined.",
            "stability": "experimental",
            "summary": "Generated documentation projects."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/type-safe-websocket-api-project.ts",
            "line": 188
          },
          "name": "documentation",
          "type": {
            "fqn": "@aws/pdk.type_safe_api.GeneratedWebSocketDocumentationProjects"
          }
        },
        {
          "docs": {
            "remarks": "Only the properties corresponding to `handlers.languages` will be defined.",
            "stability": "experimental",
            "summary": "Lambda handlers projects."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/type-safe-websocket-api-project.ts",
            "line": 180
          },
          "name": "handlers",
          "type": {
            "fqn": "@aws/pdk.type_safe_api.GeneratedCodeProjects"
          }
        },
        {
          "docs": {
            "remarks": "Only the property corresponding to `infrastructure.language` will be defined.",
            "stability": "experimental",
            "summary": "Generated infrastructure projects."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/type-safe-websocket-api-project.ts",
            "line": 176
          },
          "name": "infrastructure",
          "type": {
            "fqn": "@aws/pdk.type_safe_api.GeneratedCodeProjects"
          }
        },
        {
          "docs": {
            "remarks": "Only the properties corresponding to specified `library.libraries` will be defined.",
            "stability": "experimental",
            "summary": "Generated library projects."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/type-safe-websocket-api-project.ts",
            "line": 184
          },
          "name": "library",
          "type": {
            "fqn": "@aws/pdk.type_safe_api.GeneratedWebSocketLibraryProjects"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Project for the api model."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/type-safe-websocket-api-project.ts",
            "line": 167
          },
          "name": "model",
          "type": {
            "fqn": "@aws/pdk.type_safe_api.WebSocketModelProject"
          }
        },
        {
          "docs": {
            "remarks": "When `runtime.languages` includes the corresponding language, the project can be\nassumed to be defined.",
            "stability": "experimental",
            "summary": "Generated runtime projects."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/type-safe-websocket-api-project.ts",
            "line": 172
          },
          "name": "runtime",
          "type": {
            "fqn": "@aws/pdk.type_safe_api.GeneratedCodeProjects"
          }
        }
      ],
      "symbolId": "type-safe-api/project/type-safe-websocket-api-project:TypeSafeWebSocketApiProject"
    },
    "@aws/pdk.type_safe_api.TypeSafeWebSocketApiProjectOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for the TypeSafeWebSocketApiProject."
      },
      "fqn": "@aws/pdk.type_safe_api.TypeSafeWebSocketApiProjectOptions",
      "interfaces": [
        "projen.ProjectOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/type-safe-websocket-api-project.ts",
        "line": 128
      },
      "name": "TypeSafeWebSocketApiProjectOptions",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Configuration for generated infrastructure."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/type-safe-websocket-api-project.ts",
            "line": 140
          },
          "name": "infrastructure",
          "type": {
            "fqn": "@aws/pdk.type_safe_api.WebSocketInfrastructureConfiguration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Configuration for the API model."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/type-safe-websocket-api-project.ts",
            "line": 132
          },
          "name": "model",
          "type": {
            "fqn": "@aws/pdk.type_safe_api.TypeSafeWebSocketApiModelConfiguration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Configuration for generated documentation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/type-safe-websocket-api-project.ts",
            "line": 148
          },
          "name": "documentation",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.type_safe_api.WebSocketDocumentationConfiguration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Configuration for lambda handlers for implementing the API."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/type-safe-websocket-api-project.ts",
            "line": 144
          },
          "name": "handlers",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.type_safe_api.WebSocketHandlersConfiguration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "These include clients for interacting with your websocket API",
            "stability": "stable",
            "summary": "Configuration for generated libraries."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/type-safe-websocket-api-project.ts",
            "line": 152
          },
          "name": "library",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.type_safe_api.WebSocketLibraryConfiguration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Configuration for generated runtime projects (containing types, clients and server code)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/type-safe-websocket-api-project.ts",
            "line": 136
          },
          "name": "runtime",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.type_safe_api.WebSocketRuntimeConfiguration"
          }
        }
      ],
      "symbolId": "type-safe-api/project/type-safe-websocket-api-project:TypeSafeWebSocketApiProjectOptions"
    },
    "@aws/pdk.type_safe_api.TypeSafeWebsocketApi": {
      "assembly": "@aws/pdk",
      "base": "constructs.Construct",
      "docs": {
        "stability": "stable",
        "summary": "A construct for creating a websocket API, based on the provided spec and integrations."
      },
      "fqn": "@aws/pdk.type_safe_api.TypeSafeWebsocketApi",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "type-safe-api/construct/type-safe-websocket-api.ts",
          "line": 141
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws/pdk.type_safe_api.TypeSafeWebsocketApiProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "type-safe-api/construct/type-safe-websocket-api.ts",
        "line": 129
      },
      "name": "TypeSafeWebsocketApi",
      "namespace": "type_safe_api",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Reference to the websocket API."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/type-safe-websocket-api.ts",
            "line": 133
          },
          "name": "api",
          "type": {
            "fqn": "aws-cdk-lib.aws_apigatewayv2.WebSocketApi"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Reference to the default deploy stage."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/type-safe-websocket-api.ts",
            "line": 137
          },
          "name": "defaultStage",
          "type": {
            "fqn": "aws-cdk-lib.aws_apigatewayv2.WebSocketStage"
          }
        }
      ],
      "symbolId": "type-safe-api/construct/type-safe-websocket-api:TypeSafeWebsocketApi"
    },
    "@aws/pdk.type_safe_api.TypeSafeWebsocketApiIntegration": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Represents an integration for a route."
      },
      "fqn": "@aws/pdk.type_safe_api.TypeSafeWebsocketApiIntegration",
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/construct/type-safe-websocket-api.ts",
        "line": 52
      },
      "name": "TypeSafeWebsocketApiIntegration",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The integration to service the route."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/type-safe-websocket-api.ts",
            "line": 56
          },
          "name": "integration",
          "type": {
            "fqn": "aws-cdk-lib.aws_apigatewayv2.WebSocketRouteIntegration"
          }
        }
      ],
      "symbolId": "type-safe-api/construct/type-safe-websocket-api:TypeSafeWebsocketApiIntegration"
    },
    "@aws/pdk.type_safe_api.TypeSafeWebsocketApiProps": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for a Type Safe WebSocket API."
      },
      "fqn": "@aws/pdk.type_safe_api.TypeSafeWebsocketApiProps",
      "interfaces": [
        "@aws/pdk.type_safe_api.WebSocketApiProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/construct/type-safe-websocket-api.ts",
        "line": 73
      },
      "name": "TypeSafeWebsocketApiProps",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "WebSocket routes and their corresponding integrations."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/type-safe-websocket-api.ts",
            "line": 85
          },
          "name": "integrations",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.type_safe_api.TypeSafeWebsocketApiIntegration"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Details about each operation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/type-safe-websocket-api.ts",
            "line": 81
          },
          "name": "operationLookup",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.type_safe_api.WebsocketOperationDetails"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Path to the websocket api specification json file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/type-safe-websocket-api.ts",
            "line": 77
          },
          "name": "specPath",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "NONE",
            "stability": "stable",
            "summary": "Authorizer to use for the API (applied to the $connect route)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/type-safe-websocket-api.ts",
            "line": 102
          },
          "name": "authorizer",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_apigatewayv2.IWebSocketRouteAuthorizer"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "mocked",
            "stability": "stable",
            "summary": "Integration for the $connect route (invoked when a new client connects)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/type-safe-websocket-api.ts",
            "line": 92
          },
          "name": "connect",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.type_safe_api.TypeSafeWebsocketApiIntegration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Disable access logging."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/type-safe-websocket-api.ts",
            "line": 123
          },
          "name": "disableAccessLogging",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "Set to true if you would like to manage these permissions manually.",
            "stability": "stable",
            "summary": "By default, all lambda integrations are granted management API access for the websocket API to send messages, disconnect clients, etc."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/type-safe-websocket-api.ts",
            "line": 112
          },
          "name": "disableGrantManagementAccessToLambdas",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "Set to true to disable this (mock integrations will respond with errors)",
            "stability": "stable",
            "summary": "By default, all mock integrations will automatically be configured with integration responses such that the integration is considered successful."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/type-safe-websocket-api.ts",
            "line": 118
          },
          "name": "disableMockIntegrationResponses",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "mocked",
            "stability": "stable",
            "summary": "Integration for the $disconnect route (invoked when a client disconnects)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/type-safe-websocket-api.ts",
            "line": 97
          },
          "name": "disconnect",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.type_safe_api.TypeSafeWebsocketApiIntegration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Options for the default stage."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/type-safe-websocket-api.ts",
            "line": 106
          },
          "name": "stageProps",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.type_safe_api.WebSocketStageProps"
          }
        }
      ],
      "symbolId": "type-safe-api/construct/type-safe-websocket-api:TypeSafeWebsocketApiProps"
    },
    "@aws/pdk.type_safe_api.TypeScriptProjectOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "TypeScriptProjectOptions."
      },
      "fqn": "@aws/pdk.type_safe_api.TypeScriptProjectOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/typescript-project-options.ts",
        "line": 7
      },
      "name": "TypeScriptProjectOptions",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "This is normally only allowed for libraries. For apps, there's no meaning\nfor specifying these.",
            "stability": "experimental",
            "summary": "Allow the project to include `peerDependencies` and `bundledDependencies`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 796
          },
          "name": "allowLibraryDependencies",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"dist\"",
            "stability": "experimental",
            "summary": "A directory which will contain build artifacts."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 356
          },
          "name": "artifactsDirectory",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Author's e-mail."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 788
          },
          "name": "authorEmail",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Author's name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 783
          },
          "name": "authorName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Is the author an organization."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 778
          },
          "name": "authorOrganization",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Author's URL / Website."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 773
          },
          "name": "authorUrl",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- auto approve is disabled",
            "stability": "experimental",
            "summary": "Enable and configure the 'auto approve' workflow."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 912
          },
          "name": "autoApproveOptions",
          "optional": true,
          "type": {
            "fqn": "projen.github.AutoApproveOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- true",
            "remarks": "Throw if set to true but `autoApproveOptions` are not defined.",
            "stability": "experimental",
            "summary": "Automatically approve deps upgrade PRs, allowing them to be merged by mergify (if configued)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 350
          },
          "name": "autoApproveUpgrades",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Automatically add all executables under the `bin` directory to your `package.json` file under the `bin` section."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 768
          },
          "name": "autoDetectBin",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "Has no effect if `github.mergify`\nis set to false.",
            "stability": "experimental",
            "summary": "Enable automatic merging on GitHub."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 906
          },
          "name": "autoMerge",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- see defaults in `AutoMergeOptions`",
            "remarks": "Has no effect if\n`github.mergify` or `autoMerge` is set to false.",
            "stability": "experimental",
            "summary": "Configure options for automatic merging on GitHub."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 898
          },
          "name": "autoMergeOptions",
          "optional": true,
          "type": {
            "fqn": "projen.github.AutoMergeOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "You can use this option to add/customize how binaries are represented in\nyour `package.json`, but unless `autoDetectBin` is `false`, every\nexecutable file under `bin` will automatically be added to this section.",
            "stability": "experimental",
            "summary": "Binary programs vended with your module."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 762
          },
          "name": "bin",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The email address to which issues should be reported."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 754
          },
          "name": "bugsEmail",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The url to your project's issue tracker."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 749
          },
          "name": "bugsUrl",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- true if not a subproject",
            "stability": "experimental",
            "summary": "Define a GitHub workflow for building PRs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 343
          },
          "name": "buildWorkflow",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Options for PR build workflow."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 337
          },
          "name": "buildWorkflowOptions",
          "optional": true,
          "type": {
            "fqn": "projen.javascript.BuildWorkflowOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"{ pullRequest: {}, workflowDispatch: {} }\"",
            "deprecated": "- Use `buildWorkflowOptions.workflowTriggers`",
            "stability": "deprecated",
            "summary": "Build workflow triggers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 332
          },
          "name": "buildWorkflowTriggers",
          "optional": true,
          "type": {
            "fqn": "projen.github.workflows.Triggers"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "These modules will be\nadded both to the `dependencies` section and `bundledDependencies` section of\nyour `package.json`.\n\nThe recommendation is to only specify the module name here (e.g.\n`express`). This will behave similar to `yarn add` or `npm install` in the\nsense that it will add the module as a dependency to your `package.json`\nfile with the latest version (`^`). You can specify semver requirements in\nthe same syntax passed to `npm i` or `yarn add` (e.g. `express@^2`) and\nthis will be what you `package.json` will eventually include.",
            "stability": "experimental",
            "summary": "List of dependencies to bundle into this module."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 744
          },
          "name": "bundledDeps",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Options for `Bundler`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 325
          },
          "name": "bundlerOptions",
          "optional": true,
          "type": {
            "fqn": "projen.javascript.BundlerOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no license checks are run during the build and all licenses will be accepted",
            "remarks": "This setting will cause the build to fail, if any prohibited or not allowed licenses ares encountered.",
            "stability": "experimental",
            "summary": "Configure which licenses should be deemed acceptable for use by dependencies."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 320
          },
          "name": "checkLicenses",
          "optional": true,
          "type": {
            "fqn": "projen.javascript.LicenseCheckerOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- true, but false for subprojects",
            "stability": "experimental",
            "summary": "Add a `clobber` task which resets the repo to origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 890
          },
          "name": "clobber",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- undefined",
            "remarks": "This is required if publishing packages to, or installing scoped packages from AWS CodeArtifact",
            "stability": "experimental",
            "summary": "Options for npm packages using AWS CodeArtifact."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 729
          },
          "name": "codeArtifactOptions",
          "optional": true,
          "type": {
            "fqn": "projen.javascript.CodeArtifactOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Define a GitHub workflow step for sending code coverage metrics to https://codecov.io/ Uses codecov/codecov-action@v4 A secret is required for private repos. Configured with `@codeCovTokenSecret`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 313
          },
          "name": "codeCov",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- if this option is not specified, only public repositories are supported",
            "stability": "experimental",
            "summary": "Define the secret name for a specified https://codecov.io/ token A secret is required to send coverage for private repositories."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 307
          },
          "name": "codeCovTokenSecret",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Whether to commit the managed files by default."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 981
          },
          "name": "commitGenerated",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- defaults to the value of authorName or \"\" if `authorName` is undefined.",
            "stability": "experimental",
            "summary": "License copyright owner."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 301
          },
          "name": "copyrightOwner",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- current year",
            "stability": "experimental",
            "summary": "The copyright years to put in the LICENSE file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 295
          },
          "name": "copyrightPeriod",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"main\"",
            "stability": "experimental",
            "summary": "The name of the main release branch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 362
          },
          "name": "defaultReleaseBranch",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "Cannot be used in conjunction with `depsUpgrade`.",
            "stability": "experimental",
            "summary": "Use dependabot to handle dependency upgrades."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 289
          },
          "name": "dependabot",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default options",
            "stability": "experimental",
            "summary": "Options for dependabot."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 282
          },
          "name": "dependabotOptions",
          "optional": true,
          "type": {
            "fqn": "projen.github.DependabotOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "featured": "true"
            },
            "default": "[]",
            "remarks": "The recommendation is to only specify the module name here (e.g.\n`express`). This will behave similar to `yarn add` or `npm install` in the\nsense that it will add the module as a dependency to your `package.json`\nfile with the latest version (`^`). You can specify semver requirements in\nthe same syntax passed to `npm i` or `yarn add` (e.g. `express@^2`) and\nthis will be what you `package.json` will eventually include.",
            "stability": "experimental",
            "summary": "Runtime dependencies of this module."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 722
          },
          "name": "deps",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "Cannot be used in conjunction with `dependabot`.",
            "stability": "experimental",
            "summary": "Use tasks and github workflows to handle dependency upgrades."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 276
          },
          "name": "depsUpgrade",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default options",
            "stability": "experimental",
            "summary": "Options for `UpgradeDependencies`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 269
          },
          "name": "depsUpgradeOptions",
          "optional": true,
          "type": {
            "fqn": "projen.javascript.UpgradeDependenciesOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "featured": "true"
            },
            "remarks": "It can be used when searching for packages in a package manager as well.\nSee https://classic.yarnpkg.com/en/docs/package-json/#toc-description",
            "stability": "experimental",
            "summary": "The description is just a string that helps people understand the purpose of the package."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 709
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Add a VSCode development environment (used for GitHub Codespaces)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 884
          },
          "name": "devContainer",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "featured": "true"
            },
            "default": "[]",
            "remarks": "These dependencies will only be\navailable in your build environment but will not be fetched when this\nmodule is consumed.\n\nThe recommendation is to only specify the module name here (e.g.\n`express`). This will behave similar to `yarn add` or `npm install` in the\nsense that it will add the module as a dependency to your `package.json`\nfile with the latest version (`^`). You can specify semver requirements in\nthe same syntax passed to `npm i` or `yarn add` (e.g. `express@^2`) and\nthis will be what you `package.json` will eventually include.",
            "stability": "experimental",
            "summary": "Build dependencies for this module."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 701
          },
          "name": "devDeps",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Do not generate a `tsconfig.json` file (used by jsii projects since tsconfig.json is generated by the jsii compiler)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 120
          },
          "name": "disableTsconfig",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Do not generate a `tsconfig.dev.json` file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 114
          },
          "name": "disableTsconfigDev",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Docgen by Typedoc."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 108
          },
          "name": "docgen",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"docs\"",
            "stability": "experimental",
            "summary": "Docs directory."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 102
          },
          "name": "docsDirectory",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"lib/index.js\"",
            "stability": "experimental",
            "summary": "Module entrypoint (`main` in `package.json`). Set to an empty string to not include `main` in your package.json."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 684
          },
          "name": "entrypoint",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- .d.ts file derived from the project's entrypoint (usually lib/index.d.ts)",
            "stability": "experimental",
            "summary": "The .d.ts file that includes the type declarations for this module."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 96
          },
          "name": "entrypointTypes",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Setup eslint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 90
          },
          "name": "eslint",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- opinionated default options",
            "stability": "experimental",
            "summary": "Eslint options."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 84
          },
          "name": "eslintOptions",
          "optional": true,
          "type": {
            "fqn": "projen.javascript.EslintOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "Enabled by default for root projects. Disabled for non-root projects.",
            "stability": "experimental",
            "summary": "Enable GitHub integration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 878
          },
          "name": "github",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- see GitHubOptions",
            "stability": "experimental",
            "summary": "Options for GitHub integration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 871
          },
          "name": "githubOptions",
          "optional": true,
          "type": {
            "fqn": "projen.github.GitHubOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Additional entries to .gitignore."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 263
          },
          "name": "gitignore",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Configuration options for .gitignore file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 975
          },
          "name": "gitIgnoreOptions",
          "optional": true,
          "type": {
            "fqn": "projen.IgnoreFileOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Configuration options for git."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 970
          },
          "name": "gitOptions",
          "optional": true,
          "type": {
            "fqn": "projen.GitOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Add a Gitpod development environment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 865
          },
          "name": "gitpod",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Package's Homepage / Website."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 677
          },
          "name": "homepage",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Setup jest unit tests."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 258
          },
          "name": "jest",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default options",
            "stability": "experimental",
            "summary": "Jest options."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 252
          },
          "name": "jestOptions",
          "optional": true,
          "type": {
            "fqn": "projen.javascript.JestOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"latest\"",
            "stability": "experimental",
            "summary": "Version requirement of `publib` which is used to publish modules to npm."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 521
          },
          "name": "jsiiReleaseVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Keywords to include in `package.json`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 672
          },
          "name": "keywords",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"lib\"",
            "stability": "experimental",
            "summary": "Typescript  artifacts output directory."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 78
          },
          "name": "libdir",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"Apache-2.0\"",
            "remarks": "See https://github.com/projen/projen/tree/main/license-text for a list of supported licenses.\nUse the `licensed` option if you want to no license to be specified.",
            "stability": "experimental",
            "summary": "License's SPDX identifier."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 667
          },
          "name": "license",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Indicates if a license should be added."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 659
          },
          "name": "licensed",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "{}",
            "stability": "experimental",
            "summary": "Configure logging options such as verbosity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 965
          },
          "name": "logging",
          "optional": true,
          "type": {
            "fqn": "projen.LoggerOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Major version is not enforced.",
            "remarks": "If this is specified, we bump the latest version of this major version line.\nIf not specified, we bump the global latest version.",
            "stability": "experimental",
            "summary": "Major version to release from the default branch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 515
          },
          "name": "majorVersion",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no max",
            "stability": "experimental",
            "summary": "Minimum node.js version to require via `engines` (inclusive)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 653
          },
          "name": "maxNodeVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "deprecated": "use `githubOptions.mergify` instead",
            "stability": "deprecated",
            "summary": "Whether mergify should be enabled on this repository or not."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 859
          },
          "name": "mergify",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default options",
            "deprecated": "use `githubOptions.mergifyOptions` instead",
            "stability": "deprecated",
            "summary": "Options for mergify."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 852
          },
          "name": "mergifyOptions",
          "optional": true,
          "type": {
            "fqn": "projen.github.MergifyOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No minimum version is being enforced",
            "remarks": "This can be useful to set to 1, as breaking changes before the 1.x major\nrelease are not incrementing the major version number.\n\nCan not be set together with `majorVersion`.",
            "stability": "experimental",
            "summary": "Minimal Major version to release."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 507
          },
          "name": "minMajorVersion",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no \"engines\" specified",
            "stability": "experimental",
            "summary": "Minimum Node.js version to require via package.json `engines` (inclusive)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 647
          },
          "name": "minNodeVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "deprecated": "- Use `buildWorkflowOptions.mutableBuild`",
            "remarks": "This means\nthat any files synthesized by projen or e.g. test snapshots will always be up-to-date\nbefore a PR is merged.\n\nImplies that PR builds do not have anti-tamper checks.",
            "stability": "deprecated",
            "summary": "Automatically update files modified during builds to pull-request branches."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 246
          },
          "name": "mutableBuild",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "featured": "true"
            },
            "default": "$BASEDIR",
            "stability": "experimental",
            "summary": "This is the name of your project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 988
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- for scoped packages (e.g. `foo@bar`), the default is\n`NpmAccess.RESTRICTED`, for non-scoped packages, the default is\n`NpmAccess.PUBLIC`.",
            "stability": "experimental",
            "summary": "Access level of the npm package."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 641
          },
          "name": "npmAccess",
          "optional": true,
          "type": {
            "fqn": "projen.javascript.NpmAccess"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"latest\"",
            "remarks": "To set the npm dist-tag for release branches, set the `npmDistTag` property\nfor each branch.",
            "stability": "experimental",
            "summary": "The npmDistTag to use when publishing from the default branch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 497
          },
          "name": "npmDistTag",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "deprecated": "- use `project.addPackageIgnore`",
            "stability": "deprecated",
            "summary": "Additional entries to .npmignore."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 234
          },
          "name": "npmignore",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Defines an .npmignore file. Normally this is only needed for libraries that are packaged as tarballs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 228
          },
          "name": "npmignoreEnabled",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Configuration options for .npmignore file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 222
          },
          "name": "npmIgnoreOptions",
          "optional": true,
          "type": {
            "fqn": "projen.IgnoreFileOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- true for public packages, false otherwise",
            "remarks": "A supported package manager is required to publish a package with npm provenance statements and\nyou will need to use a supported CI/CD provider.\n\nNote that the projen `Release` and `Publisher` components are using `publib` to publish packages,\nwhich is using npm internally and supports provenance statements independently of the package manager used.",
            "stability": "experimental",
            "summary": "Should provenance statements be generated when the package is published."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 633
          },
          "name": "npmProvenance",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "deprecated": "use `npmRegistryUrl` instead",
            "remarks": "Cannot be set together with `npmRegistryUrl`.",
            "stability": "deprecated",
            "summary": "The host name of the npm registry to publish to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 622
          },
          "name": "npmRegistry",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"https://registry.npmjs.org\"",
            "remarks": "Must be a URL (e.g. start with \"https://\" or \"http://\")",
            "stability": "experimental",
            "summary": "The base URL of the npm package registry."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 615
          },
          "name": "npmRegistryUrl",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"NPM_TOKEN\"",
            "stability": "experimental",
            "summary": "GitHub secret which contains the NPM token to use when publishing packages."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 608
          },
          "name": "npmTokenSecret",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\".\"",
            "remarks": "If this project has a parent, this directory is relative to the parent\ndirectory and it cannot be the same as the parent or any of it's other\nsubprojects.",
            "stability": "experimental",
            "summary": "The root directory of the project. Relative to this directory, all files are synthesized."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 959
          },
          "name": "outdir",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Defines a `package` task that will produce an npm tarball under the artifacts directory (e.g. `dist`)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 217
          },
          "name": "package",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "NodePackageManager.YARN_CLASSIC",
            "stability": "experimental",
            "summary": "The Node Package Manager used to execute scripts."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 602
          },
          "name": "packageManager",
          "optional": true,
          "type": {
            "fqn": "projen.javascript.NodePackageManager"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "featured": "true"
            },
            "default": "- defaults to project name",
            "stability": "experimental",
            "summary": "The \"name\" in package.json."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 596
          },
          "name": "packageName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The parent project, if this project is part of a bigger project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 948
          },
          "name": "parent",
          "optional": true,
          "type": {
            "fqn": "projen.Project"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Options for `peerDeps`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 589
          },
          "name": "peerDependencyOptions",
          "optional": true,
          "type": {
            "fqn": "projen.javascript.PeerDependencyOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "[]",
            "remarks": "Dependencies listed here are required to\nbe installed (and satisfied) by the _consumer_ of this library. Using peer\ndependencies allows you to ensure that only a single module of a certain\nlibrary exists in the `node_modules` tree of your consumers.\n\nNote that prior to npm@7, peer dependencies are _not_ automatically\ninstalled, which means that adding peer dependencies to a library will be a\nbreaking change for your customers.\n\nUnless `peerDependencyOptions.pinnedDevDependency` is disabled (it is\nenabled by default), projen will automatically add a dev dependency with a\npinned version for each peer dependency. This will ensure that you build &\ntest your module against the lowest peer version required.",
            "stability": "experimental",
            "summary": "Peer dependencies for this module."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 584
          },
          "name": "peerDeps",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"7\"",
            "stability": "experimental",
            "summary": "The version of PNPM to use if using PNPM as a package manager."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 565
          },
          "name": "pnpmVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "[]",
            "stability": "experimental",
            "summary": "Steps to execute after build as part of the release workflow."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 489
          },
          "name": "postBuildSteps",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "projen.github.workflows.JobStep"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- normal semantic versions",
            "stability": "experimental",
            "summary": "Bump versions from the default branch as pre-releases (e.g. \"beta\", \"alpha\", \"pre\")."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 483
          },
          "name": "prerelease",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Setup prettier."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 211
          },
          "name": "prettier",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default options",
            "stability": "experimental",
            "summary": "Prettier options."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 205
          },
          "name": "prettierOptions",
          "optional": true,
          "type": {
            "fqn": "projen.javascript.PrettierOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "ProjectType.UNKNOWN",
            "deprecated": "no longer supported at the base project level",
            "stability": "deprecated",
            "summary": "Which type of project this is (library/app)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 845
          },
          "name": "projectType",
          "optional": true,
          "type": {
            "fqn": "projen.ProjectType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"npx projen\"",
            "remarks": "Can be used to customize in special environments.",
            "stability": "experimental",
            "summary": "The shell command to use in order to run the projen CLI."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 943
          },
          "name": "projenCommand",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- use a personal access token named PROJEN_GITHUB_TOKEN",
            "stability": "experimental",
            "summary": "Choose a method of providing GitHub API access for projen workflows."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 838
          },
          "name": "projenCredentials",
          "optional": true,
          "type": {
            "fqn": "projen.github.GithubCredentials"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- true if not a subproject",
            "stability": "experimental",
            "summary": "Indicates of \"projen\" should be installed as a devDependency."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 199
          },
          "name": "projenDevDependency",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- true if projenrcJson is false",
            "stability": "experimental",
            "summary": "Generate (once) .projenrc.js (in JavaScript). Set to `false` in order to disable .projenrc.js generation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 193
          },
          "name": "projenrcJs",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Generate (once) .projenrc.json (in JSON). Set to `false` in order to disable .projenrc.json generation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 936
          },
          "name": "projenrcJson",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default options",
            "stability": "experimental",
            "summary": "Options for .projenrc.json."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 930
          },
          "name": "projenrcJsonOptions",
          "optional": true,
          "type": {
            "fqn": "projen.ProjenrcJsonOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default options",
            "stability": "experimental",
            "summary": "Options for .projenrc.js."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 187
          },
          "name": "projenrcJsOptions",
          "optional": true,
          "type": {
            "fqn": "projen.javascript.ProjenrcOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "pjnew": "true"
            },
            "default": "false",
            "stability": "experimental",
            "summary": "Use TypeScript for your projenrc file (`.projenrc.ts`)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 72
          },
          "name": "projenrcTs",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Options for .projenrc.ts."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 65
          },
          "name": "projenrcTsOptions",
          "optional": true,
          "type": {
            "fqn": "projen.typescript.ProjenrcOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"PROJEN_GITHUB_TOKEN\"",
            "deprecated": "use `projenCredentials`",
            "remarks": "This token needs to have the `repo`, `workflows`\nand `packages` scope.",
            "stability": "deprecated",
            "summary": "The name of a secret which includes a GitHub Personal Access Token to be used by projen workflows."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 832
          },
          "name": "projenTokenSecret",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Defaults to the latest version.",
            "stability": "experimental",
            "summary": "Version of projen to install."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 181
          },
          "name": "projenVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Instead of actually publishing to package managers, just print the publishing command."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 477
          },
          "name": "publishDryRun",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "Normally, publishing only happens within automated workflows. Enable this\nin order to create a publishing task for each publishing activity.",
            "stability": "experimental",
            "summary": "Define publishing tasks that can be executed manually as well as workflows."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 471
          },
          "name": "publishTasks",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Include a GitHub pull request template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 175
          },
          "name": "pullRequestTemplate",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default content",
            "stability": "experimental",
            "summary": "The contents of the pull request template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 169
          },
          "name": "pullRequestTemplateContents",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- { filename: 'README.md', contents: '# replace this' }",
            "stability": "experimental",
            "summary": "The README setup."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 823
          },
          "name": "readme",
          "optional": true,
          "type": {
            "fqn": "projen.SampleReadmeProps"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "ReleasableCommits.everyCommit()",
            "stability": "experimental",
            "summary": "Find commits that should be considered releasable Used to decide if a release is required."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 463
          },
          "name": "releasableCommits",
          "optional": true,
          "type": {
            "fqn": "projen.ReleasableCommits"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- true (false for subprojects)",
            "stability": "experimental",
            "summary": "Add release management to this project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 163
          },
          "name": "release",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no additional branches are used for release. you can use\n`addBranch()` to add additional branches.",
            "remarks": "A workflow will be created for each\nrelease branch which will publish releases from commits in this branch.\nEach release branch _must_ be assigned a major version number which is used\nto enforce that versions published from that branch always use that major\nversion. If multiple branches are used, the `majorVersion` field must also\nbe provided for the default branch.",
            "stability": "experimental",
            "summary": "Defines additional release branches."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 457
          },
          "name": "releaseBranches",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "projen.release.BranchOptions"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "deprecated": "Use `releaseTrigger: ReleaseTrigger.continuous()` instead",
            "stability": "deprecated",
            "summary": "Automatically release new versions every commit to one of branches in `releaseBranches`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 444
          },
          "name": "releaseEveryCommit",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Create a github issue on every failed publishing task."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 437
          },
          "name": "releaseFailureIssue",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"failed-release\"",
            "remarks": "Only applies if `releaseFailureIssue` is true.",
            "stability": "experimental",
            "summary": "The label to apply to issues indicating publish failures."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 431
          },
          "name": "releaseFailureIssueLabel",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no scheduled releases",
            "deprecated": "Use `releaseTrigger: ReleaseTrigger.scheduled()` instead",
            "stability": "deprecated",
            "summary": "CRON schedule to trigger new releases."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 424
          },
          "name": "releaseSchedule",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"v\"",
            "remarks": "Useful if you are releasing on multiple branches with overlapping version numbers.\nNote: this prefix is used to detect the latest tagged version\nwhen bumping, so if you change this on a project with an existing version\nhistory, you may need to manually tag your latest release\nwith the new prefix.",
            "stability": "experimental",
            "summary": "Automatically add the given prefix to release tags."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 417
          },
          "name": "releaseTagPrefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Automatically release to npm when new versions are introduced."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 157
          },
          "name": "releaseToNpm",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Continuous releases (`ReleaseTrigger.continuous()`)",
            "stability": "experimental",
            "summary": "The release trigger to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 407
          },
          "name": "releaseTrigger",
          "optional": true,
          "type": {
            "fqn": "projen.release.ReleaseTrigger"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- true if not a subproject",
            "deprecated": "see `release`.",
            "stability": "deprecated",
            "summary": "DEPRECATED: renamed to `release`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 151
          },
          "name": "releaseWorkflow",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"release\"",
            "stability": "experimental",
            "summary": "The name of the default release workflow."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 401
          },
          "name": "releaseWorkflowName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "A set of workflow steps to execute in order to setup the workflow container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 395
          },
          "name": "releaseWorkflowSetupSteps",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "projen.github.workflows.JobStep"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Use renovatebot to handle dependency upgrades."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 924
          },
          "name": "renovatebot",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default options",
            "stability": "experimental",
            "summary": "Options for renovatebot."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 918
          },
          "name": "renovatebotOptions",
          "optional": true,
          "type": {
            "fqn": "projen.RenovatebotOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "See https://classic.yarnpkg.com/en/docs/package-json/#toc-repository",
            "stability": "experimental",
            "summary": "The repository is the location where the actual code for your package lives."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 559
          },
          "name": "repository",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "If the package.json for your package is not in the root directory (for example if it is part of a monorepo), you can specify the directory in which it lives."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 553
          },
          "name": "repositoryDirectory",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Generate one-time sample in `src/` and `test/` if there are no files there."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 60
          },
          "name": "sampleCode",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- fetch all scoped packages from the public npm registry",
            "stability": "experimental",
            "summary": "Options for privately hosted scoped packages."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 548
          },
          "name": "scopedPackagesOptions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "projen.javascript.ScopedPackagesOptions"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "{}",
            "deprecated": "use `project.addTask()` or `package.setScript()`",
            "remarks": "If a script has the same name as a standard script,\nthe standard script will be overwritten.\nAlso adds the script as a task.",
            "stability": "deprecated",
            "summary": "npm scripts to include."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 542
          },
          "name": "scripts",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"src\"",
            "stability": "experimental",
            "summary": "Typescript sources directory."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 54
          },
          "name": "srcdir",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Package's Stability."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 532
          },
          "name": "stability",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "See `staleOptions` for options.",
            "stability": "experimental",
            "summary": "Auto-close of stale issues and pull request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 817
          },
          "name": "stale",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- see defaults in `StaleOptions`",
            "remarks": "To disable set `stale` to `false`.",
            "stability": "experimental",
            "summary": "Auto-close stale issues and pull requests."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 810
          },
          "name": "staleOptions",
          "optional": true,
          "type": {
            "fqn": "projen.github.StaleOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"test\"",
            "remarks": "Tests files should be named `xxx.test.ts`.\nIf this directory is under `srcdir` (e.g. `src/test`, `src/__tests__`),\nthen tests are going to be compiled into `lib/` and executed as javascript.\nIf the test directory is outside of `src`, then we configure jest to\ncompile the code in-memory.",
            "stability": "experimental",
            "summary": "Jest tests directory."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 48
          },
          "name": "testdir",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default options",
            "stability": "experimental",
            "summary": "Custom TSConfig."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 38
          },
          "name": "tsconfig",
          "optional": true,
          "type": {
            "fqn": "projen.javascript.TypescriptConfigOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- use the production tsconfig options",
            "stability": "experimental",
            "summary": "Custom tsconfig options for the development tsconfig.json file (used for testing)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 32
          },
          "name": "tsconfigDev",
          "optional": true,
          "type": {
            "fqn": "projen.javascript.TypescriptConfigOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"tsconfig.dev.json\"",
            "stability": "experimental",
            "summary": "The name of the development tsconfig.json file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 26
          },
          "name": "tsconfigDevFile",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Options for ts-jest."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 20
          },
          "name": "tsJestOptions",
          "optional": true,
          "type": {
            "fqn": "projen.typescript.TsJestOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"latest\"",
            "remarks": "NOTE: Typescript is not semantically versioned and should remain on the\nsame minor, so we recommend using a `~` dependency (e.g. `~1.2.3`).",
            "stability": "experimental",
            "summary": "TypeScript version to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 15
          },
          "name": "typescriptVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- standard configuration applicable for GitHub repositories",
            "remarks": "Given values either append to default configuration or overwrite values in it.",
            "stability": "experimental",
            "summary": "Custom configuration used when creating changelog with standard-version package."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 390
          },
          "name": "versionrcOptions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "Enabled by default for root projects. Disabled for non-root projects.",
            "stability": "experimental",
            "summary": "Enable VSCode integration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 803
          },
          "name": "vscode",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"yarn install --frozen-lockfile && yarn projen\"",
            "stability": "experimental",
            "summary": "Workflow steps to use in order to bootstrap this repo."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 144
          },
          "name": "workflowBootstrapSteps",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "projen.github.workflows.JobStep"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default image",
            "stability": "experimental",
            "summary": "Container image to use for GitHub workflows."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 383
          },
          "name": "workflowContainerImage",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- GitHub Actions",
            "stability": "experimental",
            "summary": "The git identity to use in workflows."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 138
          },
          "name": "workflowGitIdentity",
          "optional": true,
          "type": {
            "fqn": "projen.github.GitIdentity"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- same as `minNodeVersion`",
            "stability": "experimental",
            "summary": "The node version to use in GitHub workflows."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 132
          },
          "name": "workflowNodeVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Enable Node.js package cache in GitHub workflows."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 126
          },
          "name": "workflowPackageCache",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "description": "Defines a target Runner by labels",
              "throws": "{Error} if both `runsOn` and `runsOnGroup` are specified"
            },
            "default": "[\"ubuntu-latest\"]",
            "stability": "experimental",
            "summary": "Github Runner selection labels."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 377
          },
          "name": "workflowRunsOn",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "description": "Defines a target Runner Group by name and/or labels",
              "throws": "{Error} if both `runsOn` and `runsOnGroup` are specified"
            },
            "stability": "experimental",
            "summary": "Github Runner Group selection options."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 369
          },
          "name": "workflowRunsOnGroup",
          "optional": true,
          "type": {
            "fqn": "projen.GroupRunnerOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Yarn Berry v4 with all default options",
            "stability": "experimental",
            "summary": "Options for Yarn Berry."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/typescript-project-options.ts",
            "line": 527
          },
          "name": "yarnBerryOptions",
          "optional": true,
          "type": {
            "fqn": "projen.javascript.YarnBerryOptions"
          }
        }
      ],
      "symbolId": "type-safe-api/project/typescript-project-options:TypeScriptProjectOptions"
    },
    "@aws/pdk.type_safe_api.TypeSpecAsyncDefinition": {
      "assembly": "@aws/pdk",
      "base": "@aws/pdk.type_safe_api.TypeSpecProjectDefinition",
      "docs": {
        "stability": "stable",
        "summary": "The TypeSpec model definition for an async api."
      },
      "fqn": "@aws/pdk.type_safe_api.TypeSpecAsyncDefinition",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "type-safe-api/project/model/type-spec/type-spec-async-definition.ts",
          "line": 22
        },
        "parameters": [
          {
            "name": "project",
            "type": {
              "fqn": "projen.javascript.NodeProject"
            }
          },
          {
            "name": "options",
            "type": {
              "fqn": "@aws/pdk.type_safe_api.TypeSpecAsyncDefinitionOptions"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "type-safe-api/project/model/type-spec/type-spec-async-definition.ts",
        "line": 21
      },
      "name": "TypeSpecAsyncDefinition",
      "namespace": "type_safe_api",
      "symbolId": "type-safe-api/project/model/type-spec/type-spec-async-definition:TypeSpecAsyncDefinition"
    },
    "@aws/pdk.type_safe_api.TypeSpecAsyncDefinitionOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for the TypeSpec async model definition."
      },
      "fqn": "@aws/pdk.type_safe_api.TypeSpecAsyncDefinitionOptions",
      "interfaces": [
        "@aws/pdk.type_safe_api.TypeSpecProjectDefinitionOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/model/type-spec/type-spec-async-definition.ts",
        "line": 15
      },
      "name": "TypeSpecAsyncDefinitionOptions",
      "namespace": "type_safe_api",
      "symbolId": "type-safe-api/project/model/type-spec/type-spec-async-definition:TypeSpecAsyncDefinitionOptions"
    },
    "@aws/pdk.type_safe_api.TypeSpecAsyncModelProject": {
      "assembly": "@aws/pdk",
      "base": "projen.javascript.NodeProject",
      "docs": {
        "stability": "stable",
        "summary": "Model project for defining a WebSocket API in TypeSpec."
      },
      "fqn": "@aws/pdk.type_safe_api.TypeSpecAsyncModelProject",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "type-safe-api/project/model/type-spec/type-spec-async-model-project.ts",
          "line": 34
        },
        "parameters": [
          {
            "name": "options",
            "type": {
              "fqn": "@aws/pdk.type_safe_api.TypeSpecAsyncModelProjectOptions"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "type-safe-api/project/model/type-spec/type-spec-async-model-project.ts",
        "line": 30
      },
      "name": "TypeSpecAsyncModelProject",
      "namespace": "type_safe_api",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/model/type-spec/type-spec-async-model-project.ts",
            "line": 31
          },
          "name": "apiName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/model/type-spec/type-spec-async-model-project.ts",
            "line": 32
          },
          "name": "definition",
          "type": {
            "fqn": "@aws/pdk.type_safe_api.TypeSpecAsyncDefinition"
          }
        }
      ],
      "symbolId": "type-safe-api/project/model/type-spec/type-spec-async-model-project:TypeSpecAsyncModelProject"
    },
    "@aws/pdk.type_safe_api.TypeSpecAsyncModelProjectOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for the TypeSpec WebSocket API model project."
      },
      "fqn": "@aws/pdk.type_safe_api.TypeSpecAsyncModelProjectOptions",
      "interfaces": [
        "projen.javascript.NodeProjectOptions",
        "@aws/pdk.type_safe_api.TypeSpecDefinitionOptions",
        "@aws/pdk.type_safe_api.TypeSafeApiAsyncModelBuildOutputOptions",
        "@aws/pdk.type_safe_api.TypeSafeApiModelBuildOutputOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/model/type-spec/type-spec-async-model-project.ts",
        "line": 21
      },
      "name": "TypeSpecAsyncModelProjectOptions",
      "namespace": "type_safe_api",
      "symbolId": "type-safe-api/project/model/type-spec/type-spec-async-model-project:TypeSpecAsyncModelProjectOptions"
    },
    "@aws/pdk.type_safe_api.TypeSpecDefinition": {
      "assembly": "@aws/pdk",
      "base": "@aws/pdk.type_safe_api.TypeSpecProjectDefinition",
      "docs": {
        "stability": "stable",
        "summary": "The TypeSpec model definition."
      },
      "fqn": "@aws/pdk.type_safe_api.TypeSpecDefinition",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "type-safe-api/project/model/type-spec/type-spec-definition.ts",
          "line": 20
        },
        "parameters": [
          {
            "name": "project",
            "type": {
              "fqn": "projen.javascript.NodeProject"
            }
          },
          {
            "name": "options",
            "type": {
              "fqn": "@aws/pdk.type_safe_api.TypeSpecDefinitionOptions"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "type-safe-api/project/model/type-spec/type-spec-definition.ts",
        "line": 19
      },
      "name": "TypeSpecDefinition",
      "namespace": "type_safe_api",
      "symbolId": "type-safe-api/project/model/type-spec/type-spec-definition:TypeSpecDefinition"
    },
    "@aws/pdk.type_safe_api.TypeSpecDefinitionOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for the TypeSpec model definition."
      },
      "fqn": "@aws/pdk.type_safe_api.TypeSpecDefinitionOptions",
      "interfaces": [
        "@aws/pdk.type_safe_api.TypeSpecProjectDefinitionOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/model/type-spec/type-spec-definition.ts",
        "line": 13
      },
      "name": "TypeSpecDefinitionOptions",
      "namespace": "type_safe_api",
      "symbolId": "type-safe-api/project/model/type-spec/type-spec-definition:TypeSpecDefinitionOptions"
    },
    "@aws/pdk.type_safe_api.TypeSpecModelOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for the TypeSpec model."
      },
      "fqn": "@aws/pdk.type_safe_api.TypeSpecModelOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/types.ts",
        "line": 77
      },
      "name": "TypeSpecModelOptions",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "https://typespec.io/docs/language-basics/namespaces/\neg. MyApi",
            "stability": "stable",
            "summary": "The namespace for your API."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/types.ts",
            "line": 83
          },
          "name": "namespace",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "type-safe-api/project/types:TypeSpecModelOptions"
    },
    "@aws/pdk.type_safe_api.TypeSpecModelProject": {
      "assembly": "@aws/pdk",
      "base": "projen.javascript.NodeProject",
      "docs": {
        "stability": "stable",
        "summary": "Model project for defining a REST API in TypeSpec."
      },
      "fqn": "@aws/pdk.type_safe_api.TypeSpecModelProject",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "type-safe-api/project/model/type-spec/type-spec-model-project.ts",
          "line": 31
        },
        "parameters": [
          {
            "name": "options",
            "type": {
              "fqn": "@aws/pdk.type_safe_api.TypeSpecModelProjectOptions"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "type-safe-api/project/model/type-spec/type-spec-model-project.ts",
        "line": 27
      },
      "name": "TypeSpecModelProject",
      "namespace": "type_safe_api",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/model/type-spec/type-spec-model-project.ts",
            "line": 28
          },
          "name": "apiName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/model/type-spec/type-spec-model-project.ts",
            "line": 29
          },
          "name": "definition",
          "type": {
            "fqn": "@aws/pdk.type_safe_api.TypeSpecDefinition"
          }
        }
      ],
      "symbolId": "type-safe-api/project/model/type-spec/type-spec-model-project:TypeSpecModelProject"
    },
    "@aws/pdk.type_safe_api.TypeSpecModelProjectOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for the TypeSpec model project."
      },
      "fqn": "@aws/pdk.type_safe_api.TypeSpecModelProjectOptions",
      "interfaces": [
        "projen.javascript.NodeProjectOptions",
        "@aws/pdk.type_safe_api.TypeSpecDefinitionOptions",
        "@aws/pdk.type_safe_api.TypeSafeApiModelBuildOutputOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/model/type-spec/type-spec-model-project.ts",
        "line": 19
      },
      "name": "TypeSpecModelProjectOptions",
      "namespace": "type_safe_api",
      "symbolId": "type-safe-api/project/model/type-spec/type-spec-model-project:TypeSpecModelProjectOptions"
    },
    "@aws/pdk.type_safe_api.TypeSpecProjectDefinition": {
      "assembly": "@aws/pdk",
      "base": "projen.Component",
      "docs": {
        "see": "https://typespec.io/",
        "stability": "stable",
        "summary": "Creates a project which allows APIs to be defined in TypeSpec."
      },
      "fqn": "@aws/pdk.type_safe_api.TypeSpecProjectDefinition",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "type-safe-api/project/model/type-spec/type-spec-project-definition.ts",
          "line": 46
        },
        "parameters": [
          {
            "name": "project",
            "type": {
              "fqn": "projen.javascript.NodeProject"
            }
          },
          {
            "name": "options",
            "type": {
              "fqn": "@aws/pdk.type_safe_api.TypeSpecProjectDefinitionOptions"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "type-safe-api/project/model/type-spec/type-spec-project-definition.ts",
        "line": 30
      },
      "name": "TypeSpecProjectDefinition",
      "namespace": "type_safe_api",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Directory in which generated model source resides."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/model/type-spec/type-spec-project-definition.ts",
            "line": 44
          },
          "name": "generatedModelDir",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Directory in which the model source resides."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/model/type-spec/type-spec-project-definition.ts",
            "line": 39
          },
          "name": "modelDir",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Path to the generated OpenAPI specification."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/model/type-spec/type-spec-project-definition.ts",
            "line": 34
          },
          "name": "openApiSpecificationPath",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "type-safe-api/project/model/type-spec/type-spec-project-definition:TypeSpecProjectDefinition"
    },
    "@aws/pdk.type_safe_api.TypeSpecProjectDefinitionOptions": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for a TypeSpec model project."
      },
      "fqn": "@aws/pdk.type_safe_api.TypeSpecProjectDefinitionOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/model/type-spec/type-spec-project-definition.ts",
        "line": 15
      },
      "name": "TypeSpecProjectDefinitionOptions",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "TypeSpec model options."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/model/type-spec/type-spec-project-definition.ts",
            "line": 19
          },
          "name": "typeSpecOptions",
          "type": {
            "fqn": "@aws/pdk.type_safe_api.TypeSpecModelOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The languages users have specified for handler projects (if any)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/model/type-spec/type-spec-project-definition.ts",
            "line": 23
          },
          "name": "handlerLanguages",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.type_safe_api.Language"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "type-safe-api/project/model/type-spec/type-spec-project-definition:TypeSpecProjectDefinitionOptions"
    },
    "@aws/pdk.type_safe_api.WebSocketApiProps": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "WebSocketApiProps."
      },
      "fqn": "@aws/pdk.type_safe_api.WebSocketApiProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/construct/websocket/websocket-api-props.ts",
        "line": 7
      },
      "name": "WebSocketApiProps",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- Key is not required to access these APIs",
            "remarks": "Providing this option will require an API Key be provided to access the API.",
            "stability": "stable",
            "summary": "An API key selection expression."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/websocket/websocket-api-props.ts",
            "line": 26
          },
          "name": "apiKeySelectionExpression",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_apigatewayv2.WebSocketApiKeySelectionExpression"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- id of the WebSocketApi construct.",
            "stability": "stable",
            "summary": "Name for the WebSocket API resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/websocket/websocket-api-props.ts",
            "line": 19
          },
          "name": "apiName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- none",
            "stability": "stable",
            "summary": "The description of the API."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/websocket/websocket-api-props.ts",
            "line": 13
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "type-safe-api/construct/websocket/websocket-api-props:WebSocketApiProps"
    },
    "@aws/pdk.type_safe_api.WebSocketDocumentationConfiguration": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Configuration for generated documentation."
      },
      "fqn": "@aws/pdk.type_safe_api.WebSocketDocumentationConfiguration",
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/type-safe-websocket-api-project.ts",
        "line": 97
      },
      "name": "WebSocketDocumentationConfiguration",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Formats for generated documentation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/type-safe-websocket-api-project.ts",
            "line": 101
          },
          "name": "formats",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.type_safe_api.WebSocketDocumentationFormat"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Note that only those provided for the specified formats will apply",
            "stability": "stable",
            "summary": "Options for the generated documentation projects."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/type-safe-websocket-api-project.ts",
            "line": 105
          },
          "name": "options",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.type_safe_api.GeneratedWebSocketDocumentationOptions"
          }
        }
      ],
      "symbolId": "type-safe-api/project/type-safe-websocket-api-project:WebSocketDocumentationConfiguration"
    },
    "@aws/pdk.type_safe_api.WebSocketDocumentationFormat": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable",
        "summary": "Formats for WebSocket documentation generation."
      },
      "fqn": "@aws/pdk.type_safe_api.WebSocketDocumentationFormat",
      "kind": "enum",
      "locationInModule": {
        "filename": "type-safe-api/project/languages.ts",
        "line": 74
      },
      "members": [
        {
          "docs": {
            "see": "https://github.com/asyncapi/html-template",
            "stability": "stable",
            "summary": "HTML Documentation generated by AsyncAPI's HTML Template."
          },
          "name": "HTML"
        },
        {
          "docs": {
            "see": "https://github.com/asyncapi/markdown-template",
            "stability": "stable",
            "summary": "Markdown Documentation generated by AsyncAPI's Markdown Template."
          },
          "name": "MARKDOWN"
        }
      ],
      "name": "WebSocketDocumentationFormat",
      "namespace": "type_safe_api",
      "symbolId": "type-safe-api/project/languages:WebSocketDocumentationFormat"
    },
    "@aws/pdk.type_safe_api.WebSocketHandlersConfiguration": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Configuration for generated lambda handlers."
      },
      "fqn": "@aws/pdk.type_safe_api.WebSocketHandlersConfiguration",
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/type-safe-websocket-api-project.ts",
        "line": 82
      },
      "name": "WebSocketHandlersConfiguration",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Specify multiple languages if you wish to implement different operations\nas AWS Lambda functions in different languages.",
            "stability": "stable",
            "summary": "The languages lambda handlers are written in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/type-safe-websocket-api-project.ts",
            "line": 87
          },
          "name": "languages",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.type_safe_api.Language"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Note that only those provided for the specified language will apply.",
            "stability": "stable",
            "summary": "Options for the infrastructure package."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/type-safe-websocket-api-project.ts",
            "line": 91
          },
          "name": "options",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.type_safe_api.GeneratedHandlersCodeOptions"
          }
        }
      ],
      "symbolId": "type-safe-api/project/type-safe-websocket-api-project:WebSocketHandlersConfiguration"
    },
    "@aws/pdk.type_safe_api.WebSocketInfrastructureConfiguration": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Configuration for generated infrastructure."
      },
      "fqn": "@aws/pdk.type_safe_api.WebSocketInfrastructureConfiguration",
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/type-safe-websocket-api-project.ts",
        "line": 68
      },
      "name": "WebSocketInfrastructureConfiguration",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The language to generate the type-safe CDK infrastructure in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/type-safe-websocket-api-project.ts",
            "line": 72
          },
          "name": "language",
          "type": {
            "fqn": "@aws/pdk.type_safe_api.Language"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Note that only those provided for the specified language will apply.",
            "stability": "stable",
            "summary": "Options for the infrastructure package."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/type-safe-websocket-api-project.ts",
            "line": 76
          },
          "name": "options",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.type_safe_api.GeneratedInfrastructureCodeOptions"
          }
        }
      ],
      "symbolId": "type-safe-api/project/type-safe-websocket-api-project:WebSocketInfrastructureConfiguration"
    },
    "@aws/pdk.type_safe_api.WebSocketLibrary": {
      "assembly": "@aws/pdk",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws/pdk.type_safe_api.WebSocketLibrary",
      "kind": "enum",
      "locationInModule": {
        "filename": "type-safe-api/project/languages.ts",
        "line": 47
      },
      "members": [
        {
          "docs": {
            "stability": "stable"
          },
          "name": "TYPESCRIPT_WEBSOCKET_CLIENT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "TYPESCRIPT_WEBSOCKET_HOOKS"
        }
      ],
      "name": "WebSocketLibrary",
      "namespace": "type_safe_api",
      "symbolId": "type-safe-api/project/languages:WebSocketLibrary"
    },
    "@aws/pdk.type_safe_api.WebSocketLibraryConfiguration": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Configuration for generated libraries."
      },
      "fqn": "@aws/pdk.type_safe_api.WebSocketLibraryConfiguration",
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/type-safe-websocket-api-project.ts",
        "line": 111
      },
      "name": "WebSocketLibraryConfiguration",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The libraries to generate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/type-safe-websocket-api-project.ts",
            "line": 115
          },
          "name": "libraries",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.type_safe_api.WebSocketLibrary"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Note that only options for the specified libraries will apply",
            "stability": "stable",
            "summary": "Options for the generated library package."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/type-safe-websocket-api-project.ts",
            "line": 119
          },
          "name": "options",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.type_safe_api.GeneratedWebSocketLibraryOptions"
          }
        }
      ],
      "symbolId": "type-safe-api/project/type-safe-websocket-api-project:WebSocketLibraryConfiguration"
    },
    "@aws/pdk.type_safe_api.WebSocketModelProject": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "WebSocket model project references."
      },
      "fqn": "@aws/pdk.type_safe_api.WebSocketModelProject",
      "interfaces": [
        "@aws/pdk.type_safe_api.ModelProjectDetails"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/types.ts",
        "line": 426
      },
      "name": "WebSocketModelProject",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "File name of the generated async api specification."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/types.ts",
            "line": 430
          },
          "name": "asyncApiSpecFile",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Will be defined if the model language is OpenAPI",
            "stability": "stable",
            "summary": "Reference to the OpenAPI model project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/types.ts",
            "line": 440
          },
          "name": "openapi",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.type_safe_api.OpenApiAsyncModelProject"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Will be defined if the model language is Smithy",
            "stability": "stable",
            "summary": "Reference to the Smithy model project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/types.ts",
            "line": 435
          },
          "name": "smithy",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.type_safe_api.SmithyAsyncModelProject"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Will be defined if the model language is TypeSpec",
            "stability": "stable",
            "summary": "Reference to the TypeSpec model project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/types.ts",
            "line": 445
          },
          "name": "typeSpec",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.type_safe_api.TypeSpecAsyncModelProject"
          }
        }
      ],
      "symbolId": "type-safe-api/project/types:WebSocketModelProject"
    },
    "@aws/pdk.type_safe_api.WebSocketRuntimeConfiguration": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Configuration for generated runtime projects."
      },
      "fqn": "@aws/pdk.type_safe_api.WebSocketRuntimeConfiguration",
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/project/type-safe-websocket-api-project.ts",
        "line": 53
      },
      "name": "WebSocketRuntimeConfiguration",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "These projects can be used to provide type safety for\nboth client and server projects.",
            "stability": "stable",
            "summary": "The languages that runtime projects will be generated in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/type-safe-websocket-api-project.ts",
            "line": 58
          },
          "name": "languages",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws/pdk.type_safe_api.Language"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Note that only options provided for the specified languages will apply.",
            "stability": "stable",
            "summary": "Options for the generated runtimes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/project/type-safe-websocket-api-project.ts",
            "line": 62
          },
          "name": "options",
          "optional": true,
          "type": {
            "fqn": "@aws/pdk.type_safe_api.GeneratedRuntimeCodeOptions"
          }
        }
      ],
      "symbolId": "type-safe-api/project/type-safe-websocket-api-project:WebSocketRuntimeConfiguration"
    },
    "@aws/pdk.type_safe_api.WebSocketStageProps": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "WebSocketStageProps."
      },
      "fqn": "@aws/pdk.type_safe_api.WebSocketStageProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/construct/websocket/websocket-stage-props.ts",
        "line": 7
      },
      "name": "WebSocketStageProps",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Whether updates to an API automatically trigger a new deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/websocket/websocket-stage-props.ts",
            "line": 36
          },
          "name": "autoDeploy",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no description",
            "stability": "stable",
            "summary": "The description for the API stage."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/websocket/websocket-stage-props.ts",
            "line": 30
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no custom domain and api mapping configuration",
            "stability": "stable",
            "summary": "The options for custom domain and api mapping."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/websocket/websocket-stage-props.ts",
            "line": 24
          },
          "name": "domainMapping",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_apigatewayv2.DomainMappingOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the stage."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/websocket/websocket-stage-props.ts",
            "line": 12
          },
          "name": "stageName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no throttling configuration",
            "stability": "stable",
            "summary": "Throttle settings for the routes of this stage."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/websocket/websocket-stage-props.ts",
            "line": 18
          },
          "name": "throttle",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_apigatewayv2.ThrottleSettings"
          }
        }
      ],
      "symbolId": "type-safe-api/construct/websocket/websocket-stage-props:WebSocketStageProps"
    },
    "@aws/pdk.type_safe_api.WebsocketOperationDetails": {
      "assembly": "@aws/pdk",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws/pdk.type_safe_api.WebsocketOperationDetails",
      "kind": "interface",
      "locationInModule": {
        "filename": "type-safe-api/construct/type-safe-websocket-api.ts",
        "line": 59
      },
      "name": "WebsocketOperationDetails",
      "namespace": "type_safe_api",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Path in the OpenAPI spec for the operation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "type-safe-api/construct/type-safe-websocket-api.ts",
            "line": 63
          },
          "name": "path",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "type-safe-api/construct/type-safe-websocket-api:WebsocketOperationDetails"
    }
  },
  "version": "0.26.14",
  "fingerprint": "G/4OFo7NBfmNDMTIZowQ5wvMBWJ7Yc8K2QdzD+4VGZM="
}