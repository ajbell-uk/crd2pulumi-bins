"use strict";
// AUTO-GENERATED - DO NOT EDIT
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.DrawioShapeToAssetMapping = exports.AwsResourceMapping = exports.AwsServiceMapping = void 0;
/** @internal */
exports.AwsServiceMapping = {
    "ACMPCA": {
        "provider": "AWS",
        "pricingServiceCode": "awsCertificateManager",
        "assetKey": "certificate_manager",
        "drawioShape": "certificate_manager"
    },
    "APS": {
        "provider": "AWS",
        "pricingServiceCode": "amazonManagedServiceForPrometheus",
        "assetKey": "aps",
        "drawioShape": "managed_service_for_prometheus"
    },
    "AccessAnalyzer": {
        "provider": "AWS",
        "assetKey": "iam",
        "drawioShape": "identity_and_access_management"
    },
    "AmazonMQ": {
        "provider": "AWS",
        "pricingServiceCode": "amazonMQ",
        "assetKey": "mq",
        "drawioShape": "mq"
    },
    "Amplify": {
        "provider": "AWS",
        "pricingServiceCode": "awsAmplify",
        "assetKey": "amplify",
        "drawioShape": "amplify"
    },
    "AmplifyUIBuilder": {
        "provider": "AWS",
        "pricingServiceCode": "awsAmplify",
        "assetKey": "amplify",
        "drawioShape": "amplify"
    },
    "ApiGateway": {
        "provider": "AWS",
        "pricingServiceCode": "amazonApiGateway",
        "assetKey": "api_gateway",
        "drawioShape": "api_gateway"
    },
    "ApiGatewayV2": {
        "provider": "AWS",
        "pricingServiceCode": "amazonApiGateway",
        "assetKey": "api_gateway",
        "drawioShape": "api_gateway"
    },
    "AppConfig": {
        "provider": "AWS",
        "pricingServiceCode": "awsAppConfig",
        "assetKey": "appconfig",
        "drawioShape": "app_config"
    },
    "AppFlow": {
        "provider": "AWS",
        "pricingServiceCode": "amazonAppFlow",
        "assetKey": "appflow",
        "drawioShape": "appflow"
    },
    "AppIntegrations": {
        "provider": "AWS",
        "assetKey": "application_discovery_service",
        "drawioShape": "application_discovery_service"
    },
    "AppMesh": {
        "provider": "AWS",
        "assetKey": "app_mesh",
        "drawioShape": "app_mesh"
    },
    "AppRunner": {
        "provider": "AWS",
        "pricingServiceCode": "awsAppRunner",
        "assetKey": "app_runner",
        "drawioShape": "app_runner"
    },
    "AppStream": {
        "provider": "AWS",
        "pricingServiceCode": "amazonAppStream",
        "assetKey": "appstream",
        "drawioShape": "appstream_20"
    },
    "AppSync": {
        "provider": "AWS",
        "pricingServiceCode": "awsAppSync",
        "assetKey": "appsync",
        "drawioShape": "appsync"
    },
    "ApplicationAutoScaling": {
        "provider": "AWS",
        "assetKey": "application_auto_scaling",
        "drawioShape": "application_auto_scaling"
    },
    "ApplicationInsights": {
        "provider": "AWS",
        "pricingServiceCode": "amazonCloudWatch",
        "assetKey": "cloudwatch",
        "drawioShape": "cloudwatch"
    },
    "Athena": {
        "provider": "AWS",
        "pricingServiceCode": "amazonAthena",
        "assetKey": "athena",
        "drawioShape": "athena"
    },
    "AuditManager": {
        "provider": "AWS",
        "pricingServiceCode": "awsAuditManager",
        "assetKey": "audit_manager",
        "drawioShape": "audit_manager"
    },
    "AutoScaling": {
        "provider": "AWS",
        "assetKey": "auto_scaling",
        "drawioShape": "autoscaling"
    },
    "AutoScalingPlans": {
        "provider": "AWS",
        "assetKey": "auto_scaling",
        "drawioShape": "autoscaling"
    },
    "Backup": {
        "provider": "AWS",
        "pricingServiceCode": "awsBackup",
        "assetKey": "backup",
        "drawioShape": "backup"
    },
    "Batch": {
        "provider": "AWS",
        "assetKey": "batch",
        "drawioShape": "batch"
    },
    "BillingConductor": {
        "provider": "AWS",
        "pricingServiceCode": "awsBillingConductor",
        "assetKey": "billing_conductor"
    },
    "Budgets": {
        "provider": "AWS",
        "pricingServiceCode": "awsBudgets",
        "assetKey": "budgets",
        "drawioShape": "budgets"
    },
    "CE": {
        "provider": "AWS",
        "pricingServiceCode": "awsCostExplorer",
        "assetKey": "cost_explorer",
        "drawioShape": "cost_explorer"
    },
    "CUR": {
        "provider": "AWS",
        "assetKey": "cost_and_usage_report",
        "drawioShape": "cost_and_usage_report"
    },
    "Cassandra": {
        "provider": "AWS",
        "pricingServiceCode": "amazonKeyspaces",
        "assetKey": "keyspaces",
        "drawioShape": "keyspaces"
    },
    "CertificateManager": {
        "provider": "AWS",
        "pricingServiceCode": "awsCertificateManager",
        "assetKey": "certificate_manager",
        "drawioShape": "certificate_manager"
    },
    "Chatbot": {
        "provider": "AWS",
        "assetKey": "chatbot",
        "drawioShape": "chatbot"
    },
    "Cloud9": {
        "provider": "AWS",
        "assetKey": "cloud9",
        "drawioShape": "cloud9"
    },
    "CloudFormation": {
        "provider": "AWS",
        "pricingServiceCode": "awsCloudFormation",
        "assetKey": "cloudformation",
        "drawioShape": "cloudformation"
    },
    "CloudFront": {
        "provider": "AWS",
        "pricingServiceCode": "amazonCloudFront",
        "assetKey": "cloudfront",
        "drawioShape": "cloudfront"
    },
    "CloudTrail": {
        "provider": "AWS",
        "pricingServiceCode": "awsCloudTrail",
        "assetKey": "cloudtrail",
        "drawioShape": "cloudtrail"
    },
    "CloudWatch": {
        "provider": "AWS",
        "pricingServiceCode": "amazonCloudWatch",
        "assetKey": "cloudwatch",
        "drawioShape": "cloudwatch"
    },
    "CodeArtifact": {
        "provider": "AWS",
        "pricingServiceCode": "awsCodeArtifact",
        "assetKey": "codeartifact",
        "drawioShape": "codeartifact"
    },
    "CodeBuild": {
        "provider": "AWS",
        "pricingServiceCode": "awsCodeBuild",
        "assetKey": "codebuild",
        "drawioShape": "codebuild"
    },
    "CodeCommit": {
        "provider": "AWS",
        "pricingServiceCode": "awsCodeCommit",
        "assetKey": "codecommit",
        "drawioShape": "codecommit"
    },
    "CodeDeploy": {
        "provider": "AWS",
        "pricingServiceCode": "awsCodeDeploy",
        "assetKey": "codedeploy",
        "drawioShape": "codedeploy"
    },
    "CodeGuruProfiler": {
        "provider": "AWS",
        "pricingServiceCode": "codeGuruReviewer",
        "assetKey": "codeguru",
        "drawioShape": "codeguru"
    },
    "CodeGuruReviewer": {
        "provider": "AWS",
        "pricingServiceCode": "codeGuruReviewer",
        "assetKey": "codeguru",
        "drawioShape": "codeguru"
    },
    "CodePipeline": {
        "provider": "AWS",
        "pricingServiceCode": "awsCodePipeline",
        "assetKey": "codepipeline",
        "drawioShape": "codepipeline"
    },
    "CodeStar": {
        "provider": "AWS",
        "assetKey": "codestar",
        "drawioShape": "codestar"
    },
    "CodeStarConnections": {
        "provider": "AWS",
        "assetKey": "codestar",
        "drawioShape": "codestar"
    },
    "CodeStarNotifications": {
        "provider": "AWS",
        "assetKey": "codestar",
        "drawioShape": "codestar"
    },
    "Cognito": {
        "provider": "AWS",
        "pricingServiceCode": "amazonCognito",
        "assetKey": "cognito",
        "drawioShape": "cognito"
    },
    "Comprehend": {
        "provider": "AWS",
        "pricingServiceCode": "amazonComprehend",
        "assetKey": "comprehend",
        "drawioShape": "comprehend"
    },
    "Config": {
        "provider": "AWS",
        "pricingServiceCode": "awsConfig",
        "assetKey": "config",
        "drawioShape": "config"
    },
    "Connect": {
        "provider": "AWS",
        "assetKey": "connect",
        "drawioShape": "connector"
    },
    "ConnectCampaigns": {
        "provider": "AWS",
        "assetKey": "connect",
        "drawioShape": "connector"
    },
    "ControlTower": {
        "provider": "AWS",
        "assetKey": "control_tower",
        "drawioShape": "control_tower"
    },
    "CustomerProfiles": {
        "provider": "AWS",
        "assetKey": "connect",
        "drawioShape": "connector"
    },
    "DAX": {
        "provider": "AWS",
        "pricingServiceCode": "amazonDynamoDbDaxClusters",
        "assetKey": "data_exchange",
        "drawioShape": "data_exchange"
    },
    "DLM": {
        "provider": "AWS",
        "pricingServiceCode": "amazonElasticBlockStore",
        "assetKey": "ebs",
        "drawioShape": "elastic_block_store"
    },
    "DMS": {
        "provider": "AWS",
        "pricingServiceCode": "awsDatabaseMigrationService",
        "assetKey": "database_migration_service",
        "drawioShape": "database_migration_service"
    },
    "DataBrew": {
        "provider": "AWS",
        "pricingServiceCode": "awsGlueDataBrewInteractiveSessions",
        "assetKey": "glue_databrew",
        "drawioShape": "glue_databrew"
    },
    "DataPipeline": {
        "provider": "AWS",
        "pricingServiceCode": "awsDataPipeline",
        "assetKey": "data_pipeline",
        "drawioShape": "data_pipeline"
    },
    "DataSync": {
        "provider": "AWS",
        "pricingServiceCode": "aWSDataSync",
        "assetKey": "datasync",
        "drawioShape": "datasync"
    },
    "Detective": {
        "provider": "AWS",
        "pricingServiceCode": "amazonDetective",
        "assetKey": "detective",
        "drawioShape": "detective"
    },
    "DevOpsGuru": {
        "provider": "AWS",
        "pricingServiceCode": "amazonDevOpsGuru",
        "assetKey": "devops_guru",
        "drawioShape": "devops_guru"
    },
    "DeviceFarm": {
        "provider": "AWS",
        "pricingServiceCode": "awsDeviceFarm",
        "assetKey": "device_farm",
        "drawioShape": "device_farm"
    },
    "DirectoryService": {
        "provider": "AWS",
        "pricingServiceCode": "aWSDirectoryService",
        "assetKey": "directory_service",
        "drawioShape": "directory_service"
    },
    "DocDB": {
        "provider": "AWS",
        "pricingServiceCode": "amazonDocumentDB",
        "assetKey": "documentdb",
        "drawioShape": "documentdb_with_mongodb_compatibility"
    },
    "DocDBElastic": {
        "provider": "AWS"
    },
    "DynamoDB": {
        "provider": "AWS",
        "pricingServiceCode": "amazonDynamoDb",
        "assetKey": "dynamodb",
        "drawioShape": "dynamodb"
    },
    "EC2": {
        "provider": "AWS",
        "pricingServiceCode": "ec2Enhancement",
        "assetKey": "ec2",
        "drawioShape": "ec2"
    },
    "ECR": {
        "provider": "AWS",
        "pricingServiceCode": "amazonElasticContainerRegistry",
        "assetKey": "ecr",
        "drawioShape": "ecr"
    },
    "ECS": {
        "provider": "AWS",
        "assetKey": "ecs",
        "drawioShape": "ecs"
    },
    "EFS": {
        "provider": "AWS",
        "pricingServiceCode": "amazonEFS",
        "assetKey": "efs",
        "drawioShape": "efs_infrequentaccess"
    },
    "EKS": {
        "provider": "AWS",
        "pricingServiceCode": "awsEks",
        "assetKey": "eks",
        "drawioShape": "eks"
    },
    "EMR": {
        "provider": "AWS",
        "pricingServiceCode": "amazonEMR",
        "assetKey": "emr",
        "drawioShape": "emr"
    },
    "EMRContainers": {
        "provider": "AWS",
        "pricingServiceCode": "amazonEMR",
        "assetKey": "emr",
        "drawioShape": "emr"
    },
    "EMRServerless": {
        "provider": "AWS",
        "pricingServiceCode": "amazonEmrServerless",
        "assetKey": "emr",
        "drawioShape": "emr"
    },
    "ElastiCache": {
        "provider": "AWS",
        "pricingServiceCode": "amazonElastiCache",
        "assetKey": "elasticache",
        "drawioShape": "elasticache"
    },
    "ElasticBeanstalk": {
        "provider": "AWS",
        "assetKey": "elastic_beanstalk",
        "drawioShape": "elastic_beanstalk"
    },
    "ElasticLoadBalancing": {
        "provider": "AWS",
        "pricingServiceCode": "elasticLoadBalancing",
        "assetKey": "elastic_load_balancing",
        "drawioShape": "elastic_load_balancing"
    },
    "ElasticLoadBalancingV2": {
        "provider": "AWS",
        "pricingServiceCode": "elasticLoadBalancing",
        "assetKey": "elastic_load_balancing",
        "drawioShape": "elastic_load_balancing"
    },
    "Elasticsearch": {
        "provider": "AWS",
        "pricingServiceCode": "amazonElasticsearchService",
        "assetKey": "opensearch",
        "drawioShape": "elasticsearch_service"
    },
    "EventSchemas": {
        "provider": "AWS",
        "pricingServiceCode": "amazonEventBridge",
        "assetKey": "eventbridge",
        "drawioShape": "eventbridge"
    },
    "Events": {
        "provider": "AWS",
        "pricingServiceCode": "amazonEventBridge",
        "assetKey": "eventbridge",
        "drawioShape": "eventbridge"
    },
    "Evidently": {
        "provider": "AWS",
        "pricingServiceCode": "amazonCloudWatch",
        "assetKey": "cloudwatch",
        "drawioShape": "cloudwatch"
    },
    "FIS": {
        "provider": "AWS",
        "pricingServiceCode": "awsFaultINjectorSimulator",
        "assetKey": "fault_injection_simulator",
        "drawioShape": "fault_injection_simulator"
    },
    "FMS": {
        "provider": "AWS",
        "pricingServiceCode": "amazonNetworkFirewall",
        "assetKey": "network_firewall",
        "drawioShape": "network_firewall"
    },
    "FSx": {
        "provider": "AWS",
        "pricingServiceCode": "amazonFSx",
        "assetKey": "fsx",
        "drawioShape": "fsx"
    },
    "FinSpace": {
        "provider": "AWS",
        "pricingServiceCode": "awsFinSpace",
        "assetKey": "finspace",
        "drawioShape": "finspace"
    },
    "Forecast": {
        "provider": "AWS",
        "pricingServiceCode": "amazonForecast",
        "assetKey": "forecast",
        "drawioShape": "forecast"
    },
    "FraudDetector": {
        "provider": "AWS",
        "pricingServiceCode": "amazonFraudDetector",
        "assetKey": "fraud_detector",
        "drawioShape": "fraud_detector"
    },
    "GameLift": {
        "provider": "AWS",
        "pricingServiceCode": "amazonGameLift",
        "assetKey": "gamelift",
        "drawioShape": "gamelift"
    },
    "GlobalAccelerator": {
        "provider": "AWS",
        "assetKey": "global_accelerator",
        "drawioShape": "global_accelerator"
    },
    "Glue": {
        "provider": "AWS",
        "pricingServiceCode": "awsGlue",
        "assetKey": "glue",
        "drawioShape": "glue"
    },
    "Grafana": {
        "provider": "AWS",
        "pricingServiceCode": "amazonManagedGrafana"
    },
    "Greengrass": {
        "provider": "AWS",
        "pricingServiceCode": "awsIoTGreengrass",
        "assetKey": "iot_greengrass",
        "drawioShape": "greengrass"
    },
    "GreengrassV2": {
        "provider": "AWS",
        "pricingServiceCode": "awsIoTGreengrass",
        "assetKey": "iot_greengrass",
        "drawioShape": "greengrass"
    },
    "GroundStation": {
        "provider": "AWS",
        "assetKey": "ground_station",
        "drawioShape": "ground_station"
    },
    "GuardDuty": {
        "provider": "AWS",
        "pricingServiceCode": "amazonGuardDuty",
        "assetKey": "guardduty",
        "drawioShape": "guardduty"
    },
    "HealthLake": {
        "provider": "AWS",
        "pricingServiceCode": "amazonHealthlake",
        "assetKey": "healthlake",
        "drawioShape": "healthlake"
    },
    "IAM": {
        "provider": "AWS",
        "assetKey": "iam",
        "drawioShape": "identity_and_access_management"
    },
    "IVS": {
        "provider": "AWS",
        "assetKey": "interactive_video_service"
    },
    "IVSChat": {
        "provider": "AWS"
    },
    "IdentityStore": {
        "provider": "AWS"
    },
    "ImageBuilder": {
        "provider": "AWS",
        "pricingServiceCode": "ec2Enhancement",
        "assetKey": "ec2",
        "drawioShape": "ec2"
    },
    "Inspector": {
        "provider": "AWS",
        "pricingServiceCode": "amazonInspector",
        "assetKey": "inspector",
        "drawioShape": "inspector"
    },
    "InspectorV2": {
        "provider": "AWS",
        "pricingServiceCode": "amazonInspector",
        "assetKey": "inspector",
        "drawioShape": "inspector"
    },
    "InternetMonitor": {
        "provider": "AWS"
    },
    "IoT1Click": {
        "provider": "AWS",
        "assetKey": "iot_1_click",
        "drawioShape": "iot_1click"
    },
    "IoT": {
        "provider": "AWS",
        "pricingServiceCode": "awsIoTCore",
        "assetKey": "iot_core",
        "drawioShape": "iot_core"
    },
    "IoTAnalytics": {
        "provider": "AWS",
        "pricingServiceCode": "awsIoTAnalytics",
        "assetKey": "iot_analytics",
        "drawioShape": "iot_analytics"
    },
    "IoTCoreDeviceAdvisor": {
        "provider": "AWS",
        "pricingServiceCode": "awsIoTCore",
        "assetKey": "iot_core",
        "drawioShape": "iot_core"
    },
    "IoTEvents": {
        "provider": "AWS",
        "pricingServiceCode": "awsIoTEvents",
        "assetKey": "iot_events",
        "drawioShape": "iot_events"
    },
    "IoTFleetHub": {
        "provider": "AWS",
        "pricingServiceCode": "awsIoTDeviceManagement",
        "assetKey": "iot_device_management",
        "drawioShape": "iot_device_management"
    },
    "IoTFleetWise": {
        "provider": "AWS",
        "pricingServiceCode": "awsIoTFleetWise",
        "assetKey": "iot_fleetwise",
        "drawioShape": "iot_fleetwise"
    },
    "IoTSiteWise": {
        "provider": "AWS",
        "assetKey": "iot_sitewise",
        "drawioShape": "iot_sitewise"
    },
    "IoTThingsGraph": {
        "provider": "AWS",
        "pricingServiceCode": "awsIoTThingsGraph",
        "assetKey": "iot_things_graph",
        "drawioShape": "iot_things_graph"
    },
    "IoTTwinMaker": {
        "provider": "AWS",
        "assetKey": "iot_twinmaker",
        "drawioShape": "iot_twinmaker"
    },
    "IoTWireless": {
        "provider": "AWS",
        "pricingServiceCode": "awsIoTCore",
        "assetKey": "iot_core",
        "drawioShape": "iot_core"
    },
    "KMS": {
        "provider": "AWS",
        "pricingServiceCode": "awsKeyManagementService",
        "assetKey": "key_management_service",
        "drawioShape": "key_management_service"
    },
    "KafkaConnect": {
        "provider": "AWS",
        "pricingServiceCode": "amazonManagedStreamingForApacheKafkaMsk",
        "assetKey": "msk",
        "drawioShape": "managed_streaming_for_kafka"
    },
    "Kendra": {
        "provider": "AWS",
        "pricingServiceCode": "amazonKendra",
        "assetKey": "kendra",
        "drawioShape": "kendra"
    },
    "KendraRanking": {
        "provider": "AWS",
        "pricingServiceCode": "amazonKendra",
        "assetKey": "kendra",
        "drawioShape": "kendra"
    },
    "Kinesis": {
        "provider": "AWS",
        "pricingServiceCode": "amazonKinesisDataStreams",
        "assetKey": "kinesis_data_streams",
        "drawioShape": "kinesis_data_streams"
    },
    "KinesisAnalytics": {
        "provider": "AWS",
        "pricingServiceCode": "amazonKinesisDataAnalytics",
        "assetKey": "kinesis_data_analytics",
        "drawioShape": "kinesis_data_analytics"
    },
    "KinesisAnalyticsV2": {
        "provider": "AWS",
        "pricingServiceCode": "amazonKinesisDataAnalytics",
        "assetKey": "kinesis_data_analytics",
        "drawioShape": "kinesis_data_analytics"
    },
    "KinesisFirehose": {
        "provider": "AWS",
        "pricingServiceCode": "amazonKinesisFirehose",
        "assetKey": "kinesis_firehose"
    },
    "KinesisVideo": {
        "provider": "AWS",
        "pricingServiceCode": "amazonKinesisVideoStreams",
        "assetKey": "kinesis_video_streams",
        "drawioShape": "kinesis_video_streams"
    },
    "LakeFormation": {
        "provider": "AWS",
        "pricingServiceCode": "awsLakeFormation",
        "assetKey": "lake_formation",
        "drawioShape": "lake_formation"
    },
    "Lambda": {
        "provider": "AWS",
        "pricingServiceCode": "aWSLambda",
        "assetKey": "lambda",
        "drawioShape": "lambda"
    },
    "Lex": {
        "provider": "AWS",
        "pricingServiceCode": "amazonLex",
        "assetKey": "lex",
        "drawioShape": "lex"
    },
    "LicenseManager": {
        "provider": "AWS",
        "assetKey": "license_manager",
        "drawioShape": "license_manager"
    },
    "Lightsail": {
        "provider": "AWS",
        "pricingServiceCode": "amazonLightsail",
        "assetKey": "lightsail",
        "drawioShape": "lightsail"
    },
    "Location": {
        "provider": "AWS",
        "pricingServiceCode": "locationService",
        "assetKey": "location_service",
        "drawioShape": "location_service"
    },
    "Logs": {
        "provider": "AWS",
        "pricingServiceCode": "amazonCloudWatch",
        "assetKey": "cloudwatch",
        "drawioShape": "cloudwatch"
    },
    "LookoutEquipment": {
        "provider": "AWS",
        "pricingServiceCode": "amazonLookoutForEquipment",
        "assetKey": "lookout_for_equipment",
        "drawioShape": "lookout_for_equipment"
    },
    "LookoutMetrics": {
        "provider": "AWS",
        "pricingServiceCode": "amazonLookoutForMetrics",
        "assetKey": "lookout_for_metrics",
        "drawioShape": "lookout_for_metrics"
    },
    "LookoutVision": {
        "provider": "AWS",
        "pricingServiceCode": "amazonLookoutForVision",
        "assetKey": "lookout_for_vision",
        "drawioShape": "lookout_for_vision"
    },
    "M2": {
        "provider": "AWS",
        "pricingServiceCode": "amazonMainframeModernization",
        "assetKey": "mainframe_modernization",
        "drawioShape": "mainframe_modernization"
    },
    "MSK": {
        "provider": "AWS",
        "pricingServiceCode": "amazonManagedStreamingForApacheKafkaMsk",
        "assetKey": "msk",
        "drawioShape": "managed_streaming_for_kafka"
    },
    "MWAA": {
        "provider": "AWS",
        "pricingServiceCode": "amazonManagedWorkflowsForApacheAirflow",
        "assetKey": "mwaa",
        "drawioShape": "managed_workflows_for_apache_airflow"
    },
    "Macie": {
        "provider": "AWS",
        "pricingServiceCode": "amazonMacie",
        "assetKey": "macie",
        "drawioShape": "macie"
    },
    "ManagedBlockchain": {
        "provider": "AWS",
        "pricingServiceCode": "amazonManagedBlockchain",
        "assetKey": "managed_blockchain",
        "drawioShape": "managed_blockchain"
    },
    "MediaConnect": {
        "provider": "AWS",
        "pricingServiceCode": "awsElementalMediaConnect",
        "assetKey": "elemental_mediaconnect",
        "drawioShape": "elemental_mediaconnect"
    },
    "MediaConvert": {
        "provider": "AWS",
        "pricingServiceCode": "elementalMediaConvert",
        "assetKey": "elemental_mediaconvert",
        "drawioShape": "elemental_mediaconvert"
    },
    "MediaLive": {
        "provider": "AWS",
        "pricingServiceCode": "awsElementalMediaLive",
        "assetKey": "elemental_medialive",
        "drawioShape": "elemental_medialive"
    },
    "MediaPackage": {
        "provider": "AWS",
        "pricingServiceCode": "awsElementalMediaPackage",
        "assetKey": "elemental_mediapackage",
        "drawioShape": "elemental_mediapackage"
    },
    "MediaStore": {
        "provider": "AWS",
        "assetKey": "elemental_mediastore",
        "drawioShape": "elemental_mediastore"
    },
    "MediaTailor": {
        "provider": "AWS",
        "pricingServiceCode": "awsElementalMediaTailor",
        "assetKey": "elemental_mediatailor",
        "drawioShape": "elemental_mediatailor"
    },
    "MemoryDB": {
        "provider": "AWS",
        "pricingServiceCode": "amazonMemoryDbForRedis",
        "assetKey": "memorydb_for_redis",
        "drawioShape": "memorydb_for_redis"
    },
    "Neptune": {
        "provider": "AWS",
        "pricingServiceCode": "amazonNeptune",
        "assetKey": "neptune",
        "drawioShape": "neptune"
    },
    "NetworkFirewall": {
        "provider": "AWS",
        "pricingServiceCode": "amazonNetworkFirewall",
        "assetKey": "network_firewall",
        "drawioShape": "network_firewall"
    },
    "NetworkManager": {
        "provider": "AWS",
        "pricingServiceCode": "amazonVirtualPrivateCloud",
        "assetKey": "vpc",
        "drawioShape": "virtual_private_cloud"
    },
    "NimbleStudio": {
        "provider": "AWS",
        "assetKey": "nimble_studio",
        "drawioShape": "nimble_studio"
    },
    "Oam": {
        "provider": "AWS"
    },
    "Omics": {
        "provider": "AWS",
        "pricingServiceCode": "amazonOmics"
    },
    "OpenSearchServerless": {
        "provider": "AWS",
        "pricingServiceCode": "amazonElasticsearchService",
        "assetKey": "opensearch",
        "drawioShape": "elasticsearch_service"
    },
    "OpenSearchService": {
        "provider": "AWS",
        "pricingServiceCode": "amazonElasticsearchService",
        "assetKey": "opensearch",
        "drawioShape": "elasticsearch_service"
    },
    "OpsWorks": {
        "provider": "AWS",
        "assetKey": "opsworks",
        "drawioShape": "opsworks"
    },
    "OpsWorksCM": {
        "provider": "AWS",
        "assetKey": "opsworks",
        "drawioShape": "opsworks"
    },
    "Organizations": {
        "provider": "AWS",
        "assetKey": "organizations",
        "drawioShape": "organizations"
    },
    "Panorama": {
        "provider": "AWS",
        "assetKey": "panorama",
        "drawioShape": "panorama"
    },
    "Personalize": {
        "provider": "AWS",
        "pricingServiceCode": "amazonPersonalize",
        "assetKey": "personalize",
        "drawioShape": "personalize"
    },
    "Pinpoint": {
        "provider": "AWS",
        "pricingServiceCode": "amazonPinpoint",
        "assetKey": "pinpoint",
        "drawioShape": "pinpoint"
    },
    "PinpointEmail": {
        "provider": "AWS",
        "pricingServiceCode": "amazonPinpoint",
        "assetKey": "pinpoint",
        "drawioShape": "pinpoint"
    },
    "Pipes": {
        "provider": "AWS"
    },
    "QLDB": {
        "provider": "AWS",
        "pricingServiceCode": "amazonQuantumLedgerDatabaseQldb",
        "assetKey": "quantum_ledger_database",
        "drawioShape": "quantum_ledger_database"
    },
    "QuickSight": {
        "provider": "AWS",
        "pricingServiceCode": "amazonQuickSight",
        "assetKey": "quicksight",
        "drawioShape": "quicksight"
    },
    "RAM": {
        "provider": "AWS",
        "assetKey": "resource_access_manager",
        "drawioShape": "resource_access_manager"
    },
    "RDS": {
        "provider": "AWS",
        "pricingServiceCode": "amazonRDSForSQLServer",
        "assetKey": "rds",
        "drawioShape": "rds"
    },
    "RUM": {
        "provider": "AWS",
        "pricingServiceCode": "amazonCloudWatch",
        "assetKey": "cloudwatch",
        "drawioShape": "cloudwatch"
    },
    "Redshift": {
        "provider": "AWS",
        "pricingServiceCode": "amazonRedshift",
        "assetKey": "redshift",
        "drawioShape": "redshift"
    },
    "RedshiftServerless": {
        "provider": "AWS",
        "pricingServiceCode": "amazonRedshift",
        "assetKey": "redshift",
        "drawioShape": "redshift"
    },
    "RefactorSpaces": {
        "provider": "AWS",
        "pricingServiceCode": "migrationHubRefactorSpaces",
        "assetKey": "migration_hub",
        "drawioShape": "migration_hub"
    },
    "Rekognition": {
        "provider": "AWS",
        "pricingServiceCode": "amazonRekognition",
        "assetKey": "rekognition",
        "drawioShape": "rekognition"
    },
    "ResilienceHub": {
        "provider": "AWS",
        "pricingServiceCode": "awsResilienceHub",
        "assetKey": "resilience_hub",
        "drawioShape": "resilience_hub"
    },
    "ResourceExplorer2": {
        "provider": "AWS"
    },
    "ResourceGroups": {
        "provider": "AWS",
        "pricingServiceCode": "awsSystemsManager",
        "assetKey": "ssm",
        "drawioShape": "systems_manager"
    },
    "RoboMaker": {
        "provider": "AWS",
        "assetKey": "robomaker",
        "drawioShape": "robomaker"
    },
    "RolesAnywhere": {
        "provider": "AWS",
        "assetKey": "iam",
        "drawioShape": "identity_and_access_management"
    },
    "Route53": {
        "provider": "AWS",
        "pricingServiceCode": "amazonRoute53",
        "assetKey": "route_53",
        "drawioShape": "route_53"
    },
    "Route53RecoveryControl": {
        "provider": "AWS",
        "pricingServiceCode": "amazonRoute53",
        "assetKey": "route_53",
        "drawioShape": "route_53"
    },
    "Route53RecoveryReadiness": {
        "provider": "AWS",
        "pricingServiceCode": "amazonRoute53",
        "assetKey": "route_53",
        "drawioShape": "route_53"
    },
    "Route53Resolver": {
        "provider": "AWS",
        "pricingServiceCode": "amazonRoute53",
        "assetKey": "route_53",
        "drawioShape": "route_53"
    },
    "S3": {
        "provider": "AWS",
        "pricingServiceCode": "amazonSimpleStorageServiceGroup",
        "assetKey": "s3",
        "drawioShape": "s3"
    },
    "S3ObjectLambda": {
        "provider": "AWS",
        "pricingServiceCode": "s3ObjectLambda",
        "assetKey": "s3",
        "drawioShape": "s3"
    },
    "S3Outposts": {
        "provider": "AWS",
        "assetKey": "s3_on_outposts",
        "drawioShape": "s3_on_outposts"
    },
    "SDB": {
        "provider": "AWS"
    },
    "SES": {
        "provider": "AWS",
        "pricingServiceCode": "amazonSimpleEmailService",
        "assetKey": "ses",
        "drawioShape": "simple_email_service"
    },
    "SNS": {
        "provider": "AWS",
        "pricingServiceCode": "amazonSimpleNotificationService",
        "assetKey": "sns",
        "drawioShape": "sns"
    },
    "SQS": {
        "provider": "AWS",
        "pricingServiceCode": "amazonSimpleQueueService",
        "assetKey": "sqs",
        "drawioShape": "sqs"
    },
    "SSM": {
        "provider": "AWS",
        "pricingServiceCode": "awsSystemsManager",
        "assetKey": "ssm",
        "drawioShape": "systems_manager"
    },
    "SSMContacts": {
        "provider": "AWS",
        "pricingServiceCode": "awsSystemsManager",
        "assetKey": "ssm",
        "drawioShape": "systems_manager"
    },
    "SSMIncidents": {
        "provider": "AWS",
        "pricingServiceCode": "awsSystemsManager",
        "assetKey": "ssm",
        "drawioShape": "systems_manager"
    },
    "SSO": {
        "provider": "AWS",
        "assetKey": "iam_identity_center",
        "drawioShape": "single_sign_on"
    },
    "SageMaker": {
        "provider": "AWS",
        "pricingServiceCode": "amazonSageMaker",
        "assetKey": "sagemaker",
        "drawioShape": "sagemaker"
    },
    "Scheduler": {
        "provider": "AWS"
    },
    "SecretsManager": {
        "provider": "AWS",
        "pricingServiceCode": "awsSecretsManager",
        "assetKey": "secrets_manager",
        "drawioShape": "secrets_manager"
    },
    "SecurityHub": {
        "provider": "AWS",
        "pricingServiceCode": "awsSecurityHub",
        "assetKey": "security_hub",
        "drawioShape": "security_hub"
    },
    "Serverless": {
        "provider": "AWS",
        "assetKey": "serverless_application_repository",
        "drawioShape": "serverless_application_repository"
    },
    "ServiceCatalog": {
        "provider": "AWS",
        "pricingServiceCode": "awsServiceCatalog",
        "assetKey": "service_catalog",
        "drawioShape": "service_catalog"
    },
    "ServiceCatalogAppRegistry": {
        "provider": "AWS",
        "pricingServiceCode": "awsServiceCatalog",
        "assetKey": "service_catalog",
        "drawioShape": "service_catalog"
    },
    "ServiceDiscovery": {
        "provider": "AWS",
        "assetKey": "application_discovery_service",
        "drawioShape": "application_discovery_service"
    },
    "Signer": {
        "provider": "AWS",
        "assetKey": "signer",
        "drawioShape": "signer"
    },
    "SimSpaceWeaver": {
        "provider": "AWS",
        "pricingServiceCode": "simSpaceWeaver"
    },
    "StepFunctions": {
        "provider": "AWS",
        "pricingServiceCode": "awsStepFunctions",
        "assetKey": "step_functions",
        "drawioShape": "step_functions"
    },
    "SupportApp": {
        "provider": "AWS",
        "assetKey": "support",
        "drawioShape": "support"
    },
    "Synthetics": {
        "provider": "AWS",
        "pricingServiceCode": "amazonCloudWatch",
        "assetKey": "cloudwatch",
        "drawioShape": "cloudwatch"
    },
    "SystemsManagerSAP": {
        "provider": "AWS"
    },
    "Timestream": {
        "provider": "AWS",
        "pricingServiceCode": "amazonTimestream",
        "assetKey": "timestream",
        "drawioShape": "timestream"
    },
    "Transfer": {
        "provider": "AWS",
        "pricingServiceCode": "aWSTransferForSFTP",
        "assetKey": "transfer_family",
        "drawioShape": "transfer_family"
    },
    "VoiceID": {
        "provider": "AWS",
        "assetKey": "connect",
        "drawioShape": "connector"
    },
    "VpcLattice": {
        "provider": "AWS",
        "pricingServiceCode": "amazonVirtualPrivateCloud",
        "assetKey": "vpc",
        "drawioShape": "virtual_private_cloud"
    },
    "WAF": {
        "provider": "AWS",
        "pricingServiceCode": "awsWebApplicationFirewall",
        "assetKey": "waf",
        "drawioShape": "waf"
    },
    "WAFRegional": {
        "provider": "AWS",
        "pricingServiceCode": "awsWebApplicationFirewall",
        "assetKey": "waf",
        "drawioShape": "waf"
    },
    "WAFv2": {
        "provider": "AWS",
        "pricingServiceCode": "awsWebApplicationFirewall",
        "assetKey": "waf",
        "drawioShape": "waf"
    },
    "Wisdom": {
        "provider": "AWS",
        "assetKey": "connect",
        "drawioShape": "connector"
    },
    "WorkSpaces": {
        "provider": "AWS",
        "pricingServiceCode": "amazonWorkspaces",
        "assetKey": "workspaces",
        "drawioShape": "workspaces"
    },
    "XRay": {
        "provider": "AWS",
        "pricingServiceCode": "awsXRay",
        "assetKey": "x_ray",
        "drawioShape": "xray"
    },
    "ASK": {
        "provider": "Alexa",
        "assetKey": "alexa_for_business",
        "drawioShape": "alexa_for_business"
    }
};
/** @internal */
exports.AwsResourceMapping = {
    "AWS::ACMPCA::Certificate": {
        "service": "ACMPCA",
        "serviceAssetKey": "certificate_manager",
        "generalIconKey": "ssl_padlock",
        "drawioGeneralShape": "ssl_padlock"
    },
    "AWS::ACMPCA::CertificateAuthority": {
        "service": "ACMPCA",
        "serviceAssetKey": "certificate_manager",
        "assetKey": "certificate_manager_certificate_authority"
    },
    "AWS::ACMPCA::CertificateAuthorityActivation": {
        "service": "ACMPCA",
        "serviceAssetKey": "certificate_manager"
    },
    "AWS::ACMPCA::Permission": {
        "service": "ACMPCA",
        "serviceAssetKey": "certificate_manager",
        "generalIconKey": "policy",
        "drawioGeneralShape": "addon"
    },
    "AWS::APS::RuleGroupsNamespace": {
        "service": "APS",
        "serviceAssetKey": "aps"
    },
    "AWS::APS::Workspace": {
        "service": "APS",
        "serviceAssetKey": "aps"
    },
    "AWS::AccessAnalyzer::Analyzer": {
        "service": "AccessAnalyzer",
        "serviceAssetKey": "iam"
    },
    "AWS::AmazonMQ::Broker": {
        "service": "AmazonMQ",
        "serviceAssetKey": "mq",
        "assetKey": "mq_broker",
        "drawioShape": "mq_broker"
    },
    "AWS::AmazonMQ::Configuration": {
        "service": "AmazonMQ",
        "serviceAssetKey": "mq",
        "generalIconKey": "config",
        "drawioGeneralShape": "gear"
    },
    "AWS::AmazonMQ::ConfigurationAssociation": {
        "service": "AmazonMQ",
        "serviceAssetKey": "mq"
    },
    "AWS::Amplify::App": {
        "service": "Amplify",
        "serviceAssetKey": "amplify",
        "generalIconKey": "generic_application"
    },
    "AWS::Amplify::Branch": {
        "service": "Amplify",
        "serviceAssetKey": "amplify",
        "generalIconKey": "git_repository"
    },
    "AWS::Amplify::Domain": {
        "service": "Amplify",
        "serviceAssetKey": "amplify"
    },
    "AWS::AmplifyUIBuilder::Component": {
        "service": "AmplifyUIBuilder",
        "serviceAssetKey": "amplify"
    },
    "AWS::AmplifyUIBuilder::Form": {
        "service": "AmplifyUIBuilder",
        "serviceAssetKey": "amplify"
    },
    "AWS::AmplifyUIBuilder::Theme": {
        "service": "AmplifyUIBuilder",
        "serviceAssetKey": "amplify"
    },
    "AWS::ApiGateway::Account": {
        "service": "ApiGateway",
        "serviceAssetKey": "api_gateway"
    },
    "AWS::ApiGateway::ApiKey": {
        "service": "ApiGateway",
        "serviceAssetKey": "api_gateway",
        "generalIconKey": "key",
        "drawioGeneralShape": "permissions"
    },
    "AWS::ApiGateway::Authorizer": {
        "service": "ApiGateway",
        "serviceAssetKey": "api_gateway"
    },
    "AWS::ApiGateway::BasePathMapping": {
        "service": "ApiGateway",
        "serviceAssetKey": "api_gateway"
    },
    "AWS::ApiGateway::ClientCertificate": {
        "service": "ApiGateway",
        "serviceAssetKey": "api_gateway",
        "generalIconKey": "ssl_padlock",
        "drawioGeneralShape": "ssl_padlock"
    },
    "AWS::ApiGateway::Deployment": {
        "service": "ApiGateway",
        "serviceAssetKey": "api_gateway"
    },
    "AWS::ApiGateway::DocumentationPart": {
        "service": "ApiGateway",
        "serviceAssetKey": "api_gateway",
        "generalIconKey": "document"
    },
    "AWS::ApiGateway::DocumentationVersion": {
        "service": "ApiGateway",
        "serviceAssetKey": "api_gateway",
        "generalIconKey": "document"
    },
    "AWS::ApiGateway::DomainName": {
        "service": "ApiGateway",
        "serviceAssetKey": "api_gateway"
    },
    "AWS::ApiGateway::GatewayResponse": {
        "service": "ApiGateway",
        "serviceAssetKey": "api_gateway"
    },
    "AWS::ApiGateway::Method": {
        "service": "ApiGateway",
        "serviceAssetKey": "api_gateway"
    },
    "AWS::ApiGateway::Model": {
        "service": "ApiGateway",
        "serviceAssetKey": "api_gateway",
        "generalIconKey": "document"
    },
    "AWS::ApiGateway::RequestValidator": {
        "service": "ApiGateway",
        "serviceAssetKey": "api_gateway"
    },
    "AWS::ApiGateway::Resource": {
        "service": "ApiGateway",
        "serviceAssetKey": "api_gateway"
    },
    "AWS::ApiGateway::RestApi": {
        "service": "ApiGateway",
        "serviceAssetKey": "api_gateway"
    },
    "AWS::ApiGateway::Stage": {
        "service": "ApiGateway",
        "serviceAssetKey": "api_gateway"
    },
    "AWS::ApiGateway::UsagePlan": {
        "service": "ApiGateway",
        "serviceAssetKey": "api_gateway"
    },
    "AWS::ApiGateway::UsagePlanKey": {
        "service": "ApiGateway",
        "serviceAssetKey": "api_gateway",
        "generalIconKey": "key",
        "drawioGeneralShape": "permissions"
    },
    "AWS::ApiGateway::VpcLink": {
        "service": "ApiGateway",
        "serviceAssetKey": "api_gateway"
    },
    "AWS::ApiGatewayV2::Api": {
        "service": "ApiGatewayV2",
        "serviceAssetKey": "api_gateway"
    },
    "AWS::ApiGatewayV2::ApiGatewayManagedOverrides": {
        "service": "ApiGatewayV2",
        "serviceAssetKey": "api_gateway"
    },
    "AWS::ApiGatewayV2::ApiMapping": {
        "service": "ApiGatewayV2",
        "serviceAssetKey": "api_gateway"
    },
    "AWS::ApiGatewayV2::Authorizer": {
        "service": "ApiGatewayV2",
        "serviceAssetKey": "api_gateway"
    },
    "AWS::ApiGatewayV2::Deployment": {
        "service": "ApiGatewayV2",
        "serviceAssetKey": "api_gateway"
    },
    "AWS::ApiGatewayV2::DomainName": {
        "service": "ApiGatewayV2",
        "serviceAssetKey": "api_gateway"
    },
    "AWS::ApiGatewayV2::Integration": {
        "service": "ApiGatewayV2",
        "serviceAssetKey": "api_gateway"
    },
    "AWS::ApiGatewayV2::IntegrationResponse": {
        "service": "ApiGatewayV2",
        "serviceAssetKey": "api_gateway"
    },
    "AWS::ApiGatewayV2::Model": {
        "service": "ApiGatewayV2",
        "serviceAssetKey": "api_gateway",
        "generalIconKey": "document"
    },
    "AWS::ApiGatewayV2::Route": {
        "service": "ApiGatewayV2",
        "serviceAssetKey": "api_gateway"
    },
    "AWS::ApiGatewayV2::RouteResponse": {
        "service": "ApiGatewayV2",
        "serviceAssetKey": "api_gateway"
    },
    "AWS::ApiGatewayV2::Stage": {
        "service": "ApiGatewayV2",
        "serviceAssetKey": "api_gateway"
    },
    "AWS::ApiGatewayV2::VpcLink": {
        "service": "ApiGatewayV2",
        "serviceAssetKey": "api_gateway"
    },
    "AWS::AppConfig::Application": {
        "service": "AppConfig",
        "serviceAssetKey": "appconfig",
        "generalIconKey": "generic_application"
    },
    "AWS::AppConfig::ConfigurationProfile": {
        "service": "AppConfig",
        "serviceAssetKey": "appconfig"
    },
    "AWS::AppConfig::Deployment": {
        "service": "AppConfig",
        "serviceAssetKey": "appconfig"
    },
    "AWS::AppConfig::DeploymentStrategy": {
        "service": "AppConfig",
        "serviceAssetKey": "appconfig"
    },
    "AWS::AppConfig::Environment": {
        "service": "AppConfig",
        "serviceAssetKey": "appconfig"
    },
    "AWS::AppConfig::HostedConfigurationVersion": {
        "service": "AppConfig",
        "serviceAssetKey": "appconfig"
    },
    "AWS::AppFlow::Connector": {
        "service": "AppFlow",
        "serviceAssetKey": "appflow"
    },
    "AWS::AppFlow::ConnectorProfile": {
        "service": "AppFlow",
        "serviceAssetKey": "appflow"
    },
    "AWS::AppFlow::Flow": {
        "service": "AppFlow",
        "serviceAssetKey": "appflow"
    },
    "AWS::AppIntegrations::DataIntegration": {
        "service": "AppIntegrations",
        "serviceAssetKey": "application_discovery_service"
    },
    "AWS::AppIntegrations::EventIntegration": {
        "service": "AppIntegrations",
        "serviceAssetKey": "application_discovery_service"
    },
    "AWS::AppMesh::GatewayRoute": {
        "service": "AppMesh",
        "serviceAssetKey": "app_mesh"
    },
    "AWS::AppMesh::Mesh": {
        "service": "AppMesh",
        "serviceAssetKey": "app_mesh",
        "assetKey": "app_mesh_mesh",
        "drawioShape": "mesh"
    },
    "AWS::AppMesh::Route": {
        "service": "AppMesh",
        "serviceAssetKey": "app_mesh"
    },
    "AWS::AppMesh::VirtualGateway": {
        "service": "AppMesh",
        "serviceAssetKey": "app_mesh",
        "assetKey": "app_mesh_virtual_gateway",
        "drawioShape": "virtual_gateway"
    },
    "AWS::AppMesh::VirtualNode": {
        "service": "AppMesh",
        "serviceAssetKey": "app_mesh",
        "assetKey": "app_mesh_virtual_node",
        "drawioShape": "virtual_node"
    },
    "AWS::AppMesh::VirtualRouter": {
        "service": "AppMesh",
        "serviceAssetKey": "app_mesh",
        "assetKey": "app_mesh_virtual_router",
        "drawioShape": "virtual_router"
    },
    "AWS::AppMesh::VirtualService": {
        "service": "AppMesh",
        "serviceAssetKey": "app_mesh",
        "assetKey": "app_mesh_virtual_service",
        "drawioShape": "virtual_service"
    },
    "AWS::AppRunner::ObservabilityConfiguration": {
        "service": "AppRunner",
        "serviceAssetKey": "app_runner",
        "generalIconKey": "config",
        "drawioGeneralShape": "gear"
    },
    "AWS::AppRunner::Service": {
        "service": "AppRunner",
        "serviceAssetKey": "app_runner"
    },
    "AWS::AppRunner::VpcConnector": {
        "service": "AppRunner",
        "serviceAssetKey": "app_runner"
    },
    "AWS::AppRunner::VpcIngressConnection": {
        "service": "AppRunner",
        "serviceAssetKey": "app_runner"
    },
    "AWS::AppStream::AppBlock": {
        "service": "AppStream",
        "serviceAssetKey": "appstream"
    },
    "AWS::AppStream::Application": {
        "service": "AppStream",
        "serviceAssetKey": "appstream",
        "generalIconKey": "generic_application"
    },
    "AWS::AppStream::ApplicationEntitlementAssociation": {
        "service": "AppStream",
        "serviceAssetKey": "appstream"
    },
    "AWS::AppStream::ApplicationFleetAssociation": {
        "service": "AppStream",
        "serviceAssetKey": "appstream"
    },
    "AWS::AppStream::DirectoryConfig": {
        "service": "AppStream",
        "serviceAssetKey": "appstream",
        "generalIconKey": "config",
        "drawioGeneralShape": "gear"
    },
    "AWS::AppStream::Entitlement": {
        "service": "AppStream",
        "serviceAssetKey": "appstream"
    },
    "AWS::AppStream::Fleet": {
        "service": "AppStream",
        "serviceAssetKey": "appstream"
    },
    "AWS::AppStream::ImageBuilder": {
        "service": "AppStream",
        "serviceAssetKey": "appstream"
    },
    "AWS::AppStream::Stack": {
        "service": "AppStream",
        "serviceAssetKey": "appstream"
    },
    "AWS::AppStream::StackFleetAssociation": {
        "service": "AppStream",
        "serviceAssetKey": "appstream"
    },
    "AWS::AppStream::StackUserAssociation": {
        "service": "AppStream",
        "serviceAssetKey": "appstream"
    },
    "AWS::AppStream::User": {
        "service": "AppStream",
        "serviceAssetKey": "appstream",
        "generalIconKey": "user",
        "drawioGeneralShape": "user"
    },
    "AWS::AppSync::ApiCache": {
        "service": "AppSync",
        "serviceAssetKey": "appsync"
    },
    "AWS::AppSync::ApiKey": {
        "service": "AppSync",
        "serviceAssetKey": "appsync",
        "generalIconKey": "key",
        "drawioGeneralShape": "permissions"
    },
    "AWS::AppSync::DataSource": {
        "service": "AppSync",
        "serviceAssetKey": "appsync"
    },
    "AWS::AppSync::DomainName": {
        "service": "AppSync",
        "serviceAssetKey": "appsync"
    },
    "AWS::AppSync::DomainNameApiAssociation": {
        "service": "AppSync",
        "serviceAssetKey": "appsync"
    },
    "AWS::AppSync::FunctionConfiguration": {
        "service": "AppSync",
        "serviceAssetKey": "appsync",
        "generalIconKey": "config",
        "drawioGeneralShape": "gear"
    },
    "AWS::AppSync::GraphQLApi": {
        "service": "AppSync",
        "serviceAssetKey": "appsync"
    },
    "AWS::AppSync::GraphQLSchema": {
        "service": "AppSync",
        "serviceAssetKey": "appsync"
    },
    "AWS::AppSync::Resolver": {
        "service": "AppSync",
        "serviceAssetKey": "appsync"
    },
    "AWS::ApplicationAutoScaling::ScalableTarget": {
        "service": "ApplicationAutoScaling",
        "serviceAssetKey": "application_auto_scaling"
    },
    "AWS::ApplicationAutoScaling::ScalingPolicy": {
        "service": "ApplicationAutoScaling",
        "serviceAssetKey": "application_auto_scaling",
        "generalIconKey": "policy",
        "drawioGeneralShape": "addon"
    },
    "AWS::ApplicationInsights::Application": {
        "service": "ApplicationInsights",
        "serviceAssetKey": "cloudwatch",
        "generalIconKey": "generic_application"
    },
    "AWS::Athena::DataCatalog": {
        "service": "Athena",
        "serviceAssetKey": "athena",
        "generalIconKey": "logs",
        "drawioGeneralShape": "logs"
    },
    "AWS::Athena::NamedQuery": {
        "service": "Athena",
        "serviceAssetKey": "athena"
    },
    "AWS::Athena::PreparedStatement": {
        "service": "Athena",
        "serviceAssetKey": "athena"
    },
    "AWS::Athena::WorkGroup": {
        "service": "Athena",
        "serviceAssetKey": "athena"
    },
    "AWS::AuditManager::Assessment": {
        "service": "AuditManager",
        "serviceAssetKey": "audit_manager"
    },
    "AWS::AutoScaling::AutoScalingGroup": {
        "service": "AutoScaling",
        "serviceAssetKey": "auto_scaling"
    },
    "AWS::AutoScaling::LaunchConfiguration": {
        "service": "AutoScaling",
        "serviceAssetKey": "auto_scaling",
        "generalIconKey": "config",
        "drawioGeneralShape": "gear"
    },
    "AWS::AutoScaling::LifecycleHook": {
        "service": "AutoScaling",
        "serviceAssetKey": "auto_scaling"
    },
    "AWS::AutoScaling::ScalingPolicy": {
        "service": "AutoScaling",
        "serviceAssetKey": "auto_scaling",
        "generalIconKey": "policy",
        "drawioGeneralShape": "addon"
    },
    "AWS::AutoScaling::ScheduledAction": {
        "service": "AutoScaling",
        "serviceAssetKey": "auto_scaling"
    },
    "AWS::AutoScaling::WarmPool": {
        "service": "AutoScaling",
        "serviceAssetKey": "auto_scaling"
    },
    "AWS::AutoScalingPlans::ScalingPlan": {
        "service": "AutoScalingPlans",
        "serviceAssetKey": "auto_scaling"
    },
    "AWS::Backup::BackupPlan": {
        "service": "Backup",
        "serviceAssetKey": "backup",
        "assetKey": "backup_backup_plan",
        "drawioShape": "backup_backup_plan"
    },
    "AWS::Backup::BackupSelection": {
        "service": "Backup",
        "serviceAssetKey": "backup"
    },
    "AWS::Backup::BackupVault": {
        "service": "Backup",
        "serviceAssetKey": "backup",
        "assetKey": "backup_backup_vault"
    },
    "AWS::Backup::Framework": {
        "service": "Backup",
        "serviceAssetKey": "backup"
    },
    "AWS::Backup::ReportPlan": {
        "service": "Backup",
        "serviceAssetKey": "backup"
    },
    "AWS::Batch::ComputeEnvironment": {
        "service": "Batch",
        "serviceAssetKey": "batch"
    },
    "AWS::Batch::JobDefinition": {
        "service": "Batch",
        "serviceAssetKey": "batch"
    },
    "AWS::Batch::JobQueue": {
        "service": "Batch",
        "serviceAssetKey": "batch"
    },
    "AWS::Batch::SchedulingPolicy": {
        "service": "Batch",
        "serviceAssetKey": "batch",
        "generalIconKey": "policy",
        "drawioGeneralShape": "addon"
    },
    "AWS::BillingConductor::BillingGroup": {
        "service": "BillingConductor",
        "serviceAssetKey": "billing_conductor"
    },
    "AWS::BillingConductor::CustomLineItem": {
        "service": "BillingConductor",
        "serviceAssetKey": "billing_conductor"
    },
    "AWS::BillingConductor::PricingPlan": {
        "service": "BillingConductor",
        "serviceAssetKey": "billing_conductor"
    },
    "AWS::BillingConductor::PricingRule": {
        "service": "BillingConductor",
        "serviceAssetKey": "billing_conductor",
        "generalIconKey": "rule",
        "drawioGeneralShape": "rule"
    },
    "AWS::Budgets::Budget": {
        "service": "Budgets",
        "serviceAssetKey": "budgets"
    },
    "AWS::Budgets::BudgetsAction": {
        "service": "Budgets",
        "serviceAssetKey": "budgets"
    },
    "AWS::CE::AnomalyMonitor": {
        "service": "CE",
        "serviceAssetKey": "cost_explorer"
    },
    "AWS::CE::AnomalySubscription": {
        "service": "CE",
        "serviceAssetKey": "cost_explorer"
    },
    "AWS::CE::CostCategory": {
        "service": "CE",
        "serviceAssetKey": "cost_explorer"
    },
    "AWS::CUR::ReportDefinition": {
        "service": "CUR",
        "serviceAssetKey": "cost_and_usage_report"
    },
    "AWS::Cassandra::Keyspace": {
        "service": "Cassandra",
        "serviceAssetKey": "keyspaces"
    },
    "AWS::Cassandra::Table": {
        "service": "Cassandra",
        "serviceAssetKey": "keyspaces"
    },
    "AWS::CertificateManager::Account": {
        "service": "CertificateManager",
        "serviceAssetKey": "certificate_manager"
    },
    "AWS::CertificateManager::Certificate": {
        "service": "CertificateManager",
        "serviceAssetKey": "certificate_manager",
        "generalIconKey": "ssl_padlock",
        "drawioGeneralShape": "ssl_padlock"
    },
    "AWS::Chatbot::MicrosoftTeamsChannelConfiguration": {
        "service": "Chatbot",
        "serviceAssetKey": "chatbot",
        "generalIconKey": "config",
        "drawioGeneralShape": "gear"
    },
    "AWS::Chatbot::SlackChannelConfiguration": {
        "service": "Chatbot",
        "serviceAssetKey": "chatbot",
        "generalIconKey": "config",
        "drawioGeneralShape": "gear"
    },
    "AWS::Cloud9::EnvironmentEC2": {
        "service": "Cloud9",
        "serviceAssetKey": "cloud9"
    },
    "AWS::CloudFormation::CustomResource": {
        "service": "CloudFormation",
        "serviceAssetKey": "cloudformation"
    },
    "AWS::CloudFormation::HookDefaultVersion": {
        "service": "CloudFormation",
        "serviceAssetKey": "cloudformation"
    },
    "AWS::CloudFormation::HookTypeConfig": {
        "service": "CloudFormation",
        "serviceAssetKey": "cloudformation",
        "generalIconKey": "config",
        "drawioGeneralShape": "gear"
    },
    "AWS::CloudFormation::HookVersion": {
        "service": "CloudFormation",
        "serviceAssetKey": "cloudformation"
    },
    "AWS::CloudFormation::Macro": {
        "service": "CloudFormation",
        "serviceAssetKey": "cloudformation"
    },
    "AWS::CloudFormation::ModuleDefaultVersion": {
        "service": "CloudFormation",
        "serviceAssetKey": "cloudformation"
    },
    "AWS::CloudFormation::ModuleVersion": {
        "service": "CloudFormation",
        "serviceAssetKey": "cloudformation"
    },
    "AWS::CloudFormation::PublicTypeVersion": {
        "service": "CloudFormation",
        "serviceAssetKey": "cloudformation"
    },
    "AWS::CloudFormation::Publisher": {
        "service": "CloudFormation",
        "serviceAssetKey": "cloudformation"
    },
    "AWS::CloudFormation::ResourceDefaultVersion": {
        "service": "CloudFormation",
        "serviceAssetKey": "cloudformation"
    },
    "AWS::CloudFormation::ResourceVersion": {
        "service": "CloudFormation",
        "serviceAssetKey": "cloudformation"
    },
    "AWS::CloudFormation::Stack": {
        "service": "CloudFormation",
        "serviceAssetKey": "cloudformation",
        "assetKey": "cloudformation_stack",
        "drawioShape": "stack"
    },
    "AWS::CloudFormation::StackSet": {
        "service": "CloudFormation",
        "serviceAssetKey": "cloudformation"
    },
    "AWS::CloudFormation::TypeActivation": {
        "service": "CloudFormation",
        "serviceAssetKey": "cloudformation"
    },
    "AWS::CloudFormation::WaitCondition": {
        "service": "CloudFormation",
        "serviceAssetKey": "cloudformation"
    },
    "AWS::CloudFormation::WaitConditionHandle": {
        "service": "CloudFormation",
        "serviceAssetKey": "cloudformation"
    },
    "AWS::CloudFront::CachePolicy": {
        "service": "CloudFront",
        "serviceAssetKey": "cloudfront",
        "generalIconKey": "policy",
        "drawioGeneralShape": "addon"
    },
    "AWS::CloudFront::CloudFrontOriginAccessIdentity": {
        "service": "CloudFront",
        "serviceAssetKey": "cloudfront"
    },
    "AWS::CloudFront::ContinuousDeploymentPolicy": {
        "service": "CloudFront",
        "serviceAssetKey": "cloudfront",
        "generalIconKey": "policy",
        "drawioGeneralShape": "addon"
    },
    "AWS::CloudFront::Distribution": {
        "service": "CloudFront",
        "serviceAssetKey": "cloudfront"
    },
    "AWS::CloudFront::Function": {
        "service": "CloudFront",
        "serviceAssetKey": "cloudfront"
    },
    "AWS::CloudFront::KeyGroup": {
        "service": "CloudFront",
        "serviceAssetKey": "cloudfront"
    },
    "AWS::CloudFront::MonitoringSubscription": {
        "service": "CloudFront",
        "serviceAssetKey": "cloudfront"
    },
    "AWS::CloudFront::OriginAccessControl": {
        "service": "CloudFront",
        "serviceAssetKey": "cloudfront"
    },
    "AWS::CloudFront::OriginRequestPolicy": {
        "service": "CloudFront",
        "serviceAssetKey": "cloudfront",
        "generalIconKey": "policy",
        "drawioGeneralShape": "addon"
    },
    "AWS::CloudFront::PublicKey": {
        "service": "CloudFront",
        "serviceAssetKey": "cloudfront",
        "generalIconKey": "key",
        "drawioGeneralShape": "permissions"
    },
    "AWS::CloudFront::RealtimeLogConfig": {
        "service": "CloudFront",
        "serviceAssetKey": "cloudfront",
        "generalIconKey": "config",
        "drawioGeneralShape": "gear"
    },
    "AWS::CloudFront::ResponseHeadersPolicy": {
        "service": "CloudFront",
        "serviceAssetKey": "cloudfront",
        "generalIconKey": "policy",
        "drawioGeneralShape": "addon"
    },
    "AWS::CloudFront::StreamingDistribution": {
        "service": "CloudFront",
        "serviceAssetKey": "cloudfront",
        "assetKey": "cloudfront_streaming_distribution",
        "drawioShape": "streaming_distribution"
    },
    "AWS::CloudTrail::Channel": {
        "service": "CloudTrail",
        "serviceAssetKey": "cloudtrail"
    },
    "AWS::CloudTrail::EventDataStore": {
        "service": "CloudTrail",
        "serviceAssetKey": "cloudtrail"
    },
    "AWS::CloudTrail::ResourcePolicy": {
        "service": "CloudTrail",
        "serviceAssetKey": "cloudtrail",
        "generalIconKey": "policy",
        "drawioGeneralShape": "addon"
    },
    "AWS::CloudTrail::Trail": {
        "service": "CloudTrail",
        "serviceAssetKey": "cloudtrail"
    },
    "AWS::CloudWatch::Alarm": {
        "service": "CloudWatch",
        "serviceAssetKey": "cloudwatch",
        "assetKey": "cloudwatch_alarm",
        "generalIconKey": "alarm",
        "drawioShape": "alarm",
        "drawioGeneralShape": "alarm"
    },
    "AWS::CloudWatch::AnomalyDetector": {
        "service": "CloudWatch",
        "serviceAssetKey": "cloudwatch"
    },
    "AWS::CloudWatch::CompositeAlarm": {
        "service": "CloudWatch",
        "serviceAssetKey": "cloudwatch",
        "generalIconKey": "alarm",
        "drawioGeneralShape": "alarm"
    },
    "AWS::CloudWatch::Dashboard": {
        "service": "CloudWatch",
        "serviceAssetKey": "cloudwatch"
    },
    "AWS::CloudWatch::InsightRule": {
        "service": "CloudWatch",
        "serviceAssetKey": "cloudwatch",
        "generalIconKey": "rule",
        "drawioGeneralShape": "rule"
    },
    "AWS::CloudWatch::MetricStream": {
        "service": "CloudWatch",
        "serviceAssetKey": "cloudwatch"
    },
    "AWS::CodeArtifact::Domain": {
        "service": "CodeArtifact",
        "serviceAssetKey": "codeartifact"
    },
    "AWS::CodeArtifact::Repository": {
        "service": "CodeArtifact",
        "serviceAssetKey": "codeartifact"
    },
    "AWS::CodeBuild::Project": {
        "service": "CodeBuild",
        "serviceAssetKey": "codebuild"
    },
    "AWS::CodeBuild::ReportGroup": {
        "service": "CodeBuild",
        "serviceAssetKey": "codebuild"
    },
    "AWS::CodeBuild::SourceCredential": {
        "service": "CodeBuild",
        "serviceAssetKey": "codebuild"
    },
    "AWS::CodeCommit::Repository": {
        "service": "CodeCommit",
        "serviceAssetKey": "codecommit"
    },
    "AWS::CodeDeploy::Application": {
        "service": "CodeDeploy",
        "serviceAssetKey": "codedeploy",
        "generalIconKey": "generic_application"
    },
    "AWS::CodeDeploy::DeploymentConfig": {
        "service": "CodeDeploy",
        "serviceAssetKey": "codedeploy",
        "generalIconKey": "config",
        "drawioGeneralShape": "gear"
    },
    "AWS::CodeDeploy::DeploymentGroup": {
        "service": "CodeDeploy",
        "serviceAssetKey": "codedeploy"
    },
    "AWS::CodeGuruProfiler::ProfilingGroup": {
        "service": "CodeGuruProfiler",
        "serviceAssetKey": "codeguru"
    },
    "AWS::CodeGuruReviewer::RepositoryAssociation": {
        "service": "CodeGuruReviewer",
        "serviceAssetKey": "codeguru"
    },
    "AWS::CodePipeline::CustomActionType": {
        "service": "CodePipeline",
        "serviceAssetKey": "codepipeline"
    },
    "AWS::CodePipeline::Pipeline": {
        "service": "CodePipeline",
        "serviceAssetKey": "codepipeline"
    },
    "AWS::CodePipeline::Webhook": {
        "service": "CodePipeline",
        "serviceAssetKey": "codepipeline"
    },
    "AWS::CodeStar::GitHubRepository": {
        "service": "CodeStar",
        "serviceAssetKey": "codestar"
    },
    "AWS::CodeStarConnections::Connection": {
        "service": "CodeStarConnections",
        "serviceAssetKey": "codestar"
    },
    "AWS::CodeStarNotifications::NotificationRule": {
        "service": "CodeStarNotifications",
        "serviceAssetKey": "codestar",
        "generalIconKey": "rule",
        "drawioGeneralShape": "rule"
    },
    "AWS::Cognito::IdentityPool": {
        "service": "Cognito",
        "serviceAssetKey": "cognito"
    },
    "AWS::Cognito::IdentityPoolRoleAttachment": {
        "service": "Cognito",
        "serviceAssetKey": "cognito",
        "generalIconKey": "attachment",
        "drawioGeneralShape": "transit_gateway_attachment"
    },
    "AWS::Cognito::UserPool": {
        "service": "Cognito",
        "serviceAssetKey": "cognito"
    },
    "AWS::Cognito::UserPoolClient": {
        "service": "Cognito",
        "serviceAssetKey": "cognito"
    },
    "AWS::Cognito::UserPoolDomain": {
        "service": "Cognito",
        "serviceAssetKey": "cognito"
    },
    "AWS::Cognito::UserPoolGroup": {
        "service": "Cognito",
        "serviceAssetKey": "cognito"
    },
    "AWS::Cognito::UserPoolIdentityProvider": {
        "service": "Cognito",
        "serviceAssetKey": "cognito"
    },
    "AWS::Cognito::UserPoolResourceServer": {
        "service": "Cognito",
        "serviceAssetKey": "cognito",
        "generalIconKey": "traditional_server",
        "drawioGeneralShape": "traditional_server"
    },
    "AWS::Cognito::UserPoolRiskConfigurationAttachment": {
        "service": "Cognito",
        "serviceAssetKey": "cognito",
        "generalIconKey": "attachment",
        "drawioGeneralShape": "transit_gateway_attachment"
    },
    "AWS::Cognito::UserPoolUICustomizationAttachment": {
        "service": "Cognito",
        "serviceAssetKey": "cognito",
        "generalIconKey": "attachment",
        "drawioGeneralShape": "transit_gateway_attachment"
    },
    "AWS::Cognito::UserPoolUser": {
        "service": "Cognito",
        "serviceAssetKey": "cognito",
        "generalIconKey": "user",
        "drawioGeneralShape": "user"
    },
    "AWS::Cognito::UserPoolUserToGroupAttachment": {
        "service": "Cognito",
        "serviceAssetKey": "cognito",
        "generalIconKey": "attachment",
        "drawioGeneralShape": "transit_gateway_attachment"
    },
    "AWS::Comprehend::Flywheel": {
        "service": "Comprehend",
        "serviceAssetKey": "comprehend"
    },
    "AWS::Config::AggregationAuthorization": {
        "service": "Config",
        "serviceAssetKey": "config"
    },
    "AWS::Config::ConfigRule": {
        "service": "Config",
        "serviceAssetKey": "config",
        "generalIconKey": "rule",
        "drawioGeneralShape": "rule"
    },
    "AWS::Config::ConfigurationAggregator": {
        "service": "Config",
        "serviceAssetKey": "config"
    },
    "AWS::Config::ConfigurationRecorder": {
        "service": "Config",
        "serviceAssetKey": "config"
    },
    "AWS::Config::ConformancePack": {
        "service": "Config",
        "serviceAssetKey": "config"
    },
    "AWS::Config::DeliveryChannel": {
        "service": "Config",
        "serviceAssetKey": "config"
    },
    "AWS::Config::OrganizationConfigRule": {
        "service": "Config",
        "serviceAssetKey": "config",
        "generalIconKey": "rule",
        "drawioGeneralShape": "rule"
    },
    "AWS::Config::OrganizationConformancePack": {
        "service": "Config",
        "serviceAssetKey": "config"
    },
    "AWS::Config::RemediationConfiguration": {
        "service": "Config",
        "serviceAssetKey": "config",
        "generalIconKey": "config",
        "drawioGeneralShape": "gear"
    },
    "AWS::Config::StoredQuery": {
        "service": "Config",
        "serviceAssetKey": "config"
    },
    "AWS::Connect::ApprovedOrigin": {
        "service": "Connect",
        "serviceAssetKey": "connect"
    },
    "AWS::Connect::ContactFlow": {
        "service": "Connect",
        "serviceAssetKey": "connect"
    },
    "AWS::Connect::ContactFlowModule": {
        "service": "Connect",
        "serviceAssetKey": "connect"
    },
    "AWS::Connect::HoursOfOperation": {
        "service": "Connect",
        "serviceAssetKey": "connect"
    },
    "AWS::Connect::Instance": {
        "service": "Connect",
        "serviceAssetKey": "connect"
    },
    "AWS::Connect::InstanceStorageConfig": {
        "service": "Connect",
        "serviceAssetKey": "connect",
        "generalIconKey": "config",
        "drawioGeneralShape": "gear"
    },
    "AWS::Connect::IntegrationAssociation": {
        "service": "Connect",
        "serviceAssetKey": "connect"
    },
    "AWS::Connect::PhoneNumber": {
        "service": "Connect",
        "serviceAssetKey": "connect"
    },
    "AWS::Connect::QuickConnect": {
        "service": "Connect",
        "serviceAssetKey": "connect"
    },
    "AWS::Connect::Rule": {
        "service": "Connect",
        "serviceAssetKey": "connect",
        "generalIconKey": "rule",
        "drawioGeneralShape": "rule"
    },
    "AWS::Connect::SecurityKey": {
        "service": "Connect",
        "serviceAssetKey": "connect",
        "generalIconKey": "key",
        "drawioGeneralShape": "permissions"
    },
    "AWS::Connect::TaskTemplate": {
        "service": "Connect",
        "serviceAssetKey": "connect",
        "generalIconKey": "template",
        "drawioGeneralShape": "template"
    },
    "AWS::Connect::User": {
        "service": "Connect",
        "serviceAssetKey": "connect",
        "generalIconKey": "user",
        "drawioGeneralShape": "user"
    },
    "AWS::Connect::UserHierarchyGroup": {
        "service": "Connect",
        "serviceAssetKey": "connect"
    },
    "AWS::ConnectCampaigns::Campaign": {
        "service": "ConnectCampaigns",
        "serviceAssetKey": "connect"
    },
    "AWS::ControlTower::EnabledControl": {
        "service": "ControlTower",
        "serviceAssetKey": "control_tower"
    },
    "AWS::CustomerProfiles::Domain": {
        "service": "CustomerProfiles",
        "serviceAssetKey": "connect"
    },
    "AWS::CustomerProfiles::Integration": {
        "service": "CustomerProfiles",
        "serviceAssetKey": "connect"
    },
    "AWS::CustomerProfiles::ObjectType": {
        "service": "CustomerProfiles",
        "serviceAssetKey": "connect"
    },
    "AWS::DAX::Cluster": {
        "service": "DAX",
        "serviceAssetKey": "data_exchange"
    },
    "AWS::DAX::ParameterGroup": {
        "service": "DAX",
        "serviceAssetKey": "data_exchange"
    },
    "AWS::DAX::SubnetGroup": {
        "service": "DAX",
        "serviceAssetKey": "data_exchange"
    },
    "AWS::DLM::LifecyclePolicy": {
        "service": "DLM",
        "serviceAssetKey": "ebs",
        "generalIconKey": "policy",
        "drawioGeneralShape": "addon"
    },
    "AWS::DMS::Certificate": {
        "service": "DMS",
        "serviceAssetKey": "database_migration_service",
        "generalIconKey": "ssl_padlock",
        "drawioGeneralShape": "ssl_padlock"
    },
    "AWS::DMS::Endpoint": {
        "service": "DMS",
        "serviceAssetKey": "database_migration_service"
    },
    "AWS::DMS::EventSubscription": {
        "service": "DMS",
        "serviceAssetKey": "database_migration_service"
    },
    "AWS::DMS::ReplicationInstance": {
        "service": "DMS",
        "serviceAssetKey": "database_migration_service"
    },
    "AWS::DMS::ReplicationSubnetGroup": {
        "service": "DMS",
        "serviceAssetKey": "database_migration_service"
    },
    "AWS::DMS::ReplicationTask": {
        "service": "DMS",
        "serviceAssetKey": "database_migration_service"
    },
    "AWS::DataBrew::Dataset": {
        "service": "DataBrew",
        "serviceAssetKey": "glue_databrew"
    },
    "AWS::DataBrew::Job": {
        "service": "DataBrew",
        "serviceAssetKey": "glue_databrew"
    },
    "AWS::DataBrew::Project": {
        "service": "DataBrew",
        "serviceAssetKey": "glue_databrew"
    },
    "AWS::DataBrew::Recipe": {
        "service": "DataBrew",
        "serviceAssetKey": "glue_databrew"
    },
    "AWS::DataBrew::Ruleset": {
        "service": "DataBrew",
        "serviceAssetKey": "glue_databrew"
    },
    "AWS::DataBrew::Schedule": {
        "service": "DataBrew",
        "serviceAssetKey": "glue_databrew"
    },
    "AWS::DataPipeline::Pipeline": {
        "service": "DataPipeline",
        "serviceAssetKey": "data_pipeline"
    },
    "AWS::DataSync::Agent": {
        "service": "DataSync",
        "serviceAssetKey": "datasync",
        "assetKey": "datasync_agent",
        "drawioShape": "agent2"
    },
    "AWS::DataSync::LocationEFS": {
        "service": "DataSync",
        "serviceAssetKey": "datasync"
    },
    "AWS::DataSync::LocationFSxLustre": {
        "service": "DataSync",
        "serviceAssetKey": "datasync"
    },
    "AWS::DataSync::LocationFSxONTAP": {
        "service": "DataSync",
        "serviceAssetKey": "datasync"
    },
    "AWS::DataSync::LocationFSxOpenZFS": {
        "service": "DataSync",
        "serviceAssetKey": "datasync"
    },
    "AWS::DataSync::LocationFSxWindows": {
        "service": "DataSync",
        "serviceAssetKey": "datasync"
    },
    "AWS::DataSync::LocationHDFS": {
        "service": "DataSync",
        "serviceAssetKey": "datasync"
    },
    "AWS::DataSync::LocationNFS": {
        "service": "DataSync",
        "serviceAssetKey": "datasync"
    },
    "AWS::DataSync::LocationObjectStorage": {
        "service": "DataSync",
        "serviceAssetKey": "datasync"
    },
    "AWS::DataSync::LocationS3": {
        "service": "DataSync",
        "serviceAssetKey": "datasync"
    },
    "AWS::DataSync::LocationSMB": {
        "service": "DataSync",
        "serviceAssetKey": "datasync"
    },
    "AWS::DataSync::Task": {
        "service": "DataSync",
        "serviceAssetKey": "datasync"
    },
    "AWS::Detective::Graph": {
        "service": "Detective",
        "serviceAssetKey": "detective"
    },
    "AWS::Detective::MemberInvitation": {
        "service": "Detective",
        "serviceAssetKey": "detective"
    },
    "AWS::DevOpsGuru::NotificationChannel": {
        "service": "DevOpsGuru",
        "serviceAssetKey": "devops_guru"
    },
    "AWS::DevOpsGuru::ResourceCollection": {
        "service": "DevOpsGuru",
        "serviceAssetKey": "devops_guru"
    },
    "AWS::DeviceFarm::DevicePool": {
        "service": "DeviceFarm",
        "serviceAssetKey": "device_farm"
    },
    "AWS::DeviceFarm::InstanceProfile": {
        "service": "DeviceFarm",
        "serviceAssetKey": "device_farm"
    },
    "AWS::DeviceFarm::NetworkProfile": {
        "service": "DeviceFarm",
        "serviceAssetKey": "device_farm"
    },
    "AWS::DeviceFarm::Project": {
        "service": "DeviceFarm",
        "serviceAssetKey": "device_farm"
    },
    "AWS::DeviceFarm::TestGridProject": {
        "service": "DeviceFarm",
        "serviceAssetKey": "device_farm"
    },
    "AWS::DeviceFarm::VPCEConfiguration": {
        "service": "DeviceFarm",
        "serviceAssetKey": "device_farm",
        "generalIconKey": "config",
        "drawioGeneralShape": "gear"
    },
    "AWS::DirectoryService::MicrosoftAD": {
        "service": "DirectoryService",
        "serviceAssetKey": "directory_service"
    },
    "AWS::DirectoryService::SimpleAD": {
        "service": "DirectoryService",
        "serviceAssetKey": "directory_service",
        "assetKey": "directory_service_simple_ad",
        "drawioShape": "simple_ad"
    },
    "AWS::DocDB::DBCluster": {
        "service": "DocDB",
        "serviceAssetKey": "documentdb"
    },
    "AWS::DocDB::DBClusterParameterGroup": {
        "service": "DocDB",
        "serviceAssetKey": "documentdb"
    },
    "AWS::DocDB::DBInstance": {
        "service": "DocDB",
        "serviceAssetKey": "documentdb"
    },
    "AWS::DocDB::DBSubnetGroup": {
        "service": "DocDB",
        "serviceAssetKey": "documentdb"
    },
    "AWS::DocDBElastic::Cluster": {
        "service": "DocDBElastic"
    },
    "AWS::DynamoDB::GlobalTable": {
        "service": "DynamoDB",
        "serviceAssetKey": "dynamodb"
    },
    "AWS::DynamoDB::Table": {
        "service": "DynamoDB",
        "serviceAssetKey": "dynamodb",
        "assetKey": "dynamodb_table",
        "drawioShape": "table"
    },
    "AWS::EC2::CapacityReservation": {
        "service": "EC2",
        "serviceAssetKey": "ec2"
    },
    "AWS::EC2::CapacityReservationFleet": {
        "service": "EC2",
        "serviceAssetKey": "ec2"
    },
    "AWS::EC2::CarrierGateway": {
        "service": "EC2",
        "serviceAssetKey": "vpc",
        "assetKey": "vpc_carrier_gateway",
        "drawioShape": "vpc_carrier_gateway"
    },
    "AWS::EC2::ClientVpnAuthorizationRule": {
        "service": "EC2",
        "serviceAssetKey": "ec2",
        "generalIconKey": "rule",
        "drawioGeneralShape": "rule"
    },
    "AWS::EC2::ClientVpnEndpoint": {
        "service": "EC2",
        "serviceAssetKey": "ec2"
    },
    "AWS::EC2::ClientVpnRoute": {
        "service": "EC2",
        "serviceAssetKey": "ec2"
    },
    "AWS::EC2::ClientVpnTargetNetworkAssociation": {
        "service": "EC2",
        "serviceAssetKey": "ec2"
    },
    "AWS::EC2::CustomerGateway": {
        "service": "EC2",
        "serviceAssetKey": "vpc",
        "assetKey": "vpc_customer_gateway",
        "drawioShape": "customer_gateway"
    },
    "AWS::EC2::DHCPOptions": {
        "service": "EC2",
        "serviceAssetKey": "ec2"
    },
    "AWS::EC2::EC2Fleet": {
        "service": "EC2",
        "serviceAssetKey": "ec2"
    },
    "AWS::EC2::EIP": {
        "service": "EC2",
        "serviceAssetKey": "ec2"
    },
    "AWS::EC2::EIPAssociation": {
        "service": "EC2",
        "serviceAssetKey": "ec2"
    },
    "AWS::EC2::EgressOnlyInternetGateway": {
        "service": "EC2",
        "serviceAssetKey": "ec2"
    },
    "AWS::EC2::EnclaveCertificateIamRoleAssociation": {
        "service": "EC2",
        "serviceAssetKey": "ec2"
    },
    "AWS::EC2::FlowLog": {
        "service": "EC2",
        "serviceAssetKey": "ec2",
        "generalIconKey": "logs",
        "drawioGeneralShape": "logs"
    },
    "AWS::EC2::GatewayRouteTableAssociation": {
        "service": "EC2",
        "serviceAssetKey": "ec2"
    },
    "AWS::EC2::Host": {
        "service": "EC2",
        "serviceAssetKey": "ec2"
    },
    "AWS::EC2::IPAM": {
        "service": "EC2",
        "serviceAssetKey": "ec2"
    },
    "AWS::EC2::IPAMAllocation": {
        "service": "EC2",
        "serviceAssetKey": "ec2"
    },
    "AWS::EC2::IPAMPool": {
        "service": "EC2",
        "serviceAssetKey": "ec2"
    },
    "AWS::EC2::IPAMPoolCidr": {
        "service": "EC2",
        "serviceAssetKey": "ec2"
    },
    "AWS::EC2::IPAMResourceDiscovery": {
        "service": "EC2",
        "serviceAssetKey": "ec2"
    },
    "AWS::EC2::IPAMResourceDiscoveryAssociation": {
        "service": "EC2",
        "serviceAssetKey": "ec2"
    },
    "AWS::EC2::IPAMScope": {
        "service": "EC2",
        "serviceAssetKey": "ec2"
    },
    "AWS::EC2::Instance": {
        "service": "EC2",
        "serviceAssetKey": "ec2",
        "assetKey": "ec2_instance",
        "drawioShape": "instance"
    },
    "AWS::EC2::InternetGateway": {
        "service": "EC2",
        "serviceAssetKey": "vpc",
        "assetKey": "vpc_internet_gateway",
        "drawioShape": "internet_gateway"
    },
    "AWS::EC2::KeyPair": {
        "service": "EC2",
        "serviceAssetKey": "ec2"
    },
    "AWS::EC2::LaunchTemplate": {
        "service": "EC2",
        "serviceAssetKey": "ec2",
        "generalIconKey": "template",
        "drawioGeneralShape": "template"
    },
    "AWS::EC2::LocalGatewayRoute": {
        "service": "EC2",
        "serviceAssetKey": "ec2"
    },
    "AWS::EC2::LocalGatewayRouteTable": {
        "service": "EC2",
        "serviceAssetKey": "ec2"
    },
    "AWS::EC2::LocalGatewayRouteTableVPCAssociation": {
        "service": "EC2",
        "serviceAssetKey": "ec2"
    },
    "AWS::EC2::LocalGatewayRouteTableVirtualInterfaceGroupAssociation": {
        "service": "EC2",
        "serviceAssetKey": "ec2"
    },
    "AWS::EC2::NatGateway": {
        "service": "EC2",
        "serviceAssetKey": "vpc",
        "assetKey": "vpc_nat_gateway",
        "drawioShape": "nat_gateway"
    },
    "AWS::EC2::NetworkAcl": {
        "service": "EC2",
        "serviceAssetKey": "ec2",
        "assetKey": "vpc_network_access_control_list",
        "drawioShape": "network_access_control_list"
    },
    "AWS::EC2::NetworkAclEntry": {
        "service": "EC2",
        "serviceAssetKey": "ec2"
    },
    "AWS::EC2::NetworkInsightsAccessScope": {
        "service": "EC2",
        "serviceAssetKey": "ec2"
    },
    "AWS::EC2::NetworkInsightsAccessScopeAnalysis": {
        "service": "EC2",
        "serviceAssetKey": "ec2"
    },
    "AWS::EC2::NetworkInsightsAnalysis": {
        "service": "EC2",
        "serviceAssetKey": "ec2"
    },
    "AWS::EC2::NetworkInsightsPath": {
        "service": "EC2",
        "serviceAssetKey": "ec2"
    },
    "AWS::EC2::NetworkInterface": {
        "service": "EC2",
        "serviceAssetKey": "ec2",
        "assetKey": "vpc_elastic_network_interface",
        "drawioShape": "elastic_network_interface"
    },
    "AWS::EC2::NetworkInterfaceAttachment": {
        "service": "EC2",
        "serviceAssetKey": "ec2",
        "generalIconKey": "attachment",
        "drawioGeneralShape": "transit_gateway_attachment"
    },
    "AWS::EC2::NetworkInterfacePermission": {
        "service": "EC2",
        "serviceAssetKey": "ec2",
        "generalIconKey": "policy",
        "drawioGeneralShape": "addon"
    },
    "AWS::EC2::NetworkPerformanceMetricSubscription": {
        "service": "EC2",
        "serviceAssetKey": "ec2"
    },
    "AWS::EC2::PlacementGroup": {
        "service": "EC2",
        "serviceAssetKey": "ec2"
    },
    "AWS::EC2::PrefixList": {
        "service": "EC2",
        "serviceAssetKey": "ec2"
    },
    "AWS::EC2::Route": {
        "service": "EC2",
        "serviceAssetKey": "ec2"
    },
    "AWS::EC2::RouteTable": {
        "service": "EC2",
        "serviceAssetKey": "ec2"
    },
    "AWS::EC2::SecurityGroup": {
        "service": "EC2",
        "serviceAssetKey": "ec2"
    },
    "AWS::EC2::SecurityGroupEgress": {
        "service": "EC2",
        "serviceAssetKey": "ec2"
    },
    "AWS::EC2::SecurityGroupIngress": {
        "service": "EC2",
        "serviceAssetKey": "ec2"
    },
    "AWS::EC2::SpotFleet": {
        "service": "EC2",
        "serviceAssetKey": "ec2"
    },
    "AWS::EC2::Subnet": {
        "service": "EC2",
        "serviceAssetKey": "ec2"
    },
    "AWS::EC2::SubnetCidrBlock": {
        "service": "EC2",
        "serviceAssetKey": "ec2"
    },
    "AWS::EC2::SubnetNetworkAclAssociation": {
        "service": "EC2",
        "serviceAssetKey": "ec2"
    },
    "AWS::EC2::SubnetRouteTableAssociation": {
        "service": "EC2",
        "serviceAssetKey": "ec2"
    },
    "AWS::EC2::TrafficMirrorFilter": {
        "service": "EC2",
        "serviceAssetKey": "ec2"
    },
    "AWS::EC2::TrafficMirrorFilterRule": {
        "service": "EC2",
        "serviceAssetKey": "ec2",
        "generalIconKey": "rule",
        "drawioGeneralShape": "rule"
    },
    "AWS::EC2::TrafficMirrorSession": {
        "service": "EC2",
        "serviceAssetKey": "ec2"
    },
    "AWS::EC2::TrafficMirrorTarget": {
        "service": "EC2",
        "serviceAssetKey": "ec2"
    },
    "AWS::EC2::TransitGateway": {
        "service": "EC2",
        "serviceAssetKey": "ec2"
    },
    "AWS::EC2::TransitGatewayAttachment": {
        "service": "EC2",
        "serviceAssetKey": "ec2",
        "assetKey": "transit_gateway_attachment",
        "generalIconKey": "attachment",
        "drawioShape": "transit_gateway_attachment",
        "drawioGeneralShape": "transit_gateway_attachment"
    },
    "AWS::EC2::TransitGatewayConnect": {
        "service": "EC2",
        "serviceAssetKey": "ec2"
    },
    "AWS::EC2::TransitGatewayMulticastDomain": {
        "service": "EC2",
        "serviceAssetKey": "ec2"
    },
    "AWS::EC2::TransitGatewayMulticastDomainAssociation": {
        "service": "EC2",
        "serviceAssetKey": "ec2"
    },
    "AWS::EC2::TransitGatewayMulticastGroupMember": {
        "service": "EC2",
        "serviceAssetKey": "ec2"
    },
    "AWS::EC2::TransitGatewayMulticastGroupSource": {
        "service": "EC2",
        "serviceAssetKey": "ec2"
    },
    "AWS::EC2::TransitGatewayPeeringAttachment": {
        "service": "EC2",
        "serviceAssetKey": "ec2",
        "generalIconKey": "attachment",
        "drawioGeneralShape": "transit_gateway_attachment"
    },
    "AWS::EC2::TransitGatewayRoute": {
        "service": "EC2",
        "serviceAssetKey": "ec2"
    },
    "AWS::EC2::TransitGatewayRouteTable": {
        "service": "EC2",
        "serviceAssetKey": "ec2"
    },
    "AWS::EC2::TransitGatewayRouteTableAssociation": {
        "service": "EC2",
        "serviceAssetKey": "ec2"
    },
    "AWS::EC2::TransitGatewayRouteTablePropagation": {
        "service": "EC2",
        "serviceAssetKey": "ec2"
    },
    "AWS::EC2::TransitGatewayVpcAttachment": {
        "service": "EC2",
        "serviceAssetKey": "ec2",
        "generalIconKey": "attachment",
        "drawioGeneralShape": "transit_gateway_attachment"
    },
    "AWS::EC2::VPC": {
        "service": "EC2",
        "serviceAssetKey": "vpc"
    },
    "AWS::EC2::VPCCidrBlock": {
        "service": "EC2",
        "serviceAssetKey": "vpc"
    },
    "AWS::EC2::VPCDHCPOptionsAssociation": {
        "service": "EC2",
        "serviceAssetKey": "vpc"
    },
    "AWS::EC2::VPCEndpoint": {
        "service": "EC2",
        "serviceAssetKey": "vpc"
    },
    "AWS::EC2::VPCEndpointConnectionNotification": {
        "service": "EC2",
        "serviceAssetKey": "vpc"
    },
    "AWS::EC2::VPCEndpointService": {
        "service": "EC2",
        "serviceAssetKey": "vpc"
    },
    "AWS::EC2::VPCEndpointServicePermissions": {
        "service": "EC2",
        "serviceAssetKey": "vpc",
        "generalIconKey": "policy",
        "drawioGeneralShape": "addon"
    },
    "AWS::EC2::VPCGatewayAttachment": {
        "service": "EC2",
        "serviceAssetKey": "vpc",
        "generalIconKey": "attachment",
        "drawioGeneralShape": "transit_gateway_attachment"
    },
    "AWS::EC2::VPCPeeringConnection": {
        "service": "EC2",
        "serviceAssetKey": "vpc",
        "assetKey": "vpc_peering_connection",
        "drawioShape": "peering"
    },
    "AWS::EC2::VPNConnection": {
        "service": "EC2",
        "serviceAssetKey": "vpc",
        "assetKey": "vpc_vpn_connection",
        "drawioShape": "vpn_connection"
    },
    "AWS::EC2::VPNConnectionRoute": {
        "service": "EC2",
        "serviceAssetKey": "ec2"
    },
    "AWS::EC2::VPNGateway": {
        "service": "EC2",
        "serviceAssetKey": "vpc",
        "assetKey": "vpc_vpn_gateway",
        "drawioShape": "vpn_gateway"
    },
    "AWS::EC2::VPNGatewayRoutePropagation": {
        "service": "EC2",
        "serviceAssetKey": "ec2"
    },
    "AWS::EC2::Volume": {
        "service": "EC2",
        "serviceAssetKey": "ec2"
    },
    "AWS::EC2::VolumeAttachment": {
        "service": "EC2",
        "serviceAssetKey": "ec2",
        "generalIconKey": "attachment",
        "drawioGeneralShape": "transit_gateway_attachment"
    },
    "AWS::ECR::PublicRepository": {
        "service": "ECR",
        "serviceAssetKey": "ecr"
    },
    "AWS::ECR::PullThroughCacheRule": {
        "service": "ECR",
        "serviceAssetKey": "ecr",
        "generalIconKey": "rule",
        "drawioGeneralShape": "rule"
    },
    "AWS::ECR::RegistryPolicy": {
        "service": "ECR",
        "serviceAssetKey": "ecr",
        "generalIconKey": "policy",
        "drawioGeneralShape": "addon"
    },
    "AWS::ECR::ReplicationConfiguration": {
        "service": "ECR",
        "serviceAssetKey": "ecr",
        "generalIconKey": "config",
        "drawioGeneralShape": "gear"
    },
    "AWS::ECR::Repository": {
        "service": "ECR",
        "serviceAssetKey": "ecr"
    },
    "AWS::ECS::CapacityProvider": {
        "service": "ECS",
        "serviceAssetKey": "ecs"
    },
    "AWS::ECS::Cluster": {
        "service": "ECS",
        "serviceAssetKey": "ecs"
    },
    "AWS::ECS::ClusterCapacityProviderAssociations": {
        "service": "ECS",
        "serviceAssetKey": "ecs"
    },
    "AWS::ECS::PrimaryTaskSet": {
        "service": "ECS",
        "serviceAssetKey": "ecs"
    },
    "AWS::ECS::Service": {
        "service": "ECS",
        "serviceAssetKey": "ecs",
        "assetKey": "ecs_service",
        "drawioShape": "ecs"
    },
    "AWS::ECS::TaskDefinition": {
        "service": "ECS",
        "serviceAssetKey": "ecs"
    },
    "AWS::ECS::TaskSet": {
        "service": "ECS",
        "serviceAssetKey": "ecs"
    },
    "AWS::EFS::AccessPoint": {
        "service": "EFS",
        "serviceAssetKey": "efs"
    },
    "AWS::EFS::FileSystem": {
        "service": "EFS",
        "serviceAssetKey": "efs",
        "assetKey": "efs_file_system",
        "drawioShape": "file_system"
    },
    "AWS::EFS::MountTarget": {
        "service": "EFS",
        "serviceAssetKey": "efs"
    },
    "AWS::EKS::Addon": {
        "service": "EKS",
        "serviceAssetKey": "eks"
    },
    "AWS::EKS::Cluster": {
        "service": "EKS",
        "serviceAssetKey": "eks"
    },
    "AWS::EKS::FargateProfile": {
        "service": "EKS",
        "serviceAssetKey": "eks"
    },
    "AWS::EKS::IdentityProviderConfig": {
        "service": "EKS",
        "serviceAssetKey": "eks",
        "generalIconKey": "config",
        "drawioGeneralShape": "gear"
    },
    "AWS::EKS::Nodegroup": {
        "service": "EKS",
        "serviceAssetKey": "eks"
    },
    "AWS::EMR::Cluster": {
        "service": "EMR",
        "serviceAssetKey": "emr",
        "assetKey": "emr_cluster",
        "drawioShape": "cluster"
    },
    "AWS::EMR::InstanceFleetConfig": {
        "service": "EMR",
        "serviceAssetKey": "emr",
        "generalIconKey": "config",
        "drawioGeneralShape": "gear"
    },
    "AWS::EMR::InstanceGroupConfig": {
        "service": "EMR",
        "serviceAssetKey": "emr",
        "generalIconKey": "config",
        "drawioGeneralShape": "gear"
    },
    "AWS::EMR::SecurityConfiguration": {
        "service": "EMR",
        "serviceAssetKey": "emr",
        "generalIconKey": "config",
        "drawioGeneralShape": "gear"
    },
    "AWS::EMR::Step": {
        "service": "EMR",
        "serviceAssetKey": "emr"
    },
    "AWS::EMR::Studio": {
        "service": "EMR",
        "serviceAssetKey": "emr"
    },
    "AWS::EMR::StudioSessionMapping": {
        "service": "EMR",
        "serviceAssetKey": "emr"
    },
    "AWS::EMRContainers::VirtualCluster": {
        "service": "EMRContainers",
        "serviceAssetKey": "emr"
    },
    "AWS::EMRServerless::Application": {
        "service": "EMRServerless",
        "serviceAssetKey": "emr",
        "generalIconKey": "generic_application"
    },
    "AWS::ElastiCache::CacheCluster": {
        "service": "ElastiCache",
        "serviceAssetKey": "elasticache"
    },
    "AWS::ElastiCache::GlobalReplicationGroup": {
        "service": "ElastiCache",
        "serviceAssetKey": "elasticache"
    },
    "AWS::ElastiCache::ParameterGroup": {
        "service": "ElastiCache",
        "serviceAssetKey": "elasticache"
    },
    "AWS::ElastiCache::ReplicationGroup": {
        "service": "ElastiCache",
        "serviceAssetKey": "elasticache"
    },
    "AWS::ElastiCache::SecurityGroup": {
        "service": "ElastiCache",
        "serviceAssetKey": "elasticache"
    },
    "AWS::ElastiCache::SecurityGroupIngress": {
        "service": "ElastiCache",
        "serviceAssetKey": "elasticache"
    },
    "AWS::ElastiCache::SubnetGroup": {
        "service": "ElastiCache",
        "serviceAssetKey": "elasticache"
    },
    "AWS::ElastiCache::User": {
        "service": "ElastiCache",
        "serviceAssetKey": "elasticache",
        "generalIconKey": "user",
        "drawioGeneralShape": "user"
    },
    "AWS::ElastiCache::UserGroup": {
        "service": "ElastiCache",
        "serviceAssetKey": "elasticache"
    },
    "AWS::ElasticBeanstalk::Application": {
        "service": "ElasticBeanstalk",
        "serviceAssetKey": "elastic_beanstalk",
        "assetKey": "elastic_beanstalk_application",
        "generalIconKey": "generic_application",
        "drawioShape": "application"
    },
    "AWS::ElasticBeanstalk::ApplicationVersion": {
        "service": "ElasticBeanstalk",
        "serviceAssetKey": "elastic_beanstalk"
    },
    "AWS::ElasticBeanstalk::ConfigurationTemplate": {
        "service": "ElasticBeanstalk",
        "serviceAssetKey": "elastic_beanstalk",
        "generalIconKey": "template",
        "drawioGeneralShape": "template"
    },
    "AWS::ElasticBeanstalk::Environment": {
        "service": "ElasticBeanstalk",
        "serviceAssetKey": "elastic_beanstalk"
    },
    "AWS::ElasticLoadBalancing::LoadBalancer": {
        "service": "ElasticLoadBalancing",
        "serviceAssetKey": "elastic_load_balancing"
    },
    "AWS::ElasticLoadBalancingV2::Listener": {
        "service": "ElasticLoadBalancingV2",
        "serviceAssetKey": "elastic_load_balancing"
    },
    "AWS::ElasticLoadBalancingV2::ListenerCertificate": {
        "service": "ElasticLoadBalancingV2",
        "serviceAssetKey": "elastic_load_balancing"
    },
    "AWS::ElasticLoadBalancingV2::ListenerRule": {
        "service": "ElasticLoadBalancingV2",
        "serviceAssetKey": "elastic_load_balancing",
        "generalIconKey": "rule",
        "drawioGeneralShape": "rule"
    },
    "AWS::ElasticLoadBalancingV2::LoadBalancer": {
        "service": "ElasticLoadBalancingV2",
        "serviceAssetKey": "elastic_load_balancing"
    },
    "AWS::ElasticLoadBalancingV2::TargetGroup": {
        "service": "ElasticLoadBalancingV2",
        "serviceAssetKey": "elastic_load_balancing"
    },
    "AWS::Elasticsearch::Domain": {
        "service": "Elasticsearch",
        "serviceAssetKey": "opensearch"
    },
    "AWS::EventSchemas::Discoverer": {
        "service": "EventSchemas",
        "serviceAssetKey": "eventbridge"
    },
    "AWS::EventSchemas::Registry": {
        "service": "EventSchemas",
        "serviceAssetKey": "eventbridge"
    },
    "AWS::EventSchemas::RegistryPolicy": {
        "service": "EventSchemas",
        "serviceAssetKey": "eventbridge",
        "generalIconKey": "policy",
        "drawioGeneralShape": "addon"
    },
    "AWS::EventSchemas::Schema": {
        "service": "EventSchemas",
        "serviceAssetKey": "eventbridge",
        "assetKey": "eventbridge_schema",
        "drawioShape": "eventbridge_schema"
    },
    "AWS::Events::ApiDestination": {
        "service": "Events",
        "serviceAssetKey": "eventbridge"
    },
    "AWS::Events::Archive": {
        "service": "Events",
        "serviceAssetKey": "eventbridge"
    },
    "AWS::Events::Connection": {
        "service": "Events",
        "serviceAssetKey": "eventbridge"
    },
    "AWS::Events::Endpoint": {
        "service": "Events",
        "serviceAssetKey": "eventbridge"
    },
    "AWS::Events::EventBus": {
        "service": "Events",
        "serviceAssetKey": "eventbridge"
    },
    "AWS::Events::EventBusPolicy": {
        "service": "Events",
        "serviceAssetKey": "eventbridge",
        "generalIconKey": "policy",
        "drawioGeneralShape": "addon"
    },
    "AWS::Events::Rule": {
        "service": "Events",
        "serviceAssetKey": "eventbridge",
        "assetKey": "eventbridge_rule",
        "generalIconKey": "rule",
        "drawioGeneralShape": "rule"
    },
    "AWS::Evidently::Experiment": {
        "service": "Evidently",
        "serviceAssetKey": "cloudwatch"
    },
    "AWS::Evidently::Feature": {
        "service": "Evidently",
        "serviceAssetKey": "cloudwatch"
    },
    "AWS::Evidently::Launch": {
        "service": "Evidently",
        "serviceAssetKey": "cloudwatch"
    },
    "AWS::Evidently::Project": {
        "service": "Evidently",
        "serviceAssetKey": "cloudwatch"
    },
    "AWS::Evidently::Segment": {
        "service": "Evidently",
        "serviceAssetKey": "cloudwatch"
    },
    "AWS::FIS::ExperimentTemplate": {
        "service": "FIS",
        "serviceAssetKey": "fault_injection_simulator",
        "generalIconKey": "template",
        "drawioGeneralShape": "template"
    },
    "AWS::FMS::NotificationChannel": {
        "service": "FMS",
        "serviceAssetKey": "network_firewall"
    },
    "AWS::FMS::Policy": {
        "service": "FMS",
        "serviceAssetKey": "network_firewall",
        "generalIconKey": "policy",
        "drawioGeneralShape": "addon"
    },
    "AWS::FMS::ResourceSet": {
        "service": "FMS",
        "serviceAssetKey": "network_firewall"
    },
    "AWS::FSx::DataRepositoryAssociation": {
        "service": "FSx",
        "serviceAssetKey": "fsx"
    },
    "AWS::FSx::FileSystem": {
        "service": "FSx",
        "serviceAssetKey": "fsx",
        "assetKey": "efs_file_system",
        "drawioShape": "file_system"
    },
    "AWS::FSx::Snapshot": {
        "service": "FSx",
        "serviceAssetKey": "fsx"
    },
    "AWS::FSx::StorageVirtualMachine": {
        "service": "FSx",
        "serviceAssetKey": "fsx"
    },
    "AWS::FSx::Volume": {
        "service": "FSx",
        "serviceAssetKey": "fsx"
    },
    "AWS::FinSpace::Environment": {
        "service": "FinSpace",
        "serviceAssetKey": "finspace"
    },
    "AWS::Forecast::Dataset": {
        "service": "Forecast",
        "serviceAssetKey": "forecast"
    },
    "AWS::Forecast::DatasetGroup": {
        "service": "Forecast",
        "serviceAssetKey": "forecast"
    },
    "AWS::FraudDetector::Detector": {
        "service": "FraudDetector",
        "serviceAssetKey": "fraud_detector"
    },
    "AWS::FraudDetector::EntityType": {
        "service": "FraudDetector",
        "serviceAssetKey": "fraud_detector"
    },
    "AWS::FraudDetector::EventType": {
        "service": "FraudDetector",
        "serviceAssetKey": "fraud_detector"
    },
    "AWS::FraudDetector::Label": {
        "service": "FraudDetector",
        "serviceAssetKey": "fraud_detector"
    },
    "AWS::FraudDetector::Outcome": {
        "service": "FraudDetector",
        "serviceAssetKey": "fraud_detector"
    },
    "AWS::FraudDetector::Variable": {
        "service": "FraudDetector",
        "serviceAssetKey": "fraud_detector"
    },
    "AWS::GameLift::Alias": {
        "service": "GameLift",
        "serviceAssetKey": "gamelift"
    },
    "AWS::GameLift::Build": {
        "service": "GameLift",
        "serviceAssetKey": "gamelift"
    },
    "AWS::GameLift::Fleet": {
        "service": "GameLift",
        "serviceAssetKey": "gamelift"
    },
    "AWS::GameLift::GameServerGroup": {
        "service": "GameLift",
        "serviceAssetKey": "gamelift"
    },
    "AWS::GameLift::GameSessionQueue": {
        "service": "GameLift",
        "serviceAssetKey": "gamelift"
    },
    "AWS::GameLift::Location": {
        "service": "GameLift",
        "serviceAssetKey": "gamelift"
    },
    "AWS::GameLift::MatchmakingConfiguration": {
        "service": "GameLift",
        "serviceAssetKey": "gamelift",
        "generalIconKey": "config",
        "drawioGeneralShape": "gear"
    },
    "AWS::GameLift::MatchmakingRuleSet": {
        "service": "GameLift",
        "serviceAssetKey": "gamelift"
    },
    "AWS::GameLift::Script": {
        "service": "GameLift",
        "serviceAssetKey": "gamelift"
    },
    "AWS::GlobalAccelerator::Accelerator": {
        "service": "GlobalAccelerator",
        "serviceAssetKey": "global_accelerator"
    },
    "AWS::GlobalAccelerator::EndpointGroup": {
        "service": "GlobalAccelerator",
        "serviceAssetKey": "global_accelerator"
    },
    "AWS::GlobalAccelerator::Listener": {
        "service": "GlobalAccelerator",
        "serviceAssetKey": "global_accelerator"
    },
    "AWS::Glue::Classifier": {
        "service": "Glue",
        "serviceAssetKey": "glue"
    },
    "AWS::Glue::Connection": {
        "service": "Glue",
        "serviceAssetKey": "glue"
    },
    "AWS::Glue::Crawler": {
        "service": "Glue",
        "serviceAssetKey": "glue",
        "assetKey": "glue_crawler"
    },
    "AWS::Glue::DataCatalogEncryptionSettings": {
        "service": "Glue",
        "serviceAssetKey": "glue"
    },
    "AWS::Glue::Database": {
        "service": "Glue",
        "serviceAssetKey": "glue",
        "generalIconKey": "generic_database"
    },
    "AWS::Glue::DevEndpoint": {
        "service": "Glue",
        "serviceAssetKey": "glue"
    },
    "AWS::Glue::Job": {
        "service": "Glue",
        "serviceAssetKey": "glue"
    },
    "AWS::Glue::MLTransform": {
        "service": "Glue",
        "serviceAssetKey": "glue"
    },
    "AWS::Glue::Partition": {
        "service": "Glue",
        "serviceAssetKey": "glue"
    },
    "AWS::Glue::Registry": {
        "service": "Glue",
        "serviceAssetKey": "glue"
    },
    "AWS::Glue::Schema": {
        "service": "Glue",
        "serviceAssetKey": "glue",
        "assetKey": "eventbridge_schema",
        "drawioShape": "eventbridge_schema"
    },
    "AWS::Glue::SchemaVersion": {
        "service": "Glue",
        "serviceAssetKey": "glue"
    },
    "AWS::Glue::SchemaVersionMetadata": {
        "service": "Glue",
        "serviceAssetKey": "glue"
    },
    "AWS::Glue::SecurityConfiguration": {
        "service": "Glue",
        "serviceAssetKey": "glue",
        "generalIconKey": "config",
        "drawioGeneralShape": "gear"
    },
    "AWS::Glue::Table": {
        "service": "Glue",
        "serviceAssetKey": "glue",
        "assetKey": "dynamodb_table",
        "drawioShape": "table"
    },
    "AWS::Glue::Trigger": {
        "service": "Glue",
        "serviceAssetKey": "glue"
    },
    "AWS::Glue::Workflow": {
        "service": "Glue",
        "serviceAssetKey": "glue"
    },
    "AWS::Grafana::Workspace": {
        "service": "Grafana"
    },
    "AWS::Greengrass::ConnectorDefinition": {
        "service": "Greengrass",
        "serviceAssetKey": "iot_greengrass"
    },
    "AWS::Greengrass::ConnectorDefinitionVersion": {
        "service": "Greengrass",
        "serviceAssetKey": "iot_greengrass"
    },
    "AWS::Greengrass::CoreDefinition": {
        "service": "Greengrass",
        "serviceAssetKey": "iot_greengrass"
    },
    "AWS::Greengrass::CoreDefinitionVersion": {
        "service": "Greengrass",
        "serviceAssetKey": "iot_greengrass"
    },
    "AWS::Greengrass::DeviceDefinition": {
        "service": "Greengrass",
        "serviceAssetKey": "iot_greengrass"
    },
    "AWS::Greengrass::DeviceDefinitionVersion": {
        "service": "Greengrass",
        "serviceAssetKey": "iot_greengrass"
    },
    "AWS::Greengrass::FunctionDefinition": {
        "service": "Greengrass",
        "serviceAssetKey": "iot_greengrass"
    },
    "AWS::Greengrass::FunctionDefinitionVersion": {
        "service": "Greengrass",
        "serviceAssetKey": "iot_greengrass"
    },
    "AWS::Greengrass::Group": {
        "service": "Greengrass",
        "serviceAssetKey": "iot_greengrass"
    },
    "AWS::Greengrass::GroupVersion": {
        "service": "Greengrass",
        "serviceAssetKey": "iot_greengrass"
    },
    "AWS::Greengrass::LoggerDefinition": {
        "service": "Greengrass",
        "serviceAssetKey": "iot_greengrass"
    },
    "AWS::Greengrass::LoggerDefinitionVersion": {
        "service": "Greengrass",
        "serviceAssetKey": "iot_greengrass"
    },
    "AWS::Greengrass::ResourceDefinition": {
        "service": "Greengrass",
        "serviceAssetKey": "iot_greengrass"
    },
    "AWS::Greengrass::ResourceDefinitionVersion": {
        "service": "Greengrass",
        "serviceAssetKey": "iot_greengrass"
    },
    "AWS::Greengrass::SubscriptionDefinition": {
        "service": "Greengrass",
        "serviceAssetKey": "iot_greengrass"
    },
    "AWS::Greengrass::SubscriptionDefinitionVersion": {
        "service": "Greengrass",
        "serviceAssetKey": "iot_greengrass"
    },
    "AWS::GreengrassV2::ComponentVersion": {
        "service": "GreengrassV2",
        "serviceAssetKey": "iot_greengrass"
    },
    "AWS::GreengrassV2::Deployment": {
        "service": "GreengrassV2",
        "serviceAssetKey": "iot_greengrass"
    },
    "AWS::GroundStation::Config": {
        "service": "GroundStation",
        "serviceAssetKey": "ground_station",
        "generalIconKey": "config",
        "drawioGeneralShape": "gear"
    },
    "AWS::GroundStation::DataflowEndpointGroup": {
        "service": "GroundStation",
        "serviceAssetKey": "ground_station"
    },
    "AWS::GroundStation::MissionProfile": {
        "service": "GroundStation",
        "serviceAssetKey": "ground_station"
    },
    "AWS::GuardDuty::Detector": {
        "service": "GuardDuty",
        "serviceAssetKey": "guardduty"
    },
    "AWS::GuardDuty::Filter": {
        "service": "GuardDuty",
        "serviceAssetKey": "guardduty"
    },
    "AWS::GuardDuty::IPSet": {
        "service": "GuardDuty",
        "serviceAssetKey": "guardduty"
    },
    "AWS::GuardDuty::Master": {
        "service": "GuardDuty",
        "serviceAssetKey": "guardduty"
    },
    "AWS::GuardDuty::Member": {
        "service": "GuardDuty",
        "serviceAssetKey": "guardduty"
    },
    "AWS::GuardDuty::ThreatIntelSet": {
        "service": "GuardDuty",
        "serviceAssetKey": "guardduty"
    },
    "AWS::HealthLake::FHIRDatastore": {
        "service": "HealthLake",
        "serviceAssetKey": "healthlake"
    },
    "AWS::IAM::AccessKey": {
        "service": "IAM",
        "serviceAssetKey": "iam",
        "generalIconKey": "key",
        "drawioGeneralShape": "permissions"
    },
    "AWS::IAM::Group": {
        "service": "IAM",
        "serviceAssetKey": "iam"
    },
    "AWS::IAM::InstanceProfile": {
        "service": "IAM",
        "serviceAssetKey": "iam"
    },
    "AWS::IAM::ManagedPolicy": {
        "service": "IAM",
        "serviceAssetKey": "iam",
        "generalIconKey": "policy",
        "drawioGeneralShape": "addon"
    },
    "AWS::IAM::OIDCProvider": {
        "service": "IAM",
        "serviceAssetKey": "iam"
    },
    "AWS::IAM::Policy": {
        "service": "IAM",
        "serviceAssetKey": "iam",
        "generalIconKey": "policy",
        "drawioGeneralShape": "addon"
    },
    "AWS::IAM::Role": {
        "service": "IAM",
        "serviceAssetKey": "iam",
        "assetKey": "iam_role",
        "generalIconKey": "role",
        "drawioShape": "role",
        "drawioGeneralShape": "role"
    },
    "AWS::IAM::SAMLProvider": {
        "service": "IAM",
        "serviceAssetKey": "iam"
    },
    "AWS::IAM::ServerCertificate": {
        "service": "IAM",
        "serviceAssetKey": "iam"
    },
    "AWS::IAM::ServiceLinkedRole": {
        "service": "IAM",
        "serviceAssetKey": "iam",
        "generalIconKey": "role",
        "drawioGeneralShape": "role"
    },
    "AWS::IAM::User": {
        "service": "IAM",
        "serviceAssetKey": "iam",
        "generalIconKey": "user",
        "drawioGeneralShape": "user"
    },
    "AWS::IAM::UserToGroupAddition": {
        "service": "IAM",
        "serviceAssetKey": "iam"
    },
    "AWS::IAM::VirtualMFADevice": {
        "service": "IAM",
        "serviceAssetKey": "iam"
    },
    "AWS::IVS::Channel": {
        "service": "IVS",
        "serviceAssetKey": "interactive_video_service"
    },
    "AWS::IVS::PlaybackKeyPair": {
        "service": "IVS",
        "serviceAssetKey": "interactive_video_service"
    },
    "AWS::IVS::RecordingConfiguration": {
        "service": "IVS",
        "serviceAssetKey": "interactive_video_service",
        "generalIconKey": "config",
        "drawioGeneralShape": "gear"
    },
    "AWS::IVS::StreamKey": {
        "service": "IVS",
        "serviceAssetKey": "interactive_video_service",
        "generalIconKey": "key",
        "drawioGeneralShape": "permissions"
    },
    "AWS::IVSChat::LoggingConfiguration": {
        "service": "IVSChat",
        "generalIconKey": "config",
        "drawioGeneralShape": "gear"
    },
    "AWS::IVSChat::Room": {
        "service": "IVSChat"
    },
    "AWS::IdentityStore::Group": {
        "service": "IdentityStore"
    },
    "AWS::IdentityStore::GroupMembership": {
        "service": "IdentityStore"
    },
    "AWS::ImageBuilder::Component": {
        "service": "ImageBuilder",
        "serviceAssetKey": "ec2"
    },
    "AWS::ImageBuilder::ContainerRecipe": {
        "service": "ImageBuilder",
        "serviceAssetKey": "ec2"
    },
    "AWS::ImageBuilder::DistributionConfiguration": {
        "service": "ImageBuilder",
        "serviceAssetKey": "ec2",
        "generalIconKey": "config",
        "drawioGeneralShape": "gear"
    },
    "AWS::ImageBuilder::Image": {
        "service": "ImageBuilder",
        "serviceAssetKey": "ec2"
    },
    "AWS::ImageBuilder::ImagePipeline": {
        "service": "ImageBuilder",
        "serviceAssetKey": "ec2"
    },
    "AWS::ImageBuilder::ImageRecipe": {
        "service": "ImageBuilder",
        "serviceAssetKey": "ec2"
    },
    "AWS::ImageBuilder::InfrastructureConfiguration": {
        "service": "ImageBuilder",
        "serviceAssetKey": "ec2",
        "generalIconKey": "config",
        "drawioGeneralShape": "gear"
    },
    "AWS::Inspector::AssessmentTarget": {
        "service": "Inspector",
        "serviceAssetKey": "inspector"
    },
    "AWS::Inspector::AssessmentTemplate": {
        "service": "Inspector",
        "serviceAssetKey": "inspector",
        "generalIconKey": "template",
        "drawioGeneralShape": "template"
    },
    "AWS::Inspector::ResourceGroup": {
        "service": "Inspector",
        "serviceAssetKey": "inspector"
    },
    "AWS::InspectorV2::Filter": {
        "service": "InspectorV2",
        "serviceAssetKey": "inspector"
    },
    "AWS::InternetMonitor::Monitor": {
        "service": "InternetMonitor"
    },
    "AWS::IoT1Click::Device": {
        "service": "IoT1Click",
        "serviceAssetKey": "iot_1_click"
    },
    "AWS::IoT1Click::Placement": {
        "service": "IoT1Click",
        "serviceAssetKey": "iot_1_click"
    },
    "AWS::IoT1Click::Project": {
        "service": "IoT1Click",
        "serviceAssetKey": "iot_1_click"
    },
    "AWS::IoT::AccountAuditConfiguration": {
        "service": "IoT",
        "serviceAssetKey": "iot_core",
        "generalIconKey": "config",
        "drawioGeneralShape": "gear"
    },
    "AWS::IoT::Authorizer": {
        "service": "IoT",
        "serviceAssetKey": "iot_core"
    },
    "AWS::IoT::CACertificate": {
        "service": "IoT",
        "serviceAssetKey": "iot_core"
    },
    "AWS::IoT::Certificate": {
        "service": "IoT",
        "serviceAssetKey": "iot_core",
        "assetKey": "iot_core_certificate",
        "generalIconKey": "ssl_padlock",
        "drawioGeneralShape": "ssl_padlock"
    },
    "AWS::IoT::CustomMetric": {
        "service": "IoT",
        "serviceAssetKey": "iot_core"
    },
    "AWS::IoT::Dimension": {
        "service": "IoT",
        "serviceAssetKey": "iot_core"
    },
    "AWS::IoT::DomainConfiguration": {
        "service": "IoT",
        "serviceAssetKey": "iot_core",
        "generalIconKey": "config",
        "drawioGeneralShape": "gear"
    },
    "AWS::IoT::FleetMetric": {
        "service": "IoT",
        "serviceAssetKey": "iot_core"
    },
    "AWS::IoT::JobTemplate": {
        "service": "IoT",
        "serviceAssetKey": "iot_core",
        "generalIconKey": "template",
        "drawioGeneralShape": "template"
    },
    "AWS::IoT::Logging": {
        "service": "IoT",
        "serviceAssetKey": "iot_core"
    },
    "AWS::IoT::MitigationAction": {
        "service": "IoT",
        "serviceAssetKey": "iot_core"
    },
    "AWS::IoT::Policy": {
        "service": "IoT",
        "serviceAssetKey": "iot_core",
        "assetKey": "iot_core_policy",
        "generalIconKey": "policy",
        "drawioGeneralShape": "addon"
    },
    "AWS::IoT::PolicyPrincipalAttachment": {
        "service": "IoT",
        "serviceAssetKey": "iot_core",
        "generalIconKey": "attachment",
        "drawioGeneralShape": "transit_gateway_attachment"
    },
    "AWS::IoT::ProvisioningTemplate": {
        "service": "IoT",
        "serviceAssetKey": "iot_core",
        "generalIconKey": "template",
        "drawioGeneralShape": "template"
    },
    "AWS::IoT::ResourceSpecificLogging": {
        "service": "IoT",
        "serviceAssetKey": "iot_core"
    },
    "AWS::IoT::RoleAlias": {
        "service": "IoT",
        "serviceAssetKey": "iot_core"
    },
    "AWS::IoT::ScheduledAudit": {
        "service": "IoT",
        "serviceAssetKey": "iot_core"
    },
    "AWS::IoT::SecurityProfile": {
        "service": "IoT",
        "serviceAssetKey": "iot_core"
    },
    "AWS::IoT::Thing": {
        "service": "IoT",
        "serviceAssetKey": "iot_core"
    },
    "AWS::IoT::ThingPrincipalAttachment": {
        "service": "IoT",
        "serviceAssetKey": "iot_core",
        "generalIconKey": "attachment",
        "drawioGeneralShape": "transit_gateway_attachment"
    },
    "AWS::IoT::TopicRule": {
        "service": "IoT",
        "serviceAssetKey": "iot_core",
        "generalIconKey": "rule",
        "drawioGeneralShape": "rule"
    },
    "AWS::IoT::TopicRuleDestination": {
        "service": "IoT",
        "serviceAssetKey": "iot_core"
    },
    "AWS::IoTAnalytics::Channel": {
        "service": "IoTAnalytics",
        "serviceAssetKey": "iot_analytics",
        "assetKey": "iot_analytics_channel",
        "drawioShape": "iot_analytics_channel"
    },
    "AWS::IoTAnalytics::Dataset": {
        "service": "IoTAnalytics",
        "serviceAssetKey": "iot_analytics",
        "assetKey": "iot_analytics_dataset",
        "drawioShape": "data_set"
    },
    "AWS::IoTAnalytics::Datastore": {
        "service": "IoTAnalytics",
        "serviceAssetKey": "iot_analytics",
        "assetKey": "iot_analytics_data_store",
        "drawioShape": "iot_analytics_data_store"
    },
    "AWS::IoTAnalytics::Pipeline": {
        "service": "IoTAnalytics",
        "serviceAssetKey": "iot_analytics",
        "assetKey": "iot_analytics_pipeline",
        "drawioShape": "iot_analytics_pipeline"
    },
    "AWS::IoTCoreDeviceAdvisor::SuiteDefinition": {
        "service": "IoTCoreDeviceAdvisor",
        "serviceAssetKey": "iot_core"
    },
    "AWS::IoTEvents::AlarmModel": {
        "service": "IoTEvents",
        "serviceAssetKey": "iot_events"
    },
    "AWS::IoTEvents::DetectorModel": {
        "service": "IoTEvents",
        "serviceAssetKey": "iot_events"
    },
    "AWS::IoTEvents::Input": {
        "service": "IoTEvents",
        "serviceAssetKey": "iot_events"
    },
    "AWS::IoTFleetHub::Application": {
        "service": "IoTFleetHub",
        "serviceAssetKey": "iot_device_management",
        "assetKey": "elastic_beanstalk_application",
        "generalIconKey": "generic_application",
        "drawioShape": "application"
    },
    "AWS::IoTFleetWise::Campaign": {
        "service": "IoTFleetWise",
        "serviceAssetKey": "iot_fleetwise"
    },
    "AWS::IoTFleetWise::DecoderManifest": {
        "service": "IoTFleetWise",
        "serviceAssetKey": "iot_fleetwise"
    },
    "AWS::IoTFleetWise::Fleet": {
        "service": "IoTFleetWise",
        "serviceAssetKey": "iot_fleetwise"
    },
    "AWS::IoTFleetWise::ModelManifest": {
        "service": "IoTFleetWise",
        "serviceAssetKey": "iot_fleetwise"
    },
    "AWS::IoTFleetWise::SignalCatalog": {
        "service": "IoTFleetWise",
        "serviceAssetKey": "iot_fleetwise",
        "generalIconKey": "logs",
        "drawioGeneralShape": "logs"
    },
    "AWS::IoTFleetWise::Vehicle": {
        "service": "IoTFleetWise",
        "serviceAssetKey": "iot_fleetwise"
    },
    "AWS::IoTSiteWise::AccessPolicy": {
        "service": "IoTSiteWise",
        "serviceAssetKey": "iot_sitewise",
        "generalIconKey": "policy",
        "drawioGeneralShape": "addon"
    },
    "AWS::IoTSiteWise::Asset": {
        "service": "IoTSiteWise",
        "serviceAssetKey": "iot_sitewise",
        "assetKey": "iot_sitewise_asset",
        "drawioShape": "iot_sitewise_asset"
    },
    "AWS::IoTSiteWise::AssetModel": {
        "service": "IoTSiteWise",
        "serviceAssetKey": "iot_sitewise",
        "assetKey": "iot_sitewise_asset_model",
        "drawioShape": "iot_sitewise_asset_model"
    },
    "AWS::IoTSiteWise::Dashboard": {
        "service": "IoTSiteWise",
        "serviceAssetKey": "iot_sitewise"
    },
    "AWS::IoTSiteWise::Gateway": {
        "service": "IoTSiteWise",
        "serviceAssetKey": "iot_sitewise"
    },
    "AWS::IoTSiteWise::Portal": {
        "service": "IoTSiteWise",
        "serviceAssetKey": "iot_sitewise"
    },
    "AWS::IoTSiteWise::Project": {
        "service": "IoTSiteWise",
        "serviceAssetKey": "iot_sitewise"
    },
    "AWS::IoTThingsGraph::FlowTemplate": {
        "service": "IoTThingsGraph",
        "serviceAssetKey": "iot_things_graph",
        "generalIconKey": "template",
        "drawioGeneralShape": "template"
    },
    "AWS::IoTTwinMaker::ComponentType": {
        "service": "IoTTwinMaker",
        "serviceAssetKey": "iot_twinmaker"
    },
    "AWS::IoTTwinMaker::Entity": {
        "service": "IoTTwinMaker",
        "serviceAssetKey": "iot_twinmaker"
    },
    "AWS::IoTTwinMaker::Scene": {
        "service": "IoTTwinMaker",
        "serviceAssetKey": "iot_twinmaker"
    },
    "AWS::IoTTwinMaker::SyncJob": {
        "service": "IoTTwinMaker",
        "serviceAssetKey": "iot_twinmaker"
    },
    "AWS::IoTTwinMaker::Workspace": {
        "service": "IoTTwinMaker",
        "serviceAssetKey": "iot_twinmaker"
    },
    "AWS::IoTWireless::Destination": {
        "service": "IoTWireless",
        "serviceAssetKey": "iot_core"
    },
    "AWS::IoTWireless::DeviceProfile": {
        "service": "IoTWireless",
        "serviceAssetKey": "iot_core"
    },
    "AWS::IoTWireless::FuotaTask": {
        "service": "IoTWireless",
        "serviceAssetKey": "iot_core"
    },
    "AWS::IoTWireless::MulticastGroup": {
        "service": "IoTWireless",
        "serviceAssetKey": "iot_core"
    },
    "AWS::IoTWireless::NetworkAnalyzerConfiguration": {
        "service": "IoTWireless",
        "serviceAssetKey": "iot_core",
        "generalIconKey": "config",
        "drawioGeneralShape": "gear"
    },
    "AWS::IoTWireless::PartnerAccount": {
        "service": "IoTWireless",
        "serviceAssetKey": "iot_core"
    },
    "AWS::IoTWireless::ServiceProfile": {
        "service": "IoTWireless",
        "serviceAssetKey": "iot_core"
    },
    "AWS::IoTWireless::TaskDefinition": {
        "service": "IoTWireless",
        "serviceAssetKey": "iot_core"
    },
    "AWS::IoTWireless::WirelessDevice": {
        "service": "IoTWireless",
        "serviceAssetKey": "iot_core"
    },
    "AWS::IoTWireless::WirelessGateway": {
        "service": "IoTWireless",
        "serviceAssetKey": "iot_core"
    },
    "AWS::KMS::Alias": {
        "service": "KMS",
        "serviceAssetKey": "key_management_service"
    },
    "AWS::KMS::Key": {
        "service": "KMS",
        "serviceAssetKey": "key_management_service",
        "generalIconKey": "key",
        "drawioGeneralShape": "permissions"
    },
    "AWS::KMS::ReplicaKey": {
        "service": "KMS",
        "serviceAssetKey": "key_management_service",
        "generalIconKey": "key",
        "drawioGeneralShape": "permissions"
    },
    "AWS::KafkaConnect::Connector": {
        "service": "KafkaConnect",
        "serviceAssetKey": "msk"
    },
    "AWS::Kendra::DataSource": {
        "service": "Kendra",
        "serviceAssetKey": "kendra"
    },
    "AWS::Kendra::Faq": {
        "service": "Kendra",
        "serviceAssetKey": "kendra"
    },
    "AWS::Kendra::Index": {
        "service": "Kendra",
        "serviceAssetKey": "kendra"
    },
    "AWS::KendraRanking::ExecutionPlan": {
        "service": "KendraRanking",
        "serviceAssetKey": "kendra"
    },
    "AWS::Kinesis::Stream": {
        "service": "Kinesis",
        "serviceAssetKey": "kinesis_data_streams"
    },
    "AWS::Kinesis::StreamConsumer": {
        "service": "Kinesis",
        "serviceAssetKey": "kinesis_data_streams"
    },
    "AWS::KinesisAnalytics::Application": {
        "service": "KinesisAnalytics",
        "serviceAssetKey": "kinesis_data_analytics",
        "assetKey": "elastic_beanstalk_application",
        "generalIconKey": "generic_application",
        "drawioShape": "application"
    },
    "AWS::KinesisAnalytics::ApplicationOutput": {
        "service": "KinesisAnalytics",
        "serviceAssetKey": "kinesis_data_analytics"
    },
    "AWS::KinesisAnalytics::ApplicationReferenceDataSource": {
        "service": "KinesisAnalytics",
        "serviceAssetKey": "kinesis_data_analytics"
    },
    "AWS::KinesisAnalyticsV2::Application": {
        "service": "KinesisAnalyticsV2",
        "serviceAssetKey": "kinesis_data_analytics",
        "assetKey": "elastic_beanstalk_application",
        "generalIconKey": "generic_application",
        "drawioShape": "application"
    },
    "AWS::KinesisAnalyticsV2::ApplicationCloudWatchLoggingOption": {
        "service": "KinesisAnalyticsV2",
        "serviceAssetKey": "kinesis_data_analytics"
    },
    "AWS::KinesisAnalyticsV2::ApplicationOutput": {
        "service": "KinesisAnalyticsV2",
        "serviceAssetKey": "kinesis_data_analytics"
    },
    "AWS::KinesisAnalyticsV2::ApplicationReferenceDataSource": {
        "service": "KinesisAnalyticsV2",
        "serviceAssetKey": "kinesis_data_analytics"
    },
    "AWS::KinesisFirehose::DeliveryStream": {
        "service": "KinesisFirehose",
        "serviceAssetKey": "kinesis_firehose"
    },
    "AWS::KinesisVideo::SignalingChannel": {
        "service": "KinesisVideo",
        "serviceAssetKey": "kinesis_video_streams"
    },
    "AWS::KinesisVideo::Stream": {
        "service": "KinesisVideo",
        "serviceAssetKey": "kinesis_video_streams"
    },
    "AWS::LakeFormation::DataCellsFilter": {
        "service": "LakeFormation",
        "serviceAssetKey": "lake_formation"
    },
    "AWS::LakeFormation::DataLakeSettings": {
        "service": "LakeFormation",
        "serviceAssetKey": "lake_formation"
    },
    "AWS::LakeFormation::Permissions": {
        "service": "LakeFormation",
        "serviceAssetKey": "lake_formation",
        "assetKey": "iam_permissions",
        "generalIconKey": "policy",
        "drawioShape": "permissions",
        "drawioGeneralShape": "addon"
    },
    "AWS::LakeFormation::PrincipalPermissions": {
        "service": "LakeFormation",
        "serviceAssetKey": "lake_formation",
        "generalIconKey": "policy",
        "drawioGeneralShape": "addon"
    },
    "AWS::LakeFormation::Resource": {
        "service": "LakeFormation",
        "serviceAssetKey": "lake_formation"
    },
    "AWS::LakeFormation::Tag": {
        "service": "LakeFormation",
        "serviceAssetKey": "lake_formation"
    },
    "AWS::LakeFormation::TagAssociation": {
        "service": "LakeFormation",
        "serviceAssetKey": "lake_formation"
    },
    "AWS::Lambda::Alias": {
        "service": "Lambda",
        "serviceAssetKey": "lambda"
    },
    "AWS::Lambda::CodeSigningConfig": {
        "service": "Lambda",
        "serviceAssetKey": "lambda",
        "generalIconKey": "config",
        "drawioGeneralShape": "gear"
    },
    "AWS::Lambda::EventInvokeConfig": {
        "service": "Lambda",
        "serviceAssetKey": "lambda",
        "generalIconKey": "config",
        "drawioGeneralShape": "gear"
    },
    "AWS::Lambda::EventSourceMapping": {
        "service": "Lambda",
        "serviceAssetKey": "lambda"
    },
    "AWS::Lambda::Function": {
        "service": "Lambda",
        "serviceAssetKey": "lambda",
        "assetKey": "lambda_lambda_function"
    },
    "AWS::Lambda::LayerVersion": {
        "service": "Lambda",
        "serviceAssetKey": "lambda"
    },
    "AWS::Lambda::LayerVersionPermission": {
        "service": "Lambda",
        "serviceAssetKey": "lambda",
        "generalIconKey": "policy",
        "drawioGeneralShape": "addon"
    },
    "AWS::Lambda::Permission": {
        "service": "Lambda",
        "serviceAssetKey": "lambda",
        "generalIconKey": "policy",
        "drawioGeneralShape": "addon"
    },
    "AWS::Lambda::Url": {
        "service": "Lambda",
        "serviceAssetKey": "lambda"
    },
    "AWS::Lambda::Version": {
        "service": "Lambda",
        "serviceAssetKey": "lambda"
    },
    "AWS::Lex::Bot": {
        "service": "Lex",
        "serviceAssetKey": "lex"
    },
    "AWS::Lex::BotAlias": {
        "service": "Lex",
        "serviceAssetKey": "lex"
    },
    "AWS::Lex::BotVersion": {
        "service": "Lex",
        "serviceAssetKey": "lex"
    },
    "AWS::Lex::ResourcePolicy": {
        "service": "Lex",
        "serviceAssetKey": "lex",
        "generalIconKey": "policy",
        "drawioGeneralShape": "addon"
    },
    "AWS::LicenseManager::Grant": {
        "service": "LicenseManager",
        "serviceAssetKey": "license_manager"
    },
    "AWS::LicenseManager::License": {
        "service": "LicenseManager",
        "serviceAssetKey": "license_manager"
    },
    "AWS::Lightsail::Alarm": {
        "service": "Lightsail",
        "serviceAssetKey": "lightsail",
        "assetKey": "cloudwatch_alarm",
        "generalIconKey": "alarm",
        "drawioShape": "alarm",
        "drawioGeneralShape": "alarm"
    },
    "AWS::Lightsail::Bucket": {
        "service": "Lightsail",
        "serviceAssetKey": "lightsail"
    },
    "AWS::Lightsail::Certificate": {
        "service": "Lightsail",
        "serviceAssetKey": "lightsail",
        "assetKey": "iot_core_certificate",
        "generalIconKey": "ssl_padlock",
        "drawioGeneralShape": "ssl_padlock"
    },
    "AWS::Lightsail::Container": {
        "service": "Lightsail",
        "serviceAssetKey": "lightsail"
    },
    "AWS::Lightsail::Database": {
        "service": "Lightsail",
        "serviceAssetKey": "lightsail",
        "generalIconKey": "generic_database"
    },
    "AWS::Lightsail::Disk": {
        "service": "Lightsail",
        "serviceAssetKey": "lightsail"
    },
    "AWS::Lightsail::Distribution": {
        "service": "Lightsail",
        "serviceAssetKey": "lightsail"
    },
    "AWS::Lightsail::Instance": {
        "service": "Lightsail",
        "serviceAssetKey": "lightsail",
        "assetKey": "ec2_instance",
        "drawioShape": "instance"
    },
    "AWS::Lightsail::LoadBalancer": {
        "service": "Lightsail",
        "serviceAssetKey": "lightsail"
    },
    "AWS::Lightsail::LoadBalancerTlsCertificate": {
        "service": "Lightsail",
        "serviceAssetKey": "lightsail"
    },
    "AWS::Lightsail::StaticIp": {
        "service": "Lightsail",
        "serviceAssetKey": "lightsail"
    },
    "AWS::Location::GeofenceCollection": {
        "service": "Location",
        "serviceAssetKey": "location_service"
    },
    "AWS::Location::Map": {
        "service": "Location",
        "serviceAssetKey": "location_service",
        "assetKey": "location_service_map",
        "drawioShape": "location_service_map"
    },
    "AWS::Location::PlaceIndex": {
        "service": "Location",
        "serviceAssetKey": "location_service"
    },
    "AWS::Location::RouteCalculator": {
        "service": "Location",
        "serviceAssetKey": "location_service"
    },
    "AWS::Location::Tracker": {
        "service": "Location",
        "serviceAssetKey": "location_service"
    },
    "AWS::Location::TrackerConsumer": {
        "service": "Location",
        "serviceAssetKey": "location_service"
    },
    "AWS::Logs::Destination": {
        "service": "Logs",
        "serviceAssetKey": "cloudwatch"
    },
    "AWS::Logs::LogGroup": {
        "service": "Logs",
        "serviceAssetKey": "cloudwatch"
    },
    "AWS::Logs::LogStream": {
        "service": "Logs",
        "serviceAssetKey": "cloudwatch"
    },
    "AWS::Logs::MetricFilter": {
        "service": "Logs",
        "serviceAssetKey": "cloudwatch"
    },
    "AWS::Logs::QueryDefinition": {
        "service": "Logs",
        "serviceAssetKey": "cloudwatch"
    },
    "AWS::Logs::ResourcePolicy": {
        "service": "Logs",
        "serviceAssetKey": "cloudwatch",
        "generalIconKey": "policy",
        "drawioGeneralShape": "addon"
    },
    "AWS::Logs::SubscriptionFilter": {
        "service": "Logs",
        "serviceAssetKey": "cloudwatch"
    },
    "AWS::LookoutEquipment::InferenceScheduler": {
        "service": "LookoutEquipment",
        "serviceAssetKey": "lookout_for_equipment"
    },
    "AWS::LookoutMetrics::Alert": {
        "service": "LookoutMetrics",
        "serviceAssetKey": "lookout_for_metrics",
        "generalIconKey": "alarm",
        "drawioGeneralShape": "alarm"
    },
    "AWS::LookoutMetrics::AnomalyDetector": {
        "service": "LookoutMetrics",
        "serviceAssetKey": "lookout_for_metrics"
    },
    "AWS::LookoutVision::Project": {
        "service": "LookoutVision",
        "serviceAssetKey": "lookout_for_vision"
    },
    "AWS::M2::Application": {
        "service": "M2",
        "serviceAssetKey": "mainframe_modernization",
        "assetKey": "elastic_beanstalk_application",
        "generalIconKey": "generic_application",
        "drawioShape": "application"
    },
    "AWS::M2::Environment": {
        "service": "M2",
        "serviceAssetKey": "mainframe_modernization"
    },
    "AWS::MSK::BatchScramSecret": {
        "service": "MSK",
        "serviceAssetKey": "msk"
    },
    "AWS::MSK::Cluster": {
        "service": "MSK",
        "serviceAssetKey": "msk",
        "assetKey": "emr_cluster",
        "drawioShape": "cluster"
    },
    "AWS::MSK::Configuration": {
        "service": "MSK",
        "serviceAssetKey": "msk",
        "generalIconKey": "config",
        "drawioGeneralShape": "gear"
    },
    "AWS::MSK::ServerlessCluster": {
        "service": "MSK",
        "serviceAssetKey": "msk"
    },
    "AWS::MWAA::Environment": {
        "service": "MWAA",
        "serviceAssetKey": "mwaa"
    },
    "AWS::Macie::AllowList": {
        "service": "Macie",
        "serviceAssetKey": "macie"
    },
    "AWS::Macie::CustomDataIdentifier": {
        "service": "Macie",
        "serviceAssetKey": "macie"
    },
    "AWS::Macie::FindingsFilter": {
        "service": "Macie",
        "serviceAssetKey": "macie"
    },
    "AWS::Macie::Session": {
        "service": "Macie",
        "serviceAssetKey": "macie"
    },
    "AWS::ManagedBlockchain::Accessor": {
        "service": "ManagedBlockchain",
        "serviceAssetKey": "managed_blockchain"
    },
    "AWS::ManagedBlockchain::Member": {
        "service": "ManagedBlockchain",
        "serviceAssetKey": "managed_blockchain"
    },
    "AWS::ManagedBlockchain::Node": {
        "service": "ManagedBlockchain",
        "serviceAssetKey": "managed_blockchain"
    },
    "AWS::MediaConnect::Flow": {
        "service": "MediaConnect",
        "serviceAssetKey": "elemental_mediaconnect"
    },
    "AWS::MediaConnect::FlowEntitlement": {
        "service": "MediaConnect",
        "serviceAssetKey": "elemental_mediaconnect"
    },
    "AWS::MediaConnect::FlowOutput": {
        "service": "MediaConnect",
        "serviceAssetKey": "elemental_mediaconnect"
    },
    "AWS::MediaConnect::FlowSource": {
        "service": "MediaConnect",
        "serviceAssetKey": "elemental_mediaconnect"
    },
    "AWS::MediaConnect::FlowVpcInterface": {
        "service": "MediaConnect",
        "serviceAssetKey": "elemental_mediaconnect"
    },
    "AWS::MediaConvert::JobTemplate": {
        "service": "MediaConvert",
        "serviceAssetKey": "elemental_mediaconvert",
        "generalIconKey": "template",
        "drawioGeneralShape": "template"
    },
    "AWS::MediaConvert::Preset": {
        "service": "MediaConvert",
        "serviceAssetKey": "elemental_mediaconvert"
    },
    "AWS::MediaConvert::Queue": {
        "service": "MediaConvert",
        "serviceAssetKey": "elemental_mediaconvert"
    },
    "AWS::MediaLive::Channel": {
        "service": "MediaLive",
        "serviceAssetKey": "elemental_medialive",
        "assetKey": "iot_analytics_channel",
        "drawioShape": "iot_analytics_channel"
    },
    "AWS::MediaLive::Input": {
        "service": "MediaLive",
        "serviceAssetKey": "elemental_medialive"
    },
    "AWS::MediaLive::InputSecurityGroup": {
        "service": "MediaLive",
        "serviceAssetKey": "elemental_medialive"
    },
    "AWS::MediaPackage::Asset": {
        "service": "MediaPackage",
        "serviceAssetKey": "elemental_mediapackage",
        "assetKey": "iot_sitewise_asset",
        "drawioShape": "iot_sitewise_asset"
    },
    "AWS::MediaPackage::Channel": {
        "service": "MediaPackage",
        "serviceAssetKey": "elemental_mediapackage",
        "assetKey": "iot_analytics_channel",
        "drawioShape": "iot_analytics_channel"
    },
    "AWS::MediaPackage::OriginEndpoint": {
        "service": "MediaPackage",
        "serviceAssetKey": "elemental_mediapackage"
    },
    "AWS::MediaPackage::PackagingConfiguration": {
        "service": "MediaPackage",
        "serviceAssetKey": "elemental_mediapackage",
        "generalIconKey": "config",
        "drawioGeneralShape": "gear"
    },
    "AWS::MediaPackage::PackagingGroup": {
        "service": "MediaPackage",
        "serviceAssetKey": "elemental_mediapackage"
    },
    "AWS::MediaStore::Container": {
        "service": "MediaStore",
        "serviceAssetKey": "elemental_mediastore"
    },
    "AWS::MediaTailor::PlaybackConfiguration": {
        "service": "MediaTailor",
        "serviceAssetKey": "elemental_mediatailor",
        "generalIconKey": "config",
        "drawioGeneralShape": "gear"
    },
    "AWS::MemoryDB::ACL": {
        "service": "MemoryDB",
        "serviceAssetKey": "memorydb_for_redis"
    },
    "AWS::MemoryDB::Cluster": {
        "service": "MemoryDB",
        "serviceAssetKey": "memorydb_for_redis",
        "assetKey": "emr_cluster",
        "drawioShape": "cluster"
    },
    "AWS::MemoryDB::ParameterGroup": {
        "service": "MemoryDB",
        "serviceAssetKey": "memorydb_for_redis"
    },
    "AWS::MemoryDB::SubnetGroup": {
        "service": "MemoryDB",
        "serviceAssetKey": "memorydb_for_redis"
    },
    "AWS::MemoryDB::User": {
        "service": "MemoryDB",
        "serviceAssetKey": "memorydb_for_redis",
        "generalIconKey": "user",
        "drawioGeneralShape": "user"
    },
    "AWS::Neptune::DBCluster": {
        "service": "Neptune",
        "serviceAssetKey": "neptune"
    },
    "AWS::Neptune::DBClusterParameterGroup": {
        "service": "Neptune",
        "serviceAssetKey": "neptune"
    },
    "AWS::Neptune::DBInstance": {
        "service": "Neptune",
        "serviceAssetKey": "neptune"
    },
    "AWS::Neptune::DBParameterGroup": {
        "service": "Neptune",
        "serviceAssetKey": "neptune"
    },
    "AWS::Neptune::DBSubnetGroup": {
        "service": "Neptune",
        "serviceAssetKey": "neptune"
    },
    "AWS::NetworkFirewall::Firewall": {
        "service": "NetworkFirewall",
        "serviceAssetKey": "network_firewall"
    },
    "AWS::NetworkFirewall::FirewallPolicy": {
        "service": "NetworkFirewall",
        "serviceAssetKey": "network_firewall",
        "generalIconKey": "policy",
        "drawioGeneralShape": "addon"
    },
    "AWS::NetworkFirewall::LoggingConfiguration": {
        "service": "NetworkFirewall",
        "serviceAssetKey": "network_firewall",
        "generalIconKey": "config",
        "drawioGeneralShape": "gear"
    },
    "AWS::NetworkFirewall::RuleGroup": {
        "service": "NetworkFirewall",
        "serviceAssetKey": "network_firewall"
    },
    "AWS::NetworkManager::ConnectAttachment": {
        "service": "NetworkManager",
        "serviceAssetKey": "vpc",
        "generalIconKey": "attachment",
        "drawioGeneralShape": "transit_gateway_attachment"
    },
    "AWS::NetworkManager::ConnectPeer": {
        "service": "NetworkManager",
        "serviceAssetKey": "vpc"
    },
    "AWS::NetworkManager::CoreNetwork": {
        "service": "NetworkManager",
        "serviceAssetKey": "vpc"
    },
    "AWS::NetworkManager::CustomerGatewayAssociation": {
        "service": "NetworkManager",
        "serviceAssetKey": "vpc"
    },
    "AWS::NetworkManager::Device": {
        "service": "NetworkManager",
        "serviceAssetKey": "vpc"
    },
    "AWS::NetworkManager::GlobalNetwork": {
        "service": "NetworkManager",
        "serviceAssetKey": "vpc"
    },
    "AWS::NetworkManager::Link": {
        "service": "NetworkManager",
        "serviceAssetKey": "vpc"
    },
    "AWS::NetworkManager::LinkAssociation": {
        "service": "NetworkManager",
        "serviceAssetKey": "vpc"
    },
    "AWS::NetworkManager::Site": {
        "service": "NetworkManager",
        "serviceAssetKey": "vpc"
    },
    "AWS::NetworkManager::SiteToSiteVpnAttachment": {
        "service": "NetworkManager",
        "serviceAssetKey": "vpc",
        "generalIconKey": "attachment",
        "drawioGeneralShape": "transit_gateway_attachment"
    },
    "AWS::NetworkManager::TransitGatewayPeering": {
        "service": "NetworkManager",
        "serviceAssetKey": "vpc"
    },
    "AWS::NetworkManager::TransitGatewayRegistration": {
        "service": "NetworkManager",
        "serviceAssetKey": "vpc"
    },
    "AWS::NetworkManager::TransitGatewayRouteTableAttachment": {
        "service": "NetworkManager",
        "serviceAssetKey": "vpc",
        "generalIconKey": "attachment",
        "drawioGeneralShape": "transit_gateway_attachment"
    },
    "AWS::NetworkManager::VpcAttachment": {
        "service": "NetworkManager",
        "serviceAssetKey": "vpc",
        "generalIconKey": "attachment",
        "drawioGeneralShape": "transit_gateway_attachment"
    },
    "AWS::NimbleStudio::LaunchProfile": {
        "service": "NimbleStudio",
        "serviceAssetKey": "nimble_studio"
    },
    "AWS::NimbleStudio::StreamingImage": {
        "service": "NimbleStudio",
        "serviceAssetKey": "nimble_studio"
    },
    "AWS::NimbleStudio::Studio": {
        "service": "NimbleStudio",
        "serviceAssetKey": "nimble_studio"
    },
    "AWS::NimbleStudio::StudioComponent": {
        "service": "NimbleStudio",
        "serviceAssetKey": "nimble_studio"
    },
    "AWS::Oam::Link": {
        "service": "Oam"
    },
    "AWS::Oam::Sink": {
        "service": "Oam"
    },
    "AWS::Omics::AnnotationStore": {
        "service": "Omics"
    },
    "AWS::Omics::ReferenceStore": {
        "service": "Omics"
    },
    "AWS::Omics::RunGroup": {
        "service": "Omics"
    },
    "AWS::Omics::SequenceStore": {
        "service": "Omics"
    },
    "AWS::Omics::VariantStore": {
        "service": "Omics"
    },
    "AWS::Omics::Workflow": {
        "service": "Omics"
    },
    "AWS::OpenSearchServerless::AccessPolicy": {
        "service": "OpenSearchServerless",
        "serviceAssetKey": "opensearch",
        "generalIconKey": "policy",
        "drawioGeneralShape": "addon"
    },
    "AWS::OpenSearchServerless::Collection": {
        "service": "OpenSearchServerless",
        "serviceAssetKey": "opensearch"
    },
    "AWS::OpenSearchServerless::SecurityConfig": {
        "service": "OpenSearchServerless",
        "serviceAssetKey": "opensearch",
        "generalIconKey": "config",
        "drawioGeneralShape": "gear"
    },
    "AWS::OpenSearchServerless::SecurityPolicy": {
        "service": "OpenSearchServerless",
        "serviceAssetKey": "opensearch",
        "generalIconKey": "policy",
        "drawioGeneralShape": "addon"
    },
    "AWS::OpenSearchServerless::VpcEndpoint": {
        "service": "OpenSearchServerless",
        "serviceAssetKey": "opensearch"
    },
    "AWS::OpenSearchService::Domain": {
        "service": "OpenSearchService",
        "serviceAssetKey": "opensearch"
    },
    "AWS::OpsWorks::App": {
        "service": "OpsWorks",
        "serviceAssetKey": "opsworks",
        "generalIconKey": "generic_application"
    },
    "AWS::OpsWorks::ElasticLoadBalancerAttachment": {
        "service": "OpsWorks",
        "serviceAssetKey": "opsworks",
        "generalIconKey": "attachment",
        "drawioGeneralShape": "transit_gateway_attachment"
    },
    "AWS::OpsWorks::Instance": {
        "service": "OpsWorks",
        "serviceAssetKey": "opsworks",
        "assetKey": "ec2_instance",
        "drawioShape": "instance"
    },
    "AWS::OpsWorks::Layer": {
        "service": "OpsWorks",
        "serviceAssetKey": "opsworks"
    },
    "AWS::OpsWorks::Stack": {
        "service": "OpsWorks",
        "serviceAssetKey": "opsworks",
        "assetKey": "cloudformation_stack",
        "drawioShape": "stack"
    },
    "AWS::OpsWorks::UserProfile": {
        "service": "OpsWorks",
        "serviceAssetKey": "opsworks"
    },
    "AWS::OpsWorks::Volume": {
        "service": "OpsWorks",
        "serviceAssetKey": "opsworks"
    },
    "AWS::OpsWorksCM::Server": {
        "service": "OpsWorksCM",
        "serviceAssetKey": "opsworks",
        "generalIconKey": "traditional_server",
        "drawioGeneralShape": "traditional_server"
    },
    "AWS::Organizations::Account": {
        "service": "Organizations",
        "serviceAssetKey": "organizations",
        "assetKey": "organizations_account",
        "drawioShape": "organizations_account"
    },
    "AWS::Organizations::OrganizationalUnit": {
        "service": "Organizations",
        "serviceAssetKey": "organizations",
        "assetKey": "organizations_organizational_unit",
        "drawioShape": "organizations_organizational_unit"
    },
    "AWS::Organizations::Policy": {
        "service": "Organizations",
        "serviceAssetKey": "organizations",
        "assetKey": "iot_core_policy",
        "generalIconKey": "policy",
        "drawioGeneralShape": "addon"
    },
    "AWS::Organizations::ResourcePolicy": {
        "service": "Organizations",
        "serviceAssetKey": "organizations",
        "generalIconKey": "policy",
        "drawioGeneralShape": "addon"
    },
    "AWS::Panorama::ApplicationInstance": {
        "service": "Panorama",
        "serviceAssetKey": "panorama"
    },
    "AWS::Panorama::Package": {
        "service": "Panorama",
        "serviceAssetKey": "panorama"
    },
    "AWS::Panorama::PackageVersion": {
        "service": "Panorama",
        "serviceAssetKey": "panorama"
    },
    "AWS::Personalize::Dataset": {
        "service": "Personalize",
        "serviceAssetKey": "personalize",
        "assetKey": "iot_analytics_dataset",
        "drawioShape": "data_set"
    },
    "AWS::Personalize::DatasetGroup": {
        "service": "Personalize",
        "serviceAssetKey": "personalize"
    },
    "AWS::Personalize::Schema": {
        "service": "Personalize",
        "serviceAssetKey": "personalize",
        "assetKey": "eventbridge_schema",
        "drawioShape": "eventbridge_schema"
    },
    "AWS::Personalize::Solution": {
        "service": "Personalize",
        "serviceAssetKey": "personalize"
    },
    "AWS::Pinpoint::ADMChannel": {
        "service": "Pinpoint",
        "serviceAssetKey": "pinpoint"
    },
    "AWS::Pinpoint::APNSChannel": {
        "service": "Pinpoint",
        "serviceAssetKey": "pinpoint"
    },
    "AWS::Pinpoint::APNSSandboxChannel": {
        "service": "Pinpoint",
        "serviceAssetKey": "pinpoint"
    },
    "AWS::Pinpoint::APNSVoipChannel": {
        "service": "Pinpoint",
        "serviceAssetKey": "pinpoint"
    },
    "AWS::Pinpoint::APNSVoipSandboxChannel": {
        "service": "Pinpoint",
        "serviceAssetKey": "pinpoint"
    },
    "AWS::Pinpoint::App": {
        "service": "Pinpoint",
        "serviceAssetKey": "pinpoint",
        "generalIconKey": "generic_application"
    },
    "AWS::Pinpoint::ApplicationSettings": {
        "service": "Pinpoint",
        "serviceAssetKey": "pinpoint"
    },
    "AWS::Pinpoint::BaiduChannel": {
        "service": "Pinpoint",
        "serviceAssetKey": "pinpoint"
    },
    "AWS::Pinpoint::Campaign": {
        "service": "Pinpoint",
        "serviceAssetKey": "pinpoint"
    },
    "AWS::Pinpoint::EmailChannel": {
        "service": "Pinpoint",
        "serviceAssetKey": "pinpoint"
    },
    "AWS::Pinpoint::EmailTemplate": {
        "service": "Pinpoint",
        "serviceAssetKey": "pinpoint",
        "generalIconKey": "template",
        "drawioGeneralShape": "template"
    },
    "AWS::Pinpoint::EventStream": {
        "service": "Pinpoint",
        "serviceAssetKey": "pinpoint"
    },
    "AWS::Pinpoint::GCMChannel": {
        "service": "Pinpoint",
        "serviceAssetKey": "pinpoint"
    },
    "AWS::Pinpoint::InAppTemplate": {
        "service": "Pinpoint",
        "serviceAssetKey": "pinpoint",
        "generalIconKey": "template",
        "drawioGeneralShape": "template"
    },
    "AWS::Pinpoint::PushTemplate": {
        "service": "Pinpoint",
        "serviceAssetKey": "pinpoint",
        "generalIconKey": "template",
        "drawioGeneralShape": "template"
    },
    "AWS::Pinpoint::SMSChannel": {
        "service": "Pinpoint",
        "serviceAssetKey": "pinpoint"
    },
    "AWS::Pinpoint::Segment": {
        "service": "Pinpoint",
        "serviceAssetKey": "pinpoint"
    },
    "AWS::Pinpoint::SmsTemplate": {
        "service": "Pinpoint",
        "serviceAssetKey": "pinpoint",
        "generalIconKey": "template",
        "drawioGeneralShape": "template"
    },
    "AWS::Pinpoint::VoiceChannel": {
        "service": "Pinpoint",
        "serviceAssetKey": "pinpoint"
    },
    "AWS::PinpointEmail::ConfigurationSet": {
        "service": "PinpointEmail",
        "serviceAssetKey": "pinpoint"
    },
    "AWS::PinpointEmail::ConfigurationSetEventDestination": {
        "service": "PinpointEmail",
        "serviceAssetKey": "pinpoint"
    },
    "AWS::PinpointEmail::DedicatedIpPool": {
        "service": "PinpointEmail",
        "serviceAssetKey": "pinpoint"
    },
    "AWS::PinpointEmail::Identity": {
        "service": "PinpointEmail",
        "serviceAssetKey": "pinpoint"
    },
    "AWS::Pipes::Pipe": {
        "service": "Pipes"
    },
    "AWS::QLDB::Ledger": {
        "service": "QLDB",
        "serviceAssetKey": "quantum_ledger_database"
    },
    "AWS::QLDB::Stream": {
        "service": "QLDB",
        "serviceAssetKey": "quantum_ledger_database"
    },
    "AWS::QuickSight::Analysis": {
        "service": "QuickSight",
        "serviceAssetKey": "quicksight"
    },
    "AWS::QuickSight::Dashboard": {
        "service": "QuickSight",
        "serviceAssetKey": "quicksight"
    },
    "AWS::QuickSight::DataSet": {
        "service": "QuickSight",
        "serviceAssetKey": "quicksight",
        "assetKey": "iot_analytics_dataset",
        "drawioShape": "data_set"
    },
    "AWS::QuickSight::DataSource": {
        "service": "QuickSight",
        "serviceAssetKey": "quicksight"
    },
    "AWS::QuickSight::Template": {
        "service": "QuickSight",
        "serviceAssetKey": "quicksight",
        "generalIconKey": "template",
        "drawioGeneralShape": "template"
    },
    "AWS::QuickSight::Theme": {
        "service": "QuickSight",
        "serviceAssetKey": "quicksight"
    },
    "AWS::RAM::ResourceShare": {
        "service": "RAM",
        "serviceAssetKey": "resource_access_manager"
    },
    "AWS::RDS::DBCluster": {
        "service": "RDS",
        "serviceAssetKey": "rds"
    },
    "AWS::RDS::DBClusterParameterGroup": {
        "service": "RDS",
        "serviceAssetKey": "rds"
    },
    "AWS::RDS::DBInstance": {
        "service": "RDS",
        "serviceAssetKey": "rds",
        "assetKey": "rds_instance",
        "drawioShape": "rds_instance"
    },
    "AWS::RDS::DBParameterGroup": {
        "service": "RDS",
        "serviceAssetKey": "rds"
    },
    "AWS::RDS::DBProxy": {
        "service": "RDS",
        "serviceAssetKey": "rds"
    },
    "AWS::RDS::DBProxyEndpoint": {
        "service": "RDS",
        "serviceAssetKey": "rds"
    },
    "AWS::RDS::DBProxyTargetGroup": {
        "service": "RDS",
        "serviceAssetKey": "rds"
    },
    "AWS::RDS::DBSecurityGroup": {
        "service": "RDS",
        "serviceAssetKey": "rds"
    },
    "AWS::RDS::DBSecurityGroupIngress": {
        "service": "RDS",
        "serviceAssetKey": "rds"
    },
    "AWS::RDS::DBSubnetGroup": {
        "service": "RDS",
        "serviceAssetKey": "rds"
    },
    "AWS::RDS::EventSubscription": {
        "service": "RDS",
        "serviceAssetKey": "rds"
    },
    "AWS::RDS::GlobalCluster": {
        "service": "RDS",
        "serviceAssetKey": "rds"
    },
    "AWS::RDS::OptionGroup": {
        "service": "RDS",
        "serviceAssetKey": "rds"
    },
    "AWS::RUM::AppMonitor": {
        "service": "RUM",
        "serviceAssetKey": "cloudwatch"
    },
    "AWS::Redshift::Cluster": {
        "service": "Redshift",
        "serviceAssetKey": "redshift",
        "assetKey": "emr_cluster",
        "drawioShape": "cluster"
    },
    "AWS::Redshift::ClusterParameterGroup": {
        "service": "Redshift",
        "serviceAssetKey": "redshift"
    },
    "AWS::Redshift::ClusterSecurityGroup": {
        "service": "Redshift",
        "serviceAssetKey": "redshift"
    },
    "AWS::Redshift::ClusterSecurityGroupIngress": {
        "service": "Redshift",
        "serviceAssetKey": "redshift"
    },
    "AWS::Redshift::ClusterSubnetGroup": {
        "service": "Redshift",
        "serviceAssetKey": "redshift"
    },
    "AWS::Redshift::EndpointAccess": {
        "service": "Redshift",
        "serviceAssetKey": "redshift"
    },
    "AWS::Redshift::EndpointAuthorization": {
        "service": "Redshift",
        "serviceAssetKey": "redshift"
    },
    "AWS::Redshift::EventSubscription": {
        "service": "Redshift",
        "serviceAssetKey": "redshift"
    },
    "AWS::Redshift::ScheduledAction": {
        "service": "Redshift",
        "serviceAssetKey": "redshift"
    },
    "AWS::RedshiftServerless::Namespace": {
        "service": "RedshiftServerless",
        "serviceAssetKey": "redshift"
    },
    "AWS::RedshiftServerless::Workgroup": {
        "service": "RedshiftServerless",
        "serviceAssetKey": "redshift"
    },
    "AWS::RefactorSpaces::Application": {
        "service": "RefactorSpaces",
        "serviceAssetKey": "migration_hub",
        "assetKey": "elastic_beanstalk_application",
        "generalIconKey": "generic_application",
        "drawioShape": "application"
    },
    "AWS::RefactorSpaces::Environment": {
        "service": "RefactorSpaces",
        "serviceAssetKey": "migration_hub"
    },
    "AWS::RefactorSpaces::Route": {
        "service": "RefactorSpaces",
        "serviceAssetKey": "migration_hub"
    },
    "AWS::RefactorSpaces::Service": {
        "service": "RefactorSpaces",
        "serviceAssetKey": "migration_hub",
        "assetKey": "ecs_service",
        "drawioShape": "ecs"
    },
    "AWS::Rekognition::Collection": {
        "service": "Rekognition",
        "serviceAssetKey": "rekognition"
    },
    "AWS::Rekognition::Project": {
        "service": "Rekognition",
        "serviceAssetKey": "rekognition"
    },
    "AWS::Rekognition::StreamProcessor": {
        "service": "Rekognition",
        "serviceAssetKey": "rekognition"
    },
    "AWS::ResilienceHub::App": {
        "service": "ResilienceHub",
        "serviceAssetKey": "resilience_hub",
        "generalIconKey": "generic_application"
    },
    "AWS::ResilienceHub::ResiliencyPolicy": {
        "service": "ResilienceHub",
        "serviceAssetKey": "resilience_hub",
        "generalIconKey": "policy",
        "drawioGeneralShape": "addon"
    },
    "AWS::ResourceExplorer2::DefaultViewAssociation": {
        "service": "ResourceExplorer2"
    },
    "AWS::ResourceExplorer2::Index": {
        "service": "ResourceExplorer2"
    },
    "AWS::ResourceExplorer2::View": {
        "service": "ResourceExplorer2"
    },
    "AWS::ResourceGroups::Group": {
        "service": "ResourceGroups",
        "serviceAssetKey": "ssm"
    },
    "AWS::RoboMaker::Fleet": {
        "service": "RoboMaker",
        "serviceAssetKey": "robomaker"
    },
    "AWS::RoboMaker::Robot": {
        "service": "RoboMaker",
        "serviceAssetKey": "robomaker"
    },
    "AWS::RoboMaker::RobotApplication": {
        "service": "RoboMaker",
        "serviceAssetKey": "robomaker"
    },
    "AWS::RoboMaker::RobotApplicationVersion": {
        "service": "RoboMaker",
        "serviceAssetKey": "robomaker"
    },
    "AWS::RoboMaker::SimulationApplication": {
        "service": "RoboMaker",
        "serviceAssetKey": "robomaker"
    },
    "AWS::RoboMaker::SimulationApplicationVersion": {
        "service": "RoboMaker",
        "serviceAssetKey": "robomaker"
    },
    "AWS::RolesAnywhere::CRL": {
        "service": "RolesAnywhere",
        "serviceAssetKey": "iam"
    },
    "AWS::RolesAnywhere::Profile": {
        "service": "RolesAnywhere",
        "serviceAssetKey": "iam"
    },
    "AWS::RolesAnywhere::TrustAnchor": {
        "service": "RolesAnywhere",
        "serviceAssetKey": "iam"
    },
    "AWS::Route53::CidrCollection": {
        "service": "Route53",
        "serviceAssetKey": "route_53"
    },
    "AWS::Route53::DNSSEC": {
        "service": "Route53",
        "serviceAssetKey": "route_53"
    },
    "AWS::Route53::HealthCheck": {
        "service": "Route53",
        "serviceAssetKey": "route_53"
    },
    "AWS::Route53::HostedZone": {
        "service": "Route53",
        "serviceAssetKey": "route_53",
        "assetKey": "route_53_hosted_zone",
        "drawioShape": "hosted_zone"
    },
    "AWS::Route53::KeySigningKey": {
        "service": "Route53",
        "serviceAssetKey": "route_53",
        "generalIconKey": "key",
        "drawioGeneralShape": "permissions"
    },
    "AWS::Route53::RecordSet": {
        "service": "Route53",
        "serviceAssetKey": "route_53"
    },
    "AWS::Route53::RecordSetGroup": {
        "service": "Route53",
        "serviceAssetKey": "route_53"
    },
    "AWS::Route53RecoveryControl::Cluster": {
        "service": "Route53RecoveryControl",
        "serviceAssetKey": "route_53",
        "assetKey": "emr_cluster",
        "drawioShape": "cluster"
    },
    "AWS::Route53RecoveryControl::ControlPanel": {
        "service": "Route53RecoveryControl",
        "serviceAssetKey": "route_53"
    },
    "AWS::Route53RecoveryControl::RoutingControl": {
        "service": "Route53RecoveryControl",
        "serviceAssetKey": "route_53"
    },
    "AWS::Route53RecoveryControl::SafetyRule": {
        "service": "Route53RecoveryControl",
        "serviceAssetKey": "route_53",
        "generalIconKey": "rule",
        "drawioGeneralShape": "rule"
    },
    "AWS::Route53RecoveryReadiness::Cell": {
        "service": "Route53RecoveryReadiness",
        "serviceAssetKey": "route_53"
    },
    "AWS::Route53RecoveryReadiness::ReadinessCheck": {
        "service": "Route53RecoveryReadiness",
        "serviceAssetKey": "route_53"
    },
    "AWS::Route53RecoveryReadiness::RecoveryGroup": {
        "service": "Route53RecoveryReadiness",
        "serviceAssetKey": "route_53"
    },
    "AWS::Route53RecoveryReadiness::ResourceSet": {
        "service": "Route53RecoveryReadiness",
        "serviceAssetKey": "route_53"
    },
    "AWS::Route53Resolver::FirewallDomainList": {
        "service": "Route53Resolver",
        "serviceAssetKey": "route_53"
    },
    "AWS::Route53Resolver::FirewallRuleGroup": {
        "service": "Route53Resolver",
        "serviceAssetKey": "route_53"
    },
    "AWS::Route53Resolver::FirewallRuleGroupAssociation": {
        "service": "Route53Resolver",
        "serviceAssetKey": "route_53"
    },
    "AWS::Route53Resolver::ResolverConfig": {
        "service": "Route53Resolver",
        "serviceAssetKey": "route_53",
        "generalIconKey": "config",
        "drawioGeneralShape": "gear"
    },
    "AWS::Route53Resolver::ResolverDNSSECConfig": {
        "service": "Route53Resolver",
        "serviceAssetKey": "route_53",
        "generalIconKey": "config",
        "drawioGeneralShape": "gear"
    },
    "AWS::Route53Resolver::ResolverEndpoint": {
        "service": "Route53Resolver",
        "serviceAssetKey": "route_53"
    },
    "AWS::Route53Resolver::ResolverQueryLoggingConfig": {
        "service": "Route53Resolver",
        "serviceAssetKey": "route_53",
        "generalIconKey": "config",
        "drawioGeneralShape": "gear"
    },
    "AWS::Route53Resolver::ResolverQueryLoggingConfigAssociation": {
        "service": "Route53Resolver",
        "serviceAssetKey": "route_53"
    },
    "AWS::Route53Resolver::ResolverRule": {
        "service": "Route53Resolver",
        "serviceAssetKey": "route_53",
        "generalIconKey": "rule",
        "drawioGeneralShape": "rule"
    },
    "AWS::Route53Resolver::ResolverRuleAssociation": {
        "service": "Route53Resolver",
        "serviceAssetKey": "route_53"
    },
    "AWS::S3::AccessPoint": {
        "service": "S3",
        "serviceAssetKey": "s3"
    },
    "AWS::S3::Bucket": {
        "service": "S3",
        "serviceAssetKey": "s3",
        "assetKey": "s3_bucket",
        "drawioShape": "bucket"
    },
    "AWS::S3::BucketPolicy": {
        "service": "S3",
        "serviceAssetKey": "s3",
        "generalIconKey": "policy",
        "drawioGeneralShape": "addon"
    },
    "AWS::S3::MultiRegionAccessPoint": {
        "service": "S3",
        "serviceAssetKey": "s3"
    },
    "AWS::S3::MultiRegionAccessPointPolicy": {
        "service": "S3",
        "serviceAssetKey": "s3",
        "generalIconKey": "policy",
        "drawioGeneralShape": "addon"
    },
    "AWS::S3::StorageLens": {
        "service": "S3",
        "serviceAssetKey": "s3"
    },
    "AWS::S3ObjectLambda::AccessPoint": {
        "service": "S3ObjectLambda",
        "serviceAssetKey": "s3"
    },
    "AWS::S3ObjectLambda::AccessPointPolicy": {
        "service": "S3ObjectLambda",
        "serviceAssetKey": "s3",
        "generalIconKey": "policy",
        "drawioGeneralShape": "addon"
    },
    "AWS::S3Outposts::AccessPoint": {
        "service": "S3Outposts",
        "serviceAssetKey": "s3_on_outposts"
    },
    "AWS::S3Outposts::Bucket": {
        "service": "S3Outposts",
        "serviceAssetKey": "s3_on_outposts",
        "assetKey": "s3_bucket",
        "drawioShape": "bucket"
    },
    "AWS::S3Outposts::BucketPolicy": {
        "service": "S3Outposts",
        "serviceAssetKey": "s3_on_outposts",
        "generalIconKey": "policy",
        "drawioGeneralShape": "addon"
    },
    "AWS::S3Outposts::Endpoint": {
        "service": "S3Outposts",
        "serviceAssetKey": "s3_on_outposts"
    },
    "AWS::SDB::Domain": {
        "service": "SDB"
    },
    "AWS::SES::ConfigurationSet": {
        "service": "SES",
        "serviceAssetKey": "ses"
    },
    "AWS::SES::ConfigurationSetEventDestination": {
        "service": "SES",
        "serviceAssetKey": "ses"
    },
    "AWS::SES::ContactList": {
        "service": "SES",
        "serviceAssetKey": "ses"
    },
    "AWS::SES::DedicatedIpPool": {
        "service": "SES",
        "serviceAssetKey": "ses"
    },
    "AWS::SES::EmailIdentity": {
        "service": "SES",
        "serviceAssetKey": "ses"
    },
    "AWS::SES::ReceiptFilter": {
        "service": "SES",
        "serviceAssetKey": "ses"
    },
    "AWS::SES::ReceiptRule": {
        "service": "SES",
        "serviceAssetKey": "ses",
        "generalIconKey": "rule",
        "drawioGeneralShape": "rule"
    },
    "AWS::SES::ReceiptRuleSet": {
        "service": "SES",
        "serviceAssetKey": "ses"
    },
    "AWS::SES::Template": {
        "service": "SES",
        "serviceAssetKey": "ses",
        "generalIconKey": "template",
        "drawioGeneralShape": "template"
    },
    "AWS::SES::VdmAttributes": {
        "service": "SES",
        "serviceAssetKey": "ses"
    },
    "AWS::SNS::Subscription": {
        "service": "SNS",
        "serviceAssetKey": "sns"
    },
    "AWS::SNS::Topic": {
        "service": "SNS",
        "serviceAssetKey": "sns",
        "assetKey": "sns_topic",
        "drawioShape": "topic"
    },
    "AWS::SNS::TopicPolicy": {
        "service": "SNS",
        "serviceAssetKey": "sns",
        "generalIconKey": "policy",
        "drawioGeneralShape": "addon"
    },
    "AWS::SQS::Queue": {
        "service": "SQS",
        "serviceAssetKey": "sqs",
        "assetKey": "sqs_queue",
        "drawioShape": "queue"
    },
    "AWS::SQS::QueuePolicy": {
        "service": "SQS",
        "serviceAssetKey": "sqs",
        "generalIconKey": "policy",
        "drawioGeneralShape": "addon"
    },
    "AWS::SSM::Association": {
        "service": "SSM",
        "serviceAssetKey": "ssm"
    },
    "AWS::SSM::Document": {
        "service": "SSM",
        "serviceAssetKey": "ssm"
    },
    "AWS::SSM::MaintenanceWindow": {
        "service": "SSM",
        "serviceAssetKey": "ssm"
    },
    "AWS::SSM::MaintenanceWindowTarget": {
        "service": "SSM",
        "serviceAssetKey": "ssm"
    },
    "AWS::SSM::MaintenanceWindowTask": {
        "service": "SSM",
        "serviceAssetKey": "ssm"
    },
    "AWS::SSM::Parameter": {
        "service": "SSM",
        "serviceAssetKey": "ssm"
    },
    "AWS::SSM::PatchBaseline": {
        "service": "SSM",
        "serviceAssetKey": "ssm"
    },
    "AWS::SSM::ResourceDataSync": {
        "service": "SSM",
        "serviceAssetKey": "ssm"
    },
    "AWS::SSM::ResourcePolicy": {
        "service": "SSM",
        "serviceAssetKey": "ssm",
        "generalIconKey": "policy",
        "drawioGeneralShape": "addon"
    },
    "AWS::SSMContacts::Contact": {
        "service": "SSMContacts",
        "serviceAssetKey": "ssm"
    },
    "AWS::SSMContacts::ContactChannel": {
        "service": "SSMContacts",
        "serviceAssetKey": "ssm"
    },
    "AWS::SSMIncidents::ReplicationSet": {
        "service": "SSMIncidents",
        "serviceAssetKey": "ssm"
    },
    "AWS::SSMIncidents::ResponsePlan": {
        "service": "SSMIncidents",
        "serviceAssetKey": "ssm"
    },
    "AWS::SSO::Assignment": {
        "service": "SSO",
        "serviceAssetKey": "iam_identity_center"
    },
    "AWS::SSO::InstanceAccessControlAttributeConfiguration": {
        "service": "SSO",
        "serviceAssetKey": "iam_identity_center",
        "generalIconKey": "config",
        "drawioGeneralShape": "gear"
    },
    "AWS::SSO::PermissionSet": {
        "service": "SSO",
        "serviceAssetKey": "iam_identity_center"
    },
    "AWS::SageMaker::App": {
        "service": "SageMaker",
        "serviceAssetKey": "sagemaker",
        "generalIconKey": "generic_application"
    },
    "AWS::SageMaker::AppImageConfig": {
        "service": "SageMaker",
        "serviceAssetKey": "sagemaker",
        "generalIconKey": "config",
        "drawioGeneralShape": "gear"
    },
    "AWS::SageMaker::CodeRepository": {
        "service": "SageMaker",
        "serviceAssetKey": "sagemaker"
    },
    "AWS::SageMaker::DataQualityJobDefinition": {
        "service": "SageMaker",
        "serviceAssetKey": "sagemaker"
    },
    "AWS::SageMaker::Device": {
        "service": "SageMaker",
        "serviceAssetKey": "sagemaker"
    },
    "AWS::SageMaker::DeviceFleet": {
        "service": "SageMaker",
        "serviceAssetKey": "sagemaker"
    },
    "AWS::SageMaker::Domain": {
        "service": "SageMaker",
        "serviceAssetKey": "sagemaker"
    },
    "AWS::SageMaker::Endpoint": {
        "service": "SageMaker",
        "serviceAssetKey": "sagemaker"
    },
    "AWS::SageMaker::EndpointConfig": {
        "service": "SageMaker",
        "serviceAssetKey": "sagemaker",
        "generalIconKey": "config",
        "drawioGeneralShape": "gear"
    },
    "AWS::SageMaker::FeatureGroup": {
        "service": "SageMaker",
        "serviceAssetKey": "sagemaker"
    },
    "AWS::SageMaker::Image": {
        "service": "SageMaker",
        "serviceAssetKey": "sagemaker"
    },
    "AWS::SageMaker::ImageVersion": {
        "service": "SageMaker",
        "serviceAssetKey": "sagemaker"
    },
    "AWS::SageMaker::InferenceExperiment": {
        "service": "SageMaker",
        "serviceAssetKey": "sagemaker"
    },
    "AWS::SageMaker::Model": {
        "service": "SageMaker",
        "serviceAssetKey": "sagemaker",
        "assetKey": "sagemaker_model",
        "generalIconKey": "document",
        "drawioShape": "sagemaker_model"
    },
    "AWS::SageMaker::ModelBiasJobDefinition": {
        "service": "SageMaker",
        "serviceAssetKey": "sagemaker"
    },
    "AWS::SageMaker::ModelCard": {
        "service": "SageMaker",
        "serviceAssetKey": "sagemaker"
    },
    "AWS::SageMaker::ModelExplainabilityJobDefinition": {
        "service": "SageMaker",
        "serviceAssetKey": "sagemaker"
    },
    "AWS::SageMaker::ModelPackage": {
        "service": "SageMaker",
        "serviceAssetKey": "sagemaker"
    },
    "AWS::SageMaker::ModelPackageGroup": {
        "service": "SageMaker",
        "serviceAssetKey": "sagemaker"
    },
    "AWS::SageMaker::ModelQualityJobDefinition": {
        "service": "SageMaker",
        "serviceAssetKey": "sagemaker"
    },
    "AWS::SageMaker::MonitoringSchedule": {
        "service": "SageMaker",
        "serviceAssetKey": "sagemaker"
    },
    "AWS::SageMaker::NotebookInstance": {
        "service": "SageMaker",
        "serviceAssetKey": "sagemaker"
    },
    "AWS::SageMaker::NotebookInstanceLifecycleConfig": {
        "service": "SageMaker",
        "serviceAssetKey": "sagemaker",
        "generalIconKey": "config",
        "drawioGeneralShape": "gear"
    },
    "AWS::SageMaker::Pipeline": {
        "service": "SageMaker",
        "serviceAssetKey": "sagemaker",
        "assetKey": "iot_analytics_pipeline",
        "drawioShape": "iot_analytics_pipeline"
    },
    "AWS::SageMaker::Project": {
        "service": "SageMaker",
        "serviceAssetKey": "sagemaker"
    },
    "AWS::SageMaker::Space": {
        "service": "SageMaker",
        "serviceAssetKey": "sagemaker"
    },
    "AWS::SageMaker::UserProfile": {
        "service": "SageMaker",
        "serviceAssetKey": "sagemaker"
    },
    "AWS::SageMaker::Workteam": {
        "service": "SageMaker",
        "serviceAssetKey": "sagemaker"
    },
    "AWS::Scheduler::Schedule": {
        "service": "Scheduler"
    },
    "AWS::Scheduler::ScheduleGroup": {
        "service": "Scheduler"
    },
    "AWS::SecretsManager::ResourcePolicy": {
        "service": "SecretsManager",
        "serviceAssetKey": "secrets_manager",
        "generalIconKey": "policy",
        "drawioGeneralShape": "addon"
    },
    "AWS::SecretsManager::RotationSchedule": {
        "service": "SecretsManager",
        "serviceAssetKey": "secrets_manager"
    },
    "AWS::SecretsManager::Secret": {
        "service": "SecretsManager",
        "serviceAssetKey": "secrets_manager"
    },
    "AWS::SecretsManager::SecretTargetAttachment": {
        "service": "SecretsManager",
        "serviceAssetKey": "secrets_manager",
        "generalIconKey": "attachment",
        "drawioGeneralShape": "transit_gateway_attachment"
    },
    "AWS::SecurityHub::Hub": {
        "service": "SecurityHub",
        "serviceAssetKey": "security_hub"
    },
    "AWS::Serverless::Api": {
        "service": "Serverless",
        "serviceAssetKey": "serverless_application_repository"
    },
    "AWS::Serverless::Application": {
        "service": "Serverless",
        "serviceAssetKey": "serverless_application_repository",
        "assetKey": "elastic_beanstalk_application",
        "generalIconKey": "generic_application",
        "drawioShape": "application"
    },
    "AWS::Serverless::Function": {
        "service": "Serverless",
        "serviceAssetKey": "serverless_application_repository",
        "assetKey": "lambda_lambda_function"
    },
    "AWS::Serverless::HttpApi": {
        "service": "Serverless",
        "serviceAssetKey": "serverless_application_repository"
    },
    "AWS::Serverless::LayerVersion": {
        "service": "Serverless",
        "serviceAssetKey": "serverless_application_repository"
    },
    "AWS::Serverless::SimpleTable": {
        "service": "Serverless",
        "serviceAssetKey": "serverless_application_repository"
    },
    "AWS::Serverless::StateMachine": {
        "service": "Serverless",
        "serviceAssetKey": "serverless_application_repository"
    },
    "AWS::ServiceCatalog::AcceptedPortfolioShare": {
        "service": "ServiceCatalog",
        "serviceAssetKey": "service_catalog"
    },
    "AWS::ServiceCatalog::CloudFormationProduct": {
        "service": "ServiceCatalog",
        "serviceAssetKey": "service_catalog"
    },
    "AWS::ServiceCatalog::CloudFormationProvisionedProduct": {
        "service": "ServiceCatalog",
        "serviceAssetKey": "service_catalog"
    },
    "AWS::ServiceCatalog::LaunchNotificationConstraint": {
        "service": "ServiceCatalog",
        "serviceAssetKey": "service_catalog"
    },
    "AWS::ServiceCatalog::LaunchRoleConstraint": {
        "service": "ServiceCatalog",
        "serviceAssetKey": "service_catalog"
    },
    "AWS::ServiceCatalog::LaunchTemplateConstraint": {
        "service": "ServiceCatalog",
        "serviceAssetKey": "service_catalog",
        "generalIconKey": "template",
        "drawioGeneralShape": "template"
    },
    "AWS::ServiceCatalog::Portfolio": {
        "service": "ServiceCatalog",
        "serviceAssetKey": "service_catalog"
    },
    "AWS::ServiceCatalog::PortfolioPrincipalAssociation": {
        "service": "ServiceCatalog",
        "serviceAssetKey": "service_catalog"
    },
    "AWS::ServiceCatalog::PortfolioProductAssociation": {
        "service": "ServiceCatalog",
        "serviceAssetKey": "service_catalog"
    },
    "AWS::ServiceCatalog::PortfolioShare": {
        "service": "ServiceCatalog",
        "serviceAssetKey": "service_catalog"
    },
    "AWS::ServiceCatalog::ResourceUpdateConstraint": {
        "service": "ServiceCatalog",
        "serviceAssetKey": "service_catalog"
    },
    "AWS::ServiceCatalog::ServiceAction": {
        "service": "ServiceCatalog",
        "serviceAssetKey": "service_catalog"
    },
    "AWS::ServiceCatalog::ServiceActionAssociation": {
        "service": "ServiceCatalog",
        "serviceAssetKey": "service_catalog"
    },
    "AWS::ServiceCatalog::StackSetConstraint": {
        "service": "ServiceCatalog",
        "serviceAssetKey": "service_catalog"
    },
    "AWS::ServiceCatalog::TagOption": {
        "service": "ServiceCatalog",
        "serviceAssetKey": "service_catalog"
    },
    "AWS::ServiceCatalog::TagOptionAssociation": {
        "service": "ServiceCatalog",
        "serviceAssetKey": "service_catalog"
    },
    "AWS::ServiceCatalogAppRegistry::Application": {
        "service": "ServiceCatalogAppRegistry",
        "serviceAssetKey": "service_catalog",
        "assetKey": "elastic_beanstalk_application",
        "generalIconKey": "generic_application",
        "drawioShape": "application"
    },
    "AWS::ServiceCatalogAppRegistry::AttributeGroup": {
        "service": "ServiceCatalogAppRegistry",
        "serviceAssetKey": "service_catalog"
    },
    "AWS::ServiceCatalogAppRegistry::AttributeGroupAssociation": {
        "service": "ServiceCatalogAppRegistry",
        "serviceAssetKey": "service_catalog"
    },
    "AWS::ServiceCatalogAppRegistry::ResourceAssociation": {
        "service": "ServiceCatalogAppRegistry",
        "serviceAssetKey": "service_catalog"
    },
    "AWS::ServiceDiscovery::HttpNamespace": {
        "service": "ServiceDiscovery",
        "serviceAssetKey": "application_discovery_service"
    },
    "AWS::ServiceDiscovery::Instance": {
        "service": "ServiceDiscovery",
        "serviceAssetKey": "application_discovery_service",
        "assetKey": "ec2_instance",
        "drawioShape": "instance"
    },
    "AWS::ServiceDiscovery::PrivateDnsNamespace": {
        "service": "ServiceDiscovery",
        "serviceAssetKey": "application_discovery_service"
    },
    "AWS::ServiceDiscovery::PublicDnsNamespace": {
        "service": "ServiceDiscovery",
        "serviceAssetKey": "application_discovery_service"
    },
    "AWS::ServiceDiscovery::Service": {
        "service": "ServiceDiscovery",
        "serviceAssetKey": "application_discovery_service",
        "assetKey": "ecs_service",
        "drawioShape": "ecs"
    },
    "AWS::Signer::ProfilePermission": {
        "service": "Signer",
        "serviceAssetKey": "signer",
        "generalIconKey": "policy",
        "drawioGeneralShape": "addon"
    },
    "AWS::Signer::SigningProfile": {
        "service": "Signer",
        "serviceAssetKey": "signer"
    },
    "AWS::SimSpaceWeaver::Simulation": {
        "service": "SimSpaceWeaver"
    },
    "AWS::StepFunctions::Activity": {
        "service": "StepFunctions",
        "serviceAssetKey": "step_functions"
    },
    "AWS::StepFunctions::StateMachine": {
        "service": "StepFunctions",
        "serviceAssetKey": "step_functions"
    },
    "AWS::SupportApp::AccountAlias": {
        "service": "SupportApp",
        "serviceAssetKey": "support"
    },
    "AWS::SupportApp::SlackChannelConfiguration": {
        "service": "SupportApp",
        "serviceAssetKey": "support",
        "generalIconKey": "config",
        "drawioGeneralShape": "gear"
    },
    "AWS::SupportApp::SlackWorkspaceConfiguration": {
        "service": "SupportApp",
        "serviceAssetKey": "support",
        "generalIconKey": "config",
        "drawioGeneralShape": "gear"
    },
    "AWS::Synthetics::Canary": {
        "service": "Synthetics",
        "serviceAssetKey": "cloudwatch"
    },
    "AWS::Synthetics::Group": {
        "service": "Synthetics",
        "serviceAssetKey": "cloudwatch"
    },
    "AWS::SystemsManagerSAP::Application": {
        "service": "SystemsManagerSAP",
        "assetKey": "elastic_beanstalk_application",
        "generalIconKey": "generic_application",
        "drawioShape": "application"
    },
    "AWS::Timestream::Database": {
        "service": "Timestream",
        "serviceAssetKey": "timestream",
        "generalIconKey": "generic_database"
    },
    "AWS::Timestream::ScheduledQuery": {
        "service": "Timestream",
        "serviceAssetKey": "timestream"
    },
    "AWS::Timestream::Table": {
        "service": "Timestream",
        "serviceAssetKey": "timestream",
        "assetKey": "dynamodb_table",
        "drawioShape": "table"
    },
    "AWS::Transfer::Agreement": {
        "service": "Transfer",
        "serviceAssetKey": "transfer_family"
    },
    "AWS::Transfer::Certificate": {
        "service": "Transfer",
        "serviceAssetKey": "transfer_family",
        "assetKey": "iot_core_certificate",
        "generalIconKey": "ssl_padlock",
        "drawioGeneralShape": "ssl_padlock"
    },
    "AWS::Transfer::Connector": {
        "service": "Transfer",
        "serviceAssetKey": "transfer_family"
    },
    "AWS::Transfer::Profile": {
        "service": "Transfer",
        "serviceAssetKey": "transfer_family"
    },
    "AWS::Transfer::Server": {
        "service": "Transfer",
        "serviceAssetKey": "transfer_family",
        "generalIconKey": "traditional_server",
        "drawioGeneralShape": "traditional_server"
    },
    "AWS::Transfer::User": {
        "service": "Transfer",
        "serviceAssetKey": "transfer_family",
        "generalIconKey": "user",
        "drawioGeneralShape": "user"
    },
    "AWS::Transfer::Workflow": {
        "service": "Transfer",
        "serviceAssetKey": "transfer_family"
    },
    "AWS::VoiceID::Domain": {
        "service": "VoiceID",
        "serviceAssetKey": "connect"
    },
    "AWS::VpcLattice::AccessLogSubscription": {
        "service": "VpcLattice",
        "serviceAssetKey": "vpc"
    },
    "AWS::VpcLattice::AuthPolicy": {
        "service": "VpcLattice",
        "serviceAssetKey": "vpc",
        "generalIconKey": "policy",
        "drawioGeneralShape": "addon"
    },
    "AWS::VpcLattice::Listener": {
        "service": "VpcLattice",
        "serviceAssetKey": "vpc"
    },
    "AWS::VpcLattice::ResourcePolicy": {
        "service": "VpcLattice",
        "serviceAssetKey": "vpc",
        "generalIconKey": "policy",
        "drawioGeneralShape": "addon"
    },
    "AWS::VpcLattice::Rule": {
        "service": "VpcLattice",
        "serviceAssetKey": "vpc",
        "assetKey": "eventbridge_rule",
        "generalIconKey": "rule",
        "drawioGeneralShape": "rule"
    },
    "AWS::VpcLattice::Service": {
        "service": "VpcLattice",
        "serviceAssetKey": "vpc",
        "assetKey": "ecs_service",
        "drawioShape": "ecs"
    },
    "AWS::VpcLattice::ServiceNetwork": {
        "service": "VpcLattice",
        "serviceAssetKey": "vpc"
    },
    "AWS::VpcLattice::ServiceNetworkServiceAssociation": {
        "service": "VpcLattice",
        "serviceAssetKey": "vpc"
    },
    "AWS::VpcLattice::ServiceNetworkVpcAssociation": {
        "service": "VpcLattice",
        "serviceAssetKey": "vpc"
    },
    "AWS::VpcLattice::TargetGroup": {
        "service": "VpcLattice",
        "serviceAssetKey": "vpc"
    },
    "AWS::WAF::ByteMatchSet": {
        "service": "WAF",
        "serviceAssetKey": "waf"
    },
    "AWS::WAF::IPSet": {
        "service": "WAF",
        "serviceAssetKey": "waf"
    },
    "AWS::WAF::Rule": {
        "service": "WAF",
        "serviceAssetKey": "waf",
        "assetKey": "eventbridge_rule",
        "generalIconKey": "rule",
        "drawioGeneralShape": "rule"
    },
    "AWS::WAF::SizeConstraintSet": {
        "service": "WAF",
        "serviceAssetKey": "waf"
    },
    "AWS::WAF::SqlInjectionMatchSet": {
        "service": "WAF",
        "serviceAssetKey": "waf"
    },
    "AWS::WAF::WebACL": {
        "service": "WAF",
        "serviceAssetKey": "waf"
    },
    "AWS::WAF::XssMatchSet": {
        "service": "WAF",
        "serviceAssetKey": "waf"
    },
    "AWS::WAFRegional::ByteMatchSet": {
        "service": "WAFRegional",
        "serviceAssetKey": "waf"
    },
    "AWS::WAFRegional::GeoMatchSet": {
        "service": "WAFRegional",
        "serviceAssetKey": "waf"
    },
    "AWS::WAFRegional::IPSet": {
        "service": "WAFRegional",
        "serviceAssetKey": "waf"
    },
    "AWS::WAFRegional::RateBasedRule": {
        "service": "WAFRegional",
        "serviceAssetKey": "waf",
        "generalIconKey": "rule",
        "drawioGeneralShape": "rule"
    },
    "AWS::WAFRegional::RegexPatternSet": {
        "service": "WAFRegional",
        "serviceAssetKey": "waf"
    },
    "AWS::WAFRegional::Rule": {
        "service": "WAFRegional",
        "serviceAssetKey": "waf",
        "assetKey": "eventbridge_rule",
        "generalIconKey": "rule",
        "drawioGeneralShape": "rule"
    },
    "AWS::WAFRegional::SizeConstraintSet": {
        "service": "WAFRegional",
        "serviceAssetKey": "waf"
    },
    "AWS::WAFRegional::SqlInjectionMatchSet": {
        "service": "WAFRegional",
        "serviceAssetKey": "waf"
    },
    "AWS::WAFRegional::WebACL": {
        "service": "WAFRegional",
        "serviceAssetKey": "waf"
    },
    "AWS::WAFRegional::WebACLAssociation": {
        "service": "WAFRegional",
        "serviceAssetKey": "waf"
    },
    "AWS::WAFRegional::XssMatchSet": {
        "service": "WAFRegional",
        "serviceAssetKey": "waf"
    },
    "AWS::WAFv2::IPSet": {
        "service": "WAFv2",
        "serviceAssetKey": "waf"
    },
    "AWS::WAFv2::LoggingConfiguration": {
        "service": "WAFv2",
        "serviceAssetKey": "waf",
        "generalIconKey": "config",
        "drawioGeneralShape": "gear"
    },
    "AWS::WAFv2::RegexPatternSet": {
        "service": "WAFv2",
        "serviceAssetKey": "waf"
    },
    "AWS::WAFv2::RuleGroup": {
        "service": "WAFv2",
        "serviceAssetKey": "waf"
    },
    "AWS::WAFv2::WebACL": {
        "service": "WAFv2",
        "serviceAssetKey": "waf"
    },
    "AWS::WAFv2::WebACLAssociation": {
        "service": "WAFv2",
        "serviceAssetKey": "waf"
    },
    "AWS::Wisdom::Assistant": {
        "service": "Wisdom",
        "serviceAssetKey": "connect"
    },
    "AWS::Wisdom::AssistantAssociation": {
        "service": "Wisdom",
        "serviceAssetKey": "connect"
    },
    "AWS::Wisdom::KnowledgeBase": {
        "service": "Wisdom",
        "serviceAssetKey": "connect"
    },
    "AWS::WorkSpaces::ConnectionAlias": {
        "service": "WorkSpaces",
        "serviceAssetKey": "workspaces"
    },
    "AWS::WorkSpaces::Workspace": {
        "service": "WorkSpaces",
        "serviceAssetKey": "workspaces"
    },
    "AWS::XRay::Group": {
        "service": "XRay",
        "serviceAssetKey": "x_ray"
    },
    "AWS::XRay::ResourcePolicy": {
        "service": "XRay",
        "serviceAssetKey": "x_ray",
        "generalIconKey": "policy",
        "drawioGeneralShape": "addon"
    },
    "AWS::XRay::SamplingRule": {
        "service": "XRay",
        "serviceAssetKey": "x_ray",
        "generalIconKey": "rule",
        "drawioGeneralShape": "rule"
    },
    "Alexa::ASK::Skill": {
        "service": "ASK",
        "serviceAssetKey": "alexa_for_business"
    }
};
/** @internal */
exports.DrawioShapeToAssetMapping = {
    "A1_INSTANCE": "compute/ec2/instance/a1",
    "ACCESS_ANALYZER": "security_identity_compliance/iam/iam_access_analyzer",
    "ACTION": "internet_of_things/iot_core/action",
    "ACTIVATE": "customer_enablement/activate/service_icon",
    "ACTUATOR": "internet_of_things/iot_core/actuator",
    "ADDON": "security_identity_compliance/iam/add_on",
    "AD_CONNECTOR": "security_identity_compliance/directory_service/ad_connector",
    "AGENT": "security_identity_compliance/inspector/agent",
    "AGENT2": "migration_transfer/datasync/agent",
    "ALARM": "management_governance/cloudwatch/alarm",
    "ALEXA_ENABLED_DEVICE": false,
    "ALEXA_FOR_BUSINESS": "business_applications/alexa_for_business/service_icon",
    "ALEXA_SKILL": false,
    "ALEXA_SMART_HOME_SKILL": false,
    "ALEXA_VOICE_SERVICE": false,
    "ALL_PRODUCTS": false,
    "AMI": "compute/ec2/ami",
    "AMPLIFY": "front_end_web_mobile/amplify/service_icon",
    "AMPLIFY_AWS_AMPLIFY_STUDIO": "front_end_web_mobile/amplify/service_icon",
    "ANALYTICS": "analytics/category_icon",
    "APACHE_MXNET_ON_AWS": "machine_learning/apache_mxnet_on_aws/service_icon",
    "API_GATEWAY": "application_integration/api_gateway/service_icon",
    "APPFLOW": "application_integration/appflow/service_icon",
    "APPLICATION": "compute/elastic_beanstalk/application",
    "APPLICATION_AUTO_SCALING": "management_governance/application_auto_scaling/service_icon",
    "APPLICATION_COST_PROFILER": "cloud_financial_management/application_cost_profiler/service_icon",
    "APPLICATION_DISCOVERY_SERVICE": "migration_transfer/application_discovery_service/service_icon",
    "APPLICATION_INTEGRATION": "application_integration/category_icon",
    "APPLICATION_LOAD_BALANCER": "networking_content_delivery/elastic_load_balancing/application_load_balancer",
    "APPS": "management_governance/opsworks/apps",
    "APPSTREAM_20": "end_user_computing/appstream/service_icon",
    "APPSYNC": "application_integration/appsync/service_icon",
    "APP_CONFIG": "management_governance/appconfig/service_icon",
    "APP_MESH": "networking_content_delivery/app_mesh/service_icon",
    "APP_RUNNER": "compute/app_runner/service_icon",
    "APP_WIZARD": false,
    "ARCHIVE": "storage/s3_glacier/archive",
    "ARTIFACT": "security_identity_compliance/artifact/service_icon",
    "AR_VR": "vr_ar/category_icon",
    "ATHENA": "analytics/athena/service_icon",
    "ATTRIBUTE": "database/dynamodb/attribute",
    "ATTRIBUTES": "database/dynamodb/attributes",
    "AUDIT_MANAGER": "security_identity_compliance/audit_manager/service_icon",
    "AUGMENTED_AI": false,
    "AURORA": "database/aurora/service_icon",
    "AURORA_INSTANCE": "database/aurora/service_icon",
    "AURORA_INSTANCE_ALT": "database/aurora/service_icon",
    "AUTOMATION": "management_governance/ssm/automation",
    "AUTOSCALING": "management_governance/auto_scaling/service_icon",
    "AUTO_SCALING": "management_governance/auto_scaling/service_icon",
    "AUTO_SCALING2": "management_governance/auto_scaling/service_icon",
    "AUTO_SCALING3": "management_governance/auto_scaling/service_icon",
    "AWS_CLOUD": false,
    "BACKINT_AGENT": "management_governance/backint_agent/service_icon",
    "BACKUP": "storage/backup/service_icon",
    "BACKUP_AWS_BACKUP_SUPPORT_FOR_AMAZON_S3": "storage/backup/service_icon",
    "BACKUP_AWS_BACKUP_SUPPORT_FOR_VMWARE_WORKLOADS": "storage/backup/service_icon",
    "BACKUP_BACKUP_PLAN": "storage/backup/backup_plan",
    "BACKUP_BACKUP_RESTORE": "storage/backup/backup_restore",
    "BACKUP_COMPLIANCE_REPORTING": "storage/backup/compliance_reporting",
    "BACKUP_COMPUTE": "storage/backup/compute",
    "BACKUP_DATABASE": "storage/backup/database",
    "BACKUP_GATEWAY": "storage/backup/gateway",
    "BACKUP_PLAN": "storage/backup/service_icon",
    "BACKUP_RECOVERY_POINT_OBJECTIVE": "storage/backup/recovery_point_objective",
    "BACKUP_RECOVERY_TIME_OBJECTIVE": "storage/backup/recovery_time_objective",
    "BACKUP_RESTORE": "storage/backup/service_icon",
    "BACKUP_STORAGE": "storage/backup/storage",
    "BACKUP_VAULT": "storage/backup/service_icon",
    "BACKUP_VIRTUAL_MACHINE": "storage/backup/virtual_machine",
    "BACKUP_VIRTUAL_MACHINE_MONITOR": "storage/backup/virtual_machine_monitor",
    "BANK": "internet_of_things/thing/bank",
    "BATCH": "compute/batch/service_icon",
    "BLOCKCHAIN": "blockchain/category_icon",
    "BLOCKCHAIN_RESOURCE": false,
    "BOTTLEROCKET": "compute/bottlerocket/service_icon",
    "BRAKET": "quantum_technologies/braket/service_icon",
    "BRAKET_CHANDELIER": "quantum_technologies/braket/chandelier",
    "BRAKET_CHIP": "quantum_technologies/braket/chip",
    "BRAKET_NOISE_SIMULATOR": "quantum_technologies/braket/noise_simulator",
    "BRAKET_QPU": "quantum_technologies/braket/qpu",
    "BRAKET_SIMULATOR": "quantum_technologies/braket/simulator",
    "BRAKET_SIMULATOR_1": "quantum_technologies/braket/simulator_1",
    "BRAKET_SIMULATOR_2": "quantum_technologies/braket/simulator_2",
    "BRAKET_SIMULATOR_3": "quantum_technologies/braket/simulator_3",
    "BRAKET_SIMULATOR_4": "quantum_technologies/braket/simulator_4",
    "BRAKET_STATE_VECTOR": "quantum_technologies/braket/state_vector",
    "BRAKET_TENSOR_NETWORK": "quantum_technologies/braket/tensor_network",
    "BUCKET": "storage/s3/bucket",
    "BUCKET_WITH_OBJECTS": "storage/s3/bucket_with_objects",
    "BUDGETS": "cloud_financial_management/budgets/service_icon",
    "BUDGETS_2": "cloud_financial_management/budgets/service_icon",
    "BUSINESS_APPLICATION": "business_applications/category_icon",
    "BYCICLE": false,
    "C4_INSTANCE": "compute/ec2/instance/c4",
    "C5A": "compute/ec2/instance/c5a",
    "C5AD": "compute/ec2/instance/c5ad",
    "C5D": "compute/ec2/instance/c5d",
    "C5N_INSTANCE": "compute/ec2/instance/c5n",
    "C5_INSTANCE": "compute/ec2/instance/c5",
    "C6GD": "compute/ec2/instance/c6gd",
    "C6G_INSTANCE": "compute/ec2/instance/c6g",
    "CACHED_VOLUME": "storage/storage_gateway/cached_volume",
    "CACHE_NODE": "database/elasticache/cache_node",
    "CAMERA": "general/camera",
    "CAMERA2": false,
    "CAR": "internet_of_things/thing/car",
    "CART": "internet_of_things/thing/cart",
    "CERTIFICATE_MANAGER": "security_identity_compliance/certificate_manager/service_icon",
    "CERTIFICATE_MANAGER_2": "security_identity_compliance/certificate_manager/service_icon",
    "CERTIFICATE_MANAGER_3": "security_identity_compliance/certificate_manager/service_icon",
    "CHANGE_SET": "management_governance/cloudformation/change_set",
    "CHATBOT": "management_governance/chatbot/service_icon",
    "CHECKLIST": "management_governance/trusted_advisor/checklist",
    "CHECKLIST_COST": "management_governance/trusted_advisor/checklist_cost",
    "CHECKLIST_FAULT_TOLERANT": "management_governance/trusted_advisor/checklist_fault_tolerant",
    "CHECKLIST_PERFORMANCE": "management_governance/trusted_advisor/checklist_performance",
    "CHECKLIST_SECURITY": "management_governance/trusted_advisor/checklist_security",
    "CHIME": "business_applications/chime/service_icon",
    "CHIME_SDK": "business_applications/chime_sdk/service_icon",
    "CLASSIC_LOAD_BALANCER": "networking_content_delivery/elastic_load_balancing/classic_load_balancer",
    "CLIENT": "general/client",
    "CLIENT_VPN": "networking_content_delivery/client_vpn/service_icon",
    "CLOUD9": "developer_tools/cloud9/service_icon",
    "CLOUDENDURE_DISASTER_RECOVERY": "storage/cloudendure_disaster_recovery/service_icon",
    "CLOUDENDURE_MIGRATION": false,
    "CLOUDFORMATION": "management_governance/cloudformation/service_icon",
    "CLOUDFRONT": "networking_content_delivery/cloudfront/service_icon",
    "CLOUDFRONT_FUNCTIONS": "networking_content_delivery/cloudfront/functions",
    "CLOUDHSM": "security_identity_compliance/cloudhsm/service_icon",
    "CLOUDSEARCH": "analytics/cloudsearch/service_icon",
    "CLOUDSEARCH2": "analytics/cloudsearch/service_icon",
    "CLOUDSHELL": "developer_tools/cloudshell/service_icon",
    "CLOUDTRAIL": "management_governance/cloudtrail/service_icon",
    "CLOUDWATCH": "management_governance/cloudwatch/service_icon",
    "CLOUDWATCH_2": "management_governance/cloudwatch/service_icon",
    "CLOUDWATCH_EVIDENTLY": "management_governance/cloudwatch/evidently",
    "CLOUDWATCH_METRICS_INSIGHTS": "management_governance/cloudwatch/metrics_insights",
    "CLOUDWATCH_RUM": "management_governance/cloudwatch/rum",
    "CLOUDWATCH_SYNTHETICS": "management_governance/cloudwatch/synthetics",
    "CLOUD_CONTROL_API": "developer_tools/cloud_control_api/service_icon",
    "CLOUD_DEVELOPMENT_KIT": "developer_tools/cloud_development_kit/service_icon",
    "CLOUD_DIGITAL_INTERFACE": false,
    "CLOUD_DIRECTORY": "networking_content_delivery/cloud_directory/service_icon",
    "CLOUD_EXTENSION_ROS": false,
    "CLOUD_MAP": "networking_content_delivery/cloud_map/service",
    "CLOUD_MAP_RESOURCE": "networking_content_delivery/cloud_map/resource",
    "CLOUD_WAN": "networking_content_delivery/cloud_wan/service_icon",
    "CLOUD_WAN_SEGMENT_NETWORK": "networking_content_delivery/cloud_wan/segment_network",
    "CLOUD_WAN_VIRTUAL_POP": "networking_content_delivery/cloud_wan/virtual_pop",
    "CLUSTER": "analytics/emr/cluster",
    "CODEARTIFACT": "developer_tools/codeartifact/service_icon",
    "CODEBUILD": "developer_tools/codebuild/service_icon",
    "CODECOMMIT": "developer_tools/codecommit/service_icon",
    "CODEDEPLOY": "developer_tools/codedeploy/service_icon",
    "CODEGURU": "machine_learning/codeguru/service_icon",
    "CODEGURU_2": "machine_learning/codeguru/service_icon",
    "CODEPIPELINE": "developer_tools/codepipeline/service_icon",
    "CODESTAR": "developer_tools/codestar/service_icon",
    "COFFEE_POT": "internet_of_things/thing/coffee_pot",
    "COGNITO": "security_identity_compliance/cognito/service_icon",
    "COMMAND_LINE_INTERFACE": "developer_tools/command_line_interface/service_icon",
    "COMPREHEND": "machine_learning/comprehend/service_icon",
    "COMPREHEND_MEDICAL": "machine_learning/comprehend_medical/service_icon",
    "COMPUTE": "compute/category_icon",
    "COMPUTE_OPTIMIZER": "compute/compute_optimizer/service_icon",
    "CONFIG": "management_governance/config/service_icon",
    "CONNECT": "internet_of_things/iot_greengrass/connector",
    "CONNECTOR": "business_applications/connect/service_icon",
    "CONTAINERS": "containers/category_icon",
    "CONTAINER_1": "containers/ecs/container_1",
    "CONTAINER_2": "containers/ecs/container_2",
    "CONTAINER_3": "containers/ecs/container_3",
    "CONTAINER_REGISTRY_IMAGE": "containers/ecr/image",
    "CONTROL_TOWER": "management_governance/control_tower/service_icon",
    "CORPORATE_DATA_CENTER": false,
    "CORPORATE_DATA_CENTER2": false,
    "CORRETTO": "developer_tools/corretto/service_icon",
    "COST_AND_USAGE_REPORT": "cloud_financial_management/cost_and_usage_report/service_icon",
    "COST_EXPLORER": "cloud_financial_management/cost_explorer/service_icon",
    "COST_MANAGEMENT": "cloud_financial_management/category_icon",
    "CUSTOMER_ENABLEMENT": "customer_enablement/category_icon",
    "CUSTOMER_ENGAGEMENT": "customer_enablement/category_icon",
    "CUSTOMER_GATEWAY": "networking_content_delivery/vpc/customer_gateway",
    "CUSTOM_BILLING_MANAGER": false,
    "CUSTOM_EVENT_BUS_RESOURCE": "application_integration/eventbridge/custom_event_bus",
    "D2_INSTANCE": "compute/ec2/instance/d2",
    "D3EN_INSTANCE": "compute/ec2/instance/d3en",
    "D3_INSTANCE": "compute/ec2/instance/d3",
    "DATABASE": "database/category_icon",
    "DATABASE_MIGRATION_SERVICE": "database/database_migration_service/service_icon",
    "DATABASE_MIGRATION_WORKFLOW_JOB": "database/database_migration_service/database_migration_workflow_job",
    "DATASYNC": "migration_transfer/datasync/service_icon",
    "DATA_ENCRYPTION_KEY": "security_identity_compliance/iam/data_encryption_key",
    "DATA_EXCHANGE": "analytics/data_exchange/service_icon",
    "DATA_EXCHANGE_FOR_APIS": "analytics/data_exchange/service_icon",
    "DATA_LAKE_RESOURCE_ICON": false,
    "DATA_PIPELINE": "analytics/data_pipeline/service_icon",
    "DATA_SET": "internet_of_things/iot_analytics/dataset",
    "DB_INSTANCE": "compute/ec2/instance/db",
    "DB_INSTANCE_READ_REPLICA": false,
    "DB_INSTANCE_STANDBY": false,
    "DB_ON_INSTANCE": false,
    "DB_ON_INSTANCE2": false,
    "DEEPCOMPOSER": "machine_learning/deepcomposer/service_icon",
    "DEEPLENS": "machine_learning/deeplens/service_icon",
    "DEEPRACER": "machine_learning/deepracer/service_icon",
    "DEEP_LEARNING_AMIS": "machine_learning/deep_learning_amis/service_icon",
    "DEEP_LEARNING_CONTAINERS": "machine_learning/deep_learning_containers/service_icon",
    "DEFAULT_EVENT_BUS_RESOURCE": "application_integration/eventbridge/default_event_bus",
    "DENSE_COMPUTE_NODE": "analytics/redshift/dense_compute_node",
    "DENSE_STORAGE_NODE": "analytics/redshift/dense_storage_node",
    "DEPLOYMENT": "compute/elastic_beanstalk/deployment",
    "DEPLOYMENTS": "management_governance/opsworks/deployments",
    "DESIRED_STATE": "internet_of_things/iot_core/desired_state",
    "DESKTOP_AND_APP_STREAMING": "end_user_computing/category_icon",
    "DETECTIVE": "security_identity_compliance/detective/service_icon",
    "DEVELOPER_TOOLS": "developer_tools/category_icon",
    "DEVELOPMENT_ENVIRONMENT": "robotics/robomaker/development_environment",
    "DEVICE_FARM": "front_end_web_mobile/device_farm/service_icon",
    "DEVOPS_GURU": "machine_learning/devops_guru/service_icon",
    "DEVOPS_GURU_INSIGHTS": "machine_learning/devops_guru/insights",
    "DIRECTORY_SERVICE": "security_identity_compliance/directory_service/service_icon",
    "DIRECT_CONNECT": "networking_content_delivery/direct_connect/service_icon",
    "DISK": "general/disk",
    "DISTRO_FOR_OPENTELEMETRY": "management_governance/distro_for_opentelemetry/service_icon",
    "DOCUMENTDB_WITH_MONGODB_COMPATIBILITY": "database/documentdb/service_icon",
    "DOCUMENTS": "general/documents",
    "DOCUMENTS2": false,
    "DOOR_LOCK": "internet_of_things/thing/door_lock",
    "DOWNLOAD_DISTRIBUTION": "networking_content_delivery/cloudfront/download_distribution",
    "DYNAMODB": "database/dynamodb/service_icon",
    "DYNAMODB_DAX": "database/dynamodb/service_icon",
    "DYNAMODB_STANDARD_ACCESS_TABLE_CLASS": "database/dynamodb/standard_access_table_class",
    "DYNAMODB_STANDARD_INFREQUENT_ACCESS_TABLE_CLASS": "database/dynamodb/standard_infrequent_access_table_class",
    "DYNAMODB_STREAM": "database/dynamodb/stream",
    "EC2": "compute/ec2/service_icon",
    "EC2_AWS_MICROSERVICE_EXTRACTOR_FOR_NET": "compute/ec2/service_icon",
    "EC2_C6A_INSTANCE": "compute/ec2/instance/c6a",
    "EC2_C6GN_INSTANCE": "compute/ec2/instance/c6gn",
    "EC2_C6I_INSTANCE": "compute/ec2/instance/c6i",
    "EC2_C7G_INSTANCE": "compute/ec2/instance/c7g",
    "EC2_DL1_INSTANCE": "compute/ec2/instance/dl1",
    "EC2_G5G_INSTANCE": "compute/ec2/instance/g5g",
    "EC2_G5_INSTANCE": "compute/ec2/instance/g5",
    "EC2_HPC6A_INSTANCE": "compute/ec2/instance/hpc6a",
    "EC2_I4I_INSTANCE": "compute/ec2/instance/i4i",
    "EC2_IM4GN_INSTANCE": "compute/ec2/instance/im4gn",
    "EC2_IMAGE_BUILDER": "compute/ec2_image_builder/service_icon",
    "EC2_INSTANCE_CONTENTS": "compute/ec2/service_icon",
    "EC2_IS4GEN_INSTANCE": "compute/ec2/instance/is4gen",
    "EC2_M1_MAC_INSTANCE": "compute/ec2/instance/m1_mac",
    "EC2_M6A_INSTANCE": "compute/ec2/instance/m6a",
    "EC2_M6I_INSTANCE": "compute/ec2/instance/m6i",
    "EC2_R6I_INSTANCE": "compute/ec2/instance/r6i",
    "EC2_TRN1_INSTANCE": "compute/ec2/instance/trn1",
    "EC2_VT1_INSTANCE": "compute/ec2/instance/vt1",
    "EC2_X2GD_INSTANCE": "compute/ec2/instance/x2gd",
    "EC2_X2IDN_INSTANCE": "compute/ec2/instance/x2idn",
    "EC2_X2IEDN_INSTANCE": "compute/ec2/instance/x2iedn",
    "EC2_X2IEZN_INSTANCE": "compute/ec2/instance/x2iezn",
    "ECHO": "internet_of_things/iot_core/echo",
    "ECR": "containers/ecr/service_icon",
    "ECS": "containers/ecs/service",
    "ECS_ANYWHERE": "containers/ecs_anywhere/service_icon",
    "ECS_COPILOT_CLI": "containers/ecs/copilot_cli",
    "ECS_SERVICE": "containers/ecs/service",
    "ECS_TASK": "containers/ecs/task",
    "EDGE_LOCATION": "networking_content_delivery/cloudfront/edge_location",
    "EFS_INFREQUENTACCESS": "storage/efs/service_icon",
    "EFS_STANDARD": "storage/efs/standard",
    "EKS": "containers/eks/service_icon",
    "EKS_ANYWHERE": "containers/eks_anywhere/service_icon",
    "EKS_CLOUD": "containers/eks_cloud/service_icon",
    "EKS_DISTRO": "containers/eks_distro/service_icon",
    "ELASTICACHE": "database/elasticache/service_icon",
    "ELASTICACHE_FOR_MEMCACHED": "database/elasticache/service_icon",
    "ELASTICACHE_FOR_REDIS": "database/elasticache/service_icon",
    "ELASTICSEARCH_SERVICE": "analytics/opensearch/service_icon",
    "ELASTIC_BEANSTALK": "compute/elastic_beanstalk/service_icon",
    "ELASTIC_BLOCK_STORE": "storage/ebs/service_icon",
    "ELASTIC_BLOCK_STORE_AMAZON_DATA_LIFECYCLE_MANAGER": "storage/ebs/data_lifecycle_manager",
    "ELASTIC_BLOCK_STORE_VOLUME_GP3": "storage/ebs/volume_gp3",
    "ELASTIC_FABRIC_ADAPTER": "compute/elastic_fabric_adapter/service_icon",
    "ELASTIC_FILE_SYSTEM": "storage/efs/service_icon",
    "ELASTIC_FILE_SYSTEM_INFREQUENT_ACCESS": "storage/efs/standard_infrequent_access",
    "ELASTIC_FILE_SYSTEM_INTELLIGENT_TIERING": "storage/efs/intelligent_tiering",
    "ELASTIC_FILE_SYSTEM_ONE_ZONE": "storage/efs/one_zone",
    "ELASTIC_FILE_SYSTEM_ONE_ZONE_INFREQUENT_ACCESS": "storage/efs/one_zone_infrequent_access",
    "ELASTIC_FILE_SYSTEM_ONE_ZONE_STANDARD": "storage/efs/standard",
    "ELASTIC_FILE_SYSTEM_STANDARD": "storage/efs/standard",
    "ELASTIC_FILE_SYSTEM_STANDARD_INFREQUENT_ACCESS": "storage/efs/standard_infrequent_access",
    "ELASTIC_INFERENCE": "machine_learning/elastic_inference/service_icon",
    "ELASTIC_INFERENCE_2": "machine_learning/elastic_inference/service_icon",
    "ELASTIC_IP_ADDRESS": "compute/ec2/elastic_ip_address",
    "ELASTIC_LOAD_BALANCING": "networking_content_delivery/elastic_load_balancing/service_icon",
    "ELASTIC_NETWORK_ADAPTER": "networking_content_delivery/vpc/elastic_network_adapter",
    "ELASTIC_NETWORK_INTERFACE": "networking_content_delivery/vpc/elastic_network_interface",
    "ELASTIC_TRANSCODER": "media_services/elastic_transcoder/service_icon",
    "ELEMENTAL": false,
    "ELEMENTAL_LINK": "media_services/elemental_link/service_icon",
    "ELEMENTAL_MEDIACONNECT": "media_services/elemental_mediaconnect/service_icon",
    "ELEMENTAL_MEDIACONVERT": "media_services/elemental_mediaconvert/service_icon",
    "ELEMENTAL_MEDIALIVE": "media_services/elemental_medialive/service_icon",
    "ELEMENTAL_MEDIAPACKAGE": "media_services/elemental_mediapackage/service_icon",
    "ELEMENTAL_MEDIASTORE": "media_services/elemental_mediastore/service_icon",
    "ELEMENTAL_MEDIATAILOR": "media_services/elemental_mediatailor/service_icon",
    "EMAIL": "general/email",
    "EMAIL_2": false,
    "EMAIL_NOTIFICATION": "application_integration/sns/email_notification",
    "EMR": "analytics/emr/service_icon",
    "EMR_ENGINE": "analytics/emr/service_icon",
    "EMR_ENGINE_MAPR_M3": "analytics/emr/service_icon",
    "EMR_ENGINE_MAPR_M5": "analytics/emr/service_icon",
    "EMR_ENGINE_MAPR_M7": "analytics/emr/service_icon",
    "ENCRYPTED_DATA": "security_identity_compliance/iam/encrypted_data",
    "ENDPOINT": "security_identity_compliance/network_firewall/endpoints",
    "ENDPOINTS": "networking_content_delivery/vpc/endpoints",
    "EVENT": "management_governance/cloudwatch/event_event_based",
    "EVENTBRIDGE": "application_integration/eventbridge/service_icon",
    "EVENTBRIDGE_CUSTOM_EVENT_BUS_RESOURCE": "application_integration/eventbridge/service_icon",
    "EVENTBRIDGE_DEFAULT_EVENT_BUS_RESOURCE": "application_integration/eventbridge/service_icon",
    "EVENTBRIDGE_SAAS_PARTNER_EVENT_BUS_RESOURCE": "application_integration/eventbridge/service_icon",
    "EVENTBRIDGE_SCHEMA": "application_integration/eventbridge/schema",
    "EVENTBRIDGE_SCHEMA_REGISTRY": "application_integration/eventbridge/schema_registry",
    "EVENT_EVENT_BASED": "management_governance/cloudwatch/event_event_based",
    "EVENT_RESOURCE": false,
    "EVENT_TIME_BASED": "management_governance/cloudwatch/event_time_based",
    "EXPRESS_WORKFLOW": "application_integration/express_workflows/service_icon",
    "EXTERNAL_SDK": "general/sdk",
    "EXTERNAL_TOOLKIT": "general/toolkit",
    "F1_INSTANCE": "compute/ec2/instance/f1",
    "FACTORY": "internet_of_things/thing/factory",
    "FARGATE": "containers/fargate/service_icon",
    "FAULT_INJECTION_SIMULATOR": "management_governance/fault_injection_simulator/service_icon",
    "FILE_GATEWAY": "storage/storage_gateway/file_gateway",
    "FILE_SYSTEM": "storage/efs/file_system",
    "FILTERING_RULE": "security_identity_compliance/waf/filtering_rule",
    "FINDING": "security_identity_compliance/security_hub/finding",
    "FINSPACE": "analytics/finspace/service_icon",
    "FIRETV": false,
    "FIRETV_STICK": false,
    "FIREWALL_MANAGER": "security_identity_compliance/firewall_manager/service_icon",
    "FLEET_MANAGEMENT": "robotics/robomaker/fleet_management",
    "FLOW_LOGS": "networking_content_delivery/vpc/flow_logs",
    "FORECAST": "machine_learning/forecast/service_icon",
    "FORUMS": "general/forums",
    "FRAUD_DETECTOR": "machine_learning/fraud_detector/service_icon",
    "FREERTOS": "internet_of_things/freertos/service_icon",
    "FSX": "storage/fsx/service_icon",
    "FSX_FILE_GATEWAY": "storage/fsx/service_icon",
    "FSX_FOR_LUSTRE": "storage/fsx_for_lustre/service_icon",
    "FSX_FOR_NETAPP_ONTAP": "storage/fsx_for_netapp_ontap/service_icon",
    "FSX_FOR_OPENZFS": "storage/fsx_for_openzfs/service_icon",
    "FSX_FOR_WINDOWS_FILE_SERVER": "storage/fsx/service_icon",
    "G3_INSTANCE": "compute/ec2/instance/g3",
    "G4AD_INSTANCE": "compute/ec2/instance/g4ad",
    "G4DN": "compute/ec2/instance/g4dn",
    "GAMEKIT": "game_tech/gamekit/service_icon",
    "GAMELIFT": "game_tech/gamelift/service_icon",
    "GAMESPARKS": "game_tech/gamesparks/service_icon",
    "GAME_TECH": "game_tech/category_icon",
    "GAME_TECH2": false,
    "GATEWAY": "networking_content_delivery/direct_connect/gateway",
    "GATEWAY_LOAD_BALANCER": "networking_content_delivery/elastic_load_balancing/gateway_load_balancer",
    "GEAR": "general/gear",
    "GENERAL_ACCESS_POINTS": "storage/s3/general_access_points",
    "GENERIC": "internet_of_things/thing/generic",
    "GENERIC_DATABASE": false,
    "GENERIC_FIREWALL": "general/firewall",
    "GENOMICS_CLI": "compute/genomics_cli/service_icon",
    "GLACIER": "storage/s3_glacier/service_icon",
    "GLACIER_DEEP_ARCHIVE": "storage/s3_glacier/deep_archive",
    "GLOBAL_ACCELERATOR": "networking_content_delivery/global_accelerator/service_icon",
    "GLOBAL_SECONDARY_INDEX": "database/dynamodb/global_secondary_index",
    "GLUE": "analytics/glue/service_icon",
    "GLUE_CRAWLERS": "analytics/glue/service_icon",
    "GLUE_DATABREW": "analytics/glue_databrew/service_icon",
    "GLUE_DATA_CATALOG": "analytics/glue/data_catalog",
    "GLUE_ELASTIC_VIEWS": "analytics/glue_elastic_views/service_icon",
    "GREENGRASS": "internet_of_things/iot_greengrass/service_icon",
    "GROUND_STATION": "satellite/ground_station/service_icon",
    "GROUP_ACCOUNT": "groups/account",
    "GROUP_AUTO_SCALING_GROUP": "groups/auto_scaling_group",
    "GROUP_AVAILABILITY_ZONE": false,
    "GROUP_AWS_CLOUD": "groups/aws_cloud",
    "GROUP_AWS_CLOUD_ALT": "groups/aws_cloud_alt",
    "GROUP_AWS_STEP_FUNCTIONS_WORKFLOW": "groups/aws_step_functions_workflow",
    "GROUP_CORPORATE_DATA_CENTER": "groups/corporate_data_center",
    "GROUP_EC2_INSTANCE_CONTENTS": "groups/ec2_instance_contents",
    "GROUP_ELASTIC_BEANSTALK": "groups/elastic_beanstalk",
    "GROUP_ELASTIC_LOAD_BALANCING": false,
    "GROUP_IOT_GREENGRASS": "groups/iot_greengrass",
    "GROUP_IOT_GREENGRASS_DEPLOYMENT": "groups/iot_greengrass_deployment",
    "GROUP_ON_PREMISE": "groups/on_premise",
    "GROUP_REGION": "groups/region",
    "GROUP_SECURITY_GROUP": false,
    "GROUP_SPOT_FLEET": "groups/spot_fleet",
    "GROUP_SUBNET": false,
    "GROUP_VPC": "groups/vpc",
    "GUARDDUTY": "security_identity_compliance/guardduty/service_icon",
    "H1_INSTANCE": "compute/ec2/instance/h1",
    "HABANA_GAUDI": "compute/ec2/instance/habana_gaudi",
    "HARDWARE_BOARD": false,
    "HDFS_CLUSTER": "analytics/emr/hdfs_cluster",
    "HEALTHLAKE": "machine_learning/healthlake/service_icon",
    "HIGH_MEMORY_INSTANCE": false,
    "HONEYCODE": "business_applications/honeycode/service_icon",
    "HOSTED_ZONE": "networking_content_delivery/route_53/hosted_zone",
    "HOUSE": "internet_of_things/thing/house",
    "HTTP2_PROTOCOL": "internet_of_things/iot_core/http2_protocol",
    "HTTP_NOTIFICATION": "application_integration/sns/http_notification",
    "HTTP_PROTOCOL": "internet_of_things/iot_http/protocol",
    "I2": "compute/ec2/instance/i2",
    "I3EN": "compute/ec2/instance/i3en",
    "I3_INSTANCE": "compute/ec2/instance/i3",
    "IDENTITY_AND_ACCESS_MANAGEMENT": "security_identity_compliance/iam/service_icon",
    "ILLUSTRATION_DESKTOP": false,
    "ILLUSTRATION_DEVICES": false,
    "ILLUSTRATION_NOTIFICATION": false,
    "IMPORT_EXPORT": "storage/snowball/snowball_import_export",
    "INF1": "compute/ec2/instance/inf1",
    "INFERENTIA": "compute/ec2/inferentia",
    "INFREQUENT_ACCESS_STORAGE_CLASS": "storage/s3/s3_standard_ia",
    "INSPECTOR": "security_identity_compliance/inspector/service_icon",
    "INSTANCE": "compute/ec2/instance",
    "INSTANCE2": false,
    "INSTANCES": "compute/ec2/instances",
    "INSTANCES_2": false,
    "INSTANCE_WITH_CLOUDWATCH": "compute/ec2/instance_with_cloudwatch",
    "INSTANCE_WITH_CLOUDWATCH2": false,
    "INTELLIGENT_TIERING": "storage/s3/s3_intelligent_tiering",
    "INTERACTIVE_VIDEO": "general/multimedia",
    "INTERNET": "general/internet",
    "INTERNET_ALT1": "general/internet_alt1",
    "INTERNET_ALT2": "general/internet_alt2",
    "INTERNET_ALT22": false,
    "INTERNET_GATEWAY": "networking_content_delivery/vpc/internet_gateway",
    "INTERNET_OF_THINGS": "internet_of_things/category_icon",
    "INVENTORY": "management_governance/ssm/inventory",
    "IOT_1CLICK": "internet_of_things/iot_1_click/service_icon",
    "IOT_ANALYTICS": "internet_of_things/iot_analytics/service_icon",
    "IOT_ANALYTICS_CHANNEL": "internet_of_things/iot_analytics/channel",
    "IOT_ANALYTICS_DATA_STORE": "internet_of_things/iot_analytics/data_store",
    "IOT_ANALYTICS_PIPELINE": "internet_of_things/iot_analytics/pipeline",
    "IOT_BUTTON": "internet_of_things/iot_button/service_icon",
    "IOT_CORE": "internet_of_things/iot_core/service_icon",
    "IOT_DEVICE_DEFENDER": "internet_of_things/iot_device_defender/service_icon",
    "IOT_DEVICE_DEFENDER_IOT_DEVICE_JOBS": "internet_of_things/iot_device_defender/iot_device_jobs",
    "IOT_DEVICE_GATEWAY": "internet_of_things/iot_core/device_gateway",
    "IOT_DEVICE_JOBS_RESOURCE": "internet_of_things/iot_device_defender/iot_device_jobs",
    "IOT_DEVICE_MANAGEMENT": "internet_of_things/iot_device_management/service_icon",
    "IOT_EVENTS": "internet_of_things/iot_events/service_icon",
    "IOT_EXPRESSLINK": "internet_of_things/iot_expresslink/service_icon",
    "IOT_FLEETWISE": "internet_of_things/iot_fleetwise/service_icon",
    "IOT_GREENGRASS_ARTIFACT": "internet_of_things/iot_greengrass/artifact",
    "IOT_GREENGRASS_COMPONENT": "internet_of_things/iot_greengrass/component",
    "IOT_GREENGRASS_COMPONENT_MACHINE_LEARNING": "internet_of_things/iot_greengrass/component_machine_learning",
    "IOT_GREENGRASS_COMPONENT_NUCLEUS": "internet_of_things/iot_greengrass/component_nucleus",
    "IOT_GREENGRASS_COMPONENT_PRIVATE": "internet_of_things/iot_greengrass/component_private",
    "IOT_GREENGRASS_COMPONENT_PUBLIC": "internet_of_things/iot_greengrass/component_public",
    "IOT_GREENGRASS_INTERPROCESS_COMMUNICATION": "internet_of_things/iot_greengrass/interprocess_communication",
    "IOT_GREENGRASS_PROTOCOL": "internet_of_things/iot_greengrass/protocol",
    "IOT_GREENGRASS_RECIPE": "internet_of_things/iot_greengrass/recipe",
    "IOT_GREENGRASS_STREAM_MANAGER": "internet_of_things/iot_greengrass/stream_manager",
    "IOT_LORAWAN_PROTOCOL": "internet_of_things/iot_core/lorawan_protocol",
    "IOT_OVER_THE_AIR_UPDATE": "internet_of_things/iot_core/over_air_update",
    "IOT_ROBORUNNER": "internet_of_things/iot_roborunner/service_icon",
    "IOT_SAILBOAT": "internet_of_things/iot_core/sailboat",
    "IOT_SITEWISE": "internet_of_things/iot_sitewise/service_icon",
    "IOT_SITEWISE_ASSET": "internet_of_things/iot_sitewise/asset",
    "IOT_SITEWISE_ASSET_HIERARCHY": "internet_of_things/iot_sitewise/asset_hierarchy",
    "IOT_SITEWISE_ASSET_MODEL": "internet_of_things/iot_sitewise/asset_model",
    "IOT_SITEWISE_ASSET_PROPERTIES": "internet_of_things/iot_sitewise/asset_properties",
    "IOT_SITEWISE_DATA_STREAMS": "internet_of_things/iot_sitewise/data_streams",
    "IOT_THINGS_GRAPH": "internet_of_things/iot_things_graph/service_icon",
    "IOT_THING_FREERTOS_DEVICE": false,
    "IOT_THING_HUMIDITY_SENSOR": false,
    "IOT_THING_INDUSTRIAL_PC": false,
    "IOT_THING_PLC": false,
    "IOT_THING_RELAY": false,
    "IOT_THING_STACKLIGHT": false,
    "IOT_THING_TEMPERATURE_HUMIDITY_SENSOR": false,
    "IOT_THING_TEMPERATURE_SENSOR": false,
    "IOT_THING_TEMPERATURE_VIBRATION_SENSOR": false,
    "IOT_THING_VIBRATION_SENSOR": false,
    "IOT_TWINMAKER": "internet_of_things/iot_twinmaker/service_icon",
    "IQ": "customer_enablement/iq/service_icon",
    "ITEM": "database/dynamodb/item",
    "ITEMS": "database/dynamodb/items",
    "KENDRA": "machine_learning/kendra/service_icon",
    "KEYSPACES": "database/keyspaces/service_icon",
    "KEY_MANAGEMENT_SERVICE": "security_identity_compliance/key_management_service/service_icon",
    "KINESIS": "analytics/kinesis/service_icon",
    "KINESIS_DATA_ANALYTICS": "analytics/kinesis_data_analytics/service_icon",
    "KINESIS_DATA_FIREHOSE": "analytics/kinesis/service_icon",
    "KINESIS_DATA_STREAMS": "analytics/kinesis_data_streams/service_icon",
    "KINESIS_VIDEO_STREAMS": "analytics/kinesis_video_streams/service_icon",
    "LAKE_FORMATION": "analytics/lake_formation/service_icon",
    "LAMBDA": "compute/lambda/service_icon",
    "LAMBDA_FUNCTION": "compute/lambda/service_icon",
    "LAYERS": "management_governance/opsworks/layers",
    "LEX": "machine_learning/lex/service_icon",
    "LICENSE_MANAGER": "management_governance/license_manager/service_icon",
    "LICENSE_MANAGER_APPLICATION_DISCOVERY": "management_governance/license_manager/application_discovery",
    "LICENSE_MANAGER_LICENSE_BLENDING": "management_governance/license_manager/license_blending",
    "LIGHTBULB": "internet_of_things/thing/lightbulb",
    "LIGHTSAIL": "compute/lightsail/service_icon",
    "LOCAL_ZONES": "compute/local_zones/service_icon",
    "LOCATION_SERVICE": "front_end_web_mobile/location_service/service_icon",
    "LOCATION_SERVICE_GEOFENCE": "front_end_web_mobile/location_service/geofence",
    "LOCATION_SERVICE_MAP": "front_end_web_mobile/location_service/map",
    "LOCATION_SERVICE_PLACE": "front_end_web_mobile/location_service/place",
    "LOCATION_SERVICE_ROUTES": "front_end_web_mobile/location_service/routes",
    "LOCATION_SERVICE_TRACK": "front_end_web_mobile/location_service/track",
    "LOGS": "management_governance/cloudwatch/logs",
    "LONG_TERM_SECURITY_CREDENTIAL": "security_identity_compliance/iam/long_term_security_credential",
    "LOOKOUT_FOR_EQUIPMENT": "machine_learning/lookout_for_equipment/service_icon",
    "LOOKOUT_FOR_METRICS": "machine_learning/lookout_for_metrics/service_icon",
    "LOOKOUT_FOR_VISION": "machine_learning/lookout_for_vision/service_icon",
    "LUMBERYARD": "game_tech/lumberyard/service_icon",
    "M4_INSTANCE": "compute/ec2/instance/m4",
    "M5A_INSTANCE": "compute/ec2/instance/m5a",
    "M5DN_INSTANCE": "compute/ec2/instance/m5dn",
    "M5D_INSTANCE": "compute/ec2/instance/m5d",
    "M5N": "compute/ec2/instance/m5n",
    "M5N_INSTANCE": "compute/ec2/instance/m5n",
    "M5ZN_INSTANCE": "compute/ec2/instance/m5zn",
    "M5_INSTANCE": "compute/ec2/instance/m5",
    "M6GD_INSTANCE": "compute/ec2/instance/m6gd",
    "M6G_INSTANCE": "compute/ec2/instance/m6g",
    "MACHINE_LEARNING": "machine_learning/category_icon",
    "MACIE": "security_identity_compliance/macie/service_icon",
    "MAC_INSTANCE": "compute/ec2/instance/mac",
    "MAINFRAME_MODERNIZATION": "migration_transfer/mainframe_modernization/service_icon",
    "MAINFRAME_MODERNIZATION_ANALYZER": "migration_transfer/mainframe_modernization/analyzer",
    "MAINFRAME_MODERNIZATION_COMPILER": "migration_transfer/mainframe_modernization/compiler",
    "MAINFRAME_MODERNIZATION_CONVERTER": "migration_transfer/mainframe_modernization/converter",
    "MAINFRAME_MODERNIZATION_DEVELOPER": "migration_transfer/mainframe_modernization/developer",
    "MAINFRAME_MODERNIZATION_RUNTIME": "migration_transfer/mainframe_modernization/runtime",
    "MAINTENANCE_WINDOWS": "management_governance/ssm/maintenance_windows",
    "MANAGED_APACHE_CASSANDRA_SERVICE": "database/keyspaces/service_icon",
    "MANAGED_BLOCKCHAIN": "blockchain/managed_blockchain/service_icon",
    "MANAGED_MS_AD": "security_identity_compliance/directory_service/managed_microsoft_ad",
    "MANAGED_SERVICES": "customer_enablement/managed_services/service_icon",
    "MANAGED_SERVICE_FOR_GRAFANA": "management_governance/managed_grafana/service_icon",
    "MANAGED_SERVICE_FOR_PROMETHEUS": "management_governance/aps/service_icon",
    "MANAGED_STREAMING_FOR_KAFKA": "analytics/msk/service_icon",
    "MANAGED_WORKFLOWS_FOR_APACHE_AIRFLOW": "application_integration/mwaa/service_icon",
    "MANAGEMENT_AND_GOVERNANCE": "management_governance/category_icon",
    "MANAGEMENT_CONSOLE": "management_governance/management_console/service_icon",
    "MARKETPLACE": "general/marketplace",
    "MEDIA_SERVICES": "media_services/category_icon",
    "MEDICAL_EMERGENCY": "internet_of_things/thing/medical_emergency",
    "MEMORYDB_FOR_REDIS": "database/memorydb_for_redis/service_icon",
    "MESH": "networking_content_delivery/app_mesh/mesh",
    "MESSAGE": "application_integration/sqs/message",
    "MFA_TOKEN": "security_identity_compliance/iam/mfa_token",
    "MIGRATION_AND_TRANSFER": "migration_transfer/category_icon",
    "MIGRATION_EVALUATOR": "migration_transfer/migration_evaluator/service_icon",
    "MIGRATION_HUB": "migration_transfer/migration_hub/service_icon",
    "MIGRATION_HUB_REFACTOR_SPACES_APPLICATIONS": "migration_transfer/migration_hub/refactor_spaces_applications",
    "MIGRATION_HUB_REFACTOR_SPACES_ENVIRONMENTS": "migration_transfer/migration_hub/refactor_spaces_environments",
    "MIGRATION_HUB_REFACTOR_SPACES_SERVICES": "migration_transfer/migration_hub/refactor_spaces_services",
    "MOBILE": "front_end_web_mobile/category_icon",
    "MOBILE_APPLICATION": false,
    "MOBILE_CLIENT": "general/mobile_client",
    "MOBILE_HUB": "application_integration/console_mobile_application/service_icon",
    "MONITORING": "management_governance/opsworks/monitoring",
    "MONITRON": "machine_learning/monitron/service_icon",
    "MQ": "application_integration/mq/service_icon",
    "MQTT_PROTOCOL": "application_integration/mq/service_icon",
    "MQ_BROKER": "application_integration/mq/broker",
    "MSK_AMAZON_MSK_CONNECT": "analytics/msk/service_icon",
    "MS_SQL_INSTANCE": false,
    "MS_SQL_INSTANCE_ALTERNATE": false,
    "MULTIMEDIA": "general/multimedia",
    "MULTIPLE_VOLUMES_RESOURCE": "storage/ebs/multiple_volumes",
    "MYSQL_DB_INSTANCE": false,
    "MYSQL_DB_INSTANCE_ALTERNATE": false,
    "NAMESPACE": "networking_content_delivery/cloud_map/namespace",
    "NAT_GATEWAY": "networking_content_delivery/vpc/nat_gateway",
    "NEPTUNE": "database/neptune/service_icon",
    "NETWORKING_AND_CONTENT_DELIVERY": "networking_content_delivery/category_icon",
    "NETWORK_ACCESS_CONTROL_LIST": "networking_content_delivery/vpc/network_access_control_list",
    "NETWORK_FIREWALL": "security_identity_compliance/network_firewall/service_icon",
    "NETWORK_FIREWALL_ENDPOINTS": "security_identity_compliance/network_firewall/endpoints",
    "NETWORK_LOAD_BALANCER": "networking_content_delivery/elastic_load_balancing/network_load_balancer",
    "NEURON_ML_SDK": "machine_learning/neuron/service_icon",
    "NICE_DCV": "compute/nice_dcv/service_icon",
    "NICE_ENGINFRAME": "compute/nice_enginframe/service_icon",
    "NIMBLE_STUDIO": "media_services/nimble_studio/service_icon",
    "NITRO_ENCLAVES": "compute/nitro_enclaves/service_icon",
    "NON_CACHED_VOLUME": "storage/storage_gateway/noncached_volume",
    "NOTEBOOK": "machine_learning/sagemaker/notebook",
    "OBJECT": "storage/s3/object",
    "OFFICE_BUILDING": "general/office_building",
    "ONE_ZONE_IA": "storage/s3/s3_one_zone_ia",
    "OPEN_3D_ENGINE": "game_tech/open_3d_engine/service_icon",
    "OPSWORKS": "management_governance/opsworks/service_icon",
    "OPSWORKS_APPS": "management_governance/opsworks/apps",
    "OPSWORKS_PERMISSIONS": "management_governance/opsworks/permissions",
    "OPTIMIZED_INSTANCE": false,
    "ORACLE_DB_INSTANCE": false,
    "ORACLE_DB_INSTANCE_ALTERNATE": false,
    "ORGANIZATIONS": "management_governance/organizations/service_icon",
    "ORGANIZATIONS_ACCOUNT": "management_governance/organizations/account",
    "ORGANIZATIONS_ACCOUNT2": "management_governance/organizations/service_icon",
    "ORGANIZATIONS_MANAGEMENT_ACCOUNT": "management_governance/organizations/management_account",
    "ORGANIZATIONS_MANAGEMENT_ACCOUNT2": "management_governance/organizations/service_icon",
    "ORGANIZATIONS_ORGANIZATIONAL_UNIT": "management_governance/organizations/organizational_unit",
    "ORGANIZATIONS_ORGANIZATIONAL_UNIT2": "management_governance/organizations/service_icon",
    "OUTPOSTS": "storage/s3/s3_on_outposts",
    "OUTPOSTS_1U_AND_2U_SERVERS": "compute/outposts_rack/service_icon",
    "OUTPOSTS_FAMILY": "compute/outposts_family/service_icon",
    "P2_INSTANCE": "compute/ec2/instance/p2",
    "P3DN_INSTANCE": "compute/ec2/instance/p3dn",
    "P3_INSTANCE": "compute/ec2/instance/p3",
    "P4D_INSTANCE": "compute/ec2/instance/p4d",
    "P4_INSTANCE": "compute/ec2/instance/p4",
    "PANORAMA": "machine_learning/panorama/service_icon",
    "PARALLEL_CLUSTER": "compute/parallelcluster/service_icon",
    "PARAMETER_STORE": "management_governance/ssm/parameter_store",
    "PATCH_MANAGER": "management_governance/ssm/patch_manager",
    "PEERING": "networking_content_delivery/vpc/peering_connection",
    "PERMISSIONS": "security_identity_compliance/iam/permissions",
    "PERMISSIONS_2": false,
    "PERSONALIZE": "machine_learning/personalize/service_icon",
    "PERSONAL_HEALTH_DASHBOARD": "management_governance/personal_health_dashboard/service_icon",
    "PINPOINT": "business_applications/pinpoint/service_icon",
    "PINPOINT_JOURNEY": "business_applications/pinpoint/journey",
    "POLICE_EMERGENCY": "internet_of_things/thing/police_emergency",
    "POLICY": "security_identity_compliance/iam/add_on",
    "POLLY": "machine_learning/polly/service_icon",
    "POSTGRESQL_INSTANCE": false,
    "PRIVATELINK": "networking_content_delivery/privatelink/service_icon",
    "PRIVATE_5G": "networking_content_delivery/private_5g/service_icon",
    "PROFESSIONAL_SERVICES": "customer_enablement/professional_services/service_icon",
    "PROTON": "management_governance/proton/service_icon",
    "QUANTUM_LEDGER_DATABASE": "blockchain/quantum_ledger_database/service_icon",
    "QUANTUM_TECHNOLOGIES": "quantum_technologies/category_icon",
    "QUESTION": "general/question",
    "QUEUE": "application_integration/sqs/queue",
    "QUICKSIGHT": "analytics/quicksight/service_icon",
    "R4_INSTANCE": "compute/ec2/instance/r4",
    "R5AD_INSTANCE": "compute/ec2/instance/r5ad",
    "R5A_INSTANCE": "compute/ec2/instance/r5a",
    "R5B_INSTANCE": "compute/ec2/instance/r5b",
    "R5D_INSTANCE": "compute/ec2/instance/r5d",
    "R5GD_INSTANCE": "compute/ec2/instance/r5gd",
    "R5N": "compute/ec2/instance/r5n",
    "R5N_INSTANCE": "compute/ec2/instance/r5n",
    "R5_INSTANCE": "compute/ec2/instance/r5",
    "R6G_INSTANCE": "compute/ec2/instance/r6g",
    "RDN_INSTANCE": "compute/ec2/instance/rdn",
    "RDS": "database/rds/service_icon",
    "RDS_INSTANCE": "database/rds/instance",
    "RDS_INSTANCE_ALT": "database/rds/service_icon",
    "RDS_MARIADB_INSTANCE": "database/rds/service_icon",
    "RDS_MARIADB_INSTANCE_ALT": "database/rds/service_icon",
    "RDS_MULTI_AZ": "database/rds/multi_az",
    "RDS_MULTI_AZ_DB_CLUSTER": "database/rds/multi_az_db_cluster",
    "RDS_MYSQL_INSTANCE": "database/rds/service_icon",
    "RDS_MYSQL_INSTANCE_ALT": "database/rds/service_icon",
    "RDS_ON_VMWARE": "database/rds_on_vmware/service_icon",
    "RDS_ORACLE_INSTANCE": "database/rds/service_icon",
    "RDS_ORACLE_INSTANCE_ALT": "database/rds/service_icon",
    "RDS_PIOP": "database/rds/service_icon",
    "RDS_PIOPS": "database/rds/service_icon",
    "RDS_POSTGRESQL_INSTANCE": "database/rds/service_icon",
    "RDS_POSTGRESQL_INSTANCE_ALT": "database/rds/service_icon",
    "RDS_PROXY": "database/rds/service_icon",
    "RDS_PROXY_ALT": "database/rds/service_icon",
    "RDS_SQL_SERVER_INSTANCE": "database/rds/service_icon",
    "RDS_SQL_SERVER_INSTANCE_ALT": "database/rds/service_icon",
    "REDSHIFT": "analytics/redshift/service_icon",
    "REDSHIFT_ML": "analytics/redshift/ml",
    "REDSHIFT_RA3": "analytics/redshift/ra3",
    "RED_HAT_OPENSHIFT": "containers/red_hat_openshift/service_icon",
    "REGISTRY": "containers/ecr/registry",
    "REKOGNITION": "machine_learning/rekognition/service_icon",
    "REKOGNITION_2": "machine_learning/rekognition/service_icon",
    "REKOGNITION_IMAGE": "machine_learning/rekognition/image",
    "REKOGNITION_VIDEO": "machine_learning/rekognition/video",
    "REPLICATION": "storage/s3/s3_replication",
    "REPLICATION_TIME_CONTROL": "storage/s3/s3_replication_time_control",
    "REPORTED_STATE": "internet_of_things/iot_core/reported_state",
    "REPOST": "customer_enablement/repost/service_icon",
    "RESCUE": "compute/ec2/rescue",
    "RESERVED_INSTANCE_REPORTING": "cloud_financial_management/reserved_instance_reporting/service_icon",
    "RESILIENCE_HUB": "management_governance/resilience_hub/service_icon",
    "RESOURCE": "networking_content_delivery/cloud_map/resource",
    "RESOURCES": "management_governance/opsworks/resources",
    "RESOURCE_ACCESS_MANAGER": "security_identity_compliance/resource_access_manager/service_icon",
    "ROBOMAKER": "robotics/robomaker/service_icon",
    "ROBOTICS": "robotics/category_icon",
    "ROLE": "security_identity_compliance/iam/role",
    "ROUTER": "networking_content_delivery/vpc/router",
    "ROUTE_53": "networking_content_delivery/route_53/service_icon",
    "ROUTE_53_APPLICATION_RECOVERY_CONTROLLER": "networking_content_delivery/route_53/application_recovery_controller",
    "ROUTE_53_READINESS_CHECKS": "networking_content_delivery/route_53/readiness_checks",
    "ROUTE_53_RESOLVER": "networking_content_delivery/route_53/resolver",
    "ROUTE_53_RESOLVER_DNS_FIREWALL": "networking_content_delivery/route_53/resolver_dns_firewall",
    "ROUTE_53_RESOLVER_QUERY_LOGGING": "networking_content_delivery/route_53/resolver_query_logging",
    "ROUTE_53_ROUTING_CONTROLS": "networking_content_delivery/route_53/routing_controls",
    "ROUTE_TABLE": "networking_content_delivery/route_53/route_table",
    "RULE": "management_governance/cloudwatch/rule",
    "RULE_2": false,
    "RULE_3": false,
    "RUN_COMMAND": "management_governance/ssm/run_command",
    "S3": "storage/s3/service_icon",
    "S3_FILE_GATEWAY": "storage/s3/service_icon",
    "S3_OBJECT_LAMBDA": "storage/s3/service_icon",
    "S3_OBJECT_LAMBDA_ACCESS_POINTS": "storage/s3/service_icon",
    "S3_ON_OUTPOSTS": "storage/s3_on_outposts/service_icon",
    "S3_ON_OUTPOSTS_STORAGE": "storage/s3/service_icon",
    "S3_REPLICATION_TIME_CONTROL": "storage/s3/service_icon",
    "S3_STORAGE_LENS": "storage/s3/service_icon",
    "SAAS_EVENT_BUS_RESOURCE": "application_integration/eventbridge/saas_partner_event",
    "SAGEMAKER": "machine_learning/sagemaker/service_icon",
    "SAGEMAKER_CANVAS": "machine_learning/sagemaker/canvas",
    "SAGEMAKER_GROUND_TRUTH": "machine_learning/sagemaker_ground_truth/service_icon",
    "SAGEMAKER_MODEL": "machine_learning/sagemaker/model",
    "SAGEMAKER_NOTEBOOK": "machine_learning/sagemaker/notebook",
    "SAGEMAKER_STUDIO_LAB": "machine_learning/sagemaker_studio_lab/service_icon",
    "SAGEMAKER_TRAIN": "machine_learning/sagemaker/train",
    "SAML_TOKEN": "general/saml_token",
    "SATELLITE": "satellite/category_icon",
    "SAVINGS_PLANS": "cloud_financial_management/savings_plans/service_icon",
    "SEARCH_DOCUMENTS": "analytics/cloudsearch/search_documents",
    "SECRETS_MANAGER": "security_identity_compliance/secrets_manager/service_icon",
    "SECURITY_GROUP": false,
    "SECURITY_HUB": "security_identity_compliance/security_hub/service_icon",
    "SECURITY_HUB_FINDING": "security_identity_compliance/security_hub/finding",
    "SECURITY_IDENTITY_AND_COMPLIANCE": "security_identity_compliance/category_icon",
    "SENSOR": "internet_of_things/iot_core/sensor",
    "SERVERLESS": "serverless/category_icon",
    "SERVERLESS_APPLICATION_REPOSITORY": "compute/serverless_application_repository/service_icon",
    "SERVER_MIGRATION_SERVICE": "migration_transfer/server_migration_service/service_icon",
    "SERVICE": "compute/ec2/service_icon",
    "SERVICE_CATALOG": "management_governance/service_catalog/service_icon",
    "SERVO": "internet_of_things/iot_core/servo",
    "SHADOW": "internet_of_things/iot_core/shadow",
    "SHIELD": "security_identity_compliance/shield/service_icon",
    "SHIELD_SHIELD_ADVANCED": "security_identity_compliance/shield/shield_advanced",
    "SIGNER": "security_identity_compliance/signer/service_icon",
    "SIMPLE_AD": "security_identity_compliance/directory_service/simple_ad",
    "SIMPLE_EMAIL_SERVICE": "business_applications/ses/service_icon",
    "SIMPLE_STORAGE_SERVICE_S3_GLACIER_INSTANT_RETRIEVAL": false,
    "SIMULATION": "robotics/robomaker/simulation",
    "SIMULATOR": "internet_of_things/iot_core/simulator",
    "SINGLE_SIGN_ON": "security_identity_compliance/iam_identity_center/service_icon",
    "SITE_TO_SITE_VPN": "networking_content_delivery/site_to_site_vpn/service_icon",
    "SNAPSHOT": "storage/ebs/snapshot",
    "SNOWBALL": "storage/snowball/service_icon",
    "SNOWBALL_EDGE": "storage/snowball_edge/service_icon",
    "SNOWCONE": "storage/snowcone/service_icon",
    "SNOWMOBILE": "storage/snowmobile/service_icon",
    "SNS": "application_integration/sns/service_icon",
    "SPOT_INSTANCE": "compute/ec2/instance/spot",
    "SQL_PRIMARY": false,
    "SQL_REPLICA": false,
    "SQL_WORKBENCH": false,
    "SQS": "application_integration/sqs/service_icon",
    "SSL_PADLOCK": "general/ssl_padlock",
    "STACK": "management_governance/cloudformation/stack",
    "STACK2": "management_governance/opsworks/stack2",
    "STANDARD_IA": "storage/s3/s3_standard_ia",
    "STATE_MANAGER": "management_governance/ssm/state_manager",
    "STEP_FUNCTIONS": "application_integration/step_functions/service_icon",
    "STORAGE": "storage/category_icon",
    "STORAGE_GATEWAY": "storage/storage_gateway/service_icon",
    "STREAMING_DISTRIBUTION": "networking_content_delivery/cloudfront/streaming_distribution",
    "STS": "security_identity_compliance/iam/sts",
    "STS_ALTERNATE": "security_identity_compliance/iam/sts_alternate",
    "SUMERIAN": "vr_ar/sumerian/service_icon",
    "SUPPORT": "customer_enablement/support/service_icon",
    "SYSTEMS_MANAGER": "management_governance/ssm/service_icon",
    "SYSTEMS_MANAGER_INCIDENT_MANAGER": "management_governance/systems_manager_incident_manager/service_icon",
    "SYSTEMS_MANAGER_OPSCENTER": "management_governance/ssm/opscenter",
    "T2_INSTANCE": "compute/ec2/instance/t2",
    "T3A_INSTANCE": "compute/ec2/instance/t3a",
    "T3_INSTANCE": "compute/ec2/instance/t3",
    "T4G_INSTANCE": "compute/ec2/instance/t4g",
    "TABLE": "database/dynamodb/table",
    "TAPE_GATEWAY": "storage/storage_gateway/tape_gateway",
    "TAPE_STORAGE": "general/tape_storage",
    "TEMPLATE": "management_governance/cloudformation/template",
    "TEMPORARY_SECURITY_CREDENTIAL": "security_identity_compliance/iam/temporary_security_credential",
    "TENSORFLOW_ON_AWS": "machine_learning/tensorflow_on_aws/service_icon",
    "TEXTRACT": "machine_learning/textract/service_icon",
    "THERMOSTAT": "internet_of_things/thing/thermostat",
    "THINKBOX_DEADLINE": "compute/thinkbox_deadline/service_icon",
    "THINKBOX_DRAFT": false,
    "THINKBOX_FROST": "compute/thinkbox_frost/service_icon",
    "THINKBOX_KRAKATOA": "compute/thinkbox_krakatoa/service_icon",
    "THINKBOX_SEQUOIA": "compute/thinkbox_sequoia/service_icon",
    "THINKBOX_STOKE": "compute/thinkbox_stoke/service_icon",
    "THINKBOX_XMESH": "compute/thinkbox_xmesh/service_icon",
    "TIMESTREAM": "database/timestream/service_icon",
    "TOOLS_AND_SDKS": "developer_tools/tools_and_sdks/service_icon",
    "TOPIC": "application_integration/sns/topic",
    "TOPIC_2": "internet_of_things/iot_core/topic",
    "TORCHSERVE": "machine_learning/torchserve/service_icon",
    "TRADITIONAL_SERVER": "general/traditional_server",
    "TRAINING_CERTIFICATION": "customer_enablement/training_certification/service_icon",
    "TRAINIUM_INSTANCE": "compute/ec2/instance/trainium",
    "TRANSCRIBE": "machine_learning/transcribe/service_icon",
    "TRANSFER_FAMILY": "migration_transfer/transfer_family/service_icon",
    "TRANSFER_FOR_FTPS_RESOURCE": "migration_transfer/transfer_family/ftps",
    "TRANSFER_FOR_FTP_RESOURCE": "migration_transfer/transfer_family/ftp",
    "TRANSFER_FOR_SFTP": "migration_transfer/transfer_family/sftp",
    "TRANSFER_FOR_SFTP_RESOURCE": "migration_transfer/transfer_family/sftp",
    "TRANSIT_GATEWAY": "networking_content_delivery/transit_gateway/service_icon",
    "TRANSIT_GATEWAY_ATTACHMENT": "networking_content_delivery/transit_gateway/attachment",
    "TRANSLATE": "machine_learning/translate/service_icon",
    "TRAVEL": "internet_of_things/thing/travel",
    "TRUSTED_ADVISOR": "management_governance/trusted_advisor/service_icon",
    "USER": "general/user",
    "USERS": "general/users",
    "UTILITY": "internet_of_things/thing/utility",
    "VAULT": "storage/s3_glacier/vault",
    "VIRTUAL_GATEWAY": "networking_content_delivery/app_mesh/virtual_gateway",
    "VIRTUAL_NODE": "networking_content_delivery/app_mesh/virtual_node",
    "VIRTUAL_PRIVATE_CLOUD": "networking_content_delivery/vpc/service_icon",
    "VIRTUAL_ROUTER": "networking_content_delivery/app_mesh/virtual_router",
    "VIRTUAL_SERVICE": "networking_content_delivery/app_mesh/virtual_service",
    "VIRTUAL_TAPE_LIBRARY": "storage/storage_gateway/virtual_tape_library",
    "VMWARE_CLOUD_ON_AWS": "compute/vmware_cloud_on_aws/service_icon",
    "VOLUME": "storage/ebs/volume",
    "VOLUME_GATEWAY": "storage/storage_gateway/volume_gateway",
    "VPC": "networking_content_delivery/vpc/service_icon",
    "VPC_ACCESS_POINTS": "networking_content_delivery/vpc/service_icon",
    "VPC_CARRIER_GATEWAY": "networking_content_delivery/vpc/carrier_gateway",
    "VPC_NETWORK_ACCESS_ANALYZER": "networking_content_delivery/vpc/network_access_analyzer",
    "VPC_PRIVATELINK": "networking_content_delivery/vpc/service_icon",
    "VPC_REACHABILITY_ANALYZER": "networking_content_delivery/vpc/reachability_analyzer",
    "VPC_TRAFFIC_MIRRORING": "networking_content_delivery/vpc/traffic_mirroring",
    "VPN_CONNECTION": "networking_content_delivery/vpc/vpn_connection",
    "VPN_GATEWAY": "networking_content_delivery/vpc/vpn_gateway",
    "WAF": "security_identity_compliance/waf/service_icon",
    "WAF_BAD_BOT": "security_identity_compliance/waf/bad_bot",
    "WAF_BOT": "security_identity_compliance/waf/bot",
    "WAF_BOT_CONTROL": "security_identity_compliance/waf/bot_control",
    "WAF_LABELS": "security_identity_compliance/waf/labels",
    "WAF_MANAGED_RULE": "security_identity_compliance/waf/managed_rule",
    "WAF_RULE": "security_identity_compliance/waf/rule",
    "WAVELENGTH": "compute/wavelength/service_icon",
    "WELL_ARCHITECTED_TOOL": "management_governance/well_architected_tool/service_icon",
    "WELL_ARCHITECT_TOOL": "management_governance/well_architected_tool/service_icon",
    "WINDFARM": "internet_of_things/thing/windfarm",
    "WORKDOCS": "business_applications/workdocs/service_icon",
    "WORKLINK": "end_user_computing/worklink/service_icon",
    "WORKMAIL": "business_applications/workmail/service_icon",
    "WORKSPACES": "end_user_computing/workspaces/service_icon",
    "WORKSPACES_WORKSPACES_WEB": "end_user_computing/workspaces/service_icon",
    "X1E_INSTANCE": "compute/ec2/instance/x1e",
    "X1_INSTANCE": "compute/ec2/instance/x1",
    "X1_INSTANCE2": false,
    "XRAY": "developer_tools/x_ray/service_icon",
    "Z1D_INSTANCE": "compute/ec2/instance/z1d"
};
//# sourceMappingURL=data:application/json;base64,